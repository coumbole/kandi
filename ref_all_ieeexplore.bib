% This file was created with JabRef 2.10.
% Encoding: UTF-8


@InProceedings{6916626,
  Title                    = {Towards Agent-based Agile approach for Game Development Methodology},
  Author                   = {R. Al-azawi and A. Ayesh and M. A. Obaidy},
  Booktitle                = {2014 World Congress on Computer Applications and Information Systems (WCCAIS)},
  Year                     = {2014},
  Month                    = {Jan},
  Pages                    = {1-6},

  Abstract                 = {Game development is very complex and the success of the game is based on the game development methods. The purpose of this paper is to investigate on the existing game development methods and provide an upcoming game development method that is based on predictive and adaptive development models. A critical analysis to Agile method which are mostly used in modern game development methods is presented. We identified the weakness of Agile game development and solve it by creating a cooperation with Agent Oriented Software Engineering (AOSE) to introduce a new hybrid methodology named as Agent Agile Game Development Methodology (AAGDM) that combines both predictive and adaptive models.},
  Doi                      = {10.1109/WCCAIS.2014.6916626},
  Keywords                 = {game theory;multi-agent systems;software development management;software prototyping;AAGDM;AOSE;adaptive development model;agent Agile game development methodology;agent oriented software engineering;agent-based agile approach;predictive development model;Predictive models;Training;Unified modeling language},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7765371,
  Title                    = {Analytical model for Software Defined Network delay estimation},
  Author                   = {P. Abaev and V. Beschastnyi and A. Tsarev and S. Fedorov},
  Booktitle                = {2016 8th International Congress on Ultra Modern Telecommunications and Control Systems and Workshops (ICUMT)},
  Year                     = {2016},
  Month                    = {Oct},
  Pages                    = {277-281},

  Doi                      = {10.1109/ICUMT.2016.7765371},
  Keywords                 = {IP networks;software defined networking;telecommunication traffic;transport protocols;IP networks;SDN;SDN-network;network architecture;network enhancement;network planning;queuing network;revenue growth rates;software defined network delay estimation;traffic management;Analytical models;Delays;Local area networks;Process control;Protocols;Switches;SDN;delay;mean sojourn time;queuing network},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6612888,
  Title                    = {Refactoring as a Lifeline: Lessons Learned from Refactoring},
  Author                   = {A. N. Abdel-Hamid},
  Booktitle                = {2013 Agile Conference},
  Year                     = {2013},
  Month                    = {Aug},
  Pages                    = {129-136},

  Abstract                 = {Refactoring legacy code can be a major impediment for teams transforming to agile due to the high cost of manual regression testing of frequent (typically 2-week) releases. Also, attempts to implement automated tests may involve technical and cost issues. In this report we present a new and more systematic approach to refactoring we have found to be successful for refactoring legacy code that has few (if any) automated tests. This report describes two experiences: one with 3 teams applying a basic and traditional refactoring approach, and another with 2 teams applying the new approach. This new approach helped achieve better results in covering code with tests, involved senior management to retain their support, and achieved better and more sustainable pace of development powered by continuous refactoring techniques.},
  Doi                      = {10.1109/AGILE.2013.18},
  Keywords                 = {software maintenance;covering code;manual regression testing;refactoring legacy code;senior management;software maintainability;Business;Complexity theory;Computer bugs;Maintenance engineering;Measurement;Software;Testing;Continuous Refactoring;Metrics;Refactoring Anti-patterns;Software Maintainability},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7284599,
  Title                    = {Lean CMMI: An Iterative and Incremental Approach to CMMI-Based Process Improvement},
  Author                   = {A. N. Abdel-Hamid and A. E. d. Hamouda},
  Booktitle                = {2015 Agile Conference},
  Year                     = {2015},
  Month                    = {Aug},
  Pages                    = {65-70},

  Abstract                 = {Software Process Improvement (SPI) projects incorporate organization transition risks which may cause many process improvement initiatives to fail. To mitigate these risks, an iterative and incremental approach called 'Process Increments' is used to manage the SPI project. In this paper, the Configuration Management process area is used as a case study to show the improvement results difference when the 'Process Increments' approach is used. Results are compared with similar projects which didn't use an incremental approach. This approach shifts the focus from adopting new techniques to achieving value-add for the organization and shows excellent results in effective and efficient implementation of Software Configuration Management. Through our proposed process increment model, we could reach a significant increase in the performance of the software process improvement.},
  Doi                      = {10.1109/Agile.2015.20},
  Keywords                 = {configuration management;software process improvement;SPI project;lean lean CMMI-based process improvement;software configuration management process area;software process improvement project;Companies;Configuration management;Guidelines;Iterative methods;Software;Standards organizations;CMMI;Lean;Process Increments;Software Configuration Management;Software Process Improvement},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7000077,
  Title                    = {Software Estimation: Transforming Dust into Pots of Gold?},
  Author                   = {A. Abran},
  Booktitle                = {2014 Joint Conference of the International Workshop on Software Measurement and the International Conference on Software Process and Product Measurement},
  Year                     = {2014},
  Month                    = {Oct},
  Pages                    = {64-65},

  Abstract                 = {In the Dark Ages the 'Lords of the country' were expecting that their 'alchemists' - the 'gurus' of their era - would come up with mysterious formula that would transform 'dust' into 'pots of gold! A lot of current software estimation models and practices, including in Agile and COCOMO-like models, share characteristics of craft practices observed in the Dark Ages, when compared to current professional practices from engineering and sciences.},
  Doi                      = {10.1109/IWSM.Mensura.2014.48},
  Keywords                 = {software cost estimation;Agile models;COCOMO-like models;Dark Ages;craft practices;software estimation;Biological system modeling;Estimation;Gold;Organizations;Productivity;Software;Standards organizations;metrics;productivity models;software estimation},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7285284,
  Title                    = {Cloud and network service orchestration in Software Defined Data Centers},
  Author                   = {D. Adami and B. Martini and A. Sgambelluri and M. Gharbaoui and P. Castoldi and C. Callegari and L. Donatini and S. Giordano},
  Booktitle                = {2015 International Symposium on Performance Evaluation of Computer and Telecommunication Systems (SPECTS)},
  Year                     = {2015},
  Month                    = {July},
  Pages                    = {1-6},

  Abstract                 = {Cloud Data Centers are becoming a more and more important reality nowadays, as more and more services are being offered in the form of Cloud resources. In order to accommodate as many requests as possible, Data Centers typically deploy oversubscription, which requires a thoughtfully calibrated usage of the computing and network resources of the system. We especially need to re-think the usage of network resources, as the kinds of demands from applications we see today have more stringent network requirements than in the past. The Software-Defined Network paradigm offers new tools to manage the network in agile, flexible ways, according to specific needs. It enables to build new customized functions in order, for example, to monitor the instantaneous load of traffic, slice the network, route each flow according to specific policies that can be modified accordingly with the needs of the system. In this paper we present an orchestrator for Software-Defined Data Center, and the strategies used to allocate Virtual Machines, basing our decisions on the current state of the system.},
  Doi                      = {10.1109/SPECTS.2015.7285284},
  Keywords                 = {computer centres;software defined networking;virtual machines;cloud data centers;network resources;network service orchestration;software defined data centers;virtual machines;Bandwidth;Computer architecture;Estimation;History;Monitoring;Resource management;Servers;Cloud;Data Center;SDN},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6883508,
  Title                    = {An OpenFlow controller for cloud data centers: Experimental setup and validation},
  Author                   = {D. Adami and B. Martini and A. Sgambelluri and M. Gharbaoui and P. Castoldi and A. D. Chiaro and L. Donatini and S. Giordano},
  Booktitle                = {2014 IEEE International Conference on Communications (ICC)},
  Year                     = {2014},
  Month                    = {June},
  Pages                    = {1344-1349},

  Abstract                 = {Nowadays, Data Centers are the primary infrastructures for Cloud Computing services provisioning. In this challenging scenario, Data Centers have to deal with highly dynamic workloads, thus not only should they adopt advanced software virtualization solutions, but also network control capabilities. Elastic, agile network connectivity control should be integrated with the computing management infrastructure to make it achieve its goals. This paper presents an OF-based controller, called OFVN, that enables novel virtualization-aware networking functions in Cloud DCs. Virtual Machines allocations are performed considering the availability of computational resources on physical server, but also selecting a forwarding path for VMs data flows based on network links utilization. The focus of the paper is on the implementation and assessment of the controller in an experimental testbed. The behaviour of different allocation strategies is also investigated.},
  Doi                      = {10.1109/ICC.2014.6883508},
  ISSN                     = {1550-3607},
  Keywords                 = {cloud computing;computer centres;virtual machines;virtualisation;OF-based controller;OFVN;OpenFlow controller;VM data flows;agile network connectivity control;cloud DCs;cloud computing services provisioning;cloud data centers;computing management infrastructure;controller assessment;dynamic workloads;network control capabilities;network link utilization;physical server;software virtualization solutions;virtual machines allocations;virtualization-aware networking functions;Decision support systems;Quality of service;Reliability;Cloud SDN;OFVN},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6781329,
  Title                    = {Swift Tack: A new development approach},
  Author                   = {S. Aggarwal and S. Dhir},
  Booktitle                = {2014 International Conference on Issues and Challenges in Intelligent Computing Techniques (ICICT)},
  Year                     = {2014},
  Month                    = {Feb},
  Pages                    = {476-481},

  Doi                      = {10.1109/ICICICT.2014.6781329},
  Keywords                 = {software prototyping;Swift Tack;agile methodology;customer oriented approach;development life cycle;Bridges;Coordinate measuring machines;Irrigation;Media;Organizations;Testing;Capability Maturity Model (CMM);Documentation;Iteration;Postmortem;Software Development Life Cycle (SDLC)},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7164732,
  Title                    = {A study on the growth of Agile methods in India till 2014},
  Author                   = {A. Agrawal and S. Singh and L. S. Maurya},
  Booktitle                = {2015 International Conference on Advances in Computer Engineering and Applications},
  Year                     = {2015},
  Month                    = {March},
  Pages                    = {370-374},

  Doi                      = {10.1109/ICACEA.2015.7164732},
  Keywords                 = {software prototyping;India;agile methods;incremental methods;iterative methods;sequential software development models;social media;software community;software products;spiral model;waterfall model;Communities;Companies;Computers;Scrum (Software development);Software;Agile;Agile Conferences;Agile Growth;Agile People},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7302798,
  Title                    = {Towards a theoretical foundation for agile development},
  Author                   = {R. K. Agrawalla},
  Booktitle                = {2015 IEEE International Symposium on Systems Engineering (ISSE)},
  Year                     = {2015},
  Month                    = {Sept},
  Pages                    = {461-468},

  Abstract                 = {Is it not the idea and the vision of corporates dealing in software development to create and deliver good and great software? The answer could be in affirmative. And towards this larger end of delivering high quality software and ensuring customer satisfaction, promulgated explicitly or imbibed implicitly, there has been sustained efforts towards creating and adopting new ways, new models and methods of software development. As we know, in 2001, some stalwarts and experts in various software development methods congregated in Snowbird, Utah to sign what is known as the `agile manifesto'. Much water has flown since then across the Ganges and the Thames. The present paper is a theoretical reflection on the agile development paradigm and in the process the paper tries to propose a theoretical foundation to this fertile field, taking a system's perspective; including the system-of-systems understanding. The theoretical foundation that we present in the paper is built on the ideas relating to change as in Goldratt's Thinking Processes of the theory of constraints. For theoretical evidence, the paper discusses agile development principles and practices and then maps the agile principles to the elements of the thinking processes. We argue that since agile development is all about customer centricity, customer proximity with respect to his needs and change requirements, feedback and change in general; the theoretical underpinnings for agile development stay hidden in the body of knowledge relating to `cybernetics of cybernetics' and the thinking processes of the theory of constraints. However, in the present paper, the focus remains to find the theoretical foundation to agile development through the change challenges and dynamics as expounded by Kotter and the thinking processes; as explained in the paper.},
  Doi                      = {10.1109/SysEng.2015.7302798},
  Keywords                 = {software prototyping;software quality;Goldratt thinking processes;agile development practices;agile development principles;agile manifesto;change requirements;constraints theory;customer centricity;customer proximity;customer satisfaction;cybernetics-of-cybernetics;high quality software;software development;system-of-systems understanding;Complexity theory;Context;Cybernetics;Organizations;Software;Uncertainty;agile;change;cybernetics of cybernetics;second order science;theoretical foundation;thinking processes},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@Article{6728937,
  Title                    = {Water Science Software Institute: Agile and Open Source Scientific Software Development},
  Author                   = {S. Ahalt and L. Band and L. Christopherson and R. Idaszak and C. Lenhardt and B. Minsker and M. Palmer and M. Shelley and M. Tiemann and A. Zimmerman},
  Journal                  = {Computing in Science Engineering},
  Year                     = {2014},

  Month                    = {May},
  Number                   = {3},
  Pages                    = {18-26},
  Volume                   = {16},

  Doi                      = {10.1109/MCSE.2014.5},
  ISSN                     = {1521-9615},
  Keywords                 = {public domain software;scientific information systems;software prototyping;water;agile software development;open community engagement process;open source mechanics;open source scientific software development;software engineering;water science software institute;Agile computing;Collaboration;Open source software;Scientific computing;Software engineering;Water resources;Agile;hackathon;open community engagement process;open source;scientific computing;scientific software development;water science},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6615098,
  Title                    = {Water Science Software Institute: An open source engagement process},
  Author                   = {S. Ahalt and B. Minsker and M. Tiemann and L. Band and M. Palmer and R. Idaszak and C. Lenhardt and M. Whitton},
  Booktitle                = {2013 5th International Workshop on Software Engineering for Computational Science and Engineering (SE-CSE)},
  Year                     = {2013},
  Month                    = {May},
  Pages                    = {40-47},

  Doi                      = {10.1109/SECSE.2013.6615098},
  Keywords                 = {environmental science computing;public domain software;software prototyping;water resources;Agile;OCEP model;WSSI;open source engagement process;open source software development;public-private water science software institute;Acceleration;Communities;Educational institutions;Open source software;Technological innovation;Water resources;Agile software development;Open Source software;Scientific Software Innovation Institute;water science},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7427858,
  Title                    = {Transition of Software Maintenance Teams from Scrum to Kanban},
  Author                   = {M. O. Ahmad and P. Kuvaja and M. Oivo and J. Markkula},
  Booktitle                = {2016 49th Hawaii International Conference on System Sciences (HICSS)},
  Year                     = {2016},
  Month                    = {Jan},
  Pages                    = {5427-5436},

  Abstract                 = {Software companies are increasingly moving to use Kanban after Scrum since Kanban claimed to offer improved project visibility, software quality, team motivation, communication and collaboration. However, empirical studies are needed to verify these effects and companies' real motivation for the transition. In particular, underlying reasons leading software companies to start using Kanban in software maintenance must be understood. A multiple-case study was conducted to investigate why two experienced Scrum maintenance teams transitioned to Kanban. We conducted 17 semi-structured interviews with two different teams from two large Finnish software companies. Thematic analysis was applied to identify the most common challenges in Scrum and their solutions in Kanban. The results showed that Scrum maintenance teams faced challenges, such as lack of work visibility, task prioritisation, communication and collaboration, over commitment of sprints, work synchronisation and changing people. We discuss how maintenance teams mitigated these challenges with Kanban and present the lessons learned.},
  Doi                      = {10.1109/HICSS.2016.670},
  ISSN                     = {1530-1605},
  Keywords                 = {project management;software maintenance;software management;Finnish software companies;Kanban;Scrum;collaboration;communication;project visibility;software companies;software maintenance team transition;software quality;team motivation;Collaboration;Companies;Interviews;Maintenance engineering;Scrum (Software development);Software maintenance;Agile;Kanban;Lean;Scrum;Software Maintenance},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7391931,
  Title                    = {Orchestration algorithms for network-assisted virtual machine migrations using OpenDayLight Controller},
  Author                   = {S. Ahmed and B. Martini and M. Gharbaoui and A. Sgambelluri and S. Shariful Alam},
  Booktitle                = {2015 2nd International Conference on Electrical Information and Communication Technologies (EICT)},
  Year                     = {2015},
  Month                    = {Dec},
  Pages                    = {106-111},

  Abstract                 = {In the last years, prominent advances in software virtualization (e.g., Hypervisor) have enabled the agile deployment of cloud services and, at the same time, server consolidation operations through agile Virtual Machine (VM) operations (e.g., start-up, snapshot, cloning, and migrations) across Data Center (DC) servers. On the other hand, such advances pose new challenges in the overall management of the DC infrastructure since VM operations may occur much more frequently in virtualized than in legacy DCs and produce not only a computational load on the involved servers, but also a network load on all the switches connecting the servers. In this context, the Software-Defined Network (SDN) paradigm opens up new opportunities to design convergent resource management systems which is able to address the provisioning of cloud services while meeting adequate network performance during VM provisioning and migrations. In this paper, a promising advanced monitoring and resource allocation function for SDN-based DC networks has been proposed aiming at reporting possible suitable paths connecting specified servers that can be exploited for VM migrations. In such a way, network-assisted migrations can be triggered that assure adequate VM migration delays according to specified requirements (e.g., minimum delay for live VM migration) while addressing different management targets (e.g., network load balancing, minimization of energy consumption).},
  Doi                      = {10.1109/EICT.2015.7391931},
  Keywords                 = {cloud computing;computer centres;computer network management;resource allocation;software defined networking;software prototyping;virtual machines;virtualisation;Hypervisor;OpenDayLight controller;SDN-based DC networks;VM migration delays;agile deployment;cloud services;computational load;convergent resource management systems;data center servers;energy consumption minimization;network load balancing;network-assisted virtual machine migrations;orchestration algorithms;overall DC infrastructure management;resource allocation function;server consolidation operations;software virtualization;software-defined network paradigm;virtual machine operations;Bandwidth;Cloud computing;Control systems;Network topology;Servers;Topology;Cloud;Data Centre;OpenFlow;Orchestration;Software-Defined Networking;VM migration},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6759190,
  Title                    = {Dual Application Model for Agile Software Engineering},
  Author                   = {A. Aitken},
  Booktitle                = {2014 47th Hawaii International Conference on System Sciences},
  Year                     = {2014},
  Month                    = {Jan},
  Pages                    = {4789-4798},

  Abstract                 = {There are problems with Traditional Software Engineering and with Agile Software Development. A new approach called Agile Software Engineering that combines the best of both is proposed and an aspect of this approach described. The Dual Application Model involves the development of a logical software application focused on capturing the functional requirements and a physical software application focused on transforming the logical application to meet the non-functional requirements. It has advantages and disadvantages like any approach to software development but meets two of the principles proposed for Agile Software Engineering. Frameworks and tools are proposed to support the Dual Application Model but are not essential to the approach. The approach provides an almost complete separation of concerns between defining and specifying (in code) the domain solution / software problem for which the domain experts are primarily responsible and designing and implementing the software solution to meet the non-functional requirements for which the software developers are primarily responsible.},
  Doi                      = {10.1109/HICSS.2014.588},
  ISSN                     = {1530-1605},
  Keywords                 = {expert systems;software prototyping;agile software development;agile software engineering;domain experts;dual application model;logical software application;nonfunctional requirements;physical software application;software solution;traditional software engineering;Analytical models;Mathematical model;Object oriented modeling;Software;Software engineering;Unified modeling language;Variable speed drives;agile software development;dual application model;logical model;physical model;software development method;software engineering},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6759186,
  Title                    = {Introduction to Agile and Lean Software Engineering Minitrack},
  Author                   = {A. Aitken and J. Trimble},
  Booktitle                = {2014 47th Hawaii International Conference on System Sciences},
  Year                     = {2014},
  Month                    = {Jan},
  Pages                    = {4759-4759},

  Abstract                 = {NA},
  Doi                      = {10.1109/HICSS.2014.584},
  ISSN                     = {1530-1605},
  Keywords                 = {Educational institutions;Information systems;Investment;Organizations;Software;Software engineering;Variable speed drives},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6480416,
  Title                    = {Introduction to Agile and Lean Software Engineering Minitrack},
  Author                   = {A. M. Aitken},
  Booktitle                = {2013 46th Hawaii International Conference on System Sciences},
  Year                     = {2013},
  Month                    = {Jan},
  Pages                    = {4750-4750},

  Doi                      = {10.1109/HICSS.2013.290},
  ISSN                     = {1530-1605},
  Keywords                 = {Agile software development;Information systems;Programming profession;Software engineering},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6976666,
  Title                    = {A Cost Modelling System for Cloud Computing},
  Author                   = {D. E. Ajeh and J. Ellman and S. Keogh},
  Booktitle                = {2014 14th International Conference on Computational Science and Its Applications},
  Year                     = {2014},
  Month                    = {June},
  Pages                    = {74-84},

  Abstract                 = {An advance in technology unlocks new opportunities for organizations to increase their productivity, efficiency and process automation while reducing the cost of doing business as well. The emergence of cloud computing addresses these prospects through the provision of agile systems that are scalable, flexible and reliable as well as cost effective. Cloud computing has made hosting and deployment of computing resources cheaper and easier with no up-front charges but pay per-use flexible payment methods. However, there is lack of tools to aid decision makers in evaluating the much promised benefits of cloud computing particularly its cost benefit. To fill this gap in tools for evaluating the cost benefit of cloud services as an alternative to on-premise computing, a cost modelling system for cloud computing (CCMS) is proposed. A prototype model was developed to simulate the cost incurred on maintaining an on-premise IT infrastructure under various usage patterns with the purpose of determining the cost benefit of cloud alternatives. CCMS assists decision makers with insights on cost savings of adopting cloud alternatives, plan computing budgets and also demonstrate how the utilization capacity and cost of acquisition of an infrastructure can influence the cost savings from cloud alternatives.},
  Doi                      = {10.1109/ICCSA.2014.24},
  Keywords                 = {cloud computing;cost-benefit analysis;software cost estimation;IT infrastructure;cloud computing modelling system;cloud services;cost benefit;cost modelling system;cost savings;infrastructure acquisition cost;usage patterns;utilization capacity;Analytical models;Cloud computing;Computational modeling;Computers;Maintenance engineering;Organizations;Web application;cloud analyst;cloud computing;cloud costing;cloud modelling;cloud simulator;cost model;utilization model},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7036675,
  Title                    = {A multi-faceted roadmap of requirements traceability types adoption in SCRUM: An empirical study},
  Author                   = {G. Alaa and Z. Samir},
  Booktitle                = {2014 9th International Conference on Informatics and Systems},
  Year                     = {2014},
  Month                    = {Dec},
  Pages                    = {SW-1-SW-9},

  Abstract                 = {The purpose of this research is to determine based on an empirical study, what requirements traceability types are of importance to SCRUM teams, and what value and motive are behind the adoption taken from the perspective of different key players; developers, system analysts, SCRUM masters and project owners. This is in particular important as there a big number of requirements traceability models and tools available without a roadmap to provide guidance in evaluating them. A literature review was undertaken to study requirements traceability taxonomy in the context of agile development. In order to empirically test the adoption preferences a focus group study was undertaken to cover representatives from the different key players. Findings imply that a multi-faceted view is important when designing requirements traceability tools to satisfy the different perspectives. The derived adoption roadmap offers design principles that would make traceability tools less complicated and more influential by exposing traceability data and techniques according to player role.},
  Doi                      = {10.1109/INFOS.2014.7036675},
  Keywords                 = {formal specification;software prototyping;SCRUM;agile development;empirical study;focus group study;requirements specifications;requirements traceability taxonomy;requirements traceability tools;requirements traceability type adoption multifaceted roadmap;Computers;Couplings;Educational institutions;Informatics;Scrum (Software development);Software;Software engineering;SCRUM;adoption;agile;requirements;tool;traceability},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7477541,
  Title                    = {Agile development as a change management approach in software projects: Applied case study},
  Author                   = {M. Alawairdhi},
  Booktitle                = {2016 2nd International Conference on Information Management (ICIM)},
  Year                     = {2016},
  Month                    = {May},
  Pages                    = {100-104},

  Abstract                 = {Although a large amount of research has been carried out so far to study the impacts of agile methods in various phases of software engineering, only very few of these have yielded empirical evidence in the form of products being used in real life environment. Very few of these studies have been dedicated to study change management while adopting agile methods. In this paper, it has been argued that that agile software development, with its practices for user involvement and product visibility, can be used as a change management approach in most small to medium scale projects. As an illustration of the theoretical findings, the application of agile methods in managing change in two projects as Saudi Electronic University has been described. The results and findings clearly corroborate our findings and explain why agile methods should be practiced more often with for projects which need specific emphasis on change management.},
  Doi                      = {10.1109/INFOMAN.2016.7477541},
  Keywords                 = {management of change;project management;software prototyping;Saudi Electronic University;agile software development;change management;product visibility;small to medium scale projects;software engineering;software projects;user involvement;Indexes;Agile Methods;Change Management;SCRUM;Software Application Development},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@Article{6798748,
  Title                    = {Efficient and agile storage management in software defined environments},
  Author                   = {A. Alba and G. Alatorre and C. Bolik and A. Corrao and T. Clark and S. Gopisetty and R. Haas and R. I. Kat and B. S. Langston and N. S. Mandagere and D. Noll and S. Padbidri and R. Routray and Y. Song and C. H. Tan and A. Traeger},
  Journal                  = {IBM Journal of Research and Development},
  Year                     = {2014},

  Month                    = {March},
  Number                   = {2/3},
  Pages                    = {5:1-5:12},
  Volume                   = {58},

  Abstract                 = {The IT industry is experiencing a disruptive trend for which the entire data center infrastructure is becoming software defined and programmable. IT resources are provisioned and optimized continuously according to a declarative and expressive specification of the workload requirements. The software defined environments facilitate agile IT deployment and responsive data center configurations that enable rapid creation and optimization of value-added services for clients. However, this fundamental shift introduces new challenges to existing data center management solutions. In this paper, we focus on the storage aspect of the IT infrastructure and investigate its unique challenges as well as opportunities in the emerging software defined environments. Current state-of-the-art software defined storage (SDS) solutions are discussed, followed by our novel framework to advance the existing SDS solutions. In addition, we study the interactions among SDS, software defined compute (SDC), and software defined networking (SDN) to demonstrate the necessity of a holistic orchestration and to show that joint optimization can significantly improve the effectiveness and efficiency of the overall software defined environments.},
  Doi                      = {10.1147/JRD.2014.2302381},
  ISSN                     = {0018-8646},
  Keywords                 = {Computer architecture;Database management;Hardware;Information technology;Market research;Optimization;Resource management;Software defined networks;Value added services},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7921944,
  Title                    = {Using behaviour-driven development with hardware-software co-design for autonomous load management},
  Author                   = {M. Alhaj and G. Arbez and L. Peyton},
  Booktitle                = {2017 8th International Conference on Information and Communication Systems (ICICS)},
  Year                     = {2017},
  Month                    = {April},
  Pages                    = {46-51},

  Abstract                 = {The typical approach to designing embedded systems manages the specification and design of the hardware and software separately. HW/SW Co-design is used, in embedded computing, to allow the hardware and the software to be designed and implemented together and make sure that the non-functional properties are met. Behavior-driven development (BDD) is an agile software development approach that spurs collaboration of project stakeholders to ensure the right software is developed to meet their needs. BDD describes the behavior of the system as executable user stories and focuses on how the system behaves for users interact with the system. In this paper, we introduce an approach that integrates BDD with HW/SW Co-design. The approach provides the ability to describe the behavior of the software as executable user stories in a HW/SW Co-design environment. The approach is evaluated using a renewable energy project in collaboration with a private company in Canada to build a system for autonomous load management of self-forming renewable energy nanogrids.},
  Doi                      = {10.1109/IACS.2017.7921944},
  Keywords                 = {embedded systems;hardware-software codesign;load management;software engineering;BDD;Canada;HW-SW codesign;agile software development approach;autonomous load management;behaviour-driven development;embedded computing;embedded systems;hardware-software codesign;project stakeholders;renewable energy project;self-forming renewable energy nanogrids;Batteries;Computer architecture;Hardware;Inverters;Relays;Software;Testing;Agile software;Behaviour-Driven Development;Embedded Systems;Hardware-Software Co-Design;Nanogrid systems;Test-driven development},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7883316,
  Title                    = {Metrics in Agile Project Courses},
  Author                   = {L. Alperowitz and D. Dzvonyar and B. Bruegge},
  Booktitle                = {2016 IEEE/ACM 38th International Conference on Software Engineering Companion (ICSE-C)},
  Year                     = {2016},
  Month                    = {May},
  Pages                    = {323-326},

  Abstract                 = {We believe that software engineering should be taught in a hands-on way such as through a project-based capstone course where students apply the learned concepts in a real setting. However, such a teaching format can be challenging and time-consuming for instructors. In this paper we explain how we selected and introduced a set of metrics to improve the manageability of our large multi-project capstone course. We regularly run such a course with over 100 students developing applications in 10-12 parallel projects over the course of one semester. Our approach focuses on measuring the success of three key workflows, namely Merge Management, Continuous Integration and Continuous Delivery. We show how these metrics help the instructors to keep track of the progress of multiple projects running at the same time, enabling them to identify and react to problems early.},
  Keywords                 = {computer science education;continuous improvement;educational courses;project management;software prototyping;teaching;agile project courses;application development;continuous delivery;continuous integration;large multiproject capstone course manageability improvement;merge management;project-based capstone course;software engineering;teaching format;Education;Industries;Measurement;Organizations;Servers;Software;agile software engineering;capstone course;continuous delivery;continuous integration;metrics;project manage- ment},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@Article{7803537,
  Title                    = {Modeling the Throughput of the Linux-Based Agile-SD Transmission Control Protocol},
  Author                   = {M. A. Alrshah and M. Othman and B. M. Ali and Z. B. M. Hanapi},
  Journal                  = {IEEE Access},
  Year                     = {2016},
  Pages                    = {9724-9732},
  Volume                   = {4},

  Abstract                 = {Agile-SD is one of the latest versions of loss-based congestion control algorithm (CCA), which has been proposed to improve the total performance of transmission control protocol (TCP) over highspeed and short-distance networks. It has introduced a new mechanism, called agility factor mechanism, which shortens the epoch time to reduce the sensitivity to packet losses and in turn to increase the average throughput. Agile-SD has only been tested via simulation; however, it has not been mathematically proven or evaluated. The contribution of this paper is twofold. First, a new mathematical model for the throughput of NewReno and Agile-SD is proposed. This model is designed using the well-known Markov chains to validate the correctness of Agile-SD and to show the impact of buffer size, multiplicative decrease factor, and maximum limit of agility factor (λmax) on the total performance. Second, an automated algorithm configuration and parameter tuning (AACPT) technique is employed to optimize and automate the configuration of λmax. Furthermore, the numerical results for both NewReno and Agile-SD are compared with the simulation results, in which the validity of the proposed model is confirmed. Moreover, the output of the AACPT is exploited to formulate a new equation, which calculates the optimal λmax from a given β in order to conserve the standard interface of the TCP. This equation increases the scalability of Agile-SD and improves its total performance.},
  Doi                      = {10.1109/ACCESS.2016.2647237},
  ISSN                     = {2169-3536},
  Keywords                 = {Internet;Linux;Markov processes;software prototyping;transport protocols;AACPT technique;Internet;Linux-based Agile-SD transmission control protocol throughput model;Markov chain;NewReno throughput;TCP;agility factor mechanism;automated algorithm configuration and parameter tuning technique;buffer size;loss-based congestion control algorithm;multiplicative decrease factor;packet loss;transmission control protocol;Markov processes;Mathematical model;Packet loss;Protocols;Standards;Throughput;Agile-SD;Markov chains;average throughput;congestion control;transmission control protocol},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7784656,
  Title                    = {Using Crowdsourced and Anonymized Personas in the Requirements Elicitation and Software Development Phases of Software Engineering},
  Author                   = {I. Alvertis and D. Papaspyros and S. Koussouris and S. Mouzakitis and D. Askounis},
  Booktitle                = {2016 11th International Conference on Availability, Reliability and Security (ARES)},
  Year                     = {2016},
  Month                    = {Aug},
  Pages                    = {851-856},

  Abstract                 = {This paper deals with the process of crowdsourcing requirements elicitation in software engineering and the alignment of the customer needs during the development phase, through the usage of anonymous personas, and the support of the persona builder application that allows the extraction of such information through anonymized data. Having identified the realization of users and customers' needs in the software engineering cycle, despite the adoption of agile methods, the paper suggests the usage of a persona that represents a set of users with similar characteristics, a pool of personas that software teams may share with each other through a collaborative application, and persona builder as a tool to generate such personas through real user profiles and data collected through third party services. At the end, a demo application is presented, realizing the concept of anonymized, crowdsourced personas.},
  Doi                      = {10.1109/ARES.2016.71},
  Keywords                 = {crowdsourcing;formal verification;software engineering;agile methods;anonymized personas;collaborative application;crowdsourced personas;crowdsourcing requirements;demo application;development phase;persona builder application;software development;software engineering;software engineering cycle;Computer architecture;Context;Documentation;Software;Software engineering;Stakeholders;Anonymized Requirements Elicitication;Crowdsourced Software Requirements;Dynamic Requirements Documentation;Software Engineering;User Persona},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7885872,
  Title                    = {XML_DocTracker: Generating Software Requirements Specification (SRS) from XML Schema},
  Author                   = {H. Aman and R. Ibrahim},
  Booktitle                = {2016 International Conference on Information Science and Security (ICISS)},
  Year                     = {2016},
  Month                    = {Dec},
  Pages                    = {1-5},

  Abstract                 = {Agile software development methodology is an iterative and incremental method in making interactions more important than process and tools. The method also emphasizes more on developing software rather than making a comprehensive documentation. Therefore, web developers like to adapt agile software development methodology in their web development. The reason is because the methodology delivers web application faster than the traditional software development methodology. As advantages of this method, web application is developed in a short time. Although these make huge benefits, the most important thing in software development life cycle has been ignored. That is, documentation process in capturing requirements and design. Therefore, this paper presents a tool named XML_DocTracker for generating the software requirements specification (SRS) from XML schema as well as addressing the versioning problems during generating the SRS. XML_DocTracker is implemented based on the framework for transformation rules from XML Schema. The framework also addresses the versioning factor using traceability for detecting the document changes. Based on the framework, XML_DocTracker is developed and the tool is able to generate the SRS from the XML schema as well as able to detect document changes in SRS due to traceability factor that is embedded inside the tool. The tool can be used for software community who want to generate the SRS from the source codes if the SRS did not exist for that particular software. This paper contribution is detecting new type of element evolution in SRS when new XML schema version is introduced.},
  Doi                      = {10.1109/ICISSEC.2016.7885872},
  Keywords                 = {Internet;Unified Modeling Language;XML;formal specification;iterative methods;program diagnostics;reverse engineering;software development management;software prototyping;source code (software);system documentation;SRS;UML specification;Web application;XML schema;XML_DocTracker;agile software development;document change detection;incremental method;iterative method;software development life cycle;software requirements specification;source codes;traceability;Agile software development;Documentation;Reverse engineering;Software;Standards;Unified modeling language;XML},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7577425,
  Title                    = {System Testing Optimization in a Globally Distributed Software Engineering Team},
  Author                   = {T. Anand and C. Reddy and V. S. Mani},
  Booktitle                = {2016 IEEE 11th International Conference on Global Software Engineering (ICGSE)},
  Year                     = {2016},
  Month                    = {Aug},
  Pages                    = {99-103},

  Abstract                 = {This practice paper presents how a test team of a software engineering organization spread across three countries successfully optimized the system testing effort for a large mission-critical software system that had to conform to regulatory requirements. Multiple releases of the system of the system have been delivered to customers over the 15 years it has been in the market. Each new release added new features, which increased both the number of system test cases required and the complexity of the existing system test cases. Hence, a complete cycle of system testing for every new release required more time and effort. However, it was increasingly difficult to justify or arrange for such added efforts, especially since shorter product releases were being demanded. This created a vicious cycle where the team members, though experienced and highly-skilled, were unable to focus on initiatives to improve and optimize testing. To address this issue, we introduced the role of a test analyst to bridge the gap between the test team and other key stakeholders. We were able to optimize the total number of system test cases and increase test execution efficiency while ensuring conformance to mandatory regulations. The practices adapted by the team for faster test environment preparation, assisted automation, along with training and mentoring are described.},
  Doi                      = {10.1109/ICGSE.2016.26},
  ISSN                     = {2329-6313},
  Keywords                 = {program testing;software development management;assisted automation;globally distributed software engineering team;mandatory regulations;mission-critical software system;regulatory requirements;software engineering organization;system test cases;system testing optimization;team members;test analyst;test environment preparation;test execution efficiency;Automation;Manuals;Optimization;Software;Software engineering;System testing;agile;global software engineering;regulatory requirements;stake holder involvement;test management;test refactoring;test strategy},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7473032,
  Title                    = {Integrating Sensor Devices in a Service Oriented Framework: A Retail Environment Case Study},
  Author                   = {M. Anderson and J. Bolton},
  Booktitle                = {2016 IEEE Symposium on Service-Oriented System Engineering (SOSE)},
  Year                     = {2016},
  Month                    = {March},
  Pages                    = {244-250},

  Abstract                 = {This paper presents a case study that explores the impact of a software development project on a Small to Medium Enterprise in the United Kingdom as a means of delivering improved understanding of data in the retail sector. In this paper, the link between the actions undertaken by management in retail and the relationship with the environment provided by IT systems is considered. Many retailers in the United Kingdom make use of sensor devices to understand the behavior of their customers. As retail outlets grow over a period of time, the diversity of sensor devices may change as new devices are installed. Equally, outlets that are operated within retail groups will collect and store data locally. As a consequence, management within the retail sector face a number of challenges to understand the operation of individual outlets and the holistic performance of retail chains. As a result, both the IT systems and also the working practices employed to complete the day to day tasks essential to meet the needs of a retailer's customers rapidly become unfit for purpose. The case study considered in this paper reviews the requisite practices adopted by a service provider in the business intelligence sector, and the positive impact that the company realized through the re-engineering of both IT systems and business workflows. The underlying reasons for this inefficiency were analysed and, through the agile software engineering methodology, a solution was designed to resolve these issues.},
  Doi                      = {10.1109/SOSE.2016.74},
  Keywords                 = {competitive intelligence;retail data processing;service-oriented architecture;small-to-medium enterprises;software prototyping;IT systems;United Kingdom;agile software engineering methodology;business intelligence sector;business workflows;retail sector;sensor device integration;service oriented framework;small to medium enterprise;software development project;Business;Cameras;Complexity theory;Internet;Radiation detectors;Software;Training;Workflow design; business workflow re-engineering; reporting; visualizing management information},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7349965,
  Title                    = {User Interface Design as a Catalyst for Organisation Change},
  Author                   = {M. Anderson and M. Gilbert},
  Booktitle                = {2015 IEEE 12th International Conference on e-Business Engineering},
  Year                     = {2015},
  Month                    = {Oct},
  Pages                    = {186-193},

  Abstract                 = {This paper presents a case study that explores the impact of a re-engineering project on a Small to Medium Enterprise in the United Kingdom as a means of delivering improved employee performance. In this paper, the link between the actions undertaken my teams of co-workers and the relationship with the environment provided by IT systems is considered. As an organization evolves over an extended period of time, both the IT systems and also the working practices employed to complete the day to day tasks essential to meet the needs of an organisation's customers, particularly in the service sector, rapidly become unfit for purpose. This soon becomes an issue both in meeting the needs of customers and also in meeting regulatory requirements. The case study considered in this paper reviews the requisite practices adopted by a service provider in the wet stock management industry, and the positive impact that the company realized through the re-engineering of both IT systems and business workflows. The central driver for the changes implemented was a need identified in the business to implement improved visualization of data relating to working practices in the organization and its clients. Through a regular review process, issues were identified in a key area of the business that impacted upon the time taken to complete essential tasks. The underlying reasons for this inefficiency were analysed and, through the Agile software engineering methodology, a solution was designed to resolve these issues.},
  Doi                      = {10.1109/ICEBE.2015.39},
  Keywords                 = {data visualisation;information technology;organisational aspects;personnel;small-to-medium enterprises;software prototyping;user interfaces;IT systems;United Kingdom;agile software engineering;data visualization;employee performance;organisation change;re-engineering project;regulatory requirements;small to medium enterprise;user interface design;wet stock management industry;Companies;Complexity theory;Contracts;Software systems;Training;User Interface design;business workflow re-engineering;teamworking practices;visualizing management information},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6779540,
  Title                    = {A regression test selection technique by optimizing user stories in an Agile environment},
  Author                   = {Anita and N. Chauhan},
  Booktitle                = {2014 IEEE International Advance Computing Conference (IACC)},
  Year                     = {2014},
  Month                    = {Feb},
  Pages                    = {1454-1458},

  Doi                      = {10.1109/IAdCC.2014.6779540},
  Keywords                 = {DP industry;graph theory;program testing;software prototyping;agile environment;regression test selection technique;software development;software industry;test case aggregation;undirected graph;user stories optimization;Complexity theory;Conferences;Length measurement;Manuals;Patents;Software;Testing;Agile;Optimal Connection;Regression Test Selection;Testing;Undirected Graph},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6747165,
  Title                    = {Identifying risky areas of software code in Agile/Lean software development: An industrial experience report},
  Author                   = {V. Antinyan and M. Staron and W. Meding and P. Österström and E. Wikstrom and J. Wranker and A. Henriksson and J. Hansson},
  Booktitle                = {2014 Software Evolution Week - IEEE Conference on Software Maintenance, Reengineering, and Reverse Engineering (CSMR-WCRE)},
  Year                     = {2014},
  Month                    = {Feb},
  Pages                    = {154-163},

  Abstract                 = {Modern software development relies on incremental delivery to facilitate quick response to customers' requests. In this dynamic environment the continuous modifications of software code can cause risks for software developers; when developing a new feature increment, the added or modified code may contain fault-prone or difficult-to-maintain elements. The outcome of these risks can be defective software or decreased development velocity. This study presents a method to identify the risky areas and assess the risk when developing software code in Lean/Agile environment. We have conducted an action research project in two large companies, Ericsson AB and Volvo Group Truck Technology. During the study we have measured a set of code properties and investigated their influence on risk. The results show that the superposition of two metrics, complexity and revisions of a source code file, can effectively enable identification and assessment of the risk. We also illustrate how this kind of assessment can be successfully used by software developers to manage risks on a weekly basis as well as release-wise. A measurement system for systematic risk assessment has been introduced to two companies.},
  Doi                      = {10.1109/CSMR-WCRE.2014.6747165},
  Keywords                 = {software prototyping;Ericsson AB;Volvo group truck technology;action research project;agile/lean software development;continuous modifications;customers requests;defective software;dynamic environment;fault prone;feature increment;industrial experience report;lean/agile environment;measurement system;software code;software developers;source code file;systematic risk assessment;Complexity theory;Correlation;Organizations;Software;Software measurement;Telecommunications;agile;correlation;metric risk;software},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6824127,
  Title                    = {A Non-invasive Approach to Trace Architecture Design, Requirements Specification and Agile Artifacts},
  Author                   = {P. O. Antonino and T. Keuler and N. Germann and B. Cronauer},
  Booktitle                = {2014 23rd Australian Software Engineering Conference},
  Year                     = {2014},
  Month                    = {April},
  Pages                    = {220-229},

  Abstract                 = {Agile processes emphasize iterative delivery rather than assuming the definition of all detailed requirements and architecture up front. This "just enough" approach generally considers user stories and acceptance tests as sufficient documentation for successful system development. However, industry practices have shown that this minimalism is appropriate for projects with short duration and small collocated teams. In the development of large systems, the "just enough" documentation goes beyond the traditional set recommended by the Agile evangelists, due to the diversity of elements to be considered, as for instance geographic distribution of the teams, necessity to comply with industry regulations, strict IT governance programs, integration of the system being developed with others, or even the presence of not-so-agile people in the teams. In this context, a more complex set of artifacts is required to ensure the proper development of systems, such as more detailed requirements documents and architectural specification. In this regard, to support the agile development of large systems, we introduce TraceMan - Traceability Manager as a mechanism for ensuring traceability among user stories, traditional requirements documents, test specifications, architecture design, and source code. We also present an experience report on how TraceMan has been used in the daily activities at John Deere Intelligent Solutions Group (ISG) to support traceability among development artifacts.},
  Doi                      = {10.1109/ASWEC.2014.30},
  ISSN                     = {1530-0803},
  Keywords                 = {formal specification;software architecture;software prototyping;ISG;Intelligent Solutions Group;TraceMan;agile artifacts;architectural specification;architecture design;large system agile development;requirements specification;traceability manager;Agricultural machinery;Computer architecture;Context;Documentation;Industries;Software;Testing;Agile Artifacts;Agile Development;Architecture;Requirements;Traceability},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7000402,
  Title                    = {Implementation of MOPROSOFT level I and II in software development companies in the colombian caribbean, a commitment to the software product quality region},
  Author                   = {P. Ariza and M. Piñeres and L. Santiago and N. Mercado and A. De la Hoz},
  Booktitle                = {2014 IEEE Central America and Panama Convention (CONCAPAN XXXIV)},
  Year                     = {2014},
  Month                    = {Nov},
  Pages                    = {1-5},

  Abstract                 = {Currently, over 90 % of the world market universe of software development is constituted by SMEs. These organizations usually sees the implementation of methodologies are “too heavy” to be adopted in their daily actions. Thus a model that is adapted to the needs of SME developers of software should primarily focus on: Continuous Improvement both processes Software development, like other fundamental aspects of the organization as such supporters as the quality process that results in high quality products, competitive in the national and international markets. In accordance with the above stated, this research paper in the first instance, contextualizes about different quality models in the area of software development, then the model features MoProSoft delimited, then the process of implementing the methodology defined in organizations, poses the same improvements in this way for more efficient results and conclusions of the research project.},
  Doi                      = {10.1109/CONCAPAN.2014.7000402},
  Keywords                 = {project management;software management;software process improvement;software quality;Colombian Caribbean;MoProSoft;SMEs;software continuous improvement;software development companies;software product quality region;Adaptation models;Context modeling;Electronic mail;ISO standards;Organizations;Scrum (Software development);Software;Information Technology Project;MoProSoft;Project Management;Software Engineering;Software Quality},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7000091,
  Title                    = {Keynote Presentation: From Dashboard Management to an Improvement Index for the Teams},
  Author                   = {A. Arooni},
  Booktitle                = {2014 Joint Conference of the International Workshop on Software Measurement and the International Conference on Software Process and Product Measurement},
  Year                     = {2014},
  Month                    = {Oct},
  Pages                    = {135-135},

  Abstract                 = {For reasons of competetiveness the delivery of the ING Channels Department needed fundamental improvements. The existing waterfall working methods and organization structures of the Channels delivery center were no longer viable. For ING IT is strategic: IT is the bank and the bank is IT. Amir will illustrate how ING transformed onto agility via Scrum. And how measurement and improvement monitoring help to create innovation from 1.000 parallel brains in 150 teams.},
  Doi                      = {10.1109/IWSM.Mensura.2014.62},
  Keywords                 = {Conferences;Indexes;Joints;Software;Software measurement;devops;improvement},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7934770,
  Title                    = {Applying standard independent verification and validation (IV V) techniques within an Agile framework: Is there a compatibility issue?},
  Author                   = {J. D. Arthur and J. B. Dabney},
  Booktitle                = {2017 Annual IEEE International Systems Conference (SysCon)},
  Year                     = {2017},
  Month                    = {April},
  Pages                    = {1-5},

  Abstract                 = {Agile methods have gained wide acceptance over the past several years, to the point that they are now a standard management and execution approach for small-scale software development projects. While conventional Agile methods are not generally applicable to large multi-year and mission-critical systems, Agile hybrids are now being developed (such as SAFe) to exploit the productivity improvements of Agile while retaining the necessary process rigor and coordination needs of these projects. From the perspective of Independent Verification and Validation (IV&V), however, the adoption of these hybrid Agile frameworks is becoming problematic. Hence, we find it prudent to question the compatibility of conventional IV&V techniques with (hybrid) Agile practices. This paper documents our investigation of (a) relevant literature, (b) the modification and adoption of Agile frameworks to accommodate the development of large scale, mission critical systems, and (c) the compatibility of standard IV&V techniques within hybrid Agile development frameworks. Specific to the latter, we found that the IV&V methods employed within a hybrid Agile process can be divided into three groups: (1) early lifecycle IV&V techniques that are fully compatible with the hybrid lifecycles, (2) IV&V techniques that focus on tracing requirements, test objectives, etc. are somewhat incompatible, but can be tailored with a modest effort, and (3) IV&V techniques involving an assessment requiring artifact completeness that are simply not compatible with hybrid Agile processes, e.g., those that assume complete requirement specification early in the development lifecycle.},
  Doi                      = {10.1109/SYSCON.2017.7934770},
  Keywords                 = {program verification;software prototyping;IV&V techniques;agile framework;agile hybrids;compatibility issue;hybrid agile process;hybrid lifecycles;small-scale software development projects;standard independent verification and validation;standard management and execution approach;tracing requirements;Bibliographies;Computer architecture;Documentation;Mission critical systems;Portfolios;Software;Standards;Agile;Independent Verification and Validation},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6914066,
  Title                    = {Significant aspects in relation to Agile usage: Malaysian perspective},
  Author                   = {A. L. Asnawi and A. M. Gravell and G. B. Wills},
  Booktitle                = {2014 2nd International Conference on Information and Communication Technology (ICoICT)},
  Year                     = {2014},
  Month                    = {May},
  Pages                    = {205-210},

  Doi                      = {10.1109/ICoICT.2014.6914066},
  Keywords                 = {software prototyping;Malaysia;agile methods;agile usage;chi-square test;education location;language;nonparametric analysis;organization types;Communications technology;Companies;Conferences;Education;Government;Software;Agile methods;adoption;agile usage;aspects;language;sector},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@Article{6862882,
  Title                    = {Test Code Quality and Its Relation to Issue Handling Performance},
  Author                   = {D. Athanasiou and A. Nugroho and J. Visser and A. Zaidman},
  Journal                  = {IEEE Transactions on Software Engineering},
  Year                     = {2014},

  Month                    = {Nov},
  Number                   = {11},
  Pages                    = {1100-1125},
  Volume                   = {40},

  Abstract                 = {Automated testing is a basic principle of agile development. Its benefits include early defect detection, defect causelocalization and removal of fear to apply changes to the code. Therefore, maintaining high quality test code is essential. This study introduces a model that assesses test code quality by combining source code metrics that reflect three main aspects of test codequality: completeness, effectiveness and maintainability. The model is inspired by the Software Quality Model of the SoftwareImprovement Group which aggregates source code metrics into quality ratings based on benchmarking. To validate the model we assess the relation between test code quality, as measured by the model, and issue handling performance. An experiment isconducted in which the test code quality model is applied to $18$ open source systems. The test quality ratings are tested for correlation with issue handling indicators, which are obtained by mining issue repositories. In particular, we study the (1) defect resolution speed, (2) throughput and (3) productivity issue handling metrics. The results reveal a significant positive correlation between test code quality and two out of the three issue handling metrics (throughput and productivity), indicating that good test code quality positively influences issue handling performance.},
  Doi                      = {10.1109/TSE.2014.2342227},
  ISSN                     = {0098-5589},
  Keywords                 = {Benchmark testing;Correlation;Measurement;Productivity;Software;Throughput;Testing;bugs;defects;measurement;metrics},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7918933,
  Title                    = {A model for applying Agile practices in Distributed environment: A case of local software industry},
  Author                   = {K. B. Awar and M. S. I. Sameem and Y. Hafeez},
  Booktitle                = {2017 International Conference on Communication, Computing and Digital Systems (C-CODE)},
  Year                     = {2017},
  Month                    = {March},
  Pages                    = {228-232},

  Abstract                 = {Distributed teams faced a lot of obstacles faced while applying Agile practices in distributed environment, these obstacles were poorly understood by local software industry. In market, Agile and distributed software development became a need more than a trend. It seems to be problematic when Agile and distributed software development merge. There is need to identify those Agile practices adoptable for distributed teams and can also help local software industry to produce a quality software. This study contributes an empirical based investigation of the critical factors affect in Agile distributed. Study inductively formulated a theoretical model of how specific agile alignment practices affect in mitigating distributed Agile software development process. The model presented in this paper presented state-of-the-art of critical factors affect in Distributed Agile environment given in literature. For further proof of concept a case study was conducted to test the applicability of proposed model in local environment. Results indicate basis for further research in local industry Proposed model makes applicability of agile practices in distributed environment by tailoring Scrum and XP methods.},
  Doi                      = {10.1109/C-CODE.2017.7918933},
  Keywords                 = {DP industry;distributed processing;software houses;software prototyping;software quality;Scrum methods;XP methods;distributed Agile software development process;distributed environment;distributed teams;local software industry;software quality;specific Agile alignment practices;Agile software development;Face;Industries;Organizations;Software;Software engineering;Systematics;Agile Practices;Distributed Software Development Environment;Local Software Industry;Method Tailoring;Pakistan Software Industry;Scrum;XP},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6693225,
  Title                    = {AM-QuICk: A Measurement-Based Framework for Agile Methods Customisation},
  Author                   = {H. Ayed and N. Habra and B. Vanderose},
  Booktitle                = {2013 Joint Conference of the 23rd International Workshop on Software Measurement and the 8th International Conference on Software Process and Product Measurement},
  Year                     = {2013},
  Month                    = {Oct},
  Pages                    = {71-80},

  Abstract                 = {Software development practitioners are increasingly interested in adopting agile methods and generally recommend customisation so that the adopted method can fit the organisational reality. Many studies from the literature report agile adoption and customisation experiences but most of them are hardly generalisable and few are metric-based. They therefore cannot provide quantitative evidence of the suitability of the customised agile method, neither assess the organisation readability to adopt it, nor help in decision-making concerning the organisation transformation strategy. In this paper, we first describe the Agile Methods Quality-Integrated Customisation framework (AM-QuICk) that relies on measurements and aims to continuously assist agile methodologists throughout the agile adoption and customisation process, i.e., during the initial organisation adoption, the method design and throughout the working development process. Then, we present a case study using AM-QuICk within an organisation. With this study, we aim to analyse the current development process and its level of agility and identify the initial risk factors. The data were collected using preliminary interviews with the different team members and two questionnaires. The results reveal that though most respondents are enthusiastic towards agile principles, a progressive transformation strategy would be beneficial.},
  Doi                      = {10.1109/IWSM-Mensura.2013.21},
  Keywords                 = {risk management;software development management;software metrics;software process improvement;software prototyping;software quality;AM-QuICk;agile adoption;agile methods customisation;agile methods quality-integrated customisation framework;agile principles;customisation experiences;measurement-based framework;organisation adoption;organisation readability;organisation transformation strategy;organisational reality;quality assessment modelling;risk factors;software development practitioners;software process improvement;Adaptation models;Context;Object oriented modeling;Quality assessment;Software;Software measurement;Agile Process Assessment;Agile Software Development;Quality Assessment Modelling;Situational Method Engineering (SME);Software Process Improvement (SPI)},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7299894,
  Title                    = {A Novel Security-Enhanced Agile Software Development Process Applied in an Industrial Setting},
  Author                   = {D. Baca and M. Boldt and B. Carlsson and A. Jacobsson},
  Booktitle                = {2015 10th International Conference on Availability, Reliability and Security},
  Year                     = {2015},
  Month                    = {Aug},
  Pages                    = {11-19},

  Doi                      = {10.1109/ARES.2015.45},
  Keywords                 = {financial data processing;mobile computing;risk analysis;security of data;software engineering;Ericsson Corp;SEAP;baseline development process;industrial setting;integrated risk analysis process;mobile money transfer system;security-enhanced agile software development process;software version;Agile software development;Guidelines;Mobile communication;Risk analysis;Security;Software;Testing;Security;agile method;industrial setting;risk analysis;software development},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7272550,
  Title                    = {An Approach to Clustering and Sequencing of Textual Requirements},
  Author                   = {R. Barbosa and D. Januario and A. E. Silva and R. Moraes and P. Martins},
  Booktitle                = {2015 IEEE International Conference on Dependable Systems and Networks Workshops},
  Year                     = {2015},
  Month                    = {June},
  Pages                    = {39-44},

  Abstract                 = {Natural language is often used to write software systems requirements. However, it may be prone to misunderstandings due to its ambiguities. Moreover, it is not easy to modularize these requirements and then find all related ones. In order to find out the impact of requirements in one another, it is necessary to look at every requirement rather than just a group of related requirements. When presented in large numbers, the understanding, organization and sequencing of requirements requires substantial time and effort. In this work, we introduce an approach based both on the clustering of textual requirements and on a data dictionary to organize them, as well as suggest a sequence for their implementation. A case study based on User Stories from Agile processes is introduced to illustrate the approach.},
  Doi                      = {10.1109/DSN-W.2015.20},
  ISSN                     = {2325-6648},
  Keywords                 = {dictionaries;pattern clustering;text analysis;agile processes;data dictionary;textual requirements clustering;textual requirements sequencing;Clustering algorithms;Context;Dictionaries;Natural languages;Partitioning algorithms;Sequential analysis;Software;Agile Processes;Clustering;Sequencing;Textual Requirements;User Stories},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7890586,
  Title                    = {An Algorithmic-Based Change Effort Estimation Model for Software Development},
  Author                   = {S. Basri and N. Kama and H. M. Sarkan and S. Adli and F. Haneem},
  Booktitle                = {2016 23rd Asia-Pacific Software Engineering Conference (APSEC)},
  Year                     = {2016},
  Month                    = {Dec},
  Pages                    = {177-184},

  Abstract                 = {Software development mostly adopts two kinds of methodologies; Traditional and Agile. In both methodologies, software changes are inevitable due to the dynamic nature of the software development project itself. One of the factors that influences the effectiveness of the change acceptance decision is the accuracy of the change effort estimation. There are two current models that have been widely used to estimate change effort which are algorithmic and non-algorithmic models. The algorithmic model is known for its formal and structural way of estimation and best suited for Traditional methodology. While non-algorithmic model is widely adopted for Agile methodology of software projects due to its easiness and requires less work in term of effort predictability. Nevertheless, none of the existing change effort estimation models are proven to suit both, Traditional and Agile methodology. Thus, this paper proposes an algorithmic-based change effort estimation model that uses change impact analysis method which is applicable for both Traditional and Agile methodologies. The proposed model uses a current selected change impact analysis method for software development phase which is the SDP-CIAF (Software Development Phase-Change Impact Analysis Framework). The proposed model is evaluated through an extensive experimental validation using case scenarios of six real Traditional and Agile methodologies software projects. The evaluation results confirmed the applicability for both Traditional and Agile methodologies.},
  Doi                      = {10.1109/APSEC.2016.034},
  ISSN                     = {1530-1362},
  Keywords                 = {software prototyping;SDP-CIAF;agile software development;algorithmic-based change effort estimation model;change acceptance decision;software changes;software development phase-change impact analysis framework;Algorithm design and analysis;Analytical models;Estimation;Mathematical model;Prediction algorithms;Software;Software algorithms;Algorithmic change effort estimation;change management;effort estimation},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7224489,
  Title                    = {Virtual Teams and Employability in Global Software Engineering Education},
  Author                   = {J. M. Bass and R. McDermott and J. T. Lalchandani},
  Booktitle                = {2015 IEEE 10th International Conference on Global Software Engineering},
  Year                     = {2015},
  Month                    = {July},
  Pages                    = {115-124},

  Abstract                 = {Universities face many challenges when creating opportunities for student experiences of global software engineering. We provide a model for introducing global software engineering into the computing curriculum. Our model is based on a three year collaboration between Robert Gordon University, UK and the International Institute for IT Bangalore, India. We provide evidence based on student feedback from three cohorts of virtual team who never met face to face. We found potential employers were supportive of global software engineering in university curricula. We identify four key principles for global software engineering student projects: reconcile contrasting assessment demands between institutions, create a detailed joint timetable to reconcile teaching calendars, provide a project management framework to support phased delivery and carefully manage project scope.},
  Doi                      = {10.1109/ICGSE.2015.21},
  ISSN                     = {2329-6305},
  Keywords                 = {computer aided instruction;computer science education;educational institutions;software engineering;IT Bangalore;India;International Institute;Robert Gordon University;UK;computing curriculum;global software engineering education;student feedback;virtual teams;Agile software development;Education;Face;Software;Software engineering;Virtual groups;Global Software Engineering Education;Student Projects;Virtual Teams},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7498453,
  Title                    = {Waste elimination of agile methodologies in web engineering},
  Author                   = {N. Behroozi and A. Kamandi},
  Booktitle                = {2016 Second International Conference on Web Research (ICWR)},
  Year                     = {2016},
  Month                    = {April},
  Pages                    = {102-107},

  Abstract                 = {Agile and lean methodologies have been used for software development since the 1990s, and inspired web development, web applications and web engineering. Waste elimination is a concern because of the growth of software and web development and the budget is spent on this industry. This paper first reviews agile methodologies for web, then makes a comparison between the common methods used in web by AHP process in Expert Choice with waste approach based on a questionnaire to show the leaner methodology. Then introduces the solutions, patterns, techniques which methodologies use to affect and eliminate waste.},
  Doi                      = {10.1109/ICWR.2016.7498453},
  Keywords                 = {Internet;software development management;software prototyping;AHP process;Expert Choice;Web development;Web engineering;agile methodologies waste elimination;software development;Creativity;Delays;Process control;Production;Programming;Software;Unified modeling language;Agile;Lean;waste;web development;web engineering},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7932673,
  Title                    = {How the Scrum Adoption Relates to Productivity of Software Development Teams?},
  Author                   = {M. Bellenzier and J. H. N. Audy and R. Prikladnicki and E. M. Luciano},
  Booktitle                = {2015 6th Brazilian Workshop on Agile Methods (WBMA)},
  Year                     = {2015},
  Month                    = {Oct},
  Pages                    = {1-5},

  Abstract                 = {Implementation projects of new technologies should understand the immediate impact that this change causes on professionals involved in relation to the work process.In the first months of technological change is possible to identify a certain resistance and even some conflicts affecting the satisfaction and productivitys levels in teams.In this sense, the aim of this paper is to present a conceptual model of how the Scrum adoption relates to productivity of software development teams.},
  Doi                      = {10.1109/WBMA.2015.18},
  Keywords                 = {human factors;software engineering;Scrum adoption;new-technology implementation projects;software development team productivity;Adaptation models;Conferences;Context modeling;Productivity;Resistance;Scrum (Software development);Software;Agile Methods;Control;Controle;Demandas;Demands;Métodos Ágeis;Productivity;Produtividade},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6614717,
  Title                    = {Elaboration on an integrated architecture and requirement practice: Prototyping with quality attribute focus},
  Author                   = {S. Bellomo and R. L. Nord and I. Ozkaya},
  Booktitle                = {2013 2nd International Workshop on the Twin Peaks of Requirements and Architecture (TwinPeaks)},
  Year                     = {2013},
  Month                    = {May},
  Pages                    = {8-13},

  Doi                      = {10.1109/TwinPeaks.2013.6614717},
  Keywords                 = {project management;software architecture;software development management;software prototyping;software quality;Scrum projects;agile practices;architecture practices;feature development;flexible architecture;integrated architecture;iterative incremental lifecycles;portfolio planning;project teams;prototype feedback;prototyping guidelines;prototyping practice spans;prototyping with quality attribute focus;rapid trade-off analysis;release planning;requirement practice;Computer architecture;Delays;Guidelines;Interviews;Planning;Prototypes;Software;agile software development;architecture;architecture trade-off;prototyping;quality attribute;release planning;requirements;software development practices},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6627810,
  Title                    = {HL7 FHIR: An Agile and RESTful approach to healthcare information exchange},
  Author                   = {D. Bender and K. Sartipi},
  Booktitle                = {Proceedings of the 26th IEEE International Symposium on Computer-Based Medical Systems},
  Year                     = {2013},
  Month                    = {June},
  Pages                    = {326-331},

  Doi                      = {10.1109/CBMS.2013.6627810},
  ISSN                     = {1063-7125},
  Keywords                 = {biomedical communication;health care;medical information systems;open systems;Agile approach;HL7 FHIR;HL7 messaging standards;HL7 version 2 health information exchange standards;HL7 version 3;RESTful approach;electronic medical record information;health level 7 standard fast healthcare interoperability resources;healthcare industry;healthcare information exchange;healthcare system interoperability;local hospital communities;real world systems;Hospitals;Interoperability;Object oriented modeling;Software;Standards organizations;Agile;FHIR;HL7 v3;Healthcare;Informatics;Interoperability;RESTful;Standards;eHealth},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7883385,
  Title                    = {Applying Scrum to the Army - A Case Study},
  Author                   = {L. Benedicenti and F. Cotugno and P. Cianfrini and A. Messina and W. Pedrycz and A. Sillitti and G. Succi},
  Booktitle                = {2016 IEEE/ACM 38th International Conference on Software Engineering Companion (ICSE-C)},
  Year                     = {2016},
  Month                    = {May},
  Pages                    = {725-727},

  Keywords                 = {military computing;safety-critical software;software prototyping;DoD standards;Italian army;Italy;United States;agile methods;certified scrum product owners;cowboy coders;embedded domains;hackers;military-civilian development teams;plan-based approach;production process;safety critical domains;scrum application;software system development;Productivity;Programming;Scrum (Software development);Software;Software engineering;Standards;Agile Processes;Defence Software;Empirical Software Engineering;Non-invasive Measurement Systems;Scrum},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6480426,
  Title                    = {Introduction to Agile/Lean Startup Organizations Minitrack},
  Author                   = {G. Benefield and D. Greening},
  Booktitle                = {2013 46th Hawaii International Conference on System Sciences},
  Year                     = {2013},
  Month                    = {Jan},
  Pages                    = {4834-4834},

  Doi                      = {10.1109/HICSS.2013.333},
  ISSN                     = {1530-1605},
  Keywords                 = {Contracts;Green products;Measurement;Organizations;Product development;Software;Testing;Agile Lean Startup},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7805726,
  Title                    = {Intricacies of implementing an ITU-T X.1303 cross-agency situational-awareness platform in Maldives, Myanmar, and the Philippines},
  Author                   = {B. Bhandari and A. B. Marthafifsa and M. K. Hazarika and F. Boon and L. Frommberger and N. Waidyanatha},
  Booktitle                = {2016 ITU Kaleidoscope: ICTs for a Sustainable World (ITU WT)},
  Year                     = {2016},
  Month                    = {Nov},
  Pages                    = {1-8},

  Abstract                 = {Maldives, Myanmar, and the Philippines are vulnerable to natural disasters [1]. Sendai Framework1 of Action calls for risk reduction by implementing early warning systems [2]. A prevailing challenge is for authorities to coordinate warnings across disparate communication systems and autonomous organizations [3]. Cross-Agency Situational-Awareness platforms and the ITU-T X.1303 Common Alerting Protocol (CAP)2 interoperable data standards presents themselves as solution for diluting the inter-agency rivalries and interconnection disparities [4]. The Sahana Alerting and Messaging Broker (SAMBRO) was designed to overcome these issues by providing a Common Operating Picture and a platform for all Stakeholders to share early warnings. To that end, the CAP-on-a-MAP project is implementing SAMBRO and the CAP standard along with the policies and procedures in the Maldives, Myanmar and Philippines. The project is applying an agile development methodology with a design, build, test, and redesign strategy for implementing the cross-agency situational-awareness and warning system in the respective countries. This paper discusses the country context implementation challenges and discusses strategies fostered through the introduction of the CAP content standard for warning system designers to consider for overcoming similar challenges.},
  Doi                      = {10.1109/ITU-WT.2016.7805726},
  Keywords                 = {alarm systems;emergency management;risk management;CAP content standard;CAP-on-a-MAP project;Common Operating Picture;ITU-T X.1303 Common Alerting Protocol;ITU-T X.1303 cross-agency situational-awareness platform;Maldives;Myanmar;Philippines;SAMBRO;Sahana Alerting and Messaging Broker;Sendai Framework of Action;agile development methodology;early warning systems;natural disasters;risk reduction;Alarm systems;Communication systems;Decision support systems;ITU;Risk management;common alerting protocol;early warning;electronic services;interoperability;situational awareness},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7556814,
  Title                    = {A Review of Software Cost Estimation in Agile Software Development Using Soft Computing Techniques},
  Author                   = {S. Bilgaiyan and S. Mishra and M. Das},
  Booktitle                = {2016 2nd International Conference on Computational Intelligence and Networks (CINE)},
  Year                     = {2016},
  Month                    = {Jan},
  Pages                    = {112-117},

  Abstract                 = {For a successful software project, accurate prediction of its overall effort and cost estimation is a very much essential task. Software projects have evolved through a number of development models over the last few decades. Hence, to cover an accurate measurement of the effort and cost for different software projects based on different development models having new and innovative phases of software development, is a crucial task to be done. An accurate prediction always leads to a successful software project within the budget with no delay, but any percentage of misconduct in the overall effort and cost estimate may lead to a project failure in terms of delivery time, budget or features. Software industries have adopted various development models based on the project requirements and organization's capabilities. Due to adaptability to changes in a software project, agile software development model has become a much successful and popular framework for development over the last decade. The customer is involved as an active participant in the development using an agile framework. Hence, changes can occur at any phase of development and they can be dynamic in nature. That is why an accurate prediction of effort and cost of such projects is a crucial task to be done as the complexity of overall development structure is increased with the time. Soft computing techniques have proven that they are one of the best problem solving techniques in such scenarios. Such techniques are more flexible and presence of bio-intelligence increases their accuracy. Genetic Algorithm (GA), Particle Swarm Optimization (PSO), Artificial Neural Network (ANN), Fuzzy Inference Systems (FIS), etc. are applied successfully for estimation of cost and effort of agile based software projects. This paper deals with such soft computing techniques and provides a detailed and analytical overview of such methods. It also provides the future scope and possibilities to explore such techniques on the bas- s of survey provided by this paper.},
  Doi                      = {10.1109/CINE.2016.27},
  ISSN                     = {2375-5822},
  Keywords                 = {fuzzy logic;neural nets;project management;software cost estimation;software development management;software prototyping;uncertainty handling;agile software development model;soft computing techniques;software cost estimation;software project;Agile software development;Artificial neural networks;Computational modeling;Estimation;Predictive models;Software;Agile software development;cost estimation;effort estimation;neural network;soft computing;software project management (SPM)},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6479981,
  Title                    = {A Conceptual Model for Network Decision Support Systems},
  Author                   = {A. Bordetsky and D. Dolk},
  Booktitle                = {2013 46th Hawaii International Conference on System Sciences},
  Year                     = {2013},
  Month                    = {Jan},
  Pages                    = {1212-1221},

  Abstract                 = {We introduce the concept of a network DSS (NWDSS) consisting of fluid, heterogeneous nodes of human and machine agents, connected by wireless technology, which may enter and leave the network at unpredictable times, yet must also cooperate in decision-making activities. We describe distinguishing properties of the NWDSS and propose a 3-tier conceptual model comprised of digital infrastructure, transactive memory systems and emergent collaborative decision-making. We suggest a decision loop of Sense-Analyze-Adapt-Memory leveraging TMS as a starting point for addressing the agile collaborative requirements of emergent decision-making. Several examples of innovative NWDSS services are presented from Naval Postgraduate School field experiments.},
  Doi                      = {10.1109/HICSS.2013.32},
  ISSN                     = {1530-1605},
  Keywords                 = {computer networks;decision support systems;formal specification;groupware;software prototyping;3-tier conceptual model;agile collaborative requirements;collaborative decision-making;decision-making activities;digital infrastructure;innovative NWDSS services;naval postgraduate school field experiments;network decision support systems;sense-analyze-adapt-memory leveraging;transactive memory systems;wireless technology;Collaboration;Computational modeling;Decision making;Decision support systems;Knowledge engineering;Mobile communication;Sensors},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7579489,
  Title                    = {Condensing Architectural Knowledge from Unstructured Textual Media in Agile GSD Teams},
  Author                   = {G. Borrego},
  Booktitle                = {2016 IEEE 11th International Conference on Global Software Engineering Workshops (ICGSEW)},
  Year                     = {2016},
  Month                    = {Aug},
  Pages                    = {69-72},

  Abstract                 = {Agile Global Software Development (AGSD) is a reality, since nowadays software products are required to get into the market with more speed than before. This situation has pushed Global Software Development (GSD) companies to adopt lighter ways to develop software (Agile Software Development - ASD) to satisfy market demands. However, AGSD companies have encountered increased technical debt and architectural knowledge (AK) vaporization, mainly because the inherent differences between ASD and GSD, especially in documentation handling. This paper describes a research project in which it is proposed to exploit the AK that is recorded in unstructured textual electronic media (UTEM) generally used in AGSD, in order to decrease the problems of software evolution and maintenance, caused by a lack of adequate AK. Until now, the preliminary results of this research show that this approach could be feasible in AGSD environments.},
  Doi                      = {10.1109/ICGSEW.2016.16},
  Keywords                 = {software maintenance;software prototyping;AGSD companies;AGSD environments;AK;ASD;UTEM;agile GSD teams;agile global software development;architectural knowledge;market demands;software evolution;software maintenance;software products;unstructured textual electronic media;Collaboration;Companies;Documentation;Electronic mail;Maintenance engineering;Media;Software;agile global software development;architectural knowledge;architectural knowledge condensation;architectural knowledge vaporization;technical debt;unstructured textual media},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7016614,
  Title                    = {The projection of the specific practices of the third level of CMMI model in agile methods: Scrum, XP and Kanban},
  Author                   = {Z. Bougroun and A. Zeaaraoui and T. Bouchentouf},
  Booktitle                = {2014 Third IEEE International Colloquium in Information Science and Technology (CIST)},
  Year                     = {2014},
  Month                    = {Oct},
  Pages                    = {174-179},

  Doi                      = {10.1109/CIST.2014.7016614},
  ISSN                     = {2327-185X},
  Keywords                 = {Capability Maturity Model;software prototyping;software quality;CMMI model;Capability Maturity Model Integration;Kanban;Scrum;XP;agile methods;customer satisfaction;software development;software quality;Decision support systems;Educational institutions;Planning;Project management;Risk management;Training;CMMI;Kanban;Scrum;XP;agile methods},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@Book{7899157,
  Title                    = {Model-Driven Software Engineering in Practice:Second Edition},
  Author                   = {Marco Brambilla and Jordi Cabot and Manuel Wimmer and Luciano Baresi},
  Publisher                = {Morgan \& Claypool},
  Year                     = {2017},

  Booktitle                = {Model-Driven Software Engineering in Practice:Second Edition},
  Doi                      = {10.2200/S00751ED2V01Y201701SWE004},
  ISBN                     = {9781627059886},
  Owner                    = {ville},
  Pages                    = {207-},
  Timestamp                = {2017.06.27},
  Url                      = {http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=7899157}
}

@InProceedings{6606636,
  Title                    = {Agility at scale: Economic governance, measured improvement, and disciplined delivery},
  Author                   = {A. W. Brown and S. Ambler and W. Royce},
  Booktitle                = {2013 35th International Conference on Software Engineering (ICSE)},
  Year                     = {2013},
  Month                    = {May},
  Pages                    = {873-881},

  Doi                      = {10.1109/ICSE.2013.6606636},
  ISSN                     = {0270-5257},
  Keywords                 = {DP industry;software prototyping;team working;agile methods;agility;disciplined agile delivery;economic governance;honest incremental improvement measurement;large-scale software delivery enterprises;team empowerment;Complexity theory;Context;Economics;Organizations;Software;Uncertainty;Software process improvement;accelerating software delivery;agile development;disciplined agile delivery;economic governance;integration first;measured improvement;steering leadership},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6912638,
  Title                    = {CloudWave: Where adaptive cloud management meets DevOps},
  Author                   = {D. Bruneo and T. Fritz and S. Keidar-Barner and P. Leitner and F. Longo and C. Marquezan and A. Metzger and K. Pohl and A. Puliafito and D. Raz and A. Roth and E. Salant and I. Segall and M. Villari and Y. Wolfsthal and C. Woods},
  Booktitle                = {2014 IEEE Symposium on Computers and Communications (ISCC)},
  Year                     = {2014},
  Month                    = {June},
  Pages                    = {1-6},
  Volume                   = {Workshops},

  Abstract                 = {The transition to cloud computing offers a large number of benefits, such as lower capital costs and a highly agile environment. Yet, the development of software engineering practices has not kept pace with this change. Moreover, the design and runtime behavior of cloud based services and the underlying cloud infrastructure are largely decoupled from one another.This paper describes the innovative concepts being developed by CloudWave to utilize the principles of DevOps to create an execution analytics cloud infrastructure where, through the use of programmable monitoring and online data abstraction, much more relevant information for the optimization of the ecosystem is obtained. Required optimizations are subsequently negotiated between the applications and the cloud infrastructure to obtain coordinated adaption of the ecosystem. Additionally, the project is developing the technology for a Feedback Driven Development Standard Development Kit which will utilize the data gathered through execution analytics to supply developers with a powerful mechanism to shorten application development cycles.},
  Doi                      = {10.1109/ISCC.2014.6912638},
  ISSN                     = {1530-1346},
  Keywords                 = {cloud computing;data structures;feedback;software prototyping;CloudWave;DevOps;adaptive cloud management;agile environment;application development cycle;cloud based services;cloud computing;coordinated adaption;ecosystem;execution analytics cloud infrastructure;feedback driven development standard development kit;online data abstraction;programmable monitoring;runtime behavior;software engineering practice;Cloud computing;Monitoring;Real-time systems;Software reliability;Technological innovation;Cloud Computing;Coordinated Adaptation;DevOps;Feedback Driven Development},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6693222,
  Title                    = {Improving the User Story Agile Technique Using the INVEST Criteria},
  Author                   = {L. Buglione and A. Abran},
  Booktitle                = {2013 Joint Conference of the 23rd International Workshop on Software Measurement and the 8th International Conference on Software Process and Product Measurement},
  Year                     = {2013},
  Month                    = {Oct},
  Pages                    = {49-53},

  Abstract                 = {Although the Agile Software Development (ADS) approach has been around for the last 15 years, it is only recently that attention has moved towards Agile Software Management (ASM) for tackling some of the management-related weaknesses, such as estimating on the basis of User Story points. This paper presents an application of the INVEST criteria (Independent - Negotiable - Valuable - Estimable - Small -Testable) for improving the measurement technique of User Stories, introducing sizing units and a technique to negotiate requirements. It includes a discussion on an approach to balancing the six criteria used to evaluate a set of User Stories in a Sprint.},
  Doi                      = {10.1109/IWSM-Mensura.2013.18},
  Keywords                 = {commerce;software prototyping;ADS;ASM;INVEST criteria;Sprint;agile software development;agile software management;independent negotiable valuable estimable small testable;user story agile technique;Context;Estimation;ISO standards;Information technology;Size measurement;Software;Software measurement;Agile;Estimation;INVEST;Requirements;Story Points;User Story},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6601582,
  Title                    = {The Maturation of Agile Software Development Principles and Practice: Observations on Successive Industrial Studies in 2010 and 2012},
  Author                   = {D. Bustard and G. Wilkie and D. Greer},
  Booktitle                = {2013 20th IEEE International Conference and Workshops on Engineering of Computer Based Systems (ECBS)},
  Year                     = {2013},
  Month                    = {April},
  Pages                    = {139-146},

  Doi                      = {10.1109/ECBS.2013.11},
  Keywords                 = {software prototyping;Northern Ireland;agile software development;successive industrial studies;Companies;Contracts;Educational institutions;Software;Standards organizations;Scrum;agile software development;industry survey},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6868450,
  Title                    = {Handling tradeoffs between agile and usability methods},
  Author                   = {S. M. Butt and W. F. W. Ahmad and L. Rahim},
  Booktitle                = {2014 International Conference on Computer and Information Sciences (ICCOINS)},
  Year                     = {2014},
  Month                    = {June},
  Pages                    = {1-6},

  Abstract                 = {In the past few years, many organizations have tried to improve their software development methodology. Different development approaches had been introduced but only a few are still functioning in the software industry. Agile software development is one approach, which is currently successful in software industry. For the development of interactive and usable software, this agile approach needs to integrate with usability approaches. But this integration is not clear as both agile and usability follows iterative approach of development while agile approach is more toward on writing code and development of a running system; whereas, usability focused on the user interface to make the software more usable and increase its usability by following UCD process. This paper provides an extensive related work on the integration of agile methods with usability that highlights critical issues in agile methods and shows the importance of usability in agile methods. In the end, the proposed model is discussed to handle tradeoff between usability and agile methods under one model.},
  Doi                      = {10.1109/ICCOINS.2014.6868450},
  Keywords                 = {iterative methods;software prototyping;UCD process;agile software development;iterative approach;software development methodology;software industry;software usability;Agile software development;Computers;Conferences;Testing;Usability;User interfaces;agile development;software engineering;usability;user interface design},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6918980,
  Title                    = {Evolve carrier ethernet architecture with SDN and segment routing},
  Author                   = {D. Cai and A. Wielosz and S. Wei},
  Booktitle                = {Proceeding of IEEE International Symposium on a World of Wireless, Mobile and Multimedia Networks 2014},
  Year                     = {2014},
  Month                    = {June},
  Pages                    = {1-6},

  Abstract                 = {Ethernet technology has been evolving to become the main Wide Area Network transport technology. To address the rising CAPEX and OPEX issues, service providers are deploying Unified MPLS technology to consolidate various networks into one an integrated carrier ethernet network. Although Unified MPLS has simplified MPLS deployment in many aspects, it is still deemed complex and it is not as agile as what clouding computing demands. This paper proposes a further evolution of carrier ethernet architecture by coupling the emerging segment routing and Software-Defined Network (SDN) technologies. This new architecture will significantly simplify the network infrastructure while providing rich converged services with embedded high availability and agility.},
  Doi                      = {10.1109/WoWMoM.2014.6918980},
  Keywords                 = {cloud computing;computer network management;local area networks;multiprotocol label switching;telecommunication network routing;wide area networks;CAPEX;OPEX;SDN;capital expenditure;clouding computing;evolve carrier Ethernet architecture;integrated carrier Ethernet network;multiprotocol label switching;operating expenditure;segment routing;service provider;software-defined network technology;unified MPLS technology;wide area network transport technology;Bandwidth;Complexity theory;Ethernet networks;IP networks;Multiprotocol label switching;Routing;Carrier Ethernet;E-VPN;G.8032;IP Fast ReRoute;L2VPN;MPLS;PBB-EVPN;RFC 3107;SDN;Segment Routing;Spanning-tree;Unified MPLS;VPLS},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6654401,
  Title                    = {Examining student progress in portfolio assessed introductory programming},
  Author                   = {A. Cain and C. J. Woodward and S. Pace},
  Booktitle                = {Proceedings of 2013 IEEE International Conference on Teaching, Assessment and Learning for Engineering (TALE)},
  Year                     = {2013},
  Month                    = {Aug},
  Pages                    = {67-72},

  Abstract                 = {Constructive alignment has gained wide acceptance as a pedagogical approach that promotes deep learning, and portfolio assessment offers a natural means of achieving this. This work examines student's progress in an introductory programming unit that used portfolio assessment to implement constructive alignment. Charts visually showing student progress provided material for a thematic analysis. This paper categorizes these charts into several classes, and discusses insight this gives into the teaching and learning approach used. These results can be used to inform the development of constructively aligned units using this approach.},
  Doi                      = {10.1109/TALE.2013.6654401},
  Keywords                 = {computer aided instruction;computer science education;programming;constructive alignment;deep learning;introductory programming;pedagogical approach;portfolio assessment;student progress assessment;teaching approach;thematic analysis;Conferences;Context;Education;Portfolios;Programming profession;Syntactics;agile software development;constructive alignment;introductory programming;portfolio assessment},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7784622,
  Title                    = {Agile Team Members Perceptions on Non-functional Testing: Influencing Factors from an Empirical Study},
  Author                   = {C. R. Camacho and S. Marczak and D. S. Cruzes},
  Booktitle                = {2016 11th International Conference on Availability, Reliability and Security (ARES)},
  Year                     = {2016},
  Month                    = {Aug},
  Pages                    = {582-589},

  Abstract                 = {Non-functional requirements define the overall qualities or attributes of a system. Although important, they are often neglected for many reasons, such as pressure of time and budget. In agile software development, there is a focus on the feature implementation and delivery of value to the customer and, as such, non-functional aspects of a system should also be of attention. Non-functional requirements testing is challenging due its cross-functional aspects and lack of clarity of their needs by business in the most part of projects. The goal of this paper is to empirically investigate how do agile team members handle non-functional testing in their projects, aiming to identify preliminary factors influencing the testing of non-functional requirements, specifically performance and security in agile development. We conducted interviews with twenty IT professionals in large multinational company. As result we could identify seven main factors influencing non-functional testing and four main practices adopted by them to overcome the challenges faced. We aim to replicate our investigation in a larger scale. Meanwhile, our work provides initial contributions to practitioners and inspires our future research.},
  Doi                      = {10.1109/ARES.2016.98},
  Keywords                 = {formal specification;personnel;program testing;project management;software development management;software prototyping;team working;IT professionals;agile software development;agile team members perceptions;nonfunctional requirements testing;performance requirements;security requirements;Business;Context;Interviews;Security;Software;Testing;Time factors;agile development;empirical study;factors;non-functional testing},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@Article{6581776,
  Title                    = {Economic Governance of Software Delivery},
  Author                   = {M. Cantor and W. Royce},
  Journal                  = {IEEE Software},
  Year                     = {2014},

  Month                    = {Jan},
  Number                   = {1},
  Pages                    = {54-61},
  Volume                   = {31},

  Abstract                 = {Agility without objective governance cannot scale, and governance without agility cannot compete. Agile methods are mainstream, and software enterprises are adopting these practices in diverse delivery contexts and at enterprise scale. IBM's broad industry experience with agile transformations and deep internal know-how point to two key principles to deliver sustained improvements in software business outcomes with higher confidence: measure and streamline change costs, and steer with economic governance and Bayesian analytics. Applying these two principles in context is the crux of measured improvement in continuous delivery of smarter software-intensive systems. This article describes more meaningful measurement and prediction foundations for economic governance. The Web extra at http://youtu.be/ghAM8ifyeVI is a video in which Walker Royce, author, IEEE Software editorial board member, and IBM Chief Software Economist, describes how to reason about software delivery governance with lean principles.},
  Doi                      = {10.1109/MS.2013.102},
  ISSN                     = {0740-7459},
  Keywords                 = {DP industry;software prototyping;software quality;Bayesian analytics;IBM broad industry;agile methods;economic governance;smarter software-intensive systems;software business;software delivery governance;software enterprises;Bayes methods;Cognition;Economics;Measurement uncertainty;Software quality;Uncertainty;Bayesian analytics;economic governance;measuring agility;steering leadership},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6800189,
  Title                    = {The Impact of Scrum on Customer Satisfaction: An Empirical Study},
  Author                   = {B. Cartaxo and A. Araújo and A. S. Barreto and S. Soares},
  Booktitle                = {2013 27th Brazilian Symposium on Software Engineering},
  Year                     = {2013},
  Month                    = {Oct},
  Pages                    = {129-136},

  Doi                      = {10.1109/SBES.2013.10},
  Keywords                 = {DP industry;customer satisfaction;software development management;customer satisfaction;scrum adoption;software development projects;software ecosystem;software intensive organization;Customer satisfaction;Data analysis;Dispersion;Organizations;Project management;Software;Technological innovation},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7785748,
  Title                    = {BHive: Towards Behaviour-Driven Development Supported by B-Method},
  Author                   = {J. Carter and W. B. Gardner},
  Booktitle                = {2016 IEEE 17th International Conference on Information Reuse and Integration (IRI)},
  Year                     = {2016},
  Month                    = {July},
  Pages                    = {249-256},

  Abstract                 = {Behaviour-Driven Development (BDD) is an "outside-in" approach to software development built upon semi-formal mediums for specifying the behaviour of a system as it would be observed externally. Through the representation of a system as a collection of user stories and scenarios using BDD's notation, practitioners automate acceptance tests using examples of desired behaviour for the envisioned system. A formal model created in concert with BDD tests would provide valuable insight into test validity and enhance the visibility of the problem domain. This work called BHive builds upon the formal underpinnings of BDD scenarios by mapping their "Given," "When," and "Then" statements to "Precondition," "Command," and "Postcondition" constructs as introduced by Floyd-Hoare logic. We posit that this mapping allows for a B-Method representation to be created and that such a model is useful for exploring system behaviour and exposing gaps in requirements. We also outline extensions to BDD tooling required for the described integration and present benefits of the BHive approach to integrating formalism within a BDD project.},
  Doi                      = {10.1109/IRI.2016.39},
  Keywords                 = {formal logic;software engineering;B-method representation;BDD;BHive approach;Floyd-Hoare logic;behaviour-driven development;software development;Conferences;Documentation;Shape;Software;Stakeholders;Testing;Agile;B-Method;BDD;Behaviour-Driven Development},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7266885,
  Title                    = {Workshop on Recent Advances in the DependabIlity AssessmeNt of Complex systEms (RADIANCE)},
  Author                   = {A. M. B. R. Carvalho and N. Antunes and A. Ceccarelli and A. Zentai},
  Booktitle                = {2015 45th Annual IEEE/IFIP International Conference on Dependable Systems and Networks},
  Year                     = {2015},
  Month                    = {June},
  Pages                    = {567-568},

  Doi                      = {10.1109/DSN.2015.68},
  ISSN                     = {1530-0889},
  Keywords                 = {large-scale systems;reliability;security of data;software prototyping;agile development;black box components;critical systems;model-driven assessment;recent advances in the dependability assessment of complex systems;security;software OTS components;complex systems;dependability assessment;dynamic systems;fault injection},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6965156,
  Title                    = {Definition of Software Process Lines for Integration of Scrum and CMMI},
  Author                   = {D. Dias de Carvalho and L. F. Chagas and C. A. L. Reis},
  Booktitle                = {2014 XL Latin American Computing Conference (CLEI)},
  Year                     = {2014},
  Month                    = {Sept},
  Pages                    = {1-12},

  Abstract                 = {The adoption of Agile Methods, like Scrum, in conjunction with maturity models, like Capability Maturity Model Integration (CMMI), often leads to variation of process. Process definition is a complex and difficult task, requiring a lot of effort and experience. Software Process Line (SPrL) has been considered a suitable paradigm for software process tailoring and reuse; and there is a lack of approaches that use SPrL concepts for modeling these approaches in conjunction. This paper presents the definition of a SPrL considering Project Planning and Project Monitoring and Control process areas in processes using Scrum agile methodology together with CMMI maturity model. It is expected the presented SPrL assists software organizations to tailor processes that meet both approaches.},
  Doi                      = {10.1109/CLEI.2014.6965156},
  Keywords                 = {Capability Maturity Model;software product lines;software prototyping;software reusability;CMMI;Capability Maturity Model integration;SPrL;Scrum agile methodology;agile methods;control process areas;project monitoring;project planning;scrum integration;software organizations;software process lines;software process reuse;software process tailoring;Capability maturity model;Monitoring;Process control;Project management;Scrum (Software development);Software;Agile Methods;CMMI;Capability Maturity Model Integration;Features Model;Project Management;Project Monitoring and Control;Project Planning;Scrum;Software Process Line},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6525528,
  Title                    = {Service Agile Development Using XP},
  Author                   = {F. Carvalho and L. G. Azevedo},
  Booktitle                = {2013 IEEE Seventh International Symposium on Service-Oriented System Engineering},
  Year                     = {2013},
  Month                    = {March},
  Pages                    = {254-259},

  Abstract                 = {System development using a Service-Oriented Architecture approach encompasses new roles and tasks as opposed to traditional development. It brings new challenges in different aspects, such as: reuse, flexibility, stakeholders' involvement, business understanding. Considering methods for system development, those aspects are handled by agile methods. However, there is no consensus on how to use agile methods in service-oriented system development. Agile methods can be used in different phases of a software development lifecycle, such as: project management, modeling, software construction, software testing. Extreme Programming (XP) is one of the methods more closely related to the construction phase. XP is widely adopted in the industry and offers practices that can be applied to several business contexts. The goal of this work is to propose guidelines and best practices towards service development, focused on the construction phase, in an SOA environment using XP. It goes towards the identification of the shared concerns and the gaps between SOA and XP practices and, additionally, presents open issues and main challenges to be considered when incrementally constructing service solutions with continuous feedback and flexibility to rapidly develop services that meet changing business requirements.},
  Doi                      = {10.1109/SOSE.2013.25},
  Keywords                 = {program testing;service-oriented architecture;software prototyping;Extreme Programming;XP;project management;service agile development;service-oriented architecture;service-oriented system development;software construction;software development lifecycle;software testing;Complexity theory;Contracts;Programming;Semiconductor optical amplifiers;Service-oriented architecture;Extreme Programming;SOA;Service Development Methods},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@Article{6834709,
  Title                    = {Software Engineering for Computational Science and Engineering [Guest editors' introduction]},
  Author                   = {J. C. Carver and T. Epperly},
  Journal                  = {Computing in Science Engineering},
  Year                     = {2014},

  Month                    = {May},
  Number                   = {3},
  Pages                    = {6-9},
  Volume                   = {16},

  Doi                      = {10.1109/MCSE.2014.72},
  ISSN                     = {1521-9615},
  Keywords                 = {Meetings;Scientific computing;Special issues and sections;Agile programming;CSE;best practices;computational science and engineering;debugging;scientific computing;verification and validation},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7017703,
  Title                    = {The use of SCRUM for laboratory sessions monitoring and evaluation in a university course enforcing transverse competencies},
  Author                   = {L. Castillo},
  Booktitle                = {2014 International Symposium on Computers in Education (SIIE)},
  Year                     = {2014},
  Month                    = {Nov},
  Pages                    = {47-52},

  Abstract                 = {This paper introduces a pilot experience on the use of SCRUM methodology, borrowed from software project development and management, in group laboratory sessions during a university course of agent-based programming (fourth year of the Degree on Computer Science in the University of Granada). It aims to foster a higher awareness of students and to enforce a series of transverse competencies like real, structured and self-organized teamwork, better planning of time during the laboratory sessions. As a side effect, it empowers leadership amongst the members of the team as well as it enables a high quality evaluation of students.},
  Doi                      = {10.1109/SIIE.2014.7017703},
  Keywords                 = {laboratories;object-oriented programming;project management;software engineering;SCRUM methodology;agent-based programming;group laboratory sessions;software project development;software project management;university course;Computer science;Educational institutions;Laboratories;Planning;Scrum (Software development);Software;Teamwork;European Higher Education Area;Laboratory Sessions;SCRUM;Transverse Competences},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7034607,
  Title                    = {Method for personal capability assessment in agile teams using personal points},
  Author                   = {S. Čelar and M. Turić and L. Vicković},
  Booktitle                = {2014 22nd Telecommunications Forum Telfor (TELFOR)},
  Year                     = {2014},
  Month                    = {Nov},
  Pages                    = {1134-1137},

  Abstract                 = {The problem of effort estimates in software development projects is important issue in small and medium-sized development companies and agile teams. In this paper, we propose a method for personal capability assessment of each individual team member. In assessing the ability of the project team members 18 parameters were defined with appropriate criteria, values and weight factors for assessing personal capability. For individual personal capability a metrics called personal point was introduced. The method was validated in the small agile software development start-up company Venio Indicium Ltd.},
  Doi                      = {10.1109/TELFOR.2014.7034607},
  Keywords                 = {small-to-medium enterprises;software prototyping;Venio Indicium Ltd;agile teams;personal capability assessment;personal points;small and medium-sized development companies;software development projects;Companies;Complexity theory;Estimation;Productivity;Size measurement;Software;Software measurement;Personal capability;agile development;effort estimation;personal point;small and medium-sized development company;software estimation},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7165991,
  Title                    = {Safely Managing Data Variety in Big Data Software Development},
  Author                   = {T. Cerqueus and E. C. d. Almeida and S. Scherzinger},
  Booktitle                = {2015 IEEE/ACM 1st International Workshop on Big Data Software Engineering},
  Year                     = {2015},
  Month                    = {May},
  Pages                    = {4-10},

  Doi                      = {10.1109/BIGDSE.2015.9},
  Keywords                 = {Big Data;cloud computing;programming environments;software engineering;Big Data software development;ControVol;IDE plugin;NoSQL data stores;code release history;object mapper class declarations;software-as-a-service;type checking rules;Big data;History;Java;Loading;Production;Runtime;Software;NoSQL data stores;object mapping;schema evolution;type checking},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6671012,
  Title                    = {A web-based solution to collect, manage and analyse Auditory Brainstem Response data},
  Author                   = {Z. Chaczko and S. Kirkpatrick and R. Braun},
  Booktitle                = {2013 12th International Conference on Information Technology Based Higher Education and Training (ITHET)},
  Year                     = {2013},
  Month                    = {Oct},
  Pages                    = {1-4},

  Abstract                 = {Auditory neuroscience often involves the collection of experiment data from test subjects in the form of non-invasive Auditory Brainstem Responses (ABR). These ABRs are most often used to gauge a subjects hearing threshold. Although rarely; they can be analysed further. Research into ABRs has shown that the presence of brain damage or tumours may be detectable. This can be achieved if large amounts of ABRs are collected and compared. However many laboratories around the world do not keep the data as it is difficult to store and analyse, and sometimes only used for threshold analysis. This results in a huge amount of wasted data and opportunity. The goal of this project was to develop and build a web-based system to collect, manage and analyse ABR data for hearing research. The project was run as an iterative process based on the eXtreme-Programming (XP) methodology. It involved very close contact with the client laboratory. Onsite weekly meetings, demonstrations and experiments were attended to help understand the problem domain. A continuous analysis, design and integration cycle coupled with automated testing and deployment was used throughout the project. Where possible all key aspects of XP development were adhered to and the project managed in this fashion. The final OpenABR system was deployed to a cloud server and is being used by the client laboratory. It has several unique features that no other system of its type possesses. Its dynamic database interface allows scientists the flexibility and reliability they cannot get from standard databases. Future work would focus on expanding the dynamic database interface, integrating more analysis including heuristics and trying to include new data types such as imaging results.},
  Doi                      = {10.1109/ITHET.2013.6671012},
  Keywords                 = {Internet;auditory evoked potentials;data analysis;neurophysiology;ABR data analysis;ABR data collection;ABR data management;OpenABR system;Web-based solution;XP development;auditory brainstem response data;automated testing;client laboratory;cloud server;continuous analysis;design cycle;dynamic database interface;extreme-programming methodology;hearing research;integration cycle;Auditory system;Biomedical imaging;Educational institutions;Electrodes;Laboratories;Mice;Software;Auditory brainstem responses;Scientific Big Data;Web-based solution},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6957686,
  Title                    = {A social complexity approach to investigate trust in Agile Methodology},
  Author                   = {W. T. Chan and F. Ying},
  Booktitle                = {17th International IEEE Conference on Intelligent Transportation Systems (ITSC)},
  Year                     = {2014},
  Month                    = {Oct},
  Pages                    = {172-177},

  Abstract                 = {Trust plays an important role in software development teams using Agile Methodology. Previous research reported that the Agile Methodology fosters trust between the development team and the product owner and subsequently the trust improves communications about requirements and expectations with the product owner, and promotes collaborations within the development team. This helped our understanding of the role of trust in Agile methodology; however, it failed to answer the question of why trust is so important in Agile methodology while it has not been so in traditional software development methods. In this paper we use a social complexity approach to investigate the software development process. By looking at software development as a complex endeavor, and using tools and techniques from the Cynefin framework and other models of social complexity, we demonstrate that the increased level of complexity of the software has led to an increase in the level of complexity of the software development process. It transforms the software development process from a simple and complicated process to a complex one. Trust, which functions to resolve complexity, becomes an important factor in such a software development environment. The Agile methodology, which fosters a higher level of trust in the development process, is able to manage the complexity more effectively than traditional software development methods in a complex software development environment, and hence is a favored option in such an environment.},
  Doi                      = {10.1109/ITSC.2014.6957686},
  ISSN                     = {2153-0009},
  Keywords                 = {computational complexity;software development management;software prototyping;trusted computing;Cynefin framework;agile methodology trust;development team;product owner;social complexity approach;software development methods;software development process;software development teams;Collaboration;Complexity theory;Computational modeling;Context;Radar;Robots;Software},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@Article{7436666,
  Title                    = {Strategic Prototyping for Developing Big Data Systems},
  Author                   = {H. M. Chen and R. Kazman and S. Haziyev},
  Journal                  = {IEEE Software},
  Year                     = {2016},
  Number                   = {99},
  Pages                    = {1-1},
  Volume                   = {PP},

  Doi                      = {10.1109/MS.2016.65},
  ISSN                     = {0740-7459},
  Keywords                 = {Big data;Boolean functions;Data models;Data structures;Prototypes},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@Article{7468484,
  Title                    = {Agile Big Data Analytics for Web-Based Systems: An Architecture-Centric Approach},
  Author                   = {H. M. Chen and R. Kazman and S. Haziyev},
  Journal                  = {IEEE Transactions on Big Data},
  Year                     = {2016},

  Month                    = {Sept},
  Number                   = {3},
  Pages                    = {234-248},
  Volume                   = {2},

  Abstract                 = {This article contributes an architecture-centric methodology, called AABA (Architecture-centric Agile Big data Analytics), to address the technical, organizational, and rapid technology change challenges of both big data system development and agile delivery of big data analytics for Web-based Systems (WBS). As the first of its kind, AABA fills a methodological void by adopting an architecture-centric approach, advancing and integrating software architecture analysis and design, big data modeling and agile practices. This article describes how AABA was developed, evolved and validated simultaneously in 10 empirical WBS case studies through three CPR (Collaborative Practice Research) cycles. In addition, this article presents an 11th case study illustrating the processes, methods and techniques/tools in AABA for cost-effectively achieving business goals and architecture agility in a large scale WBS. All 11 case studies showed that architecture-centric design, development, and operation is key to taming technical complexity and achieving agility necessary for successful WBS big data analytics development. Our contribution is novel and important. The use of reference architectures, a design concepts catalog and architectural spikes in AABA are advancements to architecture design methods. In addition, our architecture-centric approach to DevOps was critical for achieving strategic control over continuous big data value delivery for WBS.},
  Doi                      = {10.1109/TBDATA.2016.2564982},
  Keywords                 = {Big Data;Internet;data analysis;software architecture;software prototyping;AABA;CPR cycles;DevOps;WBS;Web-based systems;agile practices;architectural spikes;architecture agility;architecture design methods;architecture-centric agile Big Data analytics;architecture-centric approach;collaborative practice research cycles;design concepts catalog;reference architectures;software architecture analysis;Big data;Collaboration;Computer architecture;Data analysis;Data models;Real-time systems;System analysis and design;Software architecture;data systems;system analysis and design},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7809441,
  Title                    = {Continuous Delivery: Overcoming Adoption Obstacles},
  Author                   = {L. Chen},
  Booktitle                = {2016 IEEE/ACM International Workshop on Continuous Software Evolution and Delivery (CSED)},
  Year                     = {2016},
  Month                    = {May},
  Pages                    = {84-84},

  Abstract                 = {Continuous Delivery (CD) can bring huge benefits, but implementing CD is challenging. For some challenges, one can only see them when he/she travels on the journey far enough. Paddy Power has been implementing CD for more than three years. In this talk, I will present the major obstacles we encountered and how we addressed them. These obstacles cover various areas, including organizational, cultural, process, and technical. I will also discuss the areas where I see researchers can help.},
  Doi                      = {10.1109/CSED.2016.023},
  Keywords                 = {software engineering;CD;Paddy Power;adoption obstacles;continuous delivery;Companies;Conferences;Cultural differences;Software;Software engineering;Software reliability;Agile Software Development;Continuous Delivery;Continuous Deployment;Continuous Software Engineering},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7169441,
  Title                    = {Research Opportunities in Continuous Delivery: Reflections from Two Years' Experiences in a Large Bookmaking Company},
  Author                   = {L. Chen},
  Booktitle                = {2015 IEEE/ACM 3rd International Workshop on Release Engineering},
  Year                     = {2015},
  Month                    = {May},
  Pages                    = {2-2},

  Abstract                 = {We have been implementing continuous delivery in Paddy Power, a large organization in the bookmaking industry, for more than two years. In this talk, I will reflect on our journey to continuous delivery and discuss the research opportunities I see.},
  Doi                      = {10.1109/RELENG.2015.9},
  Keywords                 = {organisational aspects;software prototyping;DevOps;Paddy Power;agile software development;bookmaking company;bookmaking industry;continuous delivery;continuous software engineering;release engineering;research opportunities;Companies;Conferences;Industries;Reflection;Software;Software engineering;Continuous delivery;DevOps;agile software development;continuous deployment;continuous software engineering;release engineering},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7876383,
  Title                    = {A Scalable Integrated SDN and OpenStack Management System},
  Author                   = {S. C. Chen and R. H. Hwang},
  Booktitle                = {2016 IEEE International Conference on Computer and Information Technology (CIT)},
  Year                     = {2016},
  Month                    = {Dec},
  Pages                    = {532-537},

  Abstract                 = {Due to the need to agilely cope with more complex and virtualized applications, integrating Software-Defined Networking (SDN) switches and OpenStack software platform into the data center has becomes an important enabling technology. However, the SDN controller and OpenStack have their own management interface, such as Horizon, which may not be able to meet the user's requirement on managing both platforms in one data center. For example, although the deployment of switches of a data center usually follows a layering hierarchy, the Graphical User Interface (GUI) of management system of the SDN controller, such as Ryu, shows the topology of switches in a random and messy manner. Furthermore, tightly integration of SDN and OpenStack is required for agile and real-time management. Thus, in this paper, we design and implement a management system which tightly integrates SDN and OpenStack. In the proposed management system, the topology displays SDN switches, Open vSwitches (OVS), as well as virtual machines in hierarchy of multi-rooted trees. In order to display millions of virtual machines and thousands of switches, the GUI of the proposed management system provides a scalable view for users to zoom in or zoom out the topology. The proposed management system adopts modular design and provides web-based user interface and RESTful API for interoperability. The prototype of the proposed management system is shown to demonstrate the usability and scalability of the proposed system.},
  Doi                      = {10.1109/CIT.2016.27},
  Keywords                 = {Internet;application program interfaces;graphical user interfaces;open systems;public domain software;software defined networking;software management;software prototyping;telecommunication network topology;telecommunication switching;virtual machines;Open vSwitches;OpenStack management system;OpenStack software platform;RESTful API;Ryu;SDN controller;Web-based user interface;agile management;graphical user interface;interoperability;multirooted trees;real-time management;scalable integrated SDN;software-defined networking switches integration;system scalability;system usability;virtual machines;Conferences;Decision support systems;Handheld computers;Information technology;OpenStack;SDN;integration;management system;scalability},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7210379,
  Title                    = {CTS 2015 plenary speech: Agile at PayPal: A transformation towards leaner and more productive work collaboration},
  Author                   = {C. Chikkareddy},
  Booktitle                = {2015 International Conference on Collaboration Technologies and Systems (CTS)},
  Year                     = {2015},
  Month                    = {June},
  Pages                    = {1-1},

  Abstract                 = {Summary form only given. As Agile methods were introduced for managing software development process, leaner ways of working are becoming a practical approach to run entire enterprise. PayPal has recently transformed its large distributed engineering organization, from traditional waterfall development process to an Agile and leaner collaborative working style. Together with technology platform innovation, we have seen tremendous changes and improvements on ways that teams collaborate and coordinate, and impacts on time to market. A cross-functional reorganization, brought the actual physical locations closer for all relevant parties including Product, QA, Engineering, and UED, which dramatically reduced daily collaboration cost across different office locations and time zones. In this keynote, I will share our experience of Lean/Agile transformation, tools and technology platforms adopted to support leaner collaboration, and lessons learnt. Hope it would help provide some insights for further research work on improving collaborative work in software companies.},
  Doi                      = {10.1109/CTS.2015.7210379},
  Keywords                 = {DP industry;groupware;software development management;software houses;software prototyping;team working;PayPal;agile methods;collaborative work;cross-functional reorganization;distributed engineering organization;lean-agile transformation;leaner collaborative working style;productive work collaboration;software companies;software development process management;team collaboration;team coordination;technology platform innovation},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6608657,
  Title                    = {What makes it hard to apply software product lines to educational technologies?},
  Author                   = {S. Chimalakonda and K. V. Nori},
  Booktitle                = {2013 4th International Workshop on Product LinE Approaches in Software Engineering (PLEASE)},
  Year                     = {2013},
  Month                    = {May},
  Pages                    = {17-20},

  Abstract                 = {In this paper, we present our experience of mining a software product line (SPL) from 9 existing eLearning systems developed at 9 different locations by 9 different teams following 9 varied development processes over a decade. The goal of this family of eLearning systems is to address 287 million adult illiterates in India spread across 22 Indian languages. This presents a unique and challenging situation as the SPL arises from a societal context rather than a business context as in traditional SPL. We explain the context of this domain and present the key challenges of mining an SPL from these eLearning systems. The main intent of this paper is to present our journey of applying SPL to these legacy eLearning systems in the last six years. Finally, we briefly discuss the ideas of Lean Software Product Lines and Global Software Product Lines as two potential future research directions for the SPL community.},
  Doi                      = {10.1109/PLEASE.2013.6608657},
  Keywords                 = {computer aided instruction;data mining;SPL mining;e-learning systems;educational technologies;global software product lines;lean software product lines;societal context;Context;Electronic learning;Organizations;Software;Software product lines;agile;eLearning systems;educational technologies;global software development;lean},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7014757,
  Title                    = {Implementing Agile in old technology projects},
  Author                   = {S. Chopra},
  Booktitle                = {Proceedings of 3rd International Conference on Reliability, Infocom Technologies and Optimization},
  Year                     = {2014},
  Month                    = {Oct},
  Pages                    = {1-4},

  Doi                      = {10.1109/ICRITO.2014.7014757},
  Keywords                 = {COBOL;program testing;software prototyping;Agile development;Agile testing;COBOL;FoxPro;airline application;banking;complex logics;Automation;Batch production systems;Manuals;Measurement;Organizations;Software;Testing;Agile;Agile Testing;Development practices;Old technologies;Sustenance;Technical Debt},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7831579,
  Title                    = {A Complexity Theory Viewpoint on the Software Development Process and Situational Context},
  Author                   = {P. Clarke and R. V. O’Connor and B. Leavy},
  Booktitle                = {2016 IEEE/ACM International Conference on Software and System Processes (ICSSP)},
  Year                     = {2016},
  Month                    = {May},
  Pages                    = {86-90},

  Abstract                 = {The research literature informs us that a software development process should be appropriate to its software development context but there is an absence of explicit guidance on how to achieve the harmonization of a development process with the corresponding situational context. Whilst this notion of harmonization may be intuitively appealing, in this paper we argue that interaction between a software development process and its situational context is an instance of a complex system. In Complexity Theory, complex systems consist of multiple agents that interact in a multitude of diverse ways, with system outcomes being non-deterministic. Complex systems are therefore noted to be difficult to control, such as is the case with many software development endeavors. If the interaction of software processes with situational contexts is representative of a complex system, then we should not be surprised that the task of software development has proven so resistant to attempts to produce generalized software processes. We should also seek to ameliorate the software development challenge through the adoption of techniques recommended for use in managing complex systems, not as a replacement for the many software process approaches presently in use, but as complement that can aid the task of process definition and evolution.},
  Doi                      = {10.1109/ICSSP.2016.019},
  Keywords                 = {software development management;software metrics;complex system;complexity theory;situational context;software development process;Agile software development;Business;Capability maturity model;Complex systems;Complexity theory;Context;Software;Software and its engineering;Software creation and management;Software development methods;Software development process management},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7322016,
  Title                    = {Software Defined Networking: Proof of concept demonstration over a DWDM optical ring},
  Author                   = {C. Colombo and O. Benaglia},
  Booktitle                = {2015 Fotonica AEIT Italian Conference on Photonics Technologies},
  Year                     = {2015},
  Month                    = {May},
  Pages                    = {1-4},

  Abstract                 = {This paper gives an overview on how Software Defined Networking (SDN) principles can be applied to existing optical networks, considering the requirements introduced by the last technology's improvement. A description of a proof of concept activity will be proposed. The demonstration shows how extending SDN to the metro area and wide area network (Transport SDN) can fully exploit the dynamism of an Agile Optical Network, with multi-tenant service management, virtual slicing of network resources for advanced services such as Encrypted and Secure Data Center connection, or Dynamic Bandwidth Allocation and even GMPLS restoration that are under Transport SDN control.},
  Doi                      = {10.1049/cp.2015.0107},
  Keywords                 = {metropolitan area networks;optical fibre networks;software defined networking;wavelength division multiplexing;wide area networks;DWDM optical ring;GMPLS restoration;agile optical network;concept demonstration proof;dynamic bandwidth allocation;metro area network;multitenant service management;network resource virtual slicing;secure data center connection;software defined networking;transport SDN control;wide area network;DWDM;NSP;SDN;optical network},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6614218,
  Title                    = {Software development processes for mobile systems: Is agile really taking over the business?},
  Author                   = {L. Corral and A. Sillitti and G. Succi},
  Booktitle                = {2013 1st International Workshop on the Engineering of Mobile-Enabled Systems (MOBS)},
  Year                     = {2013},
  Month                    = {May},
  Pages                    = {19-24},

  Abstract                 = {Mobile applications differ from desktop software due to their particular execution environment, limited resources, high autonomy requirement, market competition, etc. This situation brings the need of having customized development processes that respond efficiently to these challenges, to facilitate the development of high quality products that are able to excel and remain competitive in this domain. While a number of research papers have consistently proposed the adoption of Agile practices, it is not clear how a software development process would help to solve the issues present in the mobile domain. Moreover, there is a lack of evidence that shows a clear link between the proposed methodologies and their utilization in a real-world setting. Finally, the rapid evolution of the mobile environment challenges several of the premises upon which the proposed methodologies were created. In this paper, we present a review on Agile software development processes for mobile applications and their implementations, with the objective of knowing the contribution of Agile methods to address the needs of the mobile software in a production environment. Our goal is to introduce discussion on the need of conducting research that unveils what is the framework of choice of the mobile software industry: if the Agile paradigm was adopted, dismissed, or a new one was created.},
  Doi                      = {10.1109/MOBS.2013.6614218},
  Keywords                 = {mobile computing;software prototyping;software quality;agile paradigm;agile software development process;customized software development processes;desktop software;high quality product development;mobile applications;mobile domain;mobile environment;mobile software;Design methodology;Guidelines;Mobile communication;Mobile handsets;Six sigma;Software;Agile;Development;Framework;Mobile;Process},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7916250,
  Title                    = {An agile development method for platoon system based on verification and validation},
  Author                   = {B. Dafflon and M. El-Zaher},
  Booktitle                = {2016 10th International Conference on Software, Knowledge, Information Management Applications (SKIMA)},
  Year                     = {2016},
  Month                    = {Dec},
  Pages                    = {376-381},

  Abstract                 = {This paper introduces a verification and validation (V&V) process in a product life-cycle, where we consider a V&V process as the composition of the three tasks: formal verification, simulation and experimentation. The considered application is a platoon system, a set of autonomous vehicles that move together without any material connection. The platoon system development considers the specification of the SafePlatoon project1. Main goal of the V&V process is to put to the proof the platoon controller (Decision making unit). V&V is then a corner stone for critical functions that require zero default. Algorithm and hardware must respect some security concerns such as collision free between platoon vehicles, platoon integrity, obstacles avoidance, and etc. After a specification phase, where safety properties are defined, a classical or agile V&V cycle can be applied. In the case of SafePlatoon project, where different partners are evolving simultaneously on the models, an agile development method is used; where formal verification and benchmark simulation works together in order to improve model's safety. Formal verification is made using The SAL model checker. Validation by simulation is made using an internal tool called Vivus.},
  Doi                      = {10.1109/SKIMA.2016.7916250},
  Keywords                 = {formal verification;road vehicles;software prototyping;SAL model checker;SafePlatoon project;V and V process;Vivus;agile V and V cycle;agile development;autonomous vehicles;benchmark simulation;critical functions;decision making unit;formal verification;internal tool;model safety;platoon system controller;product life-cycle;safety properties;verification and validation process;Adaptation models;Measurement;Model checking;Safety;Software;Software algorithms;Tools;Agile development;PLM;Verification;autonomous systems;simulation;validation},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6612893,
  Title                    = {Driving Quality Improvement and Reducing Technical Debt with the Definition of Done},
  Author                   = {N. Davis},
  Booktitle                = {2013 Agile Conference},
  Year                     = {2013},
  Month                    = {Aug},
  Pages                    = {164-168},

  Doi                      = {10.1109/AGILE.2013.21},
  Keywords                 = {software prototyping;software quality;Scrum concept;agile development process;compliance measures;definition of done;quality improvements;technical debt reduction;Measurement;Security;Software;Standards organizations;US Department of Defense;Agile Quality;Definition of Done;Measuring Agile Quality;Reducing Technical Debt},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7371713,
  Title                    = {Seamless SDN Route Updates},
  Author                   = {S. Delaet and S. Dolev and D. Khankin and S. Tzur-David and T. Godinger},
  Booktitle                = {2015 IEEE 14th International Symposium on Network Computing and Applications},
  Year                     = {2015},
  Month                    = {Sept},
  Pages                    = {120-125},

  Abstract                 = {Software-Defined Networking (SDN) decouples the control and data planes, enabling limitless possibilities for implementing services and applications on top of the network abstraction layer. The centralized controller provides a real-time view of the entire underlying network infrastructure and therefore, management of the agile network becomes more simplified. This flexibility requires online routing updates, but during these updates, consistency has to be preserved, i.e., No packet losses or unrecognized duplications should occur. Moreover, routing updates should be done on the fly in an application-seamless fashion. Where no significant irregular delays or "communication hiccups" in packet arrivals are introduced due to the (frequent) updates. In this paper we present the first seamless consistency during on-the-fly routing updates, allowing the sender to send packets in an unchanged rate during the entire process, rate that is identical to the rate prior and after the update. The main idea is to use multicast on portions of the route, i.e., To send a packet both in the old and the new routes and only when the controller verifies the establishment and operation of the specific portion of the new route, it can remove the corresponding portion from the old route.},
  Doi                      = {10.1109/NCA.2015.24},
  Keywords                 = {software defined networking;telecommunication network routing;SDN route update;network abstraction layer;software-defined networking;Control systems;Delays;Memory management;Routing;Routing protocols;Standards;seamless route updates;software-defined networking},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6479955,
  Title                    = {Introduction to the Cloud Service Science and Systems Minitrack},
  Author                   = {H. Demirkan and M. Goul},
  Booktitle                = {2013 46th Hawaii International Conference on System Sciences},
  Year                     = {2013},
  Month                    = {Jan},
  Pages                    = {1015-1015},

  Doi                      = {10.1109/HICSS.2013.336},
  ISSN                     = {1530-1605},
  Keywords                 = {Cloud computing;Computational modeling;Organizations;Software as a service;Standards organizations;Technological innovation;Cloud Computing;Service Science;Service Systems},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7549347,
  Title                    = {Progressive integration of method components: A case of agile is development methods},
  Author                   = {R. Deneckère and E. Kornyshova and A. Iacovelli},
  Booktitle                = {2016 IEEE Tenth International Conference on Research Challenges in Information Science (RCIS)},
  Year                     = {2016},
  Month                    = {June},
  Pages                    = {1-10},

  Abstract                 = {Situational Method Engineering aims at constructing methods adapted to a given situation, either by a construction from a set of predefined method components or by a customization of an existing method using different techniques: configuration, extension, reduction, and so on. However, these techniques are still limited in practice, as considered complicated and heavy to implement. In this paper, we describe a practitioner experience of a gradual integration of different method components (issued from agile methods of software development). In a real case of a development company, we have practiced and observed the progressive introduction of agile method components instead of the construction or customization of methods in one go. We discuss the lessons learned from this experience and define different research perspectives.},
  Doi                      = {10.1109/RCIS.2016.7549347},
  Keywords                 = {information systems;software prototyping;agile IS development methods;agile method components;configuration technique;extension technique;information systems;reduction technique;situational method engineering;software development;Companies;Context;Information systems;Planning;Project management;Software;Agile Method;Experience Report;Method Component;Progressive Integration;Situational Method Engineering},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6621224,
  Title                    = {Prototype test insertion co-processor for agile development in multi-threaded embedded environments},
  Author                   = {Dongcheng Deng and M. Smith and S. Islam and J. Miller},
  Booktitle                = {24th IET Irish Signals and Systems Conference (ISSC 2013)},
  Year                     = {2013},
  Month                    = {June},
  Pages                    = {1-8},

  Abstract                 = {Agile methodologies have been shown useful in constructing Enterprise applications with a reduced level of defects in the released product. Movement of Agile processes into the embedded world is hindered by the lack of suitable tool support. For example, software instrumented test insertion methods to detect race condition in multithreaded programs have the potential to increase code size beyond the limited embedded system memory, and degrade performance to an extent that would impair the real-time characteristics of the system. We propose a FPGA-based, hardware assisted, test insertion co-processor for embedded systems which introduces low additional system overhead and incurs minimal code size increase. In this preliminary study, we compare the ideal characteristics of a FPGA-based test insertion co-processor with our initial prototype and other proposed hardware assisted test insertion approaches.},
  Doi                      = {10.1049/ic.2013.0038},
  Keywords                 = {coprocessors;embedded systems;field programmable gate arrays;multi-threading;FPGA-based coprocessor;agile development;code size;enterprise applications;hardware assisted coprocessor;low additional system overhead;multithreaded embedded environments;prototype test insertion coprocessor;race condition detection;real-time characteristics;software instrumented test insertion methods;Embedded systems development;FPGA-based co-processor;agile testing;hardware-assisted test insertion;multi-thread program;race condition detection},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7780365,
  Title                    = {Transitioning Fault Prediction Models to a New Environment},
  Author                   = {J. Derehag and E. Weyuker and T. J. Ostrand and D. Sundmark},
  Booktitle                = {2016 12th European Dependable Computing Conference (EDCC)},
  Year                     = {2016},
  Month                    = {Sept},
  Pages                    = {241-248},

  Abstract                 = {We describe the application and evaluation of fault prediction algorithms to a project developed by a Swedish company that transitioned from waterfall to agile development methods. The project used two different version control systems and a separate bug tracking system during its lifetime. The algorithms were originally designed for use on systems implemented with a traditional waterfall process at American companies that maintained their project records in an integrated database system that combined bug recording and version control. We compare the performance of the original prediction model on the American systems to the results obtained in the Swedish environment in both its pre-agile and agile stages. We also consider the impact of additional variables in the model.},
  Doi                      = {10.1109/EDCC.2016.21},
  Keywords                 = {fault diagnosis;program debugging;American systems;Swedish environment;agile development methods;bug recording;bug tracking system;fault prediction algorithms;fault prediction models;integrated database system;version control systems;waterfall process;Companies;Computer bugs;Data models;Measurement;Predictive models;Software;Standards;agile;case study;defects;fault prediction;faults},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6986024,
  Title                    = {The agility of agile methodology for teaching and learning activities},
  Author                   = {D. A. Dewi and M. Muniandy},
  Booktitle                = {2014 8th. Malaysian Software Engineering Conference (MySEC)},
  Year                     = {2014},
  Month                    = {Sept},
  Pages                    = {255-259},

  Abstract                 = {This paper presents the review of literatures that shows the contribution of the agile methodology towards teaching and learning environment at university level. Teaching and learning at university has since migrated from traditional learning to active learning methodology where students are expected to learn by doing rather than listening passively to lectures alone. The agile methodology naturally has promoted the active participation of team members during system development phases. The nature of agile development methodology has been identified as abundantly compatible and supportive towards active academic learning. Some literature have proposed ways of adopting agile into active learning to improve teaching and learning processes and have highlighted this method as a great success. With the review presented in this paper, we would like to highlight how efficient the agile concept is in tackling several situations in academic learning as shown by an interesting mapping of agile principles to the classroom environment. With that, we hope to bring more options to improve active teaching and learning delivery by adopting agile methodology. On the other hand, few papers have used the academic environment to measure the agile principles. By highlighting this, we offer options for the agile evaluation framework to consider academic environment as a tool to obtain the agile performance feedback.},
  Doi                      = {10.1109/MySec.2014.6986024},
  Keywords                 = {computer aided instruction;teaching;academic environment;active academic learning;active teaching;agile development methodology;agile evaluation framework;agile methodology;agile performance feedback;agile principles;classroom environment;learning activity;learning delivery;learning environment;learning methodology;learning process;system development phases;teaching process;team members;university level;Collaboration;Educational institutions;Electronic learning;Programming;Software;Software engineering;Agile;active learning;agile e-learning;agile education;teaching and learning},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7754854,
  Title                    = {Big data analytics using agile model},
  Author                   = {S. R. Dharmapal and K. T. Sikamani},
  Booktitle                = {2016 International Conference on Electrical, Electronics, and Optimization Techniques (ICEEOT)},
  Year                     = {2016},
  Month                    = {March},
  Pages                    = {1088-1091},

  Doi                      = {10.1109/ICEEOT.2016.7754854},
  Keywords                 = {Big Data;data analysis;software prototyping;Big Data analytics;agile model;business community;business development;Big data;Companies;Data models;Documentation;Software;Testing;Agile;Analytics;Big Data;Data Analyst;Development Methodology;Predictive Tool;Project Management;Software Engineering},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7932676,
  Title                    = {What is Agile, Which Practices are Used, and Which Skills are Necessary according to Brazilian Professionals: Findings of an Initial Survey},
  Author                   = {E. Diel and M. Bergmann and S. Marczak and E. Luciano},
  Booktitle                = {2015 6th Brazilian Workshop on Agile Methods (WBMA)},
  Year                     = {2015},
  Month                    = {Oct},
  Pages                    = {18-24},

  Doi                      = {10.1109/WBMA.2015.10},
  Keywords                 = {cultural aspects;project management;software prototyping;software quality;Brazil;Brazilian professionals;IT market;IT professionals;Scrum;XP;agile methods;behavioral factors;cultural factors;project development;questionnaire-based survey;software product quality;Companies;Industries;Planning;Sociology;Software;Standards organizations;Agile Development;Agile Practices;Agile Skills;Brazilian IT Professionals;Survey},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7577415,
  Title                    = {Communication Challenges and Strategies in Distributed DevOps},
  Author                   = {E. Diel and S. Marczak and D. S. Cruzes},
  Booktitle                = {2016 IEEE 11th International Conference on Global Software Engineering (ICGSE)},
  Year                     = {2016},
  Month                    = {Aug},
  Pages                    = {24-28},

  Abstract                 = {Even though agile actively seeks collaboration from all its stakeholders, most agile projects do not extend themselves toward the operations people. To solve this problem, DevOps is introduced. DevOps is a conceptual framework for reintegrating development and operations of Information Systems, which is able to break the wall between developers and operations professionals. DevOps improves the work through a collection of principles and practices, centered around close collaboration between Development and Operations personnel. However, both sides have paid little attention to issues faced by each other. Communication gaps is a recurrent problem in agile teams that is also eminent in the relationship between developers and operations. Literature offers little research on this aspect of communication in DevOps. This position paper describes the communication practices from a distributed agile team composed of developers and operations based on communication challenges (geographical, socio-cultural, and temporal distance) and strategies (frequency, direction, modality, and content). From the results we outline possible research focus for future work, aiming to enrich the academia research on the matter as well as to help practitioners to improve their working practices.},
  Doi                      = {10.1109/ICGSE.2016.28},
  ISSN                     = {2329-6313},
  Keywords                 = {distributed processing;communication challenge;communication gaps;communication strategy;content strategy;direction strategy;distributed DevOps framework;frequency strategy;geographical challenge;information system;modality strategy;socio-cultural challenge;temporal distance challenge;working practices;Collaboration;Companies;Interviews;Personnel;Production;Software;DevOps;communication challenges;communication strategy;distributed teams},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6595796,
  Title                    = {Towards automatic scenario generation from coverage information},
  Author                   = {M. Diepenbeck and M. Soeken and D. Grobe and R. Drechsler},
  Booktitle                = {2013 8th International Workshop on Automation of Software Test (AST)},
  Year                     = {2013},
  Month                    = {May},
  Pages                    = {82-88},

  Abstract                 = {Nowadays, the design of software systems is pushed towards agile development practices. One of its most fundamental approaches is Test Driven Development (TDD). This procedure is based on test cases which are incrementally written prior to the implementation. Recently, Behavior Driven Development (BDD) has been introduced as an extension of TDD, in which natural language scenarios are the starting point for the test cases. This description offers a ubiquitous communication mean for both the software developers and stakeholders. Following the BDD methodology thoroughly, one would expect 100 % code coverage, since code is only written to make the test cases pass. However, as we show in an empirical study this expectation is not valid in practice. It becomes even worse in the process of development, i.e. the coverage decreases over time. To close the coverage gap, we sketch an algorithm that generates BDD-style scenarios based on uncovered code.},
  Doi                      = {10.1109/IWAST.2013.6595796},
  Keywords                 = {program testing;software prototyping;BDD methodology;TDD approach;agile development practice;behavior driven development;code coverage;coverage information;natural language scenario;scenario generation;software system design;test driven development;Boolean functions;Context;Data structures;Natural languages;Software;Testing;Unified modeling language},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7883400,
  Title                    = {COPE: Vision for a Change-Oriented Programming Environment},
  Author                   = {D. Dig and R. Johnson and D. Marinov and B. Bailey and D. Batory},
  Booktitle                = {2016 IEEE/ACM 38th International Conference on Software Engineering Companion (ICSE-C)},
  Year                     = {2016},
  Month                    = {May},
  Pages                    = {773-776},

  Keywords                 = {program processors;software reusability;COPE;IDEs;agile development;change-oriented programming environment;program development;program transformations;sequential code;software development;software engineering;software product lines;software refactorings;Algorithm design and analysis;Computer bugs;Optimization;Security;Software;Software engineering;Visualization;program transformations;software changes;software evolution},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7809606,
  Title                    = {Defect Analysis in Large Scale Agile Development: Quality in the Agile Factory Model},
  Author                   = {B. Doherty and A. Jelfs and A. Dasgupta and P. Holden},
  Booktitle                = {2016 Joint Conference of the International Workshop on Software Measurement and the International Conference on Software Process and Product Measurement (IWSM-MENSURA)},
  Year                     = {2016},
  Month                    = {Oct},
  Pages                    = {180-180},

  Abstract                 = {Summary form only given. Despite the widespread proliferation of agile practices, implementation often fails due to lack of adequate project management support, decreased motivation or fear of increased interaction. Consequently, few organizations effectively adopt agile processes with tailoring often required to integrate agile methodology. This presentation provides an overview of an innovative large-scale tailored implementation of agile development termed the Agile Factory Model (AFM), with the aim of highlighting defect issues of specific importance to organizations undertaking large scale agile development. Drawing upon a substantial internal repository of defects, this study profiles defect severity, cause and lifecycle. Our results indicate that during development and testing the majority of defects which occur in the AFM are of severity 3, with requirements defects making up only 0.7%. Acceptance, Integration and Performance (AIP) testing captures the largest quantity of defects at 26.14% whilst a further 17.28% show up in Factory Acceptance Testing (FAT), where FAT and AIP are sequential stages in the AFM respectively. The results demonstrate that agile practices can be effectively translated to a globally distributed development environment.},
  Doi                      = {10.1109/IWSM-Mensura.2016.034},
  Keywords                 = {life cycle costing;program diagnostics;program testing;project management;software development management;software performance evaluation;software prototyping;software quality;AFM;AIP testing;FAT;acceptance-integration-and-performance testing;agile factory model;agile practices;agile processes;defect analysis;defect cause;defect lifecycle;defect severity;factory acceptance testing;globally distributed software development;large-scale agile development quality;project management support;Estimation;Organizations;Planning;Production facilities;Software;Software measurement;Testing;Agile;Agile Factory Model;Defects;Globally Distributed Software Development;Large-scale Agile;Quality},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6480431,
  Title                    = {Scrum Metrics for Hyperproductive Teams: How They Fly like Fighter Aircraft},
  Author                   = {S. Downey and J. Sutherland},
  Booktitle                = {2013 46th Hawaii International Conference on System Sciences},
  Year                     = {2013},
  Month                    = {Jan},
  Pages                    = {4870-4878},

  Abstract                 = {Scrum Teams use lightweight tools like Story Points, the Burn down chart, and Team Velocity. While essential, these tools alone provide insufficient information to maintain a high energy state that yields Hyper productivity. More data is required, but data collection itself can slow Teams. This effect must be avoided when productivity is the primary marker of success. Here we describe nine metrics that can develop and sustain Hyper productive Teams -- Velocity, Work Capacity, Focus Factor, Percentage of Adopted Work, Percentage of Found Work, Accuracy of Estimation, Accuracy of Forecast, Targeted Value Increase, Success at Scale, and the Win/Loss Record of the Team. The unique contribution of this paper is to demonstrate how a light touch and lightweight strategy can be used to compare Teams with different Story Point reference scales.},
  Doi                      = {10.1109/HICSS.2013.471},
  ISSN                     = {1530-1605},
  Keywords                 = {Accuracy;Estimation;Measurement;MySpace;Planning;Productivity;Software;Agile;Hyperproductive;Hyperproductivity;Metrics;Performance;Scrum;Story Points;Velocity},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6596295,
  Title                    = {Adoption of agile methodology in software development},
  Author                   = {D. Duka},
  Booktitle                = {2013 36th International Convention on Information and Communication Technology, Electronics and Microelectronics (MIPRO)},
  Year                     = {2013},
  Month                    = {May},
  Pages                    = {426-430},

  Abstract                 = {As adopting Agile software development becomes a trend, there is a need for a more structured definition of what is Agile and what is a high-level of Agile maturity. Traditional development methodologies rely on documents to record and pass on knowledge from one specialist to the next. Feedback cycles are, in many cases, too long or even nonexistent. Agile principles emphasize building working software that people can get hands on quickly, versus spending a lot of time writing specifications up front. Agile development focuses on cross-functional teams empowered to make decisions, versus big hierarchies and splitting by function. It also focuses on rapid iteration, with continuous customer input along the way. This paper deals with Agile methodology and scaling. The special highlight is put on people investigating their contribution in Agile approach success. Some reflections after using Agile in our own organization are also presented.},
  Keywords                 = {decision making;feedback;software development management;software prototyping;team working;agile development;agile methodology adoption;agile principles;agile scaling;continuous customer input;cross-functional teams;decision making;development methodologies;feedback cycles;high-level agile maturity;software development;time writing specifications;Computer architecture;Documentation;Organizations;Planning;Software;Telecommunications},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7000106,
  Title                    = {Requirements Engineering Quality Revealed through Functional Size Measurement: An Empirical Study in an Agile Context},
  Author                   = {J. F. Dumas-Monette and S. Trudel},
  Booktitle                = {2014 Joint Conference of the International Workshop on Software Measurement and the International Conference on Software Process and Product Measurement},
  Year                     = {2014},
  Month                    = {Oct},
  Pages                    = {222-232},

  Abstract                 = {Software development organizations applying continuous process improvement, when faced with the limits of qualitative approaches, are looking into quantitative approaches to support decision making, namely for improvement of the software project estimation process. Quantitative approaches include sizing functional requirements with standards such as ISO 19761, known as the COSMIC method. But defects in the requirements may have an impact on the accuracy of the resulting functional size, as well as an impact on the project relative effort sometimes known as the 'productivity rate' and the measurement relative effort. Our research program is investigating the relationship between the attributes of requirements engineering (RE) outputs, the software process relative effort, and the measurement process relative effort. RE outputs studied are requirements and specifications documents and data models. As functional sizing is applied, thorough examination of RE outputs is done, which is likely to lead to identifying quality attributes and related findings. As a case study, this paper reports preliminary results related to the quality of requirements artefacts from a software development organization that is applying the Agile approach to its software development process. The functional size of the software developed through five projects was measured and compared with development effort and measurement effort, taking into account the quality rating of requirements. The results led to recommendations of improvement on the RE process that the organization could deploy in its current and next software projects. This paper also presents a list of functional sizing challenges that the measurer has faced, leading to proposed recommendations for planning any software measurement project.},
  Doi                      = {10.1109/IWSM.Mensura.2014.43},
  Keywords                 = {formal specification;formal verification;software cost estimation;software process improvement;software prototyping;software quality;COSMIC method;ISO 19761 standards;agile approach;decision making;functional size measurement;functional sizing;requirements engineering quality;software development organizations;software measurement project;software process improvement;software project estimation process;Accuracy;Estimation;Organizations;Productivity;Size measurement;Software;Software measurement;COSMIC;Defects;FSM;Functional size;Measure;Quality;Requirements engineering},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7000067,
  Title                    = {Empirical-Based Extension of the COSMIC FP Method},
  Author                   = {R. Dumke and R. Neumann and A. Schmietendorf and C. Wille},
  Booktitle                = {2014 Joint Conference of the International Workshop on Software Measurement and the International Conference on Software Process and Product Measurement},
  Year                     = {2014},
  Month                    = {Oct},
  Pages                    = {5-10},

  Doi                      = {10.1109/IWSM.Mensura.2014.20},
  Keywords                 = {software quality;COSMIC FP method;COSMIC function point method;SOA implementations;agile development;apps implementation;cloud computing;effort estimation;embedded systems;empirical-based extension;methodology sizing;processes characterization;quality sizing;software products;technology sizing;Complexity theory;Estimation;Process control;Size measurement;Software measurement;Software systems;COSMIC method;cost and effort estimation;empirical aspects;functional size measurement},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7816512,
  Title                    = {Industrial Application of Automated Regression Testing in Test-Driven ETL Development},
  Author                   = {M. Dzakovic},
  Booktitle                = {2016 IEEE International Conference on Software Maintenance and Evolution (ICSME)},
  Year                     = {2016},
  Month                    = {Oct},
  Pages                    = {582-585},

  Abstract                 = {While there are many commercial Extraction, Transformation and Loading (ETL) platforms that facilitate fast and easy development of ETL applications, ETL testing is largely a manual process. In order to allow frequent releases of reliable ETL applications, an automated regression testing approach is needed. This paper presents 1TH, one such test harness tool and a methodology for agile ETL development. 1TH builds on the existing techniques in testing and database research areas. It addresses practical challenges with nondeterministic values and, to a limited extent, test dependence. 1TH is applied in an industrial ETL development, and evaluated in a case study involving production releases once every couple of weeks for more than three years. 1TH introduced minimal delays in the development process and caught numerous regressions before they escaped to production.},
  Doi                      = {10.1109/ICSME.2016.53},
  Keywords                 = {data integration;industrial engineering;regression analysis;software prototyping;statistical testing;1TH;ETL platforms;ETL testing;agile ETL development;automated regression testing;extraction-transformation and loading platforms;industrial application;nondeterministic values;test harness tool;test-driven ETL development;Data warehouses;Databases;Delays;Loading;Production;Reliability;Testing},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7804972,
  Title                    = {Automatic generation of TestNG tests cases from UML sequence diagrams in Scrum process},
  Author                   = {M. Elallaoui and K. Nafil and R. Touahni},
  Booktitle                = {2016 4th IEEE International Colloquium on Information Science and Technology (CiSt)},
  Year                     = {2016},
  Month                    = {Oct},
  Pages                    = {65-70},

  Abstract                 = {Software testing is an important step in the life cycle of agile development, it represents an efficient way to ensure the good functioning of the product. In previous work, we implemented an algorithm that takes as input user stories, and automatically generate UML sequence diagrams. In this work, these UML sequence diagrams are automatically transformed using model to model transformation then model to text transformation. This transformation, which can be applied to obtain test cases, is implemented with AndroMDA, an open source MDA Framework.},
  Doi                      = {10.1109/CIST.2016.7804972},
  Keywords                 = {Unified Modeling Language;diagrams;program testing;public domain software;software prototyping;AndroMDA;Scrum process;TestNG tests case automatic generation;UML sequence diagrams;agile development life cycle;model-model transformation;model-text transformation;open source MDA framework;software testing;Adaptation models;Documentation;Java;Machine-to-machine communications;Software;Testing;Unified modeling language;MDA;Model-Driven Testing;U2TP;UML 2},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7358415,
  Title                    = {Automatic generation of UML sequence diagrams from user stories in Scrum process},
  Author                   = {M. Elallaoui and K. Nafil and R. Touahni},
  Booktitle                = {2015 10th International Conference on Intelligent Systems: Theories and Applications (SITA)},
  Year                     = {2015},
  Month                    = {Oct},
  Pages                    = {1-6},

  Abstract                 = {The creation of UML models from user stories can be inconsistent, incomplete and incorrect task, which also requires an expertise, effort and time. In this paper, we present an algorithm for automating the transformation of user stories into sequence diagrams in the Scrum process, which can easily use to generate test cases. For automating transformation, we have implemented an algorithm that read a text file, which contains a set of user stories, then generates an XMI file for each user stories. The resulting XMI file then transformed into a sequence diagram using UML2 tool SDK plugin for Eclipse.},
  Doi                      = {10.1109/SITA.2015.7358415},
  Keywords                 = {Unified Modeling Language;XML;software prototyping;Eclipse;SDK plugin;Scrum process;UML model creation;UML2 tool;XMI file;automatic sequence diagram generation;test case generation;text file;user stories;Algorithm design and analysis;Natural language processing;Object oriented modeling;Receivers;Software;Unified modeling language;scrum;sequence diagram;user stories},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@Article{7325176,
  Title                    = {The Risks of Agile Software Development: Learning from Adopters},
  Author                   = {A. Elbanna and S. Sarker},
  Journal                  = {IEEE Software},
  Year                     = {2016},

  Month                    = {Sept},
  Number                   = {5},
  Pages                    = {72-79},
  Volume                   = {33},

  Abstract                 = {Agile software development (ASD) resulted from widespread professional discontent with traditional approaches; development projects' high failure rates; and, most important, the need for speedy, responsive delivery of software for Internet businesses. Many practitioners have embraced ASD, which commentators often extol as a faster, better, and cheaper development approach. However, a recent high-profile failure of an ASD project and the discontinued use of ASD in a software company have drawn attention to ASD's possible risks. Before we can manage such risks, we must identify them and understand why they arise. Researchers conducted interviews with 112 people in 28 organizations and with 25 ASD contractors and consultants. The interviews revealed key ASD risks that require careful management to achieve the desired project outcomes.},
  Doi                      = {10.1109/MS.2015.150},
  ISSN                     = {0740-7459},
  Keywords                 = {risk management;software prototyping;ASD risk management;Internet business software;agile software development;development project high failure rates;Agile software development;Risk management;Software development;Software engineeirng;agile risks;agile software development;software development;software development risks;software engineering;software risk management},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7783267,
  Title                    = {Review on Agile requirements engineering challenges},
  Author                   = {K. Elghariani and N. Kama},
  Booktitle                = {2016 3rd International Conference on Computer and Information Sciences (ICCOINS)},
  Year                     = {2016},
  Month                    = {Aug},
  Pages                    = {507-512},

  Abstract                 = {The popularity of agile methodology has been increased since agile offers further collaboration. Requirements engineering (RE) is one of the software development process in agile approaches. The features of face to face communication is one of agile way which unlike to other traditional software methods. Software developers are using the definition agile way to improve the agile way of activities. Besides, the challenge of dealing with RE practices is not much is known in agile way or model. However, many literature works have been done in RE in agile approaches and challenges faced by teamwork. The aim of this paper is to fill the gap by presenting RE practices in agile methodology also the challenges of RE activities which are faced by agile team members. 80 systematic literature reviews are conducted and 22 research papers are identified. Moreover, the reviews discuss RE in agile methodology approaches. This paper has adopted a systematic literature review and has applied a certain inclusion and exclusion criteria to detect the research studies related to RE in agile methodology to achieve the aim of this research. This research determined most of agile requirements engineering activities, also challenges of requirements engineering in agile methodology. Therefore, the research findings can be a reference to all researchers who are interested in this research area because the paper's findings clarify that RE in agile methodology need to have further attention by researchers and more practical results are needed to gain understandable information about RE practices in Agile methodology.},
  Doi                      = {10.1109/ICCOINS.2016.7783267},
  Keywords                 = {formal specification;software prototyping;RE;agile methodology;agile requirements engineering activities;software development process;software methods;Bibliographies;Databases;Requirements engineering;Search problems;Software;Systematics;Teamwork;Agile methodology;Collaboration;agile requirements engineering;systematic review;traditional requirements engineering},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7320454,
  Title                    = {The need of complementing plan-driven requirements engineering with emerging communication: Experiences from Volvo Car Group},
  Author                   = {U. Eliasson and R. Heldal and E. Knauss and P. Pelliccione},
  Booktitle                = {2015 IEEE 23rd International Requirements Engineering Conference (RE)},
  Year                     = {2015},
  Month                    = {Aug},
  Pages                    = {372-381},

  Doi                      = {10.1109/RE.2015.7320454},
  ISSN                     = {1090-705X},
  Keywords                 = {formal specification;systems analysis;traffic engineering computing;OEMs;V-model process;Volvo car group;automotive industry;automotive original equipment manufacturers;formal process;in-house software development;plan-driven requirements engineering;software requirements;supply-chain;Automotive engineering;Hardware;Industries;Interviews;Requirements engineering;Safety;Software;automotive requirements engineering;beyond plan-driven requirements engineering;emerging communication},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6805443,
  Title                    = {Scrum Anti-Patterns -- An Empirical Study},
  Author                   = {V. P. Eloranta and K. Koskimies and T. Mikkonen and J. Vuorinen},
  Booktitle                = {2013 20th Asia-Pacific Software Engineering Conference (APSEC)},
  Year                     = {2013},
  Month                    = {Dec},
  Pages                    = {503-510},
  Volume                   = {1},

  Abstract                 = {Wide-spread adoption of the agile movement has rapidly changed the landscape of software industry. In particular, Scrum is an agile process framework that has become extremely popular in industry. However, the practical implementation of Scrum in companies rarely follows the text book ideals. Typically, companies deviate from the proposed Scrum practices for different reasons. While some deviations may be well motivated and reasonable, companies are often tempted to adjust Scrum for the company without clearly understanding the consequences of the deviations. In this paper our aim is to identify ways of potentially harmful mishandling of Scrum in industry based on empirical data collected in a survey. The identified (mal)practices are presented in a semi-formal manner as anti-patterns. The study resulted in 10 anti-patterns that express the context of the deviation, the deviation itself, the broken core principles of Scrum, and the possible consequences of the deviation.},
  Doi                      = {10.1109/APSEC.2013.72},
  ISSN                     = {1530-1362},
  Keywords                 = {software houses;software prototyping;Scrum antipatterns;Scrum mishandling;agile process framework;software industry;Companies;Context;Industries;Interviews;Software;Testing;Agile software development;Scrum;Scrum problem areas;anti-patterns},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7167385,
  Title                    = {Virtual to the (near) end - Using virtual platforms for continuous integration},
  Author                   = {J. Engblom},
  Booktitle                = {2015 52nd ACM/EDAC/IEEE Design Automation Conference (DAC)},
  Year                     = {2015},
  Month                    = {June},
  Pages                    = {1-6},

  Abstract                 = {Continuous integration (CI) is a hot topic in software development today. CI is a critical enabler for Agile methods and higher software development velocity and productivity. However, adopting the practice of Continuous Integration can be difficult, especially when developing software for embedded systems. Practices such as Agile and Continuous Integration are designed to enable engineers to constantly improve and update their products. However, these processes can break down without access to the target system, a way to collaborate with other teams and team members, and the ability to automate tests. This paper outlines how simulation can enable teams to more effectively manage their integration and test practice, using virtual platforms as a key part of the test setup and simulation as a key part of the test strategy.},
  Doi                      = {10.1145/2744769.2747948},
  ISSN                     = {0738-100X},
  Keywords                 = {embedded systems;program testing;software development management;software prototyping;team working;virtual machines;agile methods;automatic testing;continuous integration;embedded systems;software development productivity;software development velocity;team members;test practice;virtual platforms;Boards;Computational modeling;Data models;Embedded systems;Hardware;Testing;Agile;Continuous integration;TLM;Virtual platform;simulated hardware;simulation;simulator integration;transactionlevel simulation},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@Article{7112002,
  Title                    = {A model for improving training of software developers in small companies},
  Author                   = {C. Enriquez and P. Gomez Gil},
  Journal                  = {IEEE Latin America Transactions},
  Year                     = {2015},

  Month                    = {May},
  Number                   = {5},
  Pages                    = {1453-1461},
  Volume                   = {13},

  Abstract                 = {Staff training is fundamental for small software organizations; their daily management depends upon its software engineers quickly dominate state-of-the-art methodologies. In this paper, we fully explain a recently introduced model for improving the capability and maturity of training processes in software methodologies. This model, known as CAAM (acronym in Spanish for: “Training Model of Agile Environments under Moprosoft”), is particularly suited for small companies that are willing to or have been verified in level 1 of the Mexican standard NMX-1-059/02-NYCE-2005. Such standard regulates software development companies and it is based on “Moprosoft”, a capability-maturity model specially developed for Mexico. CAAM focuses on areas related to planning activities for agile development environments, communications with customers and the use of agile testing tools.},
  Doi                      = {10.1109/TLA.2015.7112002},
  ISSN                     = {1548-0992},
  Keywords                 = {Capability Maturity Model;program testing;software engineering;software houses;software prototyping;software standards;software tools;CAAM;Mexican standard NMX-1-059/02-NYCE-2005;Spanish;agile development environments;agile testing tools;capability-maturity model;small companies;small software organizations;software developer training;software development companies;software engineers;software methodologies;staff training;training model of agile environment under Moprosoft;Adaptation models;Capability maturity model;Companies;Coordinate measuring machines;Scrum (Software development);Software;Training;CAAM;Moprosoft;Scrum;TDD;capability maturity models;training models},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6894856,
  Title                    = {Using AI to model quality attribute tradeoffs},
  Author                   = {N. A. Ernst and I. Gorton},
  Booktitle                = {2014 IEEE 1st International Workshop on Artificial Intelligence for Requirements Engineering (AIRE)},
  Year                     = {2014},
  Month                    = {Aug},
  Pages                    = {51-52},

  Abstract                 = {Many AI techniques have been applied to goal-oriented requirements engineering. However, such techniques have focused mostly on the intellectual challenge and ignored the engineering challenge of RE at scale. We discuss some of these existing approaches. We then introduce some early work that aims to add contextual quality attribute information to leverage the power of AI techniques and tools with real-world engineering. We believe this will address some of the acquisition and context problems that have plagued AI in RE.},
  Doi                      = {10.1109/AIRE.2014.6894856},
  Keywords                 = {artificial intelligence;formal specification;formal verification;systems analysis;AI techniques;RE;artificial intelligence;goal-oriented requirements engineering;quality attribute tradeoff modelling;Artificial intelligence;Cognition;Context;Electronic publishing;Information services;Planning;Software engineering;agile;requirements analysis},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7434468,
  Title                    = {Test Selection with Equivalence Class Partitioning},
  Author                   = {L. Fang and G. Li},
  Booktitle                = {2015 2nd International Symposium on Dependable Computing and Internet of Things (DCIT)},
  Year                     = {2015},
  Month                    = {Nov},
  Pages                    = {40-49},

  Abstract                 = {Software maintenance activities account for as much as two-thirds of the overall costs on an average. A way to select a subset from a test suite is thus extremely essential to save cost and provide confidence that the program modifications are correct. Though substantial research results on test selection techniques have been reported in the literature, very few software industries deploy systematic test selection strategies or automation support. The expert judgment is the most often used in the industry for identification of relevant cases for re-testing that is usually difficult and inefficient. This paper introduces an agile strategy that divides a test suite with Equivalence Classification Partition (ECP) into sub-domains. The subset selected from the sub-domains provides a complete and comprehensive coverage of test criteria. The ECP is expressed with Classification Tree Method (CTM) and easy to be adjusted for different goals flexibly, e.g., re-test for modified function, delivery deadline or human resource limit. Our method is implemented as a tool and evaluated on two projects experimentally. The results demonstrated that this method can improve the efficiency and effectiveness of re-testing greatly.},
  Doi                      = {10.1109/DCIT.2015.14},
  Keywords                 = {DP industry;equivalence classes;software maintenance;trees (mathematics);CTM;ECP;classification tree method;equivalence class partitioning;equivalence classification partition;program modifications;software industries;software maintenance activities;test selection techniques;Industries;Internet of things;Manuals;Minimization;Software;Systematics;Testing;Classification Tree Method;Equivalence Classification Partition;Test selection},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@Article{7160778,
  Title                    = {An Analytical Model to Design and Manage a Green SDN/NFV CPE Node},
  Author                   = {G. Faraci and G. Schembra},
  Journal                  = {IEEE Transactions on Network and Service Management},
  Year                     = {2015},

  Month                    = {Sept},
  Number                   = {3},
  Pages                    = {435-450},
  Volume                   = {12},

  Abstract                 = {In the last few years, SDN and NFV have been introduced with the potential to change the ossified Internet paradigm, with the final goal of creating a more agile and flexible network, at the same time reducing both CAPEX and OPEX costs. For this reason, a lot of research efforts have been devoted to optimize the implementation of these technologies, also inheriting experience from data center management. However, orchestration and management of SDN/NFV nodes present new challenges with respect to data center management, mainly due to the telecommunications context where NFV resides. With this in mind, the target of this paper is to define a management model for NFV customers and service providers, a green policy of the customer premises equipment (CPE) nodes, and an analytical model to support their design. The model is then applied to a case study to demonstrate how it can be used to optimize system performance and choose the most important parameters characterizing the design of a CPE node.},
  Doi                      = {10.1109/TNSM.2015.2454293},
  ISSN                     = {1932-4537},
  Keywords                 = {Internet;computer centres;computer network management;green computing;software defined networking;virtualisation;CAPEX cost reduction;Internet;NFV customers;OPEX cost reduction;agile network;analytical model;customer premises equipment nodes;data center management;flexible network;green SDN-NFV CPE node;green policy;network functions virtualization;node management;node orchestration;service providers;system performance optimization;telecommunications context;Analytical models;Computer architecture;Hardware;Markov processes;Servers;Software;Virtualization;Markov modeling;NFV;Network Function Allocation;QoS;SDN;management costs;network function allocation},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7405526,
  Title                    = {Exploiting the FIWARE cloud platform to develop a remote patient monitoring system},
  Author                   = {M. Fazio and A. Celesti and F. G. Márquez and A. Glikson and M. Villari},
  Booktitle                = {2015 IEEE Symposium on Computers and Communication (ISCC)},
  Year                     = {2015},
  Month                    = {July},
  Pages                    = {264-270},

  Abstract                 = {FIWARE represents a new European Cloud platform that aims to land on the international ICT market bringing prominent novel advantages for societies. In fact, it provides new compelling and novel software components, available through APIs, able to give developers new valuable Cloud platform functionalities. The main contribution of this work consists in providing software architects an useful experience regarding the adoption of FIWARE for the design of a Cloud and Internet of Things (IoT) architecture. More specifically, we describe how can be possible to use the FIWARE Cloud platform to speed up the design of a real e-health Remote Patient Monitoring (RPM) architecture with an agile software development methodology. Our architecture aims to allow care givers to improve remote assistance to patients at home, optimizing the management of the workflow of doctors, physicians, medical assistants, and other involved hospital operators. In this paper, we specifically describe the main FIWARE components that we have adopted to design our architecture and how they have been integrated.},
  Doi                      = {10.1109/ISCC.2015.7405526},
  Keywords                 = {Internet of Things;application program interfaces;cloud computing;health care;information technology;patient monitoring;software architecture;API;European cloud platform;FIWARE cloud platform;Internet of Things;IoT;RPM architecture;e-health;international ICT market;remote patient monitoring system;software components;Cloud computing;Computer architecture;Medical diagnostic imaging;Medical services;Monitoring;Personnel;Sensors;Cloud Computing;FIWARE;Generic Enabler;RPM;e-health;monitoring},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7883343,
  Title                    = {Values-First SE: Research Principles in Practice},
  Author                   = {M. A. Ferrario and W. Simm and S. Forshaw and A. Gradinar and M. T. Smith and I. Smith},
  Booktitle                = {2016 IEEE/ACM 38th International Conference on Software Engineering Companion (ICSE-C)},
  Year                     = {2016},
  Month                    = {May},
  Pages                    = {553-562},

  Abstract                 = {The realization that software has a far reaching impact on politics, society and the environment is not new. However, only recently software impact has been explicitly described as `systemic' and framed around complex social problems such as sustainability. We argue that `wicked' social problems are consequences of the interplay between complex economical, technical and political interactions and their underlying value choices. Such choices are guided by specific sets of human values that have been found in all cultures by extensive evidence-based research. The aim of this paper is to give more visibility to the interrelationship between values and SE choices. To this end, we first introduce the concept of Values-First SE and reflect on its implications for software development. Our contribution to SE is embedding the principles of values research in the SE decision making process and extracting lessons learned from practice.},
  Keywords                 = {software engineering;SE decision making process;extensive evidence-based research;software development;software impact;values-first SE;Cloud computing;Decision making;Economics;Ethics;Standards;action research;agile methods;design thinking;socially conscious software;values theory},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6926496,
  Title                    = {Proving that the release management process can enhance throughput in software development projects},
  Author                   = {N. N. V. Ferreira and J. J. Langerman},
  Booktitle                = {2014 9th International Conference on Computer Science Education},
  Year                     = {2014},
  Month                    = {Aug},
  Pages                    = {419-424},

  Abstract                 = {The process that involves creating and altering software systems can be defined as the software development lifecycle. People often use methodologies and methods in order to develop these systems with success factors such as people, processes and technology. The underlying issue in such a Iifecycle is that project defects are identified late within the lifecycle and therefore, the process of rectifying these problems becomes costly. Ultimately, an ideal product is one with minimal or zero defects, which can be achieved with a software project that prevents or detects defects earlier within the cycle. Release management can be described as the process involving decision-making regarding the implementation and release of a software product. A conceptual framework exists, which stipulates the stages involved in the development process of a software application. Several models exist that describe the software development Iifecycle (SDLC) in different approaches. The purpose of the research presented in this paper is to incorporate findings where large companies with global IT projects can adopt the Agile conceptual framework and to testify whether all types of IT projects will benefit from a frequent release approach to the delivery of the project. Three different projects across a large South African financial institution that specialises in corporate organisation banking and core-banking functionality will be studied and presented as case studies. Release management will also be studied from an organisational perspective with one of South Africa's banking institution in context. Data will be retrieved by carrying out interviews and surveys with appropriate stakeholders, and therefore, analysed to generate a valid conclusion.},
  Doi                      = {10.1109/ICCSE.2014.6926496},
  Keywords                 = {software development management;software prototyping;Agile conceptual framework;IT projects;SDLC;South Africa;decision making;information technology;project delivery;release management process;software alteration;software creation;software development lifecycle;software development projects;software product;Computer architecture;Computers;Economics;Indexes;Measurement;Production;Software;Software development lifecycle;frequent releases;release management},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7881129,
  Title                    = {On the Virtualization and Dynamic Orchestration of Satellite Communication Services},
  Author                   = {R. Ferrus and H. Koumaras and O. Sallent and T. Rasheed and E. Duros and R. Riggio and N. Kuhn and P. Gelard and T. Ahmed},
  Booktitle                = {2016 IEEE 84th Vehicular Technology Conference (VTC-Fall)},
  Year                     = {2016},
  Month                    = {Sept},
  Pages                    = {1-5},

  Doi                      = {10.1109/VTCFall.2016.7881129},
  Keywords                 = {satellite ground stations;software defined networking;virtualisation;NFV technology;Network Function Virtualization;SDN technology;Software Defined Networking;open virtual platform;satellite communication service dynamic orchestration;satellite communication service virtualization;satellite ground segment system;Computer architecture;Network function virtualization;Portals;Satellite broadcasting;Satellites;Virtualization},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7932679,
  Title                    = {Agile Software Development Learning through Open Hardware Project},
  Author                   = {A. F. G. Filho and C. F. C. d. Resende and C. F. Iglesias and J. G. Mayworm and M. E. O. Jardim and R. D. Paiva and R. d. Toledo},
  Booktitle                = {2015 6th Brazilian Workshop on Agile Methods (WBMA)},
  Year                     = {2015},
  Month                    = {Oct},
  Pages                    = {40-47},

  Abstract                 = {One of the biggest challenges faced by Computer Science undergraduate courses is to create challenging and stimulating learning environment for their students. As a part of Software Engineering focused on innovation, Agile development allows teachers to experiment new ways to transform their students' knowledge. Practitioners of this discipline often prefer to use participative approaches than the traditional passive methods. In this work, we want to go a little further. Instead of presenting one more Agile Development learning method through software, this paper describes the experience of teaching Agile Methods through an Open Hardware project. We hope to contribute to Agile teachers, so they can take advantage of the exciting hardware world to innovate their teaching methods.},
  Doi                      = {10.1109/WBMA.2015.12},
  Keywords                 = {computer science education;software prototyping;teaching;Computer Science undergraduate courses;Software Engineering;agile software development learning;learning environment;open hardware project;teaching;Agile software development;Computers;Context;Education;Hardware;Learning systems;Software;Agile;Arduino;Hardware;Learning;Open;Teaching},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7284595,
  Title                    = {Visual Management and Blind Software Developers},
  Author                   = {A. F. G. Filho and R. d. Toledo},
  Booktitle                = {2015 Agile Conference},
  Year                     = {2015},
  Month                    = {Aug},
  Pages                    = {31-39},

  Abstract                 = {With the popularization of Agile methods for developing and managing software projects, many organizations have been using visual management tools for planning, executing and evaluating their activities. These visual management tools range from simple information such as goals and deadlines to support all data required to represent the entire development process. The benefits are transparency, communication, engagement, simplicity and process awareness. However, these tools have a drawback: they are inaccessible to the blind. This paper presents an action research about the adoption of Agile methods with visual management by a software development team that includes a blind programmer, describing the difficulties encountered and how they overcame them.},
  Doi                      = {10.1109/Agile.2015.14},
  Keywords                 = {handicapped aids;planning (artificial intelligence);software management;software prototyping;agile methods;blind programmer;blind software developers;planning;software projects;visual management;Avatars;Organizations;Pins;Planning;Software;Strips;Visualization;Agile Methods;Blindness;Kanban;Scrum;Software Development;Visual Management},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7830744,
  Title                    = {Customer-Centric Service Provider Architecture for the R E Community},
  Author                   = {S. Filiposka and A. Mishev and F. Wein and J. Sobieski},
  Booktitle                = {2016 IEEE International Conference on Cloud Computing Technology and Science (CloudCom)},
  Year                     = {2016},
  Month                    = {Dec},
  Pages                    = {596-601},

  Abstract                 = {The need for customer-centric agile integrated environment offered in an on-demand self-service manner challenges the traditional R&E operations support systems. The service provider architecture proposed in this paper aims to satisfy end-user's requirements by providing a coordinated provisioning of virtualized resources through automation. Empowered by the establishment of open collaborative partnerships it offers expansion of the service catalog with multi-domain solutions based on standardized interoperability between R&E and commercial CSPs. The benefits of the approach are presented via a cloud based case study service that is transformed from a traditional silo to a business process modeled service with added values.},
  Doi                      = {10.1109/CloudCom.2016.0103},
  Keywords                 = {cloud computing;software architecture;software prototyping;business process modeled service;cloud based case study service;commercial CSP;coordinated provisioning;customer-centric service provider architecture;open collaborative partnerships;service catalog expansion;standardized interoperability;virtualized resources;Business;Cloud computing;Computer architecture;Interoperability;Portfolios;Service-oriented architecture;Standards;automation;customer-centric;operations and management;service oriented},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6735647,
  Title                    = {The Revolution in Military Affairs 2.0: Information Dominance and the Democratization of Information Technology},
  Author                   = {A. C. Firestone},
  Booktitle                = {MILCOM 2013 - 2013 IEEE Military Communications Conference},
  Year                     = {2013},
  Month                    = {Nov},
  Pages                    = {348-353},

  Doi                      = {10.1109/MILCOM.2013.67},
  ISSN                     = {2155-7578},
  Keywords                 = {information systems;information technology;military computing;military systems;industrial age forces;industrial age military organization;information dominance;information silos;information systems;information technology democratization;military affairs;modernization efforts;noninteroperable combat systems;responsive information age;Command and control systems;Middleware;Open source software;Organizations;Standards organizations;C4I;command and control;information dominance;middleware;military;net-centric;net-centric warfare;power to the edge;self-synchronization;technology},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6606635,
  Title                    = {Scaling agile methods to regulated environments: An industry case study},
  Author                   = {B. Fitzgerald and K. J. Stol and R. O'Sullivan and D. O'Brien},
  Booktitle                = {2013 35th International Conference on Software Engineering (ICSE)},
  Year                     = {2013},
  Month                    = {May},
  Pages                    = {863-872},

  Abstract                 = {Agile development methods are growing in popularity with a recent survey reporting that more than 80% of organizations now following an agile approach. Agile methods were seen initially as best suited to small, co-located teams developing non-critical systems. The first two constraining characteristics (small and co-located teams) have been addressed as research has emerged describing successful agile adoption involving large teams and distributed contexts. However, the applicability of agile methods for developing safety-critical systems in regulated environments has not yet been demonstrated unequivocally, and very little rigorous research exists in this area. Some of the essential characteristics of agile approaches appear to be incompatible with the constraints imposed by regulated environments. In this study we identify these tension points and illustrate through a detailed case study how an agile approach was implemented successfully in a regulated environment. Among the interesting concepts to emerge from the research are the notions of continuous compliance and living traceability.},
  Doi                      = {10.1109/ICSE.2013.6606635},
  ISSN                     = {0270-5257},
  Keywords                 = {program diagnostics;safety-critical software;software prototyping;agile adoption;agile approach;agile development method;colocated teams;continuous compliance;distributed teams;living traceability;regulated environment;safety-critical system;Documentation;Organizations;Product development;Quality management;Safety;Software;Standards;Agile methods;Scrum;case study;regulated environments},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@Article{7311000,
  Title                    = {Agile Compass: A Tool for Identifying Maturity in Agile Software-Development Teams},
  Author                   = {R. M. Fontana and S. Reinehr and A. Malucelli},
  Journal                  = {IEEE Software},
  Year                     = {2015},

  Month                    = {Nov},
  Number                   = {6},
  Pages                    = {20-23},
  Volume                   = {32},

  Abstract                 = {Researchers investigated how agile software development teams evolve. They analyzed nine teams' evolution of practices and found that the process was idiosyncratic. Each team adopted practices on the basis of its circumstances and improved the practices on the basis of the challenges it faced. Using this research, the researchers designed the Agile Compass, a questionnaire based on a set of guidelines for agile-development improvement, supported by real teams' values and principles. The article has three Web extras. The first shows the Agile Compass questionnaire (https://s3.amazonaws.com/ieeecs.cdn.csdl.public/mags/so/2015/06/extras/mso201506_AnAgile_s1.pdf), which can help development teams identify which outcomes they have accomplished. The second describes the Agile Compass research approach (https://s3.amazonaws.com/ieeecs.cdn.csdl.public/mags/so/2015/06/extras/mso201506_AnAgile_s2.png). The third is the Map of Evidence (https://s3.amazonaws.com/ieeecs.cdn.csdl.public/mags/so/2015/06/extras/mso201506_AnAgile_s3.png), showing the information supporting each type of project outcome that the authors gathered during interviews with development teams.},
  Doi                      = {10.1109/MS.2015.135},
  ISSN                     = {0740-7459},
  Keywords                 = {software development management;software prototyping;Agile Compass research approach;agile software-development teams;agile-development improvement;map-of-evidence approach;maturity identification;team principles;team values;Agile software;Context modeling;Encoding;Programming;Software development;Software engineering;Agile Compass;agile software development;software development;software engineering;software process maturity},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7166082,
  Title                    = {Animating Organizational Patterns},
  Author                   = {T. Frtala and V. Vranic},
  Booktitle                = {2015 IEEE/ACM 8th International Workshop on Cooperative and Human Aspects of Software Engineering},
  Year                     = {2015},
  Month                    = {May},
  Pages                    = {8-14},

  Abstract                 = {Organizational patterns are the key to a stepwise adoption of agile and lean approaches and to a piecemeal growth of agile and lean organization of work. However, their text description is not easy to comprehend. In this paper, we introduce our initial efforts towards establishing an approach to animate organizational patterns as text adventure games. Players pass through a series of scenes described using Erickson's conversational hypnosis language patterns in order to better evoke their experience. The game scenario space is expressed using UML state machine diagrams. The approach is presented on adventure games we created for the Architect Also Implements organizational pattern.},
  Doi                      = {10.1109/CHASE.2015.8},
  Keywords                 = {computer animation;serious games (computing);software prototyping;text analysis;Architect Also Implements organizational pattern;UML state machine diagrams;agile approach;conversational hypnosis language patterns;game experience;game scenario space;lean approach;organizational pattern animation;text adventure games;Computer architecture;Games;Graphics;Organizations;Software;Software engineering;Unified modeling language;Erickson's converstaional hypnosis patterns;agile;lean;organizational patterns;text adventure games},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7765512,
  Title                    = {Trace++: A Traceability Approach to Support Transitioning to Agile Software Engineering},
  Author                   = {F. Furtado and A. Zisman},
  Booktitle                = {2016 IEEE 24th International Requirements Engineering Conference (RE)},
  Year                     = {2016},
  Month                    = {Sept},
  Pages                    = {66-75},

  Abstract                 = {Agile methodologies have been introduced as an alternative to traditional software engineering methodologies. However, despite the advantages of using agile methodologies, the transition between traditional and agile methodologies is not an easy task. There are several problems associated with the use of agile methodologies. Examples of these problems are related to (i) lack of metrics to measure the amount of rework that occurs per sprint, (ii) interruption of a project after several iterations, (iii) changes in the requirements, (iv) lack of documentation, and (v) lack of management control. In this paper we present Trace++, a traceability technique that extends traditional traceability relationships with extra information in order to support the transition between traditional and agile software development. The use of Trace++ has been evaluated in two real projects of different software development companies to measure the benefits of using Trace++ to support agile software development.},
  Doi                      = {10.1109/RE.2016.47},
  Keywords                 = {program diagnostics;software prototyping;Trace++;agile software development;agile software engineering;traceability approach;Context;Documentation;Measurement;Proposals;Software;Software engineering;Traceability;agile methods;hybrid process},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6732254,
  Title                    = {Keynote 2 — Past, current, and future of faster, cheaper, better},
  Author                   = {T. Gallagher},
  Booktitle                = {2013 International Conference on Reconfigurable Computing and FPGAs (ReConFig)},
  Year                     = {2013},
  Month                    = {Dec},
  Pages                    = {1-1},

  Abstract                 = {The Mars Pathfinder landed in the Ares Vallis valley on July 4th, 1997, and after deploying the Sojourner rover and sending back detailed panoramic color photos the mission captured the world's attention and people's imagination. The Mars Pathfinder development was an example of doing design quickly, at less cost and having it work better than expected (give or take a few software “glitches”). So why does industry have so much trouble doing “Faster, Cheaper, Better” in larger and more complex FPGA based systems since then? This presentation takes a journey through insights gained using different tools, techniques and methods to sort through what works, where we need to go and what the future holds. Topics covered are why ESL/HLS methods have limited acceptance, the “superman” dilemma, issues with both multi-core and RCC development, the problem with using languages (i.e. English) to describe system specifications and how software based agile and model based engineering techniques can greatly improve the FPGA development process.},
  Doi                      = {10.1109/ReConFig.2013.6732254},
  ISSN                     = {2325-6532},
  Keywords                 = {field programmable gate arrays;formal specification;high level synthesis;reconfigurable architectures;software prototyping;Ares Vallis valley;ESL method;FPGA development process;HLS method;Mars Pathfinder development;RCC development;Sojourner rover;complex FPGA based systems;model based engineering technique;multicore development;panoramic color photos;software based agile engineering technique;superman dilemma;system specification},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7809464,
  Title                    = {Can Metamodels Link Development to Design Intent?},
  Author                   = {M. T. Gamble},
  Booktitle                = {2016 IEEE/ACM 1st International Workshop on Bringing Architectural Design Thinking Into Developers' Daily Activities (BRIDGE)},
  Year                     = {2016},
  Month                    = {May},
  Pages                    = {14-17},

  Abstract                 = {Developers of enterprise software are often admonished to be more aware of where the output of their programming tasks fit within the outcomes of the business which they serve. However, despite recent progress in adopting agile development techniques and promotion of architecture frameworks for greater traceability between IT efforts and business outcomes, such insight is still elusive. Meanwhile the renaissance of design thinking is not well represented in those same “modern” frameworks. We review components of current metamodels for development and architecture frameworks and point out tools from service design thinking that could be paired with the frameworks. Some extensions are proposed to align metamodels to improve the conceptual orientation of developers and other participants in the development process. The linkage between design intent and development is possible, but not clearly apparent in current metamodels.},
  Doi                      = {10.1109/Bridge.2016.012},
  Keywords                 = {business data processing;software architecture;software prototyping;IT efforts;agile development;business outcomes;conceptual orientation;design intent;enterprise software;metamodels;service design thinking;software architecture;software development;Computer architecture;Couplings;Organizations;Software;Standards organizations;Unified modeling language},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6685123,
  Title                    = {Assessing individual performance in Agile undergraduate software engineering teams},
  Author                   = {R. F. Gamble and M. L. Hale},
  Booktitle                = {2013 IEEE Frontiers in Education Conference (FIE)},
  Year                     = {2013},
  Month                    = {Oct},
  Pages                    = {1678-1684},

  Doi                      = {10.1109/FIE.2013.6685123},
  ISSN                     = {0190-5848},
  Keywords                 = {computer aided instruction;computer science education;educational courses;further education;groupware;product development;program testing;project management;social networking (online);software metrics;software prototyping;ASD process;Scrum;Sprint grade;agile software development process;agile undergraduate software engineering team;broad data;collaborative environment;computer science;customer requirements;event analysis;event capture;event capture system;individual performance aspects;individual performance assessment;product outcome;project management modules;rapid product development;senior software project course;social network;student performance evaluation;team trust;trusted self-organizing development team;Electronic publishing;Information services;Internet;Measurement;Software;Software engineering;Variable speed drives;Agile Software Development;Scrum;performance assessment;undergraduate software engineering},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7541896,
  Title                    = {Agile Validation of Higher Order Transformations Using F-Alloy},
  Author                   = {L. Gammaitoni and P. Kelsen and Q. Ma},
  Booktitle                = {2016 10th International Symposium on Theoretical Aspects of Software Engineering (TASE)},
  Year                     = {2016},
  Month                    = {July},
  Pages                    = {125-131},

  Abstract                 = {Model transformations play a key role in model driven software engineering approaches. Validation of model transformations is crucial for the quality assurance of software systems to be constructed. The relational logic based specification language Alloy and its accompanying tool the Alloy Analyzer have been used in the past to validate properties of model transformations. However Alloy based analysis of transformations suffers from time complexity and scalability issues. The problem becomes even more severe when it comes to higher order transformations that are inherently more complex. In previous work, we proposed a sub-language of Alloy, called F-Alloy, that is tailored for model transformation specifications. Instead of pure analysis based validation, F-Alloy speeds up the validation of model transformations by applying a hybrid strategy that combines analysis with interpretation. In this paper, we show how the F-Alloy approach can be extended to also support efficient validation of higher order transformations.},
  Doi                      = {10.1109/TASE.2016.21},
  Keywords                 = {formal specification;software quality;specification languages;Alloy Analyzer tool;F-Alloy specification language;agile validation;model driven software engineering approach;model transformation;model transformation specification;relational logic based specification language;scalability issue;software quality assurance;time complexity issue;Analytical models;Computational modeling;Context modeling;Metals;Semantics;Software engineering;Unified modeling language;Alloy;F-Alloy;agile;higher-order transformations;interpretation;model transformation;validation},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@Article{7948666,
  Title                    = {Agile Paging for Efficient Memory Virtualization},
  Author                   = {J. Gandhi and M. D. Hill and M. M. Swift},
  Journal                  = {IEEE Micro},
  Year                     = {2017},
  Number                   = {3},
  Pages                    = {80-86},
  Volume                   = {37},

  Doi                      = {10.1109/MM.2017.67},
  ISSN                     = {0272-1732},
  Keywords                 = {Memory management;Software engineering;Switches;Virtual machine monitors;Virtual machining;Virtualization;nested paging;shadow paging;translation look-aside buffer;virtual machines;virtual memory;virtualization},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6986021,
  Title                    = {Agile transformation: What is it about?},
  Author                   = {T. J. Gandomani and H. Zulzalil and M. Z. Nafchi},
  Booktitle                = {2014 8th. Malaysian Software Engineering Conference (MySEC)},
  Year                     = {2014},
  Month                    = {Sept},
  Pages                    = {240-245},

  Abstract                 = {Agile software development by offering new values motivates software companies to use Agile methods instead of traditional methods. However, reviewing the literature shows that leaving traditional methods and moving to Agile methods is subjected to many serious challenges. We have conducted a large-scale research study to empirically discover various aspects of Agile transformation. Our Grounded Theory study showed the general outline of Agile transformation. The main aim of this paper is to figure out the most important concepts that need to be considered when moving to Agile. This study showed that Agile transformation comprises many concepts, activities, and steps including transformation prerequisites, facilitators, framework, assessment, coaching, and so on. Companies need to be familiar with these concepts before starting transitioning to Agile.},
  Doi                      = {10.1109/MySec.2014.6986021},
  Keywords                 = {DP industry;software prototyping;agile methods;agile software development;agile transformation;grounded theory;software companies;Agile software development;Companies;Computers;Interviews;Software;Training;Agile methods;Agile software development;Agile transformation;Agile transition;Grounded Theory},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7344019,
  Title                    = {Agile way of educating},
  Author                   = {G. C. Gannod and D. A. Troy and J. E. Luczaj and D. T. Rover},
  Booktitle                = {2015 IEEE Frontiers in Education Conference (FIE)},
  Year                     = {2015},
  Month                    = {Oct},
  Pages                    = {1-3},

  Abstract                 = {We have investigated whether Agile practices can be applied as a pedagogical approach to derive benefit in the areas of encouraging students to take responsibility for their learning (self managed learning), continuous improvement through reflection, alternative approaches for grading, increased engagement by learners, and more effective data collection and assessment of outcomes. Agile is an umbrella term for values, principles and practices applied to the process of software development. The Agile movement has aimed to develop a new and better culture within the software development community and has seen an increased rate of adoption within corporate settings. The goal of this workshop is to help participants explore how Agile development, a management technique borne out of the software industry, can not only change the way that students engage in project-based and team-based course projects, but also transform the way that we educate our students.},
  Doi                      = {10.1109/FIE.2015.7344019},
  Keywords                 = {courseware;software prototyping;teaching;agile development;agile movement;agile practices;agile way;data collection;educating;grading;management technique;project-based course projects;software development community;software industry;students;team-based course projects;Collaboration;Computers;Conferences;Education;Industries;Reflection;Software;Agile;Innovative Pedagogy;Project-based Learning},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7095010,
  Title                    = {Model integration workflow for keeping models up to date in a research simulator},
  Author                   = {T. Gerlach and U. Durak and J. Gotschlich},
  Booktitle                = {2014 4th International Conference On Simulation And Modeling Methodologies, Technologies And Applications (SIMULTECH)},
  Year                     = {2014},
  Month                    = {Aug},
  Pages                    = {125-132},

  Abstract                 = {Flight simulators can be categorised as research simulators, engineering simulators and training simulators. Research simulators can be introduced as both test beds for flight simulator research and computational tools for flight systems and human factors research. While engineering simulators are utilised for systems development, training simulators are used for flight training. The models that are used in training simulators and also in engineering simulators are more mature and stable. On the other hand, the models in research simulators are subject to a constant change. While Model Based Design and Software Development has brought us agile model development workflows, so that modellers can update their models more easily, it came up with some serious systems integration and testing problems, so systems developers need to establish mechanisms to tackle frequent behaviour and interface changes. DLR's Institute of Flight Systems (FT) has a long tradition in flight research and simulation of various flight vehicles. Currently a modern research simulator facility is being operated at DLR Braunschweig - AVES (Air Vehicle Simulator). AVES is designed such that interchangeable cockpits of rotorcraft (EC135) and airplanes (A320) can be operated on motion and fixed-base platforms according to the particular needs. 2Simulate is the enabling real-time simulation infrastructure of the AVES. This paper presents 2Simulate model integration workflow based on Mathwork's Simulink Coder.},
  Doi                      = {10.5220/0005011301250132},
  Keywords                 = {Atmospheric modeling;Computational modeling;Data models;Load modeling;Mathematical model;Real-time systems;Software packages;Flight Simulators;Model Integration;Model based Design and Development;Simulink Coder},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6636706,
  Title                    = {On requirements verification for model refinements},
  Author                   = {C. Ghezzi and C. Menghi and A. M. Sharifloo and P. Spoletini},
  Booktitle                = {2013 21st IEEE International Requirements Engineering Conference (RE)},
  Year                     = {2013},
  Month                    = {July},
  Pages                    = {62-71},

  Abstract                 = {Conventional formal verification techniques rely on the assumption that a system's specification is completely available so that the analysis can say whether or not a set of properties will be satisfied. On the contrary, modern development lifecycles call for agileincremental and iterativeapproaches to tame the boosting complexity of modern software systems and reduce development risks. We focus here on requirements verification performed in the early exploratory stages on high-level models and we discuss how this can be integrated into an agile approach. We present a new technique to model-check incomplete high-level specifications against formally specified requirements. We do this in the context of incomplete hierarchical Statecharts, verified against a variation of CTL properties. Our approach supports step-wise specification and refinement verification. Verification can be incremental, that is alternative refinements may be separately explored and verification is only replayed for the modified parts. The results are presented by introducing the formalisms, the model-checking algorithm, and the tool we have implemented.},
  Doi                      = {10.1109/RE.2013.6636706},
  ISSN                     = {1090-705X},
  Keywords                 = {formal specification;formal verification;software prototyping;CTL properties;agile approach;formally specified requirements;high-level models;incomplete hierarchical statecharts;incremental verification;model checking algorithm;model-check incomplete high-level specifications;refinement verification;requirements verification;software development risk reduction;software systems;step-wise specification;system specification;Analytical models;Complexity theory;Context;History;Model checking;Semantics;Software systems;Agile Development;Formal Verification;Incremental Verification;Model Checking;Software Modeling;Statecharts},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7472075,
  Title                    = {Computational agile beam ladar imaging},
  Author                   = {A. Ghosh and V. Patel and M. A. Powers},
  Booktitle                = {2016 IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP)},
  Year                     = {2016},
  Month                    = {March},
  Pages                    = {2239-2243},

  Abstract                 = {A LAser Detection And Ranging (LADAR) apparatus obtains range information from a three dimensional scene by emitting laser beams and collecting the reflected rays from target objects in the region of interest. The Agile Beam LADAR concept makes the measurement and interpretation process more efficient by a software-defined architecture that leverages Computational Imaging principles to this end. Using these techniques, we show that, the process of object identification and scene understanding can be accurately performed in the LADAR measurement domain thereby rendering the efforts of pixel based scene reconstruction superfluous.},
  Doi                      = {10.1109/ICASSP.2016.7472075},
  Keywords                 = {image reconstruction;optical radar;3D scene;Agile beam LADAR;Computational Imaging;LADAR measurement;computational agile beam ladar imaging;laser detection and ranging apparatus;object identification;scene reconstruction;scene understanding;Discrete cosine transforms;Image reconstruction;Imaging;Laser beams;Measurement by laser beam;Robots;Training;Agile-beam LADAR imaging;imaging;object recognition},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@Article{6809167,
  Title                    = {Profiling Support for Runtime Managed Code: Next Generation Performance Monitoring Units},
  Author                   = {E. Gibert and R. Martínez and C. Madriles and J. M. Codina},
  Journal                  = {IEEE Computer Architecture Letters},
  Year                     = {2015},

  Month                    = {Jan},
  Number                   = {1},
  Pages                    = {62-65},
  Volume                   = {14},

  Abstract                 = {Given the increase of runtime managed code environments in desktop, server, and mobile segments, agile, flexible, and accurate performance monitoring capabilities are required in order to perform wise code transformations and optimizations. Common profiling strategies, mainly based on instrumentation and current performance monitoring units (PMUs), are not adequate and new innovative designs are necessary. In this paper, we present the desired characteristics of what we call next generation PMUs and advocate for hardware/software collaborative approaches where hardware implements the profiling hooks and mechanisms and software implements the complex heuristics. We then propose a first design in which the hardware uses a small, yet flexible table to profile specific code regions and the software decides what/when/how to profile. This first design meets all required features and we aim it as the seed for future PMUs extensions to enable novel dynamic code transformations and optimizations.},
  Doi                      = {10.1109/LCA.2014.2321398},
  ISSN                     = {1556-6056},
  Keywords                 = {groupware;optimising compilers;software performance evaluation;system monitoring;PMUs;dynamic code optimizations;dynamic code transformations;hardware-software collaborative approaches;instrumentation;next generation performance monitoring units;profiling hooks;profiling support;runtime managed code environments;Hardware;Instruments;Monitoring;Optimization;Phasor measurement units;Runtime;Software;Performance monitoring unit (PMU);just in time (JIT) compiler;profiling;runtime managed code},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7365803,
  Title                    = {Learning Enterprise Agile Software Engineering: Scaling Agility at the Enterprise Level},
  Author                   = {A. Q. Gill},
  Booktitle                = {2015 24th Australasian Software Engineering Conference},
  Year                     = {2015},
  Month                    = {Sept},
  Pages                    = {148-154},

  Abstract                 = {Agile software engineering practices, originated in the context of individual software project development, are getting vast attention from enterprises for handling multiple agile software engineering projects at a large program and portfolio level. Adoption of agility at a large scale is a challenging task. The success of agility adoption at a large scale is dependent on the knowledge and skills of people involved. This suggests that agile software engineering education and training remains one of the important factors for organizations pursuing to scale agile practices for large environments. However, the teaching of agile software engineering practices for a large scale poses many challenges to software engineering educators. These difficulties include how to establish and simulate an appropriate large scale software engineering environment. This paper presents learnings from teaching agile software engineering practices for large scale at the University of Technology - Sydney (UTS), Australia. The learnings from this paper can be used by other educators who are aiming to teach enterprise scale agile software engineering practices.},
  Doi                      = {10.1109/ASWEC.2015.26},
  ISSN                     = {1530-0803},
  Keywords                 = {computer science education;project management;software management;software prototyping;Australia;UTS;University of Technology Sydney;agile software engineering education;agile software engineering training;learning enterprise;portfolio level;software project development;Adaptation models;Computer architecture;Education;Portfolios;Project management;Software;Software engineering;Agile portfolio;agile program;agile project;enterprise agile;scaling agility},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7018449,
  Title                    = {A domain specific language for stepwise design of software architectures},
  Author                   = {F. Gilson and V. Englebert},
  Booktitle                = {2014 2nd International Conference on Model-Driven Engineering and Software Development (MODELSWARD)},
  Year                     = {2014},
  Month                    = {Jan},
  Pages                    = {67-78},

  Abstract                 = {Stakeholders have to face requirements in increasing number and complexity. Their translations to system functionalities are often diluted into the overall architecture so that it becomes tricky to undertake future changes. Since information systems are intended to evolve in terms of functionalities and underlying technologies, the link between requirements and design artifacts is primordial. Agile design methods and documentation techniques have emerged in the past years in order to deal with the amount of requirements and to trace the decision process and the rationale sustaining a software model. Also, it is not unusual that numerous technologies with similar purpose are confronted to each other during the design phase. In the present work, we propose an integrated framework combining system requirement definitions, a component-based modeling language and model transformations. Architecturally-significant requirements are explicitly linked to software architecture elements and iteratively refined or implemented by model transformations. Any transformation must be documented, even briefly, and the framework retains the transformations tree. This way, the iterative decision and design processes are completely documented for future reference or modification, i.e, designers can (i) see the mapping between a system requirement and its implementation in the architecture model, (ii) explore design alternatives or apply structural modifications without losing previous versions of the model, and finally (iii), depending on the level of documentation, at least understand partially the reasons why the model is how it is.},
  Keywords                 = {Computer architecture;Computers;Concrete;Design methodology;Ports (Computers);Protocols;Servers;Design Method;Design Rationale;Model Transformation;Software Architecture;Traceability},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7116145,
  Title                    = {Policy-based orchestration of NFV services in Software-Defined Networks},
  Author                   = {K. Giotis and Y. Kryftis and V. Maglaris},
  Booktitle                = {Proceedings of the 2015 1st IEEE Conference on Network Softwarization (NetSoft)},
  Year                     = {2015},
  Month                    = {April},
  Pages                    = {1-5},

  Abstract                 = {In this paper we investigate synergies between Network Functions Virtualization (NFV) architectures and Software-Defined Networks (SDN). We identify value adding capabilities such technologies may offer to telecom providers regarding agile management and deployment of network functions across their infrastructures. Specifically, we propose a modular NFV architecture that permits policy-based management of Virtualized Network Functions (VNFs). Hence we can handle the lifecycle of VNFs and dynamically instantiate business applications as Service Chains of diverse VNFs delivered to large scale customers. To describe network resources, network control functions and VNFs capabilities we introduced an Information Model that abstracts these elements. In order to verify the proposed architecture we considered the case of multiple Content Delivery Network (CDN) providers having CDN caching nodes hosted by another operator. We implemented and deployed VNFs capable to map virtual links on the physical substrate and monitor the traffic of each client, ultimately providing the means to instantiate and orchestrate a policy-based traffic engineering service as a business application.},
  Doi                      = {10.1109/NETSOFT.2015.7116145},
  Keywords                 = {software defined networking;telecommunication network management;telecommunication traffic;virtualisation;CDN caching node;CDN provider;NFV service;SDN;VNF;agile management;information model;large scale customer;modular NFV architecture;multiple content delivery network;network control function;network functions virtualization architecture;network resource;physical substrate;policy-based management;policy-based orchestration;policy-based traffic engineering service;service chains;software-defined network;telecom provider;traffic monitoring;value adding capability;virtual link;virtualized network function;Business;Computer architecture;Engines;Monitoring;Substrates;Switches;CDN;NFV;OpenFlow;Policy-based Management;SDN;Service Chains},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7436020,
  Title                    = {Using risk management to balance agile methods: A study of the Scrum process},
  Author                   = {B. Gold and C. Vassell},
  Booktitle                = {2015 2nd International Conference on Knowledge-Based Engineering and Innovation (KBEI)},
  Year                     = {2015},
  Month                    = {Nov},
  Pages                    = {49-54},

  Doi                      = {10.1109/KBEI.2015.7436020},
  Keywords                 = {risk management;software engineering;Scrum process;UK IT sectors;risk management;risk strategy;software development;Decision support systems;Interviews;Organizations;Risk management;Scrum framework;Scrum process;agile methodologies;risk management},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6759202,
  Title                    = {REQcollect: Requirements Collection, Project Matching and Technology Transition},
  Author                   = {L. Goldrich and S. Hamer and M. McNeil and T. Longstaff and R. Gatlin and E. Bello-Ogunu},
  Booktitle                = {2014 47th Hawaii International Conference on System Sciences},
  Year                     = {2014},
  Month                    = {Jan},
  Pages                    = {4887-4894},

  Abstract                 = {This paper describes the evolution of REQcollect (REQuirements Collection). REQcollect was developed through several iterations of agile development and the transition of other projects. Multiple federal agencies have sponsored the work as well as transitioned the technologies into use. The parents of REQcollect are REQdb (REQuirements Database) and DART3 (Department of Homeland Security Assistant for R&D Tracking and Technology Transfer) [1]. DART3 was developed from three other projects: TPAM (Transition Planning and Assessment Model) [2], GNOSIS (Global Network Operations Survey and Information Sharing) [3, 4] Aqueduct [5], a semantic MediaWiki extension. REQcollect combines the best components of these previous systems: a requirements elicitation and collection tool and a Google-like matching algorithm to identify potential transitions of R&D projects that match requirements.},
  Doi                      = {10.1109/HICSS.2014.599},
  ISSN                     = {1530-1605},
  Keywords                 = {research and development management;software prototyping;Aqueduct;DART3;Department of Homeland Security Assistant for R&D Tracking and Technology Transfer;GNOSIS;Google-like matching algorithm;R&D projects;REQcollect;REQdb;TPAM;agile development;collection tool;global network operations survey and information sharing;project matching;requirement matching;requirements collection;requirements database;requirements elicitation;semantic MediaWiki extension;technology transition;transition planning and assessment model;Databases;Encyclopedias;Planning;Semantics;Software;Terrorism;US Government;agile;agile development;lucene matching;requirements;requirements collection;technology transition;transition},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7202950,
  Title                    = {Automatic and Continuous Software Architecture Validation},
  Author                   = {M. Goldstein and I. Segall},
  Booktitle                = {2015 IEEE/ACM 37th IEEE International Conference on Software Engineering},
  Year                     = {2015},
  Month                    = {May},
  Pages                    = {59-68},
  Volume                   = {2},

  Abstract                 = {Software systems tend to suffer from architectural problems as they are being developed. While modern software development methodologies such as Agile and Dev-Ops suggest different ways of assuring code quality, very little attention is paid to maintaining high quality of the architecture of the evolving systems. By detecting and alerting about violations of the intended software architecture, one can often avoid code-level bad smells such as spaghetti code. Typically, if one wants to reason about the software architecture, the burden of first defining the intended architecture falls on the developer's shoulders. This includes definition of valid and invalid dependencies between software components. However, the developers are seldom familiar with the entire software system, which makes this task difficult, time consuming and error-prone. We propose and implement a solution for automatic detection of architectural violations in software artifacts. The solution, which utilizes a number of predefined and user-defined patterns, does not require prior knowledge of the system or its intended architecture. We propose to leverage this solution as part of the nightly build process used by development teams, thus achieving continuous automatic validation of the system's software architecture. As we show in multiple open-source and proprietary cases, a small set of predefined patterns can detect architectural violations as they are introduced over the course of development, and also capture deterioration in existing architectural problems. By evaluating the tool on relatively large open-source projects, we also validate its scalability and practical applicability to large software systems.},
  Doi                      = {10.1109/ICSE.2015.135},
  ISSN                     = {0270-5257},
  Keywords                 = {object-oriented programming;program verification;software architecture;software quality;source code (software);Dev-Ops;agile software development methodologies;architectural problems;architectural violations automatic detection;automatic software architecture validation;code quality;code-level;continuous software architecture validation;development teams;predefined patterns;quality maintenance;software artifacts;software components;software systems;spaghetti code;systems architecture;user-defined patterns;Computer architecture;Production facilities;Semantics;Software architecture;Software systems},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@Article{7919168,
  Title                    = {An Empirical Study on the Impact of an IDE Tool Support in the Pair and Solo Programming},
  Author                   = {O. S. Gómez and A. A. Aguileta and R. A. Aguilar and J. P. Ucán and R. H. Rosero and K. Cortes-Verdin},
  Journal                  = {IEEE Access},
  Year                     = {2017},
  Pages                    = {9175-9187},
  Volume                   = {5},

  Abstract                 = {The adoption of Agile software development approaches has been widespread. One well-known Agile approach is extreme programming, which encompasses twelve practices of which pair programming is one of them. Although various aspects of pair programming have been studied, we have not found, under a traditional setting of pair programming, studies that examine the impact of using a tool support, such as an integrated development environment (IDE) or a simple text editor. In an attempt to obtain a better understanding of the impact of using an IDE in this field, we present the results of a controlled experiment that expose the influence on quality, measured as the number of defects injected per hour, and cost, measured as the time necessary to complete a programming assignment, of pair and solo programming with and without the use of an IDE. For quality, our findings suggest that the use of an IDE results in significantly higher defect injection rates (for both pairs and solos) when the programming assignment is not very complicated. Nevertheless, defect injection rates seem to decrease when pairs work on more complicated programming assignments irrespective of the tool support that they use. For cost, the programming assignment significantly affects the time needed to complete the assignment. In relation to the programming type, pairs and solos performed in a similar way with regards to quality and cost.},
  Doi                      = {10.1109/ACCESS.2017.2701339},
  ISSN                     = {2169-3536},
  Keywords                 = {Computers;Context;Encoding;Programming;Quality assessment;Software;Time measurement;Pair programming;controlled experiment;integrated development environment;software engineering;software quality and cost},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7958485,
  Title                    = {Discover Quality Requirements with the Mini-QAW},
  Author                   = {T. d. Gooijer},
  Booktitle                = {2017 IEEE International Conference on Software Architecture Workshops (ICSAW)},
  Year                     = {2017},
  Month                    = {April},
  Pages                    = {196-198},

  Doi                      = {10.1109/ICSAW.2017.52},
  Keywords                 = {Conferences;Software;Software architecture;Stakeholders;Tutorials;Visualization;agile;quality attribute workshop;quality attributes;quality requirements;requirements engineering;scrum;software architecture},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7284594,
  Title                    = {Understanding Digital Cardwall Usage},
  Author                   = {S. Gossage and J. M. Brown and R. Biddle},
  Booktitle                = {2015 Agile Conference},
  Year                     = {2015},
  Month                    = {Aug},
  Pages                    = {21-30},

  Abstract                 = {In Agile software development, key artefacts used to support the process are the User Story (usually recorded on a Storycard) and Story Cardwall (usually a dedicated portion of a wall). These low-fidelity tools work together to help teams stay focused and self-manage their projects. The need to support distributed teams and team members makes the physical Cardwall impractical and teams are therefore migrating towards digital story management tools. We conducted field studies of 8 Agile teams using digital Cardwalls, and performed qualitative data analysis to understand patterns of usages and user needs. We identify issues to address in the design of digital Cardwalls.},
  Doi                      = {10.1109/Agile.2015.16},
  Keywords                 = {Context;Electronic mail;Interviews;Organizations;Planning;Software;Viscosity;agile software development;cardwalls;software development tools;software process},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@Article{6871369,
  Title                    = {A Frequency-Agile RF Frontend Architecture for Multi-Band TDD Applications},
  Author                   = {S. Goswami and H. Kim and J. L. Dawson},
  Journal                  = {IEEE Journal of Solid-State Circuits},
  Year                     = {2014},

  Month                    = {Oct},
  Number                   = {10},
  Pages                    = {2127-2140},
  Volume                   = {49},

  Abstract                 = {Emerging wireless standards specify dozens of bands spanning several octaves, which need to be supported in form-factor and energy constrained mobile devices targeting ubiquitous connectivity. However, in current multi-band radio implementations, significant redundancy is still the norm in the RF frontend. This work introduces an improved architecture for multi-band, time-division duplexed (TDD) radios, which replaces multiple narrowband frontend components with a frequency-agile solution, tunable over a wide frequency range. A highly digital architecture is adopted, leading to a fully integrated solution wherein both efficiency and achievable frequency range benefit from CMOS scaling. A prototype is integrated in 45 nm SOI CMOS. Peak PA output power is 27.7 ±0.5 dBm from 1.3 to 3.3 GHz, with up to 30% total efficiency at 2 V. For TDD LTE applications, better than -30 dBc ACLR and -30 dB EVM is measured with 64 QAM, 20 MHz signals from 1.44 to 3.41 GHz, with up to 17.2% average efficiency and 23.4 dBm average power. The LNA achieves AV ≥ 14 dB, NF = 4.4 ±1.6 dB and IIP 3 ≥ -7 dBm from 1.3 to 3.3 GHz while drawing just 6 mA from 1 V. The demonstrated frequency range covers a total of 11 TDD bands .},
  Doi                      = {10.1109/JSSC.2014.2339318},
  ISSN                     = {0018-9200},
  Keywords                 = {CMOS integrated circuits;Long Term Evolution;mobile handsets;quadrature amplitude modulation;time division multiplexing;64 QAM;ACLR;CMOS scaling;EVM;SOI CMOS;TDD LTE;TDD bands;current 6 mA;digital architecture;energy constrained mobile devices;form-factor mobile devices;frequency 1.3 GHz to 3.3 GHz;frequency 1.44 GHz to 3.41 GHz;frequency-agile RF frontend architecture;frequency-agile solution;multiband TDD;multiband radio implementations;multiband time-division duplexed radios;narrowband frontend components;size 45 nm;ubiquitous connectivity;voltage 11 V;wireless standards;CMOS integrated circuits;Computer architecture;Impedance;Microprocessors;Power generation;Radio frequency;Switches;4G wireless communication;low-noise amplifiers;power amplifiers;silicon on insulator technology;software radio;time division multiplexing;wireless LAN},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6928782,
  Title                    = {Facilitating Task Breakdown in Sprint Planning Meeting 2 with an Interaction Room: An Experience Report},
  Author                   = {S. Grapenthin and S. Poggel and M. Book and V. Gruhn},
  Booktitle                = {2014 40th EUROMICRO Conference on Software Engineering and Advanced Applications},
  Year                     = {2014},
  Month                    = {Aug},
  Pages                    = {1-8},

  Abstract                 = {In a large industry project that followed an agile approach based on the Scrum method, we found that the team often struggled with breaking coarse product backlog items down into the detailed tasks that had to be completed in a sprint. The team's understanding of the backlog items' business and technical implications and dependencies seemed not deep enough to identify all necessary tasks, so in addition to the tasks defined in the sprint planning meeting prescribed by Scrum, an average of 26% of additional tasks was identified later over the course of each sprint, making any attempt at progress estimation or risk management very difficult. To counter this effect and support the team's understanding of backlog items right from the beginning of each sprint, we introduced a pragmatic method to analyze backlog items more comprehensively and thus support a more complete and reliable task breakdown. We consequently found that the effectiveness and precision of task breakdowns has improved significantly in the project.},
  Doi                      = {10.1109/SEAA.2014.71},
  ISSN                     = {1089-6503},
  Keywords                 = {planning;software prototyping;Scrum method;agile approach;coarse product backlog items;interaction room;large industry project;progress estimation;risk management;sprint planning meeting;task breakdown;Business;Electric breakdown;Information systems;Planning;Scrum (Software development);Software;User interfaces;Interaction Room;Scrum;Task Breakdown},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7070418,
  Title                    = {Agile Enterprise Metrics},
  Author                   = {D. R. Greening},
  Booktitle                = {2015 48th Hawaii International Conference on System Sciences},
  Year                     = {2015},
  Month                    = {Jan},
  Pages                    = {5038-5044},

  Doi                      = {10.1109/HICSS.2015.597},
  ISSN                     = {1530-1605},
  Keywords                 = {software metrics;software prototyping;agile enterprise metrics;behavioral compliance metrics;product owner communication;scalable metrics;team member alignment;Computer bugs;Estimation;Marine vehicles;Measurement;Organizations;Production;Standards;agile;enterprise;metrics;production;scrum},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6759180,
  Title                    = {Introduction to Agile and Lean Organizations: Management, Metrics, and Products Minitrack},
  Author                   = {D. R. Greening},
  Booktitle                = {2014 47th Hawaii International Conference on System Sciences},
  Year                     = {2014},
  Month                    = {Jan},
  Pages                    = {4711-4711},

  Abstract                 = {Provides an overview of the technical articles and features presented in this minitrack.},
  Doi                      = {10.1109/HICSS.2014.578},
  ISSN                     = {1530-1605},
  Keywords                 = {Collaboration;Green products;Industries;Measurement;Organizations;Planning;Software},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6480427,
  Title                    = {Release Duration and Enterprise Agility},
  Author                   = {D. R. Greening},
  Booktitle                = {2013 46th Hawaii International Conference on System Sciences},
  Year                     = {2013},
  Month                    = {Jan},
  Pages                    = {4835-4841},

  Abstract                 = {Short release duration -- the time from starting development until it delivers measurable value (i.e., paying customers adopt an upgrade) -- is an implied goal of agile methods. Release duration incorporates the expensive parts of the value chain: build, test, deploy and sell (but not exploratory design, for example). Release duration correlates with technical debt. Attempting to reduce release duration may help drive agile behavior through a company. Finance departments often collect release duration, helping a company assess its agility. Citrix Online illustrates how process methodology, development group size and release duration relate. Its adoption of Scrum and Enterprise Scrum drove release duration down from a peak of 41 months to less than 4, shorter than it had as a small startup. Its market share rose during the same period. Data from another company, Patient Keeper, also seems to indicate that short release durations correlate with more profitable outcomes.},
  Doi                      = {10.1109/HICSS.2013.463},
  ISSN                     = {1530-1605},
  Keywords                 = {Companies;Computer bugs;Finance;Maintenance engineering;Manuals;Software;Testing;Agile Practices;Capitalization;Depreciation;Engineering Management;Enterprise Scrum;Release Duration;Scrum;Technical Debt},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7070416,
  Title                    = {Introduction to Agile and Lean Organizations: Management, Metrics, and Products Minitrack},
  Author                   = {D. R. Greening and J. Sutherland},
  Booktitle                = {2015 48th Hawaii International Conference on System Sciences},
  Year                     = {2015},
  Month                    = {Jan},
  Pages                    = {5029-5029},

  Abstract                 = {In this mini-track, research papers and experience reports examine how agile development and lean product management interact with organizations, their structures, cultures and products.},
  Doi                      = {10.1109/HICSS.2015.661},
  ISSN                     = {1530-1605},
  Keywords                 = {Finance;Green products;Measurement;Organizations;Planning;Software;Weibull distribution},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7302424,
  Title                    = {Group Maturity and Agility, Are They Connected? -- A Survey Study},
  Author                   = {L. Gren and R. Torkar and R. Feldt},
  Booktitle                = {2015 41st Euromicro Conference on Software Engineering and Advanced Applications},
  Year                     = {2015},
  Month                    = {Aug},
  Pages                    = {1-8},

  Abstract                 = {The focus on psychology has increased within software engineering due to the project management innovation "agile development processes". The agile methods do not explicitly consider group development aspects, they simply assume what is described in group psychology as mature groups. This study was conducted with 45 employees and their twelve managers (N=57) from two SAP customers in the US that were working with agile methods, and the data were collected via an online survey. The selected Agility measurement was correlated to a Group Development measurement and showed significant convergent validity, i.e., A more mature team is also a more agile team. This means that the agile methods probably would benefit from taking group development into account when its practices are being introduced.},
  Doi                      = {10.1109/SEAA.2015.31},
  ISSN                     = {1089-6503},
  Keywords                 = {innovation management;project management;software prototyping;agile development process;group development measurement;project management innovation;software engineering;Biological system modeling;Collaboration;Correlation;Electronic mail;Organizations;Productivity;Psychology},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6910397,
  Title                    = {Work Motivational Challenges Regarding the Interface between Agile Teams and a Non-Agile Surrounding Organization: A Case Study},
  Author                   = {L. Gren and R. Torkar and R. Feldt},
  Booktitle                = {2014 Agile Conference},
  Year                     = {2014},
  Month                    = {July},
  Pages                    = {11-15},

  Abstract                 = {There are studies showing what happens if agile teams are introduced into a non-agile organization, e.g. Higher overhead costs and the necessity of an understanding of agile methods even outside the teams. This case study shows an example of work motivational aspects that might surface when an agile team exists in the middle of a more traditional structure. This case study was conducted at a car manufacturer in Sweden, consisting of an unstructured interview with the Scrum Master and a semi-structured focus group. The results show that the teams felt that the feedback from the surrounding organization was unsynchronized resulting in them not feeling appreciated when delivering their work. Moreover, they felt frustrated when working on non-agile teams after have been working on agile ones. This study concludes that there were work motivational affects of fitting an agile team into a non-agile surrounding organization, and therefore this might also be true for other organizations.},
  Doi                      = {10.1109/AGILE.2014.13},
  Keywords                 = {software development management;software prototyping;team working;Scrum Master;Sweden;agile methods understanding;agile teams;nonagile surrounding organization;semi-structured focus group;work motivational aspects;work motivational challenges;Companies;Interviews;Project management;Software;Software engineering;Standards organizations;Agile Development Processes;Empirical Study;Large Organizations;Work Motivation},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@Article{6750460,
  Title                    = {Designing a Framework with Test-Driven Development: A Journey},
  Author                   = {E. Guerra},
  Journal                  = {IEEE Software},
  Year                     = {2014},

  Month                    = {Jan},
  Number                   = {1},
  Pages                    = {9-14},
  Volume                   = {31},

  Doi                      = {10.1109/MS.2014.3},
  ISSN                     = {0740-7459},
  Keywords                 = {program testing;software maintenance;software prototyping;TDD;agile development;software refactoring;test-driven development;Best practices;Complexity theory;Databases;Software design;Software measurement;Software testing;TDD;best practices;frameworks;hotspots;programming;test-driven development;tests},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7477925,
  Title                    = {Getting Research Findings into Practice: Guidelines to Produce Quality Software Engineering Diagrams to Assist Novice Engineers},
  Author                   = {J. Guerrero-García and J. González-Calleros and J. Muñoz-Arteaga and A. Morales and I. Monarca},
  Booktitle                = {2016 4th International Conference in Software Engineering Research and Innovation (CONISOFT)},
  Year                     = {2016},
  Month                    = {April},
  Pages                    = {149-158},

  Abstract                 = {Computer Diagrams are the communication mechanism among the different stakeholders of the software development lifecycle. While they are though at school, and promoted to be used by students for current and future projects, we still do not see full adoption in real life context. The literature reviewed points out some reasons related to this issue and propose some solutions, but still the problem persist. In this paper, we present our findings of three years of research at the University while working with senior students on real-life projects. Different methodologies were used as an iterative process, improving the quality of the results year by year. We present the lesson learned including guidelines on how to facilitate novice engineers to adopt diagrams and produce them with high quality standards. The proposal is validated with a real life case study.},
  Doi                      = {10.1109/CONISOFT.2016.31},
  Keywords                 = {software engineering;communication mechanism;computer diagrams;iterative process;novice engineers;quality software engineering diagrams;research findings;software development lifecycle;university;Companies;Interviews;Load modeling;Software;Software engineering;Standards;Unified modeling language;Agile;Design;Modeling;Quality;Research and Development;Software Engineering},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7577426,
  Title                    = {Challenges in Adapting Agile Testing in a Legacy Product},
  Author                   = {R. K. Gupta and P. Manikreddy and A. GV},
  Booktitle                = {2016 IEEE 11th International Conference on Global Software Engineering (ICGSE)},
  Year                     = {2016},
  Month                    = {Aug},
  Pages                    = {104-108},

  Doi                      = {10.1109/ICGSE.2016.21},
  ISSN                     = {2329-6313},
  Keywords                 = {program testing;software maintenance;software prototyping;GCP;agile software development;agile test pyramid;agile testing;agile testing strategies;global configurator product;legacy software product development;test-quadrant mapping;testing metrics;testing team;waterfall development model;Collaboration;Manuals;Software;Stakeholders;System testing;Taxonomy;Agile Test Pyramid;Agile Test Quadrant;Agile Testing;Testing Effectiveness},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7427851,
  Title                    = {Adapting Agile in a Globally Distributed Software Development},
  Author                   = {R. K. Gupta and P. M. Reddy},
  Booktitle                = {2016 49th Hawaii International Conference on System Sciences (HICSS)},
  Year                     = {2016},
  Month                    = {Jan},
  Pages                    = {5360-5367},

  Abstract                 = {This paper describes the journey of adapting Agile-Scrum in a project, referred here as Global Configurator Project (GCP), where the project members are distributed across locations in Germany, India, and U. S. Here, we will be discussing about the practices like new taxonomy on scrum roles, scaling scrum with actually using Scrum of scrums and evolving cross-functional multi-skilled and self-managed feature team from silos components teams. This paper also measures the impact of our practices on communication and collaboration at the project level. This paper will be useful for scrum masters, product owners, and project managers while adapting Scrum.},
  Doi                      = {10.1109/HICSS.2016.663},
  ISSN                     = {1530-1605},
  Keywords                 = {software prototyping;GCP;Germany;Global Configurator Project;India;US;agile software development;agile-scrum;globally distributed software development;Collaboration;Lead;Organizations;Servers;Software;Taxonomy;Testing;Bi-Scrum Master;Feature Team;Part Product Owner;Scrum Taxonomy;Scrum of Scrum;Shared Product Owner;Shared Scrum Master},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7724431,
  Title                    = {Implementation of stateful firewall using POX controller},
  Author                   = {V. Gupta and S. Kaur and K. Kaur},
  Booktitle                = {2016 3rd International Conference on Computing for Sustainable Global Development (INDIACom)},
  Year                     = {2016},
  Month                    = {March},
  Pages                    = {1093-1096},

  Abstract                 = {Software Defined Networking is new emerging area of research. It is replacing current inflexible and complex networks with innovative and agile networks but the pace of replacement has been slow. In SDN they have decoupled the control and data plane. Openflow is most used protocol needed for communication between control and data plane. The main concern about slow adoption of SDN is security features provided by SDN Switches. Firewall is necessary part of current networks. You cannot think of secure network without using firewall. Already layer 2 and stateless firewalls are available in SDN but the main issue is that can we implement stateful firewall that keeps connection tracking information. In this paper we are implementing SDN stateful firewall using POX Controller. We tested our stateful firewall on mininet emulator as well as real hardware.},
  Keywords                 = {firewalls;software defined networking;Openflow;POX controller;SDN switches;data plane;layer 2 firewall;mininet emulator;secure network;security features;software defined networking;stateless firewall;Conferences;Filtering;Firewalls (computing);IP networks;Ports (Computers);Software defined networking;Web servers;Mininet;OpenFlow;POX Controller;Software Defined Networking},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7323080,
  Title                    = {Integration of heterogeneous modeling languages via extensible and composable language components},
  Author                   = {A. Haber and M. Look and A. N. Perez and P. M. S. Nazari and B. Rumpe and S. Völkel and A. Wortmann},
  Booktitle                = {2015 3rd International Conference on Model-Driven Engineering and Software Development (MODELSWARD)},
  Year                     = {2015},
  Month                    = {Feb},
  Pages                    = {19-31},

  Abstract                 = {Effective model-driven engineering of complex systems requires to appropriately describe different specific system aspects. To this end, efficient integration of different heterogeneous modeling languages is essential. Modeling language integaration is onerous and requires in-depth conceptual and technical knowledge and effort. Traditional modeling lanugage integration approches require language engineers to compose monolithic language aggregates for a specific task or project. Adapting these aggregates to different contexts requires vast effort and makes these hardly reusable. This contribution presents a method for the engineering of grammar-based language components that can be independently developed, are syntactically composable, and ultimately reusable. To this end, it introduces the concepts of language aggregation, language embedding, and language inheritance, as well as their realization in the language workbench MontiCore. The result is a generalizable, systematic, and efficient syntax-oriented composition of languages that allows the agile employment of modeling languages efficiently tailored for individual software projects.},
  Keywords                 = {computational linguistics;grammars;project management;software management;software prototyping;specification languages;agile employment;complex systems;composable language components;grammar-based language components;heterogeneous modeling languages;language aggregation;language embedding;language engineers;language inheritance;language workbench MontiCore;model-driven engineering;modeling language integration approch;monolithic language aggregates;software projects;syntax-oriented composition;Data models;Grammar;Object oriented modeling;Ports (Computers);Production;Syntactics;Unified modeling language;MDE;Modeling Language Engineering;Modeling Language Integration},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@Article{7118637,
  Title                    = {Network Programmability With ForCES},
  Author                   = {E. Haleplidis and J. Hadi Salim and J. M. Halpern and S. Hares and K. Pentikousis and K. Ogawa and W. Wang and S. Denazis and O. Koufopavlou},
  Journal                  = {IEEE Communications Surveys Tutorials},
  Year                     = {2015},

  Month                    = {thirdquarter},
  Number                   = {3},
  Pages                    = {1423-1440},
  Volume                   = {17},

  Abstract                 = {Network programmability has re-emerged as a top item of the networking research agenda since Software Defined Networking (SDN) gained wide acceptance simultaneously in vendor product line plans and operator expectations for future deployments. Key ingredients for the successful deployment of SDN technologies are standardized models, mechanisms, and protocols for the separation of the control and forwarding planes. The Internet Engineering Task Force (IETF) standardization effort on Forwarding and Control Element Separation (ForCES) has published a set of standards track documents which specify in detail a comprehensive architectural framework and the respective standard protocols which can be employed to implement the separation of these two planes in a flexible, scalable, and vendor-agnostic yet fully interoperable manner. The IETF standards on ForCES define how to achieve said separation through a complete and modular system model of the forwarding plane elements. In the ForCES model every network element is composed of numerous logically separate and well-defined functional entities that cooperate to provide the desired overall functionality, such as a routing or IP switching. The elegance of the model lies in the fact that a ForCES-based implementation of a network element is indistinguishable from a traditional (“closed-box”) network element and therefore can be deployed in the field without any need for migration to a new architecture. Conversely, ForCES allows for rapid prototyping and agile deployment of new architectures as emphasis is placed on software-defined functionality and full programmability. The difference of ForCES from other SDN approaches that depend on logically centralized controllers and the deployment of solely simple or “dumb” switches is that ForCES standards provide a complete toolbox to design, implement, and interoperate ForCES-based network elements with both previously deployed infrastructures as well as - n experimental or early-deployment phase endeavors. An example of the former is the implementation of 3GPP-standardized network elements such as a packet gateway (PGW). Examples of the latter include the use of ForCES for network function virtualization (NFV) proofs-of-concepts. This paper surveys the programmable networks and SDN area and provides a comprehensive tutorial on ForCES by summarizing numerous standards documents and thus making the technology easily understood by the wider research community. We present the design goals, choices, and tradeoffs for this standardized approach for network programmability and provide a thorough primer on the ForCES model and protocol. This paper also surveys recent independent interoperable implementations that showcase the full spectrum of ForCES applications in the era of NFV and SDN.},
  Doi                      = {10.1109/COMST.2015.2439033},
  ISSN                     = {1553-877X},
  Keywords                 = {3G mobile communication;Tutorials;access protocols;packet radio networks;software defined networking;standardisation;3GPP-standardized network elements;ForCES protocol;IETF;IP switching;Internet Engineering Task Force;agile deployment;architectural framework;forwarding and control element separation;forwarding plane elements;logically centralized controllers;network function virtualization;network programmability;packet gateway;rapid prototyping;software defined networking;standard protocols;standardization effort;Computer architecture;Programming;Software defined networking;Standards;Topology;Tutorials;ForCES model;ForCES protocol;IETF;Logical Functional Block;Network Programmability;OpenFlow;Software Defined Networking;control plane;logical functional block;network function;network programmability;software defined networking;virtualization},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6910398,
  Title                    = {Using Agile Story Points as an Estimation Technique in CMMI Organizations},
  Author                   = {A. E. D. Hamouda},
  Booktitle                = {2014 Agile Conference},
  Year                     = {2014},
  Month                    = {July},
  Pages                    = {16-23},

  Abstract                 = {Story Point is a relative measure heavily used for agile estimation of size. The team decides how big a point is, and based on that size, determines how many points each work item is. In many organizations, the use of story points for similar features can vary from team to another, and successfully, based on the teams' sizes, skill set and relative use of this tool. But in a CMMI organization, this technique demands a degree of consistency across teams for a more streamlined approach to solution delivery. This generates a challenge for CMMI organizations to adopt Agile in software estimation and planning. In this paper, a process and methodology that guarantees relativity in software sizing while using agile story points is introduced. The proposed process and methodology are applied in a CMMI company level three on different projects. By that, the story point is used on the level of the organization, not the project. Then, the performance of sizing process is measured to show a significant improvement in sizing accuracy after adopting the agile story point in CMMI organizations. To complete the estimation cycle, an improvement in effort estimation dependent on story point is also introduced, and its performance effect is measured.},
  Doi                      = {10.1109/AGILE.2014.11},
  Keywords                 = {organisational aspects;software development management;software prototyping;CMMI organizations;agile story points;effort estimation;estimation cycle;sizing accuracy;software estimation;software planning;story point measure;team consistency degree;Complexity theory;Estimation;Libraries;Organizations;Productivity;Size measurement;Software;Agile;CMMI;Software Estimation;Story Point},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7502478,
  Title                    = {Design and implementation of LISP controller in ONOS},
  Author                   = {Y. Han and S. Ryu and Y. J. Suh and J. W. K. Hong},
  Booktitle                = {2016 IEEE NetSoft Conference and Workshops (NetSoft)},
  Year                     = {2016},
  Month                    = {June},
  Pages                    = {417-422},

  Abstract                 = {Software Defined Networking (SDN) is an emerging paradigm to address the demands for flexible and agile network controllability. The fundamental idea of SDN is the physical separation of the network control plane from the data (forwarding) plane. This migration of control into programmable computing devices enables the underlying network infrastructures to be abstracted for applications and services. It brings many beneficial features such as programmability, agility, elasticity. Currently, OpenFlow is widely used as interfacing protocol between data and control planes. However, to practically deploy the SDN paradigm, OpenFlow is insufficient in terms of scalability, performance, heterogeneity, inter-operability with legacy networks and protocols. To overcome those limitations, we need to consider multiple protocols as South Bound Interface for SDN controllers. In this paper, we describe our experience to design and implement Locator/Identifier Separation Protocol (LISP) in ONOS, which is an open source SDN OS for service providers. LISP is a tunneling based protocol to solve Internet scalability issue, and several recent studies show that LISP can be applied to various use cases to improve efficiency such as virtual machine live migration, multi-homing, and traffic engineering. Therefore, LISP is a good candidate to extend SDN's South Bound Interface. Furthermore, several use cases to effectively use LISP within SDN environments are introduced.},
  Doi                      = {10.1109/NETSOFT.2016.7502478},
  Keywords                 = {application program interfaces;open systems;operating systems (computers);protocols;public domain software;software defined networking;telecommunication traffic;virtual machines;Internet scalability issue;LISP controller design;LISP controller implementation;Locator/Identifier Separation Protocol;ONOS;Open Network Operating System;OpenFlow;agility feature;data forwarding plane;efficiency improvement;elasticity feature;flexible agile network controllability;interfacing protocol;multihoming;network control plane;network infrastructures;open source SDN OS;programmability feature;programmable computing devices;service providers;software defined networking;south bound interface;traffic engineering;tunneling based protocol;virtual machine live migration;Convergence;IP networks;Internet;Protocols;Routing;Scalability;Standards;Locator Identifier Separation Protocol(LISP);Open Network Operating System (ONOS);OpenFlow;Software Defined Networking (SDN);South Bound APIs},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@Article{7296686,
  Title                    = {Targeted Scrum: Applying Mission Command to Agile Software Development},
  Author                   = {D. P. Harvie and A. Agah},
  Journal                  = {IEEE Transactions on Software Engineering},
  Year                     = {2016},

  Month                    = {May},
  Number                   = {5},
  Pages                    = {476-489},
  Volume                   = {42},

  Abstract                 = {Software engineering and mission command are two separate but similar fields, as both are instances of complex problem solving in environments with ever changing requirements. Our research hypothesis is that modifications to agile software development based on inspirations from mission command can improve the software engineering process in terms of planning, prioritizing, and communication of software requirements and progress, as well as improving the overall software product. Targeted Scrum is a modification of Traditional Scrum based on three inspirations from Mission Command: End State, Line of Effort, and Targeting. These inspirations have led to the introduction of the Product Design Meeting and modifications of some current Scrum meetings and artifacts. We tested our research hypothesis using a semester-long undergraduate level software engineering class. Students developed two software projects, one using Traditional Scrum and the other using Targeted Scrum. We then assessed how well both methodologies assisted the software development teams in planning and developing the software architecture, prioritizing requirements, and communicating progress. We also evaluated the software product produced by both methodologies. We found that Targeted Scrum did better in assisting the software development teams in the planning and prioritization of the requirements. However, Targeted Scrum had a negligible effect on improving the software development teams external and internal communications. Finally, Targeted Scrum did not have an impact on the product quality by the top performing and worst performing teams. Targeted Scrum did assist the product quality of the teams in the middle of the performance spectrum.},
  Doi                      = {10.1109/TSE.2015.2489654},
  ISSN                     = {0098-5589},
  Keywords                 = {software architecture;software prototyping;agile software development;end state;line of effort;mission command;performance spectrum;product design meeting;product quality;software architecture;software engineering;software product improvement;software projects;software requirements;targeted Scrum;targeting;traditional Scrum;Force;Planning;Product design;Scrum (Software development);Software;Software engineering;Agile;Empirical Software Engineering;Line of Effort;Product Design Meeting;Scrum;Scrum, Mission Command;agile;empirical software engineering;line of effort;mission command;product design meeting},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7102616,
  Title                    = {Non-Intrusive Documentation-Driven Integration Testing},
  Author                   = {F. Haser},
  Booktitle                = {2015 IEEE 8th International Conference on Software Testing, Verification and Validation (ICST)},
  Year                     = {2015},
  Month                    = {April},
  Pages                    = {1-2},

  Abstract                 = {Powerful development frameworks and adoption of agile development methods are continuously increasing release frequency, thus compress test cycles. Test automation, often relying on model based approaches, helps to reduce test time, however the introduction of related heavy weight processes is often quite challenging. In order to tackle this problem, we propose a bottom up testing approach, which in a nutshell, in the initial phase supports the integration tester in creating a semi-formal test case description and report. The approach, a textual domain specific framework, will guide the test expert in evolving the base language, in order to be tailored for a domain language of an organization. The evolved language can be linked to executable code, which enables in the long run (semi-)automated model based regression testing.},
  Doi                      = {10.1109/ICST.2015.7102616},
  ISSN                     = {2159-4848},
  Keywords                 = {program testing;software prototyping;specification languages;system documentation;agile development method;bottom up testing approach;documentation-driven integration testing;domain language;test automation;textual domain specific framework;Automation;Business;Context;Measurement;Testing;Unified modeling language;Writing},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6681341,
  Title                    = {ScrumBut, But Does it Matter? A Mixed-Method Study of the Planning Process of a Multi-team Scrum Organization},
  Author                   = {V. T. Heikkilä and M. Paasivaara and C. Lassenius},
  Booktitle                = {2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement},
  Year                     = {2013},
  Month                    = {Oct},
  Pages                    = {85-94},

  Doi                      = {10.1109/ESEM.2013.27},
  ISSN                     = {1949-3770},
  Keywords                 = {iterative methods;organisational aspects;software development management;Scrum adoption;Scrum software development method;iteration paced Scrum model;mixed method study;multiteam scrum organization;organizational context;planning process;requirements planning;software development organizations;Context;Electronics packaging;Interviews;Organizations;Planning;Software;Statistical analysis;Scrum;large-scale agile software development;release planning;software engineering},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7802800,
  Title                    = {Adding agile architecture practices to a Cyber-Physial System development},
  Author                   = {J. Hernández-Reveles and G. Sobrevilla-Dominguez and P. Velasco-Elizondo and S. Soriano-Grande},
  Booktitle                = {2016 International Conference on Software Process Improvement (CIMPS)},
  Year                     = {2016},
  Month                    = {Oct},
  Pages                    = {1-6},

  Doi                      = {10.1109/CIMPS.2016.7802800},
  Keywords                 = {cyber-physical systems;software architecture;software prototyping;CPS development;MVP;Scrum;agile manifesto principles;agile software architecture practices;cyber-physial system development;minimum viable product;Computer architecture;Cyber-physical systems;Hardware;Radiofrequency identification;Scrum (Software development);Software;Three-dimensional displays;Agile Architecture Practices;Agile Methodologies;Architecture-Driven Development;Cyber-Physical Systems;Scrum},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@Article{7725214,
  Title                    = {The Software Architect's Role in the Digital Age},
  Author                   = {G. Hohpe and I. Ozkaya and U. Zdun and O. Zimmermann},
  Journal                  = {IEEE Software},
  Year                     = {2016},

  Month                    = {Nov},
  Number                   = {6},
  Pages                    = {30-39},
  Volume                   = {33},

  Doi                      = {10.1109/MS.2016.137},
  ISSN                     = {0740-7459},
  Keywords                 = {Ericsson;architecture as a service;connected vehicles;decision making;embedded software;software architect;software architecture;software development;software engineering;software engineering education},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7856570,
  Title                    = {Virtual Network Functions instantiation on SDN switches for policy-aware traffic steering},
  Author                   = {C. L. Hsieh and N. Weng},
  Booktitle                = {2016 ACM/IEEE Symposium on Architectures for Networking and Communications Systems (ANCS)},
  Year                     = {2016},
  Month                    = {March},
  Pages                    = {119-120},

  Abstract                 = {Software-Defined Networking (SDN) provides the capability to steer traffic in a network to lower the management cost. Network Function Virtualization (NFV) gives the chance to implement network functions at the right time and the right place to increase operation flexibility. Together SDN and NFV show the potential to create an agile system with a low operations cost and a high customer satisfaction. However, the combination of SDN with NFV results in the redundant packet forwarding traffic inside SDN in order to forward packets based on the deployed network functions for a service chain. Besides, it also increase the computation requirement of a controller for possible packet header modifications and flow states management. In this paper, we propose to implement network functions on SDN switches to lower the traffic inside of SDN and the computation requirement of a SDN controller. We create network function modules for open virtual switches and make those functions to be managed by a controller with an algorithm to streamline the implemented service chains. Our results show that the proposed system can reduce about 2/3 of current network traffic compared to the current solutions without the modification of forwarding tables and packets.},
  Doi                      = {10.1145/2881025.2889486},
  Keywords                 = {software defined networking;telecommunication network management;telecommunication traffic;NFV;SDN controller;SDN switches;agile system;computation requirement;flow states management;forwarding packets;forwarding tables;implemented service chains;management cost;network function modules;network function virtualization;open virtual switches;operation flexibility;packet forwarding traffic;packet header modifications;policy aware traffic steering;software defined networking;steer traffic;virtual network functions instantiation;Control systems;Customer satisfaction;Hardware;Middleboxes;Network function virtualization;Real-time systems;Network Management;Software-Defined Networking},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6602471,
  Title                    = {An agile V-model for medical device software development to overcome the challenges with plan-driven software development lifecycles},
  Author                   = {M. Mc Hugh and O. Cawley and F. McCaffcry and I. Richardson and X. Wang},
  Booktitle                = {2013 5th International Workshop on Software Engineering in Health Care (SEHC)},
  Year                     = {2013},
  Month                    = {May},
  Pages                    = {12-19},

  Abstract                 = {Through the use of semi structured interviews with medical device software organizations it emerged that medica device software organizations are experiencing difficulties when following plan driven Software Development Life Cycles (SDLC) particularly in the area of requirements management. To attempt to resolve these issues an examination of the non-regulated industry was performed to determine if lessons learned there could be applied to the development of medical device software This examination revealed that agile methods are being widely adopted in the non-regulated software industry. To learn if agile methods could be adopted when developing medical device software a mapping study was performed which looked for instances of where agile methods have been used in regulated industries and where they have been adopted, to what success This mapping study revealed that incorporating agile practices with the existing plan driven SDLC is the most favourable choice for medical device software organizations. This research aims to develop a SDLC which has a foundation of a plan driven SDLC which incorporates agile practices which can be followed when developing regulatory compliant software.},
  Doi                      = {10.1109/SEHC.2013.6602471},
  Keywords                 = {DP industry;formal specification;medical computing;safety-critical software;software prototyping;agile V-model;medical device software development;medical device software organizations;nonregulated software industry;plan driven SDLC;plan driven software development lifecycles;regulatory compliant software;requirements management;safety critical software;Industries;Interviews;Medical diagnostic imaging;Organizations;Performance evaluation;Software;Standards organizations;A V-Model;Agile;FDA;Medical Device Software;Model;Safety Critical;V},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6612894,
  Title                    = {Lean Change: Enabling Agile Transformation through Lean Startup, Kotter and Kanban: An Experience Report},
  Author                   = {A. Hui},
  Booktitle                = {2013 Agile Conference},
  Year                     = {2013},
  Month                    = {Aug},
  Pages                    = {169-174},

  Abstract                 = {Agile methods for software development and systems development has grown in popularity to the extent that larger organizations have been looking to adopt these methods at the enterprise level. Typically these adoption approaches are implemented as Agile Transformations and there has been mixed results in the successes and failures of these change initiatives. The change tactics used, and the specific methods chosen for adoption vary wildly depending on context. In a nutshell, the only certainty about large-scale agile transformation it is to expect uncertainty. This paper will provide an experience report on a new approach known as Lean Change which has adapted techniques designed to handle uncertainty from other domains to provide a framework for executing Agile Transformations more effectively.},
  Doi                      = {10.1109/AGILE.2013.22},
  Keywords                 = {software prototyping;Kanban;Kotter;Lean Startup;agile methods;agile transformation;software development;software systems;Acceleration;Buildings;Communities;Organizations;Standards organizations;Visualization;Agile Transformation;Kanban;Kotter;Lean Change;Lean Startup},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7334159,
  Title                    = {Compare Essential Unified Process (EssUP) with Rational Unified Process (RUP)},
  Author                   = {Y. Hui and Y. Yan and W. Quanyu and C. Zhiwen},
  Booktitle                = {2015 IEEE 10th Conference on Industrial Electronics and Applications (ICIEA)},
  Year                     = {2015},
  Month                    = {June},
  Pages                    = {472-476},

  Doi                      = {10.1109/ICIEA.2015.7334159},
  Keywords                 = {software engineering;EssUP;IBM Rational tools;RUP;agile development philosophy;essential unified process;rational unified process;software development process;Analytical models;Guidelines;Jacobian matrices;Software;Software engineering;Technological innovation;Unified modeling language;Essential Unified Process (EssUP);IBM Rational Unified Process;Software Development Process},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6693233,
  Title                    = {Measuring Best-in-Class Software Releases},
  Author                   = {H. Huijgens and R. v. Solingen},
  Booktitle                = {2013 Joint Conference of the 23rd International Workshop on Software Measurement and the 8th International Conference on Software Process and Product Measurement},
  Year                     = {2013},
  Month                    = {Oct},
  Pages                    = {137-146},

  Abstract                 = {In this research we aimed to identify distinguishing factors in software releases. For this purpose we analyzed the metrics of 26 software projects. These projects were release-based deliveries from two stable, experienced development teams. During the measurement period both teams transformed from a plan-driven delivery model (waterfall) to an agile approach (Scrum). Overall, we observed that these small release-based projects differ largely from non-release-based projects. Our research indicates that a combination of release-based working, a fixed and experienced development team, and a steady heartbeat contribute to performances that can be characterized as best-practice. The main contribution of this paper is that we found five success factors (all reducing development complexity) that result in best-of-class performance for small software releases.},
  Doi                      = {10.1109/IWSM-Mensura.2013.29},
  Keywords                 = {software development management;agile approach;best-in-class software release;development complexity;plan-driven delivery model;small release-based projects;software projects;Market research;Organizations;Productivity;Size measurement;Software;Software measurement;IT-Metrics;Performance Measurement;Productivity;Scrum;Software Engineering;Time-to-market},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6868824,
  Title                    = {jFakih: Modelling mobile learning game},
  Author                   = {A. Hussain and N. A. Mutalib and A. Yasin},
  Booktitle                = {2014 International Conference on Computer and Information Sciences (ICCOINS)},
  Year                     = {2014},
  Month                    = {June},
  Pages                    = {1-6},

  Abstract                 = {This study introduce a new method for learning Jawi for deaf children by adding some hand signs and named the method as jFakih. Since Fakih is a learning method for deaf children to read Quran, it's also possible to be used in Jawi learning for deaf children. Fakih used number and colours to recognize the Arabic character and also the script. We also designed the reference model for jFakih for future development of mobile application. By using waterfall-agile hybrid method, we gathered the requirements and designed the model using UML technique. The model was validated through prototype development and some survey was implemented to get feedbacks from users.},
  Doi                      = {10.1109/ICCOINS.2014.6868824},
  Keywords                 = {Unified Modeling Language;computer aided instruction;computer games;handicapped aids;mobile learning;software prototyping;Jawi learning;UML technique;deaf children;hand signs;jFakih;mobile learning game;prototype development;waterfall-agile hybrid method;Educational institutions;Focusing;Games;Mobile communication;Prototypes;Unified modeling language;deaf;fakih;jawi learning;mobile learning game},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7271613,
  Title                    = {Communication and collaboration of heterogeneous unmanned systems using the joint architecture for Unmanned Systems (JAUS) standards},
  Author                   = {M. L. Incze and S. R. Sideleau and C. Gagner and C. A. Pippin},
  Booktitle                = {OCEANS 2015 - Genova},
  Year                     = {2015},
  Month                    = {May},
  Pages                    = {1-6},

  Abstract                 = {The Naval Undersea Warfare Center Division Newport (NUWCDIVNPT) and Georgia Tech Research Institute (GTRI) completed a successful at-sea exercise with autonomous UAS and UUV systems demonstrating cross-domain unmanned system communication and collaboration. The exercise was held at the NUWC Narragansett Bay Shallow Water Test Facility (NBSWTF) range, and it represented for the first time the use of standard protocols and formats that effectively support cross-domain unmanned system operations. Four man-portable Iver2 UUVs operating in coordinated missions autonomously collected environmental data, which was compressed in-stride, re-formatted, and exfiltrated via UAS relay for display and tactical decision making. Two UAS with autonomous flight take-off and mission execution were sequenced to serve as ISR platforms and to support communications as RF relays for the UUVs performing Intelligence Preparation of the Environment missions. Two Command and Control nodes ashore provided unmanned system tasking and re-tasking, and they served to host and display both geo-positional data and status for UAS and UUV vehicles during the operational scenarios run during the exercise. The SAE Joint Architecture for Unmanned Systems (JAUS) standards were used for all message traffic between shore-based C2 nodes, UAS, and UUVs active in the NBSWTF exercise area. Exercise goals focused on CNO priorities expressed in the Undersea Domain Operating Concept of AUG 2013 which emphasized protocols essential to effective command and control of networked unmanned systems with decentralization and flexibility of command structures. Development for this project highlighted both the strengths and shortfalls of JAUS and captured the requirements for moving forward in effective cross-domain communications that support distributed, agile C2 nodes to meet evolving CONOPS for growing unmanned system presence and mission roles. The scenario employed operating parameters for UAS and UUV that have been- established in real-world operations and ongoing unmanned system programs. The tactical information from unmanned systems was displayed in real-time on shore-based C2 displays: the tactical FalconView display and the developmental TOPSIDE command and control station. This work represents a critical step in communications for networking of heterogeneous unmanned systems and establishes a solid platform for alignment of development and ongoing programs. The evaluation of JAUS suitability for near-term operational applications provides significant value as Concepts of Operation that rely on netted heterogeneous systems are being targeted. The focus on affordable commercial unmanned systems for this experimentation establishes the value of highly capable, portable systems to provide economical development and test opportunities with low-cost and low-risk alternatives to many planned and fielded systems. The JAUS architecture was introduced to the NUWC and GTRI unmanned systems though an instantiation of the Mission Oriented Operating Suite (MOOS) autonomy framework on secondary CPUs integrated into the Iver2 UUVs and the GTRI UAS. Since the GTRI UASs already had ROS installed, a MOOS-ROS bridge was employed to support use of the developed JAUS messaging capability. Established JAUS services were employed where the required functions could be met. New JAUS services were developed to meet functionality required for the operational scenarios in this exercise but not yet supported in the existing releases of SAE JAUS. Independent C++ header libraries that could be compiled at run time for specific autonomy frameworks, such as MOOS, were employed to support a software-agnostic approach. Immediate targets for broadening the influence of this work to coalition partners include the NATO Recognized Environmental Picture (REP) 2015 and The Technical Cooperation Program (TTCP) 2015 exercises. This project and demonstration was funded under a NUWC Strategic Initiative and GTRI pro},
  Doi                      = {10.1109/OCEANS-Genova.2015.7271613},
  Keywords                 = {autonomous aerial vehicles;autonomous underwater vehicles;command and control systems;military communication;C++ header library;C2 display;CNO priority;CONOPS;GTRI program support;Georgia tech research institute;ISR platform;JAUS standard;MOOS-ROS bridge;NATO REP;NATO recognized environmental picture;NBSWTF;NUWCDIVNPT;Narragansett bay shallow water test facility;RF relay;SAE JAUS;TTCP;UUV vehicle;autonomous UAS;autonomous flight take-off;cross-domain unmanned system communication;developmental TOPSIDE command and control station;geopositional data;heterogeneous unmanned system;joint architecture for unmanned system;man-portable Iver2 UUV;mission oriented operating suite;naval undersea warfare center division Newport;netted heterogeneous system;software-agnostic approach;tactical FalconView display;tactical decision making;tactical information;the technical cooperation program;undersea domain operating concept;Collaboration;Command and control systems;Protocols;Sea surface;Standards;Systems operation;Vehicles;autonomous vehicles;command and control systems;communication protocols;data transmission;environmental characterization},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6701476,
  Title                    = {Cloud: The Global Transformation},
  Author                   = {A. Islam and M. Irfan and K. Mohiuddin and H. Al-Kabashi},
  Booktitle                = {2013 International Conference on Cloud Ubiquitous Computing Emerging Technologies},
  Year                     = {2013},
  Month                    = {Nov},
  Pages                    = {58-62},

  Abstract                 = {In the world of today, Information Technology is changing and evolving continuously for driving business and personal needs. with the emerging interest in cloud computing, more and more business or individuals are looking not only migrate them but also to transform services and applications for resource rich competencies, are provided through cloud platforms, develop the new business era that facilitates by cloud transformation. Transformation can be referred to as a phenomenon, a process, a state or a concept. It represents the technological transformation in the dynamic process and the world is changing, adapting to external or internal forces. Organizations have been made investing their capital in developing IT infrastructure, further on maintenance, up-gradations of hardware, software and to improve their services. Cloud based transformation is an approach for creating new service-centric technology, cost-effective, agile and flexible. IT service model by switching from company-owned IT infrastructure and services to pay-per use business model. It leverages the latest trends in cloud computing technology and next generation SaaS, IaaS, PaaS models. This approach will help to achieve desired business agility and guarantee quality-of-services through emerging Global Cloud Transformation System (GCTS). We will illustrate the cost-benefit analysis of lean IT transformation approach in enterprise collaboration scenario to Cloud Global Transformation (CGT).},
  Doi                      = {10.1109/CUBE.2013.21},
  Keywords                 = {cloud computing;cost-benefit analysis;next generation networks;quality of service;CGT;GCTS;IT service model;business agility;business model;cloud computing technology;cloud global transformation;cloud platforms;company owned IT infrastructure;cost benefit analysis;dynamic process;emerging global cloud transformation system;enterprise collaboration scenario;information technology;lean IT transformation;next generation IaaS models;next generation PaaS models;next generation SaaS models;quality of services;resource rich competencies;service centric technology;technological transformation;Cloud computing;Companies;Computational modeling;Economics;Transforms;Cloud;Cloud services;Cost benefit analysis;Global cloud transformation system;Global transformation},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7424100,
  Title                    = {On the Integration of Agile Practices into Teaching: An Approach to Overcoming Teaching and Learning Challenges of Programming},
  Author                   = {B. Isong and O. Ifeoma and N. Gasela},
  Booktitle                = {2015 International Conference on Computational Science and Computational Intelligence (CSCI)},
  Year                     = {2015},
  Month                    = {Dec},
  Pages                    = {264-270},

  Abstract                 = {In Computer Science Education, teaching of computer programming (CP) for beginners remains one of the greatest challenges. This is due to the nature of first year students characterized by under-preparedness, poor academic background and so on. Moreover, the traditional lecture-based approach is used and the computer laboratories are rarely used. Consequently, students are not motivated, engaged or no active participation. While this teaching approach has failed to achieve learning outcome, incorporating cutting-edge practices like agile methods into the teaching could be valuable. This stems from the widespread in practice and acceptance of agile methods in the software industries today. Though agile practices like pair programming have impacted students' programming projects, none has been reported on teaching. Therefore, this paper proposes a new approach of teaching CP using the agile methods. The goal is to assist beginners acquire needed programming skills, proffer teaching technique that maximizes the chances of engagement, active participation, and improving teaching by reflecting on what has been taught and what the students are learning. Additionally, beginners will be able to operate the computer, write correct code, gain better programming skills and assist teachers to manage large classes effectively. To achieve this, the study adopted the framework for decoding the discipline.},
  Doi                      = {10.1109/CSCI.2015.153},
  Keywords                 = {computer science education;programming;software prototyping;teaching;agile methods;computer programming education;computer science education;pair programming;software industries;teaching;Computers;Decoding;Education;Iterative closest point algorithm;Programming profession;Software;agile process;computer programming;learning;teaching;undergraduate students},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7561512,
  Title                    = {P2P outsourcing model for agile project tasks allocation},
  Author                   = {A. Ivaschenko and A. Lednev and A. Diyazitdinova},
  Booktitle                = {2016 18th Conference of Open Innovations Association and Seminar on Information Security and Protection of Information Technology (FRUCT-ISPIT)},
  Year                     = {2016},
  Month                    = {April},
  Pages                    = {85-91},

  Abstract                 = {P2P outsourcing model is introduced to describe an interaction process of project tasks distribution between employees as a part of the enterprise project management system that supports decision-making process within the company. The proposed solution provides an agile technology of tasks allocation in enterprises with matrix organizational structure. The described approach was implemented using multi-agent technology. The resulting solution was implemented in oil-and-gas industry using CUBA platform.},
  Doi                      = {10.1109/FRUCT-ISPIT.2016.7561512},
  Keywords                 = {decision making;gas industry;multi-agent systems;organisational aspects;outsourcing;peer-to-peer computing;personnel;petroleum industry;project management;resource allocation;software prototyping;CUBA platform;P2P outsourcing model;agile project task allocation;decision-making process;employee;enterprise project management system;matrix organizational structure;multiagent technology;oil-and-gas industry;Companies;Decision making;Outsourcing;Project management;Resource management;Schedules},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6747220,
  Title                    = {SENSEI: Software evolution service integration},
  Author                   = {J. Jelschen},
  Booktitle                = {2014 Software Evolution Week - IEEE Conference on Software Maintenance, Reengineering, and Reverse Engineering (CSMR-WCRE)},
  Year                     = {2014},
  Month                    = {Feb},
  Pages                    = {469-472},

  Abstract                 = {Software evolution tools mostly implement a single technique to assist in achieving a specific objective. Overhauling, renovating, or migrating large and complex legacy software systems require the proper combination of several different techniques appropriate for each subtask. Since few tools are built for interoperability, the setup of a toolchain supporting a given software evolution process is an elaborate, time-consuming, error-prone, and redundant endeavor, which yields brittle and inflexible toolchains with little to no reusability. This paper presents SENSEI, an approach to enable the implementation of an integration framework for software evolution tools using component-based, service-oriented, and model-driven methods, to ease toolchain creation and enable agile execution of software evolution projects. It will be evaluated by implementing and using it to build the toolchains supporting two software evolution projects, and having practitioners assess its usefulness.},
  Doi                      = {10.1109/CSMR-WCRE.2014.6747220},
  Keywords                 = {object-oriented programming;open systems;service-oriented architecture;software maintenance;software reusability;software tools;SENSEI;complex legacy software systems;component-based methods;interoperability;model-driven methods;reusability;service-oriented methods;software evolution service integration;software evolution tools;Abstracts;Catalogs;Concrete;Interoperability;Measurement;Software;Taxonomy},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6698884,
  Title                    = {An experience report for software quality evaluation in highly iterative development methodology using traditional metrics},
  Author                   = {K. Jinzenji and T. Hoshino and L. Williams and K. Takahashi},
  Booktitle                = {2013 IEEE 24th International Symposium on Software Reliability Engineering (ISSRE)},
  Year                     = {2013},
  Month                    = {Nov},
  Pages                    = {310-319},

  Abstract                 = {The use of highly iterative software development methodologies, such as Agile and Lean, have been growing. However, these methodologies do not explicitly provide practices for managing and measuring software quality. This deficiency may prevent software development organizations in critical domains from transforming from traditional development to highly iterative development. These organizations may need to manage quality during development and may desire to compare with the quality of a large number of products produced in the past. In this paper, we focus on the reliability aspects of software quality and discuss the applicability of conventional reliability metrics to iterative development. First, we defined the general process structure in iterative development. Then, we present an associated quality evaluation scheme closely. Our experimental results indicate that traditional quality metrics were applicable to iterative development and that the iterative development achieved maturity sufficient for the commercial release.},
  Doi                      = {10.1109/ISSRE.2013.6698884},
  ISSN                     = {1071-9458},
  Keywords                 = {software metrics;software performance evaluation;software quality;highly iterative development methodology;iterative software development methodologies;quality evaluation scheme;quality metrics;reliability metrics;software quality evaluation;traditional metrics;Iterative methods;Measurement;Production;Software quality;Software reliability;Testing;iterative development;quality metrics;software reliability},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6480018,
  Title                    = {Aperture: An Open Web 2.0 Visualization Framework},
  Author                   = {D. Jonker and S. Langevin and N. Bozowsky and W. Wright},
  Booktitle                = {2013 46th Hawaii International Conference on System Sciences},
  Year                     = {2013},
  Month                    = {Jan},
  Pages                    = {1485-1494},

  Abstract                 = {Aperture is an open, adaptable and extensible Web 2.0 visualization framework, designed to produce visualizations for analysts and decision makers in any common web browser. Aperture utilizes a novel layer based approach to visualization assembly, and a data mapping API that simplifies the process of adaptable transformation of data and analytic results into visual forms and properties. This common visual layer and data mapping API, combined with core elements such as contextually derivable color palettes, layout and symbol ontology services is designed to enable highly creative and expressive visual analytics, rapidly and with less effort. This paper introduces the Aperture framework, describing key features of the programming API and reference implementation, presents example use cases, and proposes an approach for measuring technical performance metrics for software development, and operational performance metrics for visualization support of analysis and decision making.},
  Doi                      = {10.1109/HICSS.2013.96},
  ISSN                     = {1530-1605},
  Keywords                 = {Internet;application program interfaces;data analysis;data visualisation;decision making;online front-ends;ontologies (artificial intelligence);software metrics;software performance evaluation;Open Web 2.0 visualization framework;Web browser;adaptable data transformation;aperture framework;contextually derivable color palettes;creative visual analytics;data mapping API;decision making;expressive visual analytics;layer based approach;operational performance metrics;programming API;reference implementation;software development;symbol ontology services;technical performance metrics;visual layer;visualization assembly;Apertures;Assembly;Data visualization;Image color analysis;Visual analytics;agile;big data;framework;toolkit;visual analytics;visualization},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6759213,
  Title                    = {Teaching Theories Underlying Agile Methods in a Systems Development Course},
  Author                   = {A. K. Kakar},
  Booktitle                = {2014 47th Hawaii International Conference on System Sciences},
  Year                     = {2014},
  Month                    = {Jan},
  Pages                    = {4970-4978},

  Abstract                 = {Presently Agile methods taught in universities focus primarily on providing hands-on experience of the process of development but ignore the evolution of, and theories behind, the Agile practices. "Without theory we are just groping in chaos" [Deming, 1986]. Knowing the 'why" in addition to the "how" of Agile methods will help develop reflective skills and give students an edge as they transition to the rapidly evolving real world of Information Systems. In this article a set of relevant theories that can be included as a module in an Agile methods course curriculum is outlined. An exposure to theories underlying Agile methods help students appreciate the relevance of the principles and practices of the Agile approach and develop authentic problem solving skills.},
  Doi                      = {10.1109/HICSS.2014.610},
  ISSN                     = {1530-1605},
  Keywords                 = {computer science education;information systems;software prototyping;agile methods;agile practices;authentic problem solving skills;information systems;systems development course;Agile manufacturing;Business;Job design;Process control;Productivity;Software;Agile Principles;Teaching Agile Methods;Theoretical Underpinnings},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7426903,
  Title                    = {A methodology for regression testing reduction and prioritization of agile releases},
  Author                   = {P. Kandil and S. Moussa and N. Badr},
  Booktitle                = {2015 5th International Conference on Information Communication Technology and Accessibility (ICTA)},
  Year                     = {2015},
  Month                    = {Dec},
  Pages                    = {1-6},

  Abstract                 = {Regression testing is the type of software testing that seeks to uncover new software bugs in existing areas of a system after changes have been made to them. The significance of regression testing have grown in the past decade with the amplified adoption of agile development methodologies, which requires the execution of regression testing at the end of each release. In this paper, we present an automated agile regression testing approach that reduces the number of test cases to be used at regression phase depending on the similarity of issues exposed from the different test cases, taking into consideration the user story coverage. It then prioritizes the reduced test cases using user-provided weighted agile parameters. The proposed approach achieves enhancement for both the reduction and prioritization of test cases for agile regression testing.},
  Doi                      = {10.1109/ICTA.2015.7426903},
  Keywords                 = {program debugging;program testing;software prototyping;agile development methodologies;agile release prioritization;automated agile regression testing approach;regression testing reduction;software bugs;software testing;user story coverage;user-provided weighted agile parameters;Complexity theory;Fault detection;Greedy algorithms;Mathematical model;Software;Software testing;Agile Parameters;Agile Releases;Agile Testing;Regression Testing;Test Cases Prioritization;Test Cases Reduction},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7281982,
  Title                    = {Methodology for developing ICT based course material for children with a developmental disability based on EPISODE},
  Author                   = {T. Kaneyama and T. Goto and T. Nishino},
  Booktitle                = {2015 IEEE 13th International Conference on Industrial Informatics (INDIN)},
  Year                     = {2015},
  Month                    = {July},
  Pages                    = {1654-1658},

  Abstract                 = {Education curricula for children with developmental disabilities have attempted to include information and communication technology (ICT) teaching materials. However, such children demonstrate individual differences at the developmental stage of their cognitive faculties. Thus, it is difficult to adopt commercially available ICT teaching materials when working with them. In this study, we introduce the concept of inclusive design in the implementation of ICT teaching materials for children with developmental disabilities. Inclusive design allows for the participation of the elderly as well as those with disabilities at the early stages of development and can be used to identify special needs associated with the development. In addition to ICT teaching materials, the use of Extreme Programming Method for Innovative Software Based on Systems Design (EPISODE), which has agile development and innovation techniques at its core, has been proposed. Therefore, in this study, we attempt to develop a method comprising inclusive design and EPISODE to develop ICT teaching materials. Finally, we report on the practice of developing ICT teaching materials for children with developmental disabilities.},
  Doi                      = {10.1109/INDIN.2015.7281982},
  ISSN                     = {1935-4576},
  Keywords                 = {computer aided instruction;educational courses;handicapped aids;software prototyping;teaching;EPISODE;ICT based course material development;ICT teaching materials;agile development;cognitive faculties;developmental disabled children;education curricula;elderly person;extreme programming method-for-innovative software based-on-systems design;information and communication technology teaching materials;innovation techniques;Convergence;Education;Planning;Programming;Prototypes;Senior citizens;Software},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7077124,
  Title                    = {Where is Scrum in the current Agile world?},
  Author                   = {G. M. Kapitsaki and M. Christou},
  Booktitle                = {2014 9th International Conference on Evaluation of Novel Approaches to Software Engineering (ENASE)},
  Year                     = {2014},
  Month                    = {April},
  Pages                    = {1-8},

  Abstract                 = {A variety of methodologies in software processes exist nowadays with the Agile software development having gained significant ground since the introduction of the Agile manifesto in 2001. Scrum is a representative Agile development method employed in the software industry. Since trends come and go, it is vital to see where they stand in the real world. In order to gain an insight into how Scrum is viewed nowadays, we have conducted an online study on the current state of the adoption of Scrum. The study targeted in demonstrating where the success or failure success factors of Scrum lie and in viewing Scrum properties in comparison to heavyweight approaches. This paper presents the results of the study that constitute an instructive view into the above aspects of Scrum development.},
  Keywords                 = {Companies;Industries;Productivity;Scrum (Software development);Software;Standards organizations;Adaptive Development;Agile;Scrum;Software Process},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6553959,
  Title                    = {Training challenges in national ehealth initiatives - Insights from a case study on the implementation of an electronic hospital separation record system in Sri Lanka},
  Author                   = {N. Kariyawasam and P. Turner and B. Dayaratne},
  Booktitle                = {2013 8th International Conference on Computer Science Education},
  Year                     = {2013},
  Month                    = {April},
  Pages                    = {484-489},

  Abstract                 = {Objective: To present insights on training challenges arising during the development and implementation of one of Sri Lanka's first national ehealth initiatives: the national electronic hospital separation record system. Methods and procedures: This system aims to improve the reporting of separation diagnosis in public hospitals and was developed through an Agile software methodology. Initially users at 7 hospitals were engaged in the system design and iteratively trained in system use. Subsequently the national roll-out began with a further 8 hospitals trained in the system by October 2012. More than 150 hospitals are expected to have the system in place by January 1st 2014 and nation-wide implementation is expected to complete by 2017. Analysis of training challenges is based on data from both the first 7 hospitals and the second 8 hospitals. It is anticipated insights presented will support an improved national roll-out of the system Results: Training approaches and user training requirements varied considerably between users involved in the initial development and the users to whom the developed system was subsequently introduced. Significantly, the system changed medical workflow such that the project had to extend training beyond system usage and into the medical processes of diagnostic records management. Engagement of system users through the Agile methodology imparts system knowledge and training not readily available to subsequent users exposed during roll-out. This posed a number of training challenges that had not been foreseen during project planning. The paper highlights the need for comprehensive consideration of all aspects of workflow including non-technical dimensions to support a smooth national roll-out. Conclusions: eHealth system training should not be limited to system use without a d},
  Doi                      = {10.1109/ICCSE.2013.6553959},
  Keywords                 = {hospitals;medical information systems;software prototyping;training;Sri Lanka;agile software methodology;clinical practice;clinical workflow;diagnostic record management;ehealth system training;iterative system evaluation;medical workflow;national e-health initiatives;national electronic hospital separation record system;public hospitals;separation diagnosis;training challenges;training programs;user training requirements;Abstracts;Bit error rate;Computers;Educational institutions;Hospitals;Training;Clinical Diagnosis;Health Information Management;Hospital Training;eHealth Training},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6573032,
  Title                    = {Image transfer optimization for agile development},
  Author                   = {A. Karve and A. Kochut},
  Booktitle                = {2013 IFIP/IEEE International Symposium on Integrated Network Management (IM 2013)},
  Year                     = {2013},
  Month                    = {May},
  Pages                    = {554-560},

  Abstract                 = {Cloud computing is becoming a common delivery model for IT services. Development and testing of applications and services is usually conducted on a development cloud environment often within customer premises and deployed in stages to a production cloud. Agile development process integrates development and deployment of IT systems and requires frequent and low cost synchronization between development and deployment cloud environments. This article proposes and evaluates virtual machine transfer algorithm based on image redundancy that allows to reduce bandwidth and time required to transfer specific images from development to production sites. It also explores how a typical image library, including public and private images, evolves over time and what impact it has on potential gain from the proposed algorithm. An analytical model is also proposed that allows to quantify degree of saving from using the algorithm. Evaluation shows up to 80% reduction in terms of transfer time and network bandwidth usage.},
  ISSN                     = {1573-0077},
  Keywords                 = {cloud computing;software prototyping;virtual machines;IT services;IT system deployment;IT system development;agile development process;analytical model;cloud computing;deployment cloud environments;development cloud environment;image library;image redundancy;image transfer optimization;network bandwidth usage;private image;production cloud;public image;transfer time;virtual machine transfer algorithm;Bandwidth;Clustering algorithms;Indexes;Libraries;Redundancy;Virtual machining},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6653675,
  Title                    = {Daily Calorie Manager for basic daily use},
  Author                   = {S. Kasim and F. A. Zakaria},
  Booktitle                = {Third International Conference on Innovative Computing Technology (INTECH 2013)},
  Year                     = {2013},
  Month                    = {Aug},
  Pages                    = {437-442},

  Doi                      = {10.1109/INTECH.2013.6653675},
  Keywords                 = {diseases;medical computing;mobile computing;Android users;RUP;basic daily use;construction phase;daily calorie manager;diabetes problem;elaboration phase;food calories;food factor;health problem reduction;healthier lifestyle;inception phase;rational unified process model;transition phase;Androids;Calendars;Humanoid robots;Radiation detectors;Shape;Temperature measurement;User interfaces;activity;android;calorie;healthy},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7155964,
  Title                    = {Applying Agile Methodologies in Industry Projects: Benefits and Challenges},
  Author                   = {K. Kaur and A. Jajoo and Manisha},
  Booktitle                = {2015 International Conference on Computing Communication Control and Automation},
  Year                     = {2015},
  Month                    = {Feb},
  Pages                    = {832-836},

  Abstract                 = {Agile software development has been prevalent in IT industry since more than two decades now. Conceptually, Agile was introduced as an iterative, incremental and adaptive methodology for software development. There are quite a few studies that discuss the success of agile development projects on account of multiple factors like cost, time, quality and productivity. Owing to its popular virtues like enhanced flexibility to incorporate evolving requirements, incremental delivery, quick time to market and ability to keep pace with market trends [1], clients tend to leverage agile methods for a variety of project types in addition to typical small scale development projects. Through this paper, we discuss some of the practical aspects, pros and cons of applying agile principles to different types of IT projects including testing projects, maintenance projects and large-scale development projects.},
  Doi                      = {10.1109/ICCUBEA.2015.166},
  Keywords                 = {project management;software development management;software prototyping;agile development projects;agile methodologies;agile principles;agile software development;industry projects;information technology;large-scale development projects;maintenance projects;testing projects;Agile software development;Automation;Maintenance engineering;Planning;Portals;Software;Testing;Agile;implementation;large scale development;maintenance;projects;testing},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7956046,
  Title                    = {A Host-Based Performance Comparison of 40G NFV Environments Focusing on Packet Processing Architectures and Virtual Switches},
  Author                   = {R. Kawashima and S. Muramatsu and H. Nakayama and T. Hayashi and H. Matsuo},
  Booktitle                = {2016 Fifth European Workshop on Software-Defined Networks (EWSDN)},
  Year                     = {2016},
  Month                    = {Oct},
  Pages                    = {19-24},

  Abstract                 = {Network Functions Virtualization (NFV) is now accepted in large production networks for agile introduction of various Network Functions (NFs). A service chaining technology that dynamically links multiple NFs over the entire network is a heart of the NFV concept. However, virtualizing NF-dedicated hardwares as virtual machines on IA servers brings performance problems, such as lower throughput, longer latency, and larger jitter. Various packet processing frameworks and virtual switches have been proposed to resolve the problems, but there is no comprehensive study of their performance characteristics focusing on both physical/virtual layers. In this paper, we evaluate fundamental throughput and latency/jitter of three packet processing architectures (NAPI, netmap, and DPDK) with six virtual switches (Linux Bridge, Open vSwitch, VALE, L2FWD-DPDK, OVS-DPDK, and Lagopus) for physical/virtual layers. Our experiments were performed on both Intel and Mellanox 40 GbE NICs. Finally, we discuss appropriate NFV host environment for commercial-use.},
  Doi                      = {10.1109/EWSDN.2016.11},
  Keywords                 = {Conferences;Europe;DPDK;NFV;VM;netmap;virtual switch},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6759179,
  Title                    = {Introduction to Software Technology Track},
  Author                   = {R. Kazman and G. Agha},
  Booktitle                = {2014 47th Hawaii International Conference on System Sciences},
  Year                     = {2014},
  Month                    = {Jan},
  Pages                    = {4710-4710},

  Doi                      = {10.1109/HICSS.2014.577},
  ISSN                     = {1530-1605},
  Keywords                 = {Cloud computing;Education;Organizations;Standards organizations;Wireless sensor networks},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7166092,
  Title                    = {An Empirical Study into Social Success Factors for Agile Software Development},
  Author                   = {E. v. Kelle and J. Visser and A. Plaat and P. v. d. Wijst},
  Booktitle                = {2015 IEEE/ACM 8th International Workshop on Cooperative and Human Aspects of Software Engineering},
  Year                     = {2015},
  Month                    = {May},
  Pages                    = {77-80},

  Abstract                 = {Though many warn that Agile at larger scale is problematic or at least more challenging than in smaller projects, Agile software development seems to become the norm, also for large and complex projects. Based on literature and qualitative interviews, we constructed a conceptual model of social factors that may be of influence on the success of software development projects in general, and of Agile projects in particular. We also included project size as a candidate success factor. We tested the model on a set of 40 projects from 19 Dutch organizations, comprising a total of 141 project members, Scrum Masters and product owners. We found that project size does not determine Agile project success. Rather, value congruence, degree of adoption of Agile practices, and transformational leadership proved to be the most important predictors for Agile project success.},
  Doi                      = {10.1109/CHASE.2015.24},
  Keywords                 = {software engineering;agile software development;candidate success factor;social success factors;Agile software development;Analytical models;Interviews;Mediation;Regression analysis;Social factors;Agile Software Development;predictive model;social success factors;transformational leadership;value congruence},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6707499,
  Title                    = {Software quality assurance in Scrum: The need for concrete guidance on SQA strategies in meeting user expectations},
  Author                   = {T. Khalane and M. Tanner},
  Booktitle                = {2013 International Conference on Adaptive Science and Technology},
  Year                     = {2013},
  Month                    = {Nov},
  Pages                    = {1-6},

  Abstract                 = {The purpose of this study is to identify and present the concerns of project stakeholders in relation to Software Quality Assurance (SQA) in a Scrum environment. Guided by the tenets of Classic Grounded Theory Methodology, this exploratory and inductive case study uncovers SQA concepts related to the main concern of Meeting User Expectations. In trying to resolve the main concern, the Scrum project stakeholders alluded to lack of “Concrete Guidance” on SQA strategies, tools, and techniques in Scrum, The lack of concrete guidance in Scrum requires a development team to devise Innovations which may include Adopting Practices from other methodologies and carefully designing the Process Structure to accommodate the Adopted Practices, ensure Continuous Improvement of the process, and provide an environment for Collaborative Ownership. By demonstrating the incompleteness of Agile methods with particular attention to the lack of concrete guidance in Scrum, the study draws on method tailoring literature to argue for customisation of Scrum. The study further proposes that Scrum needs to be viewed as a framework of `empty buckets' which need to be filled with situation specific SQA practices and processes in order to meet user expectations.},
  Doi                      = {10.1109/ICASTech.2013.6707499},
  ISSN                     = {2326-9413},
  Keywords                 = {software prototyping;software quality;Process Structure designing;SQA strategies;Scrum project stakeholders;adopting practices;agile methods;classic grounded theory methodology;collaborative ownership;concrete guidance;continuous process improvement;empty bucket framework;software quality assurance;user expectations;Business;Concrete;Portals;Software quality;Technological innovation;Testing;Agile Software Development;Concrete Guidance;Process Structure;Quality Assurance;Scrum;User Expectations},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7359262,
  Title                    = {Evolving a risk-free, requirement centric and goal oriented software development life cycle model},
  Author                   = {S. K. Khatri and A. Garg},
  Booktitle                = {2015 4th International Conference on Reliability, Infocom Technologies and Optimization (ICRITO) (Trends and Future Directions)},
  Year                     = {2015},
  Month                    = {Sept},
  Pages                    = {1-6},

  Abstract                 = {Software is a general term for the various kinds of programs used to operate computers and various related devices. Software mainly consists of carefully-organized instructions and code written by developers in any of various special programming languages. Software impacts on the general public and society keeps on being profound. As the significance of software development model develops, the software community consistently attempts to develop new technologies that will make it much faster, easier, and less expensive to construct good-quality software's. The software development life cycle model is a framework which consists of sequence of activities followed by the system designers and software developers. It comprises of a sequence of various different phases or stages in which every phase of the SDLC utilizes the outcomes of the previous phase. Previously developed models such as Incremental model, Spiral Model, Prototyping model, Agile Models, waterfall model, RAD model, Transformation model were successful in the early stages of software development cycle which later brings out some obstacles such as less customer satisfaction as per their requirements , high risk and cost involved, time complexity and many more. The present research emphasizes a new model which focuses on full-filling the targeted objectives based on the better understanding of customer's requirements.},
  Doi                      = {10.1109/ICRITO.2015.7359262},
  Keywords                 = {Requirement centric;Software Development Life Cycle (SDLC);Software Engineering;customer satisfaction},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7140502,
  Title                    = {Service provider DevOps for large scale modern network services},
  Author                   = {J. Kim and C. Meirosu and I. Papafili and R. Steinert and S. Sharma and F. J. Westphal and M. Kind and A. Shukla and F. Németh and A. Manzalini},
  Booktitle                = {2015 IFIP/IEEE International Symposium on Integrated Network Management (IM)},
  Year                     = {2015},
  Month                    = {May},
  Pages                    = {1391-1397},

  Abstract                 = {Network service providers are facing challenges for deploying new services mainly due to the growing complexity of software architecture and development process. Moreover, the recent architectural innovation of network systems such as Network Function Virtualization (NFV), Software-defined Networking (SDN), and Cloud computing increases the development and operation complexity yet again. One of the emerging solutions to this problem is a novel software development concept, namely DevOps, that is widely employed by major Internet software companies. Although the goals of DevOps in data centers are well-suited for the demands of agile service creation, additional requirements specific to the virtualized and software-defined network environment are important to be addressed from the perspective of modern network carriers. In this paper, we thoroughly debate DevOps requirements for developing a modern service creation platform by taking EU FP7 project UNIFY as a reference architecture and suggest the corresponding extensions of UNIFY interfaces that meet the discovered requirements.},
  Doi                      = {10.1109/INM.2015.7140502},
  ISSN                     = {1573-0077},
  Keywords                 = {cloud computing;software architecture;software defined networking;virtualisation;DevOps service provider;EU FP7 project UNIFY;Internet software companies;NFV;SDN;agile service creation;cloud computing;data centers;large scale modern network services;network function virtualization;software architecture;software-defined networking;Computer architecture;Conferences;Debugging;Monitoring;Observability;Software;Virtual private networks},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7890616,
  Title                    = {Our Journey to Becoming Agile: Experiences with Agile Transformation in Samsung Electronics},
  Author                   = {S. Kim and H. Lee and Y. Kwon and M. Yu and H. Jo},
  Booktitle                = {2016 23rd Asia-Pacific Software Engineering Conference (APSEC)},
  Year                     = {2016},
  Month                    = {Dec},
  Pages                    = {377-380},

  Doi                      = {10.1109/APSEC.2016.064},
  ISSN                     = {1530-1362},
  Keywords                 = {agile manufacturing;consumer electronics;electronic products;team working;Samsung Electronics;agile culture;agile development;agile transformation;consumer electronics companies;cross functional team formations;engineering practices;master plan;organizational silos;process revision;requirement analysis;road map;Companies;Consumer electronics;Integrated circuit modeling;Schedules;Software;Agile Office;Agile Transformation;Scrum},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7007682,
  Title                    = {Virtualized and self-configurable utility communications enabled by software-defined networks},
  Author                   = {Y. J. Kim and K. He and M. Thottan and J. G. Deshpande},
  Booktitle                = {2014 IEEE International Conference on Smart Grid Communications (SmartGridComm)},
  Year                     = {2014},
  Month                    = {Nov},
  Pages                    = {416-421},

  Abstract                 = {Utility communications are increasingly required to support machine-to-machine (M2M) communications for hundreds to millions of end devices ranging from meters and PMUs to tiny sensors, high-powered sensors (e.g., intelligent electric devices), and electric vehicles. The Software Defined Network (SDN) concept provides inherent features to support in a self-configurable and scalable manner the deployment and management of existing and envisioned utility communication networks that will connect between end devices and application servers, or among end devices. The programmability of SDN technology allows the agile, elastic, and scalable deployment of present and future utility applications with varying requirements on security and time criticality. In this work, we first show that a well-known standard solution (i.e., IEEE 802.1Q [1]), which is popularly employed for virtual networking in industry, is limited to support large-scale utility M2M applications. Next, with some utility application use cases, we demonstrate that using the SDN technology (i.e., OpenFlow [2]), we enable elastically adaptable virtual utility network slices per-application to securely, dynamically, and cost-efficiently meet the utility communication needs. Specifically, we design a SDN-based architectural solution for virtual utility networks that will support self-configurable, secure, and scalable deployment of utility applications that leverage many end devices. Using two SDN-enabled Ethernet switches [3] available in today's market, the feasibility of our idea is discussed.},
  Doi                      = {10.1109/SmartGridComm.2014.7007682},
  Keywords                 = {computer network management;local area networks;phasor measurement;smart power grids;telecommunication switching;virtual private networks;virtualisation;IEEE 802.1Q;M2M communication networks;OpenFlow;PMU;SDN technology programmability;SDN-enabled Ethernet switches;high-powered sensors;large-scale utility M2M applications;machine-to-machine communications;phasor measurement units;self-configurable utility communications;smart grid roll-out;software-defined networks;utility communication network management;virtual utility network;virtualized utility communications;Control systems;Delays;Phasor measurement units;Ports (Computers);Security;Servers;Smart grids},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6913382,
  Title                    = {Software Development PBL Focusing on Communication Using Scrum},
  Author                   = {S. Kizaki and Y. Tahara and A. Ohsuga},
  Booktitle                = {2014 IIAI 3rd International Conference on Advanced Applied Informatics},
  Year                     = {2014},
  Month                    = {Aug},
  Pages                    = {662-669},

  Abstract                 = {In this paper, we improved the PBL (Project-Based Learning) environment aiming at the collaborative-software development education by industry-university cooperation. In the fiscal year 2011, the agile technique adopted as the software development process, and the small-scale project was tried. However, there were problems like the shortage of communication between members, the customers and difference of a member's technical capabilities and the burden was placed to the individual. In the fiscal year 2012/2013, in order to solve these problems, the development process "Scrum" was adopted. We analyzed the result of projects. In the result, Scrum was being able to perform problem solving in which the member's diversity was harnessed. It could carry out improved relations as the team by the positive participation in customer's projects. And, it could build the communication base by "making the place team". Therefore, we understood using Scrum for success of projects.},
  Doi                      = {10.1109/IIAI-AAI.2014.138},
  Keywords                 = {computer aided instruction;educational institutions;groupware;software engineering;PBL;Scrum;collaborative-software development education;industry-university cooperation;project-based learning;Agile software development;Educational institutions;Programming profession;Software;Training;Project-based Learning(PBL);Scrum;agile software development},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7547109,
  Title                    = {Agile engineering in mechatronic education: Interdisciplinary development of a mechatronic system using Scrum},
  Author                   = {T. P. Klein and B. Drescher and G. Reinhart},
  Booktitle                = {2016 11th France-Japan 9th Europe-Asia Congress on Mechatronics (MECATRONICS) /17th International Conference on Research and Education in Mechatronics (REM)},
  Year                     = {2016},
  Month                    = {June},
  Pages                    = {020-025},

  Doi                      = {10.1109/MECATRONICS.2016.7547109},
  Keywords                 = {computer aided instruction;educational courses;machinery;mechanical engineering computing;mechatronics;software prototyping;Scrum;academic course;agile engineering;machinery;mechatronic education;mechatronic system development;plant construction;software engineering;software integration;Capability maturity model;Collaboration;Education;Filling;Mechanical engineering;Mechatronics;Software;Agility;Development Process;Lean Product Development;Learning Platform;Mechatronics;Scrum},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7167166,
  Title                    = {Introducing Continuous Delivery of Mobile Apps in a Corporate Environment: A Case Study},
  Author                   = {S. Klepper and S. Krusche and S. Peters and B. Bruegge and L. Alperowitz},
  Booktitle                = {2015 IEEE/ACM 2nd International Workshop on Rapid Continuous Software Engineering},
  Year                     = {2015},
  Month                    = {May},
  Pages                    = {5-11},

  Abstract                 = {Software development is conducted in increasingly dynamic business environments. Organizations need the capability to develop, release and learn from software in rapid parallel cycles. The abilities to continuously deliver software, to involve users, and to collect and prioritize their feedback are necessary for software evolution. In 2014, we introduced Rugby, an agile process model with workflows for continuous delivery and feedback management, and evaluated it in university projects together with industrial clients. Based on Rugby's release management workflow we identified the specific needs for project-based organizations developing mobile applications. Varying characteristics and restrictions in projects teams in corporate environments impact both process and infrastructure. We found that applicability and acceptance of continuous delivery in industry depend on its adaptability. To address issues in industrial projects with respect to delivery process, infrastructure, neglected testing and continuity, we extended Rugby's workflow and made it tailor able. Eight projects at Cap Gemini, a global provider of consulting, technology and outsourcing services, applied a tailored version of the workflow. The evaluation of these projects shows anecdotal evidence that the application of the workflow significantly reduces the time required to build and deliver mobile applications in industrial projects, while at the same time increasing the number of builds and internal deliveries for feedback.},
  Doi                      = {10.1109/RCoSE.2015.9},
  Keywords                 = {Agile Methods;Configuration Management;Continuous Delivery;Continuous Integration;Release Management;Software Evolution;User Feedback;User Involvement},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6719607,
  Title                    = {An operational safety and certification assessment of a TASAR EFB application},
  Author                   = {S. Koczo and D. Wing},
  Booktitle                = {2013 IEEE/AIAA 32nd Digital Avionics Systems Conference (DASC)},
  Year                     = {2013},
  Month                    = {Oct},
  Pages                    = {1-23},

  Abstract                 = {TASAR is an example of an early NextGen application - Enabled by network-centric data communications - Information management for a pilot decision aid for operational efficiency - Leverages extensive NASA research on traffic conflict detection using ADS-B. Cost savings of reduced fuel and/or reduced flight time through agile in-flight re-planning while en route during changing airspace environmental conditions. TASAR is amenable as a Type B software application hosted on a Class 2 EFB. TASAR designated as “Minor” failure effect classification (per FAA feedback) - Significantly reduces certification/operational approval requirements and associated costs. Initial pilot feedback from TASAR Usability Study has been positive - Both on Human Machine Interface and Operational Usability; detailed analysis in process. Additional refinement of TASAR cost benefits; synergy of TASAR with flight re-planning procedures with Dispatch and Air Traffic Control clearance requests. NASA “Out Reach” to industry to transition TASAR into the flight deck.},
  Doi                      = {10.1109/DASC.2013.6719607},
  ISSN                     = {2155-7195},
  Keywords                 = {aerospace computing;air traffic control;data communication;human computer interaction;information management;ADS-B;NASA;NextGen application;TASAR EFB application;TASAR usability study;air traffic control clearance requests;airspace environmental conditions;certification assessment;class 2 EFB;cost savings;human machine interface;in-flight re-planning;information management;minor failure effect classification;network-centric data communications;operational efficiency;operational safety;reduced flight time;reduced fuel;traffic aware strategic aircrew requests;traffic conflict detection;type B software application},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7102632,
  Title                    = {Supporting the Transition to an Agile Test Matrix},
  Author                   = {R. Korosec and R. Pfarrhofer},
  Booktitle                = {2015 IEEE 8th International Conference on Software Testing, Verification and Validation (ICST)},
  Year                     = {2015},
  Month                    = {April},
  Pages                    = {1-2},

  Abstract                 = {The transition of AVL's software development unit towards lean and agile practices on team and enterprise level (implementing the scaled agile framework SAFe) requires a change in testing role, set and practices. We describe the changes of the testing strategy in reference to the agile test matrix - moving the focus of testing from system acceptance tests towards functional and unit tests. Furthermore, a supporting automated testing procedure was adopted to enable the splitting of tasks between different, globally distributed teams. With a test distribution tool, we are optimizing test execution time and test resource usage to meet the needs of the short agile cadence. The lessons learned so far during this ongoing project of tool implementation are shared. We conclude with an outlook on a research project that examines ways of systematic testing of nonfunctional requirements.},
  Doi                      = {10.1109/ICST.2015.7102632},
  ISSN                     = {2159-4848},
  Keywords                 = {program testing;software prototyping;team working;AVL;SAFe;agile cadence;agile practices;agile test matrix;automated testing procedure;enterprise level;functional tests;globally distributed teams;lean practices;nonfunctional requirements;scaled agile framework;software development unit;system acceptance tests;team level;test distribution tool;test execution time optimization;test resource usage;testing strategy;unit tests;Automation;Debugging;Mechanical power transmission;Organizations;Runtime;Software;Testing},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7167172,
  Title                    = {Rolling Out a Mission Critical System in an Agilish Way. Reflections on Building a Large-Scale Dependable Information System for Public Sector},
  Author                   = {A. Koski and T. Mikkonen},
  Booktitle                = {2015 IEEE/ACM 2nd International Workshop on Rapid Continuous Software Engineering},
  Year                     = {2015},
  Month                    = {May},
  Pages                    = {41-44},

  Abstract                 = {Despite the increasing pace of development and deployment of new software systems, the expectations regarding critical information systems have not changed. Consequently, to ensure high quality in spite of rapid updates, the fashion these facilities are taken to use need careful considerations. This paper presents and analyses real-life experiences gathered during the many years of planning, design, implementation, testing and finally deploying as a service a large, multi-million euro, extremely mission critical information system for emergency services. The project was to be carried out in an agile way, although the scope, the price and the duration were fixed by signed contracts. Fortunately, the customer was willing and able to learn how to do system development iteratively and incrementally, as well as to provide personnel to constantly collaborate with the developers. Along the way, we learned that to truly succeed in such an endeavor as this one, it is not enough to do the things almost right or by the book. Instead, everyone involved must keep raising the bar every day, in a continuous, disciplined, and controlled way.},
  Doi                      = {10.1109/RCoSE.2015.15},
  Keywords                 = {Agile development;human factors;iterative and incremental development;management support;organizational change;user involvement},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7514558,
  Title                    = {Using Lehman's laws to validate the software evolution of agile projects},
  Author                   = {G. Kour and P. Singh},
  Booktitle                = {2016 International Conference on Computational Techniques in Information and Communication Technologies (ICCTICT)},
  Year                     = {2016},
  Month                    = {March},
  Pages                    = {90-96},

  Doi                      = {10.1109/ICCTICT.2016.7514558},
  Keywords                 = {software prototyping;Lehman laws;agile development methodology;industrial agile projects;software evolution;software improvement;software system engineering;Complexity theory;Open source software;Programming;Software metrics;Software systems;Lehman's laws;agile software development;software evolution},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7521120,
  Title                    = {Critical success factors and barriers for lightweight software process improvement in agile development: A literature review},
  Author                   = {E. Kouzari and V. C. Gerogiannis and I. Stamelos and G. Kakarontzas},
  Booktitle                = {2015 10th International Joint Conference on Software Technologies (ICSOFT)},
  Year                     = {2015},
  Month                    = {July},
  Pages                    = {1-9},
  Volume                   = {1},

  Abstract                 = {The majority of software development companies are significantly benefitted by adopting software process improvement (SPI). This has been extensively addressed both in terms of research and established standards. In particular, the need for SPI in the context of Small and Medium-sized Enterprises (SMEs) led a lot of researchers to focus on this area. SMEs struggle daily to survive in a very competitive environment and their distinguishing characteristics such as the small number of employees, the flat and small organizational structure and the flexibility that governs them make it hard for them to adopt and implement SPI. On the same spirit, their distinguishing characteristics are also those that make SMEs an ideal environment for the adoption of agile methodologies. The agility that governs SMEs allows flexibility in every process they apply and, thus, promotes lightweight SPI approaches in order to remain on the battle fields of competition. In this article, we examine the special characteristics SMEs have and highlight critical success factors that should be taken advantage of and barriers that could be avoided during SPI, as they are presented in the relevant literature. In addition, we examine how critical success factors of SPI could positively affect a firm's Return on Investment and, consequently, help the firm survive in the long-term.},
  Keywords                 = {Companies;Investment;Software;Standards organizations;Agile Development;Barriers;Critical Success Factors;Return on Investment;Software Process Improvement},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7116724,
  Title                    = {Engineering innovation into systems engineering practices},
  Author                   = {J. A. Krill and A. Darrin and C. J. Grant and A. Kedia},
  Booktitle                = {2015 Annual IEEE Systems Conference (SysCon) Proceedings},
  Year                     = {2015},
  Month                    = {April},
  Pages                    = {27-32},

  Abstract                 = {A significant body of research exists about instilling a culture of innovation, but less is written about how to introduce innovation into systems engineering practices. Further, can suppress innovation. Our increasing need to conceive and develop more transformative concepts motivated an initiative to infuse innovation into our systems engineering. In particular, we introduce innovation into concept formulation, mockups, and early prototyping (front-end innovation) as well as system design, integration, and test (back-end innovation). We began by identifying culture-changing principles from the research literature and formulated an innovation framework oriented toward systems engineering from which to monitor our progress. Approaches to popularize staff empowerment and networking were introduced first, including leveraging crowd-sourced idea generation and the design thinking and maker movements into our systems practices. We also began to place greater emphasis on access to global technologies to search for enabling technology opportunities and potential research collaborators to feed concept development. Additionally, we had the opportunity to explore a more innovative approach to “agile” engineering development for which we provide a case study. Lastly, we developed measures and indicators of innovation progress, a relatively unexplored area according to the literature. We will describe the literature results, our initiatives, the case study, and the innovation metrics results to date.},
  Doi                      = {10.1109/SYSCON.2015.7116724},
  Keywords                 = {innovation management;systems engineering;agile engineering development;back-end innovation;crowdsourced idea generation;engineering innovation;front-end innovation;systems engineering;transformative concepts;Collaboration;Ignition;Prototypes;Software;Sparks;Systems engineering and theory;Technological innovation;Innovation;Systems Engineering},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6890994,
  Title                    = {User-centered-design in agile RE through an On-site User Experience Consultant},
  Author                   = {E. Kropp and K. Koischwitz},
  Booktitle                = {2014 IEEE 2nd International Workshop on Usability and Accessibility Focused Requirements Engineering (UsARE)},
  Year                     = {2014},
  Month                    = {Aug},
  Pages                    = {9-12},

  Abstract                 = {This paper is about experiences with user-centered design (UCD) and agile requirements engineering (RE) in fixed-price projects. Efficiently incorporating usability and UCD into RE remains a challenge. In this paper we describe our experience with the introduction of a team role called `On-site User Experience Consultant' which supports integrating UCD activities tightly in agile RE. We name UCD activities and how they fit in our industrial projects. Also, we describe how old habits in communication and interaction have to change to establish UCD within the project team and with the clients.},
  Doi                      = {10.1109/UsARE.2014.6890994},
  Keywords                 = {software prototyping;user centred design;UCD;agile RE;agile requirements engineering;fixed price projects;industrial projects;on-site user experience consultant;project team;user centered design;Computer bugs;Conferences;Context;Contracts;Estimation;Usability},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7474675,
  Title                    = {Collaboration and human factors in software development: Teaching agile methodologies based on industrial insight},
  Author                   = {M. Kropp and A. Meier},
  Booktitle                = {2016 IEEE Global Engineering Education Conference (EDUCON)},
  Year                     = {2016},
  Month                    = {April},
  Pages                    = {1003-1011},

  Abstract                 = {Recent studies show that many companies have successfully adopted agile methodologies. In this paper the authors present results of their quantitative and qualitative studies, showing that only experienced companies apply agile collaboration practices properly. The studies also suggest that successful professional agile teams tend to use more collaboration practices and consciously live the agile values. This leads to the conclusion that applying the collaborative practices and living the agile values is difficult. Thus we educators should pay special attention to teaching these practices and values in courses on agile software development. This paper presents how agile collaboration is being taught in the classroom in a fourth semester software engineering module and explains the underlying assumptions. We use an agile coaching game as introduction to Scrum and discuss the mechanics of agile teams in the classroom. We present the setup of a hands-on agile student project with large student teams and the observations we made. Last but not least, we show and discuss how modern online collaboration tools act as enablers for agile collaboration in the classroom.},
  Doi                      = {10.1109/EDUCON.2016.7474675},
  Keywords                 = {Internet;computer science education;groupware;human factors;software prototyping;teaching;Scrum;agile coaching game;agile collaboration practices;agile methodologies;agile software development;fourth semester software engineering module;human factors;online collaboration tools;teaching;Collaboration;Companies;Education;Programming;Software;Software engineering;Testing;Agile;Collaboration;Collaboration tool;Software Development},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6826229,
  Title                    = {New sustainable teaching approaches in software engineering education},
  Author                   = {M. Kropp and A. Meier},
  Booktitle                = {2014 IEEE Global Engineering Education Conference (EDUCON)},
  Year                     = {2014},
  Month                    = {April},
  Pages                    = {1019-1022},

  Abstract                 = {Ten years ago, it was usual that projects in the software industry ran on for years before the customer was able to lay his hands on the product he had ordered. This often resulted in delays, budget overruns and disappointing deliverables. During the last decade, the Agile approach has been taking over software project management, shortening product development cycles from a few years to a few weeks or even days. Recently, the agile approach has even been used for developing a new car which runs 100 miles per gallon [1]. Several recent surveys [2], [3] show that agile methodologies like Scrum, Extreme Programming or Kanban have successfully been adopted by many companies to develop software. However, agile methodologies do not come for free. A different set of skills, or agile practices as they are called, are necessary for the software engineers in order to be able to sucessfully deliver high-quality software at the end of every iteration. The same surveys show that only few of the agile practices are used and even fewer are applied consequently and thoroughly. This is to a great extent due to the lack of skilled software engineers. Although teaching agile software development has drawn some attention in recent research, we do not yet seem to be able to “deliver” the appropriately skilled engineers. What is the reason for this, and more importantly, how can we improve the situation? In this position paper we propose a more holistic approach for teaching agile software engineering, in which the required agile practices and values are not only integrated theoretically but also practically applied and repeated until they become a habit to students and software engineers.},
  Doi                      = {10.1109/EDUCON.2014.6826229},
  ISSN                     = {2165-9559},
  Keywords                 = {DP industry;computer science education;kanban;product development;project management;software management;software prototyping;software quality;teaching;Kanban;Scrum;agile approach;agile methodology;agile software development;agile software engineering;extreme programming;high-quality software;product development cycle;software engineering education;software engineering teaching;software industry;software project management;sustainable teaching approach;Companies;Conferences;Education;Programming profession;Software;Software engineering;Agile Processes;Education;Openness;Software Engeering},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6595249,
  Title                    = {Teaching agile software development at university level: Values, management, and craftsmanship},
  Author                   = {M. Kropp and A. Meier},
  Booktitle                = {2013 26th International Conference on Software Engineering Education and Training (CSEE T)},
  Year                     = {2013},
  Month                    = {May},
  Pages                    = {179-188},

  Abstract                 = {Agile methodologies have come a long way over the last decade. Several recent surveys show that agile methodologies like Scrum, Extreme Programming and, more recently, Kanban have been successfully adopted by many companies to develop their software. However, the same surveys show that only few of the agile practices are used and even fewer are applied consequently and thoroughly. This is to a great extent due to the lack of skilled personnel. Although teaching agile software development has drawn some attention in recent research and has been discussed in several papers, we do not yet seem to be able to “deliver” the appropriately skilled personnel. What is the reason for this, and more importantly, how can we improve the situation? In this paper we propose a more holistic approach for teaching agile software development, in which the required agile practices and values are not only integrated theoretically into our courses but also practically applied and repeated until they become a habit to our graduates. The proposed concept was realized in a new Software Engineering course held at Zurich University of Applied Sciences during 2012. The evaluation shows very encouraging results, but also leaves some challenges and problems to be solved.},
  Doi                      = {10.1109/CSEET.2013.6595249},
  ISSN                     = {1093-0175},
  Keywords                 = {computer science education;educational courses;educational institutions;kanban;software prototyping;teaching;Kanban;Scrum;Zurich University of Applied Sciences;agile methodology;agile software development teaching;extreme programming;skilled personnel;software engineering course;university level;Companies;Documentation;Educational institutions;Programming;Software;Software engineering},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7474474,
  Title                    = {Teaching Agile Collaboration Skills in the Classroom},
  Author                   = {M. Kropp and A. Meier and R. Biddle},
  Booktitle                = {2016 IEEE 29th International Conference on Software Engineering Education and Training (CSEET)},
  Year                     = {2016},
  Month                    = {April},
  Pages                    = {118-127},

  Doi                      = {10.1109/CSEET.2016.27},
  Keywords                 = {Internet;computer aided instruction;computer science education;educational courses;groupware;software prototyping;Computer Science studies;Extreme Programming;Internet;Scrum;University of Applied Sciences;agile collaboration practices;agile methodologies;agile software development;agile student project;classroom;educational software projects;laboratory;lectures;online collaboration tools;professional agile teams;programming modules;software engineering modules;Collaboration;Companies;Education;Programming;Software;Software engineering;Agile;Collaboration;Curriculum;Software Development},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6816791,
  Title                    = {Teaching and learning agile collaboration},
  Author                   = {M. Kropp and A. Meier and M. Mateescu and C. Zahn},
  Booktitle                = {2014 IEEE 27th Conference on Software Engineering Education and Training (CSEE T)},
  Year                     = {2014},
  Month                    = {April},
  Pages                    = {139-148},

  Abstract                 = {Agile methods are widely adopted in software development. They are based on agile principles that sharply contrast to traditional command-and-control management methods. Such methods emphasize the importance of highly interactive self-organizing teams and close collaboration of all stakeholders, as well as values like courage, openness and respect. However, recent studies show that graduates and undergraduates of computer science often lack the collaborative and communicative skills necessary for agile methods and, thus, are not yet well enough educated for agile development approaches. Therefore, new approaches or more adequate educational methods for teaching the necessary communication and collaboration skills need to be developed. In a recent interview study, the authors elicited specific collaboration and communication skills needed in agile teams. In this paper, we present results from this study and discuss teaching concepts for collaboration skills from both engineering and psychological points of view. We suggest an approach on how to integrate these concepts into university courses, that focuses on active learning of agile collaboration. We have started implementing the proposed concept in a software engineering course and report on the experiences we have made and on the challenges that we have encountered.},
  Doi                      = {10.1109/CSEET.2014.6816791},
  ISSN                     = {1093-0175},
  Keywords                 = {computer science education;educational courses;software prototyping;teaching;team working;agile collaboration active learning;agile collaboration teaching;agile teams;collaborative skills;command-and-control management methods;communicative skills;interactive self-organizing teams;software development;software engineering course;university courses;Educational institutions;Interviews;Psychology;Software engineering;Teamwork},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6965230,
  Title                    = {A genetic algorithm approach to release planning in agile environment},
  Author                   = {A. Kumar and R. Nagar and A. S. Baghel},
  Booktitle                = {2014 International Conference on Information Systems and Computer Networks (ISCON)},
  Year                     = {2014},
  Month                    = {March},
  Pages                    = {118-122},

  Abstract                 = {Agile software development methodology, got importance in recent years. The agile philosophy promotes incremental and iterative design and implementation. Each iterations, delivers one or more product features. Release planning is a main activity in any of Agile approach. Main factors that need to be considered are the technical precedence inherent in the requirements; the feature's business value perceived by project stake holders, team capacity and required effort to complete the requirement. There are multiple tools available in industry to manage project but they are lacking to provide planning while considering all these factors. Genetic algorithms (GA) have arisen from concepts, introduced from the natural process of biological evolution. GA uses selection, crossover and mutation to evolve a solution to the given problem. In this paper an attempt has been made to formalize the release planning. Then an approach is proposed to do Release planning using genetic algorithms.},
  Doi                      = {10.1109/ICISCON.2014.6965230},
  Keywords                 = {commerce;design;genetic algorithms;iterative methods;planning (artificial intelligence);software prototyping;agile software development;business value;genetic algorithm;iterative design;release planning;Business;Genetic algorithms;Planning;Sociology;Software;Statistics;Vectors;Agile;Artificial Intelligence;Genetic Algorithms;Release Planning;Software Development Life Cycle(SDLC)},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7809484,
  Title                    = {Among the Agilists: Participant Observation in a Rapidly Evolving Workplace},
  Author                   = {S. Kumar and C. Wallace},
  Booktitle                = {2016 IEEE/ACM Cooperative and Human Aspects of Software Engineering (CHASE)},
  Year                     = {2016},
  Month                    = {May},
  Pages                    = {52-55},

  Abstract                 = {In this paper, we describe the practical considerations and challenges of studying an agile, co-located software development community by assimilating among them over many months. We have adopted a fully immersive ethnographic approach using semistructured and unstructured interviews. In many ways, the design choices in our study mirrored those faced by the development team, as we adjusted our methods on the y to accommodate our richer knowledge of the work environment and adapted to changes on the ground. We share our process of determining and adjusting an operating procedure for the ethnographic observation and we reflect on the challenges faced in choosing subjects to study, getting them on board, planning questions and conducting interviews without disrupting the regular process of software development.},
  Doi                      = {10.1109/CHASE.2016.018},
  Keywords                 = {software development management;colocated software development community;design choices;development team;ethnographic observation;fully immersive ethnographic approach;participant observation;rapidly evolving workplace;semistructured interviews;unstructured interviews;Employment;Interviews;Maintenance engineering;Observers;Software;Software engineering;Trajectory;Software engineering;communities of practice;ethnography;mentoring;participant observation},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7044167,
  Title                    = {Instruction in software project communication through guided inquiry and reflection},
  Author                   = {S. Kumar and C. Wallace},
  Booktitle                = {2014 IEEE Frontiers in Education Conference (FIE) Proceedings},
  Year                     = {2014},
  Month                    = {Oct},
  Pages                    = {1-9},

  Doi                      = {10.1109/FIE.2014.7044167},
  ISSN                     = {0190-5848},
  Keywords                 = {project management;software development management;team working;communication design;communication practices;project development;project guided inquiry;project reflection;soft skills;software development;software process;software professionals;software project communication;team software project course;Context;Electronic mail;Face;Interviews;Materials;Reflection;Software;Scrum;communication;guided inquiry;pattern language;reflection;software process},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7813710,
  Title                    = {Strategies for web application development methodologies},
  Author                   = {S. R. Kumar and R. Sharma and K. Gupta},
  Booktitle                = {2016 International Conference on Computing, Communication and Automation (ICCCA)},
  Year                     = {2016},
  Month                    = {April},
  Pages                    = {160-165},

  Abstract                 = {Web applications have grown very unexpectedly in these recent years but due to difference between web applications and software applications, their development methodologies differ in many ways. The distinction between these two different types of applications acquire for introduction of development methodologies dedicated to web applications. The thesis work represents various development approaches and methodologies proposed specially for web applications. Agile, object oriented, UML based etc. are some example of approaches to be used for inventing techniques for web application development. Appendixes contribute to the thesis work representing implementation of Agile based and UML based web application development techniques.},
  Doi                      = {10.1109/CCAA.2016.7813710},
  Keywords                 = {Internet;Unified Modeling Language;object-oriented methods;software prototyping;UML;Web application development methodologies;agile Web development;extreme programming;software applications;Computer architecture;Object oriented modeling;Programming;Servers;Software;Unified modeling language;XML;AWDWF (Agile Web Development with Web Framework);CORBA (Common Object Request Broker Architecture);WCML (Web Mark Up Language);XP (Extreme Programming)},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6779307,
  Title                    = {Order management Sudoku simplified approach to transform OSS/BSS},
  Author                   = {A. P. Kurnool and L. Dyaram},
  Booktitle                = {2014 IEEE International Advance Computing Conference (IACC)},
  Year                     = {2014},
  Month                    = {Feb},
  Pages                    = {132-136},

  Doi                      = {10.1109/IAdCC.2014.6779307},
  Keywords                 = {DP industry;competitive intelligence;telecommunication industry;OSS/BSS;Sudoku;communication providers;companies;competitive market;information technology;order management;service providers;software vendors;telecommunication world;Business;Complexity theory;IP networks;Software as a service;Time to market;BPM;COTS;On-Demand;Order Management;Telecom Provider},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6480418,
  Title                    = {Agile and Wellbeing -- Stress, Empowerment, and Performance in Scrum and Kanban Teams},
  Author                   = {M. Laanti},
  Booktitle                = {2013 46th Hawaii International Conference on System Sciences},
  Year                     = {2013},
  Month                    = {Jan},
  Pages                    = {4761-4770},

  Doi                      = {10.1109/HICSS.2013.74},
  ISSN                     = {1530-1605},
  Keywords                 = {Blogs;Organizations;Product development;Sociology;Software engineering;Statistics;Stress;agile;kanban;performance;scrum;stress;survey;wellbeing},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6681378,
  Title                    = {The Impact of Agile Principles and Practices on Large-Scale Software Development Projects: A Multiple-Case Study of Two Projects at Ericsson},
  Author                   = {L. Lagerberg and T. Skude and P. Emanuelsson and K. Sandahl and D. Ståhl},
  Booktitle                = {2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement},
  Year                     = {2013},
  Month                    = {Oct},
  Pages                    = {348-356},

  Abstract                 = {BACKGROUND: Agile software development methods have a number of reported benefits on productivity, project visibility, software quality and other areas. There are also negative effects reported. However, the base of empirical evidence to the claimed effects needs more empirical studies. AIM: The purpose of the research was to contribute with empirical evidence on the impact of using agile principles and practices in large-scale, industrial software development. Research was focused on impacts within seven areas: Internal software documentation, Knowledge sharing, Project visibility, Pressure and stress, Coordination effectiveness, and Productivity. METHOD: Research was carried out as a multiple-case study on two contemporary, large-scale software development projects with different levels of agile adoption at Ericsson. Empirical data was collected through a survey of project members. RESULTS AND CONCLUSIONS: Intentional implementation of agile principles and practices were found to: correlate with a more balanced use of internal software documentation, contribute to knowledge sharing, correlate with increased project visibility and coordination effectiveness, reduce the need for other types of coordination mechanisms, and possibly increase productivity. No correlation with increase in pressure and stress were found.},
  Doi                      = {10.1109/ESEM.2013.53},
  ISSN                     = {1949-3770},
  Keywords                 = {software prototyping;software quality;Ericsson;Internal software documentation;agile adoption;agile principles;agile software development methods;coordination effectiveness;industrial software development;knowledge sharing;large-scale software development projects;project visibility;software quality;Art;Documentation;Planning;Productivity;Software;Stress;Variable speed drives;Agile software development;empirical software engineering;large-scale software development;multiple-case study;survey},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7794511,
  Title                    = {A Version Control-Based Continuous Testing Frame for Improving the IID Process Efficiency and Quality},
  Author                   = {S. T. Lai and F. Y. Leu},
  Booktitle                = {2016 10th International Conference on Innovative Mobile and Internet Services in Ubiquitous Computing (IMIS)},
  Year                     = {2016},
  Month                    = {July},
  Pages                    = {464-469},

  Abstract                 = {In order to effectively manage resource, control time and reduce development risk, small scale or high changeable software project very suitable use IID (Iterative Incremental Development) process. Applying IID process, agile development model becomes the practical method to reduce software project failure rate. Continuous testing is an IID implementation concept which can timely identify the quality defects and effectively reduce software development risk. However, continuous testing and building the workable version need to spend more time and human resources. It is a major flaw of IID. For improving the continuous testing efficiency, the paper depth surveys test cases and version control. Enhancing test cases version control and testing tools frame can make up IID drawbacks and increase IID process efficiency and quality. For this, the paper proposes the Version Control-based Continuous Testing Frame (VCCTF) to assist new version integration and deployment operation. Combining IID and VCCTF makes software process problems and quality defects can be timely identified, deploy new version quickly, increase IID process efficiency and quality, and reduce software project risk.},
  Doi                      = {10.1109/IMIS.2016.113},
  Keywords                 = {configuration management;program testing;project management;risk management;software fault tolerance;software prototyping;software quality;software tools;IID process efficiency;IID quality;VCCTF;agile development model;iterative incremental development process;quality defects;software development risk reduction;software project failure rate;software project risk;testing tools;version control based continuous testing frame;version deployment operation;version integration;Agile software development;Information systems;Investment;Process control;Software systems;Testing;IID;agile development model;continuous testing;development risk;version control},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7424853,
  Title                    = {Applying Continuous Integration for Reducing Web Applications Development Risks},
  Author                   = {S. T. Lai and F. Y. Leu},
  Booktitle                = {2015 10th International Conference on Broadband and Wireless Computing, Communication and Applications (BWCCA)},
  Year                     = {2015},
  Month                    = {Nov},
  Pages                    = {386-391},

  Abstract                 = {In order to project resource manage and time control, large or complex software system need be modularized. Software system is decomposed into subsystems, functional modules and basis components. Finally, all tested components have to integrate to be the complete system. Applying IID (Interactive Incremental Development) mechanism, agile development model becomes the practical method to reduce software project failure rate. Continuous integration (CI) is an IID implementation concept which can effectively reduce software development risk. Web app with high change characteristic is suitable to use agile development model as the development methodology. The paper depth surveys CI operating environment and advantages. Introducing CI concept can make up the development change impacts of Web app. For this, the paper proposes a Web Applications Continuous Integration Procedure (WACIP) to assist the system integration operating. WACIP with CI makes Web app can be deployed quickly, increase stakeholder communication frequency, improve staff morale, and effectively reduce Web app development risks.},
  Doi                      = {10.1109/BWCCA.2015.54},
  Keywords                 = {Internet;interactive systems;project management;resource allocation;risk management;software prototyping;CI operating environment;IID;WACIP;Web application development risk reduction;Web applications continuous integration procedure;agile development model;interactive incremental development mechanism;resource management;software project failure rate reduction;software system;time control;Agile software development;Analytical models;Computer bugs;Object oriented modeling;Software systems;Testing;Continuous Integration;Web app;agile process;development risks;integration test},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7058179,
  Title                    = {Best practices for validating research software prototypes - MARKOS case study},
  Author                   = {A. Laskowska and J. Gorroñogoitia Cruz and P. Kędziora and I. Lener and B. Lewandowski and C. Mazurek and M. Di Penta},
  Booktitle                = {eChallenges e-2014 Conference Proceedings},
  Year                     = {2014},
  Month                    = {Oct},
  Pages                    = {1-9},

  Abstract                 = {A common approach in research projects is to plan the evaluation and in particular the validation phase In the last months of the project. When done late in the project, validation cannot provide valuable inputs to the development of the research idea, because there is no space to bring about changes, and very often ends up as confirmatory tests. Software validation can and should occur since creating the first lines of code until the completion of the system in test. Thus, we propose the approach where research project can adopt the agile paradigm used by startups “release early, release often”, not only to development, but also to validation: “validate early, validate often”, to improve the quality of projects results on one hand and to be in line with potential users on the other.},
  ISSN                     = {2166-1650},
  Keywords                 = {program testing;program verification;research and development;software prototyping;MARKOS case study;agile paradigm;confirmatory tests;release early release often;research project;research software prototypes validation;validate early validate often;Communities;Context;Electronic mail;Prototypes;Software;Standards;Testing},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7284593,
  Title                    = {Stakeholder Perceptions of the Adoption of Continuous Integration -- A Case Study},
  Author                   = {E. Laukkanen and M. Paasivaara and T. Arvonen},
  Booktitle                = {2015 Agile Conference},
  Year                     = {2015},
  Month                    = {Aug},
  Pages                    = {11-20},

  Abstract                 = {Continuous integration is an important support mechanism for fast delivery of new features. However, its adoption in industry has often been problematic, partly due to social challenges. However, there is little knowledge of the exact nature of the challenges, and how different stakeholders perceive the need for and adoption of continuous integration. In this paper, we describe how the introduction of continuous integration was perceived by different stakeholders in a R&D program at Ericsson. The case provided a rare opportunity to study the adoption of continuous integration in a large distributed organization. We interviewed 27 stakeholders and found differing perceptions of continuous integration: how suitable it is for the organization, how adoption should be organized, and whether it is possible to achieve sufficient quality through automated testing. These differences of perception were mainly consequences of the geographic distribution. Based on the case study, we propose three guidelines. First, understand that the product architecture has a significant effect on the adoption. However, do not let architectural problems keep you from implementing continuous integration. Second, give the team members sufficient time to overcome the initial learning phase in the adoption. Third, avoid centralizing competencies to individual sites, and invest in cross-site communication.},
  Doi                      = {10.1109/Agile.2015.15},
  Keywords                 = {research and development;software houses;Ericsson;R-and-D program;architectural problems;continuous integration adoption;cross-site communication;geographic distribution;large-distributed organization;learning phase;product architecture;stakeholder perceptions;team members;Companies;Interviews;Software;Stakeholders;Testing;adoption;case study;continuous integration},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7275360,
  Title                    = {Cloud service enabling architecture for multi-vendor environment},
  Author                   = {D. S. Lee and W. T. Sung and S. M. Wang and J. Y. Shun},
  Booktitle                = {2015 17th Asia-Pacific Network Operations and Management Symposium (APNOMS)},
  Year                     = {2015},
  Month                    = {Aug},
  Pages                    = {348-351},

  Abstract                 = {In recent years, many Communication Service Providers (CSP) plan to gradually move from telecommunication companies to cloud service providers and many third party software vendors are invited as partners of CSPs. Without an agile cloud service enabling architecture, CSPs cannot integrate their own services with partners' efficiently due to some issues. First, silo operation support system (OSS) is difficult to share data during service enabling process. Second, in-house developers and outer partners cannot understand complete metadata of service because of lack catalog management mechanism, and it makes service mash up inefficiently and inappropriately. Finally, System APIs are customized for specific service, that is, APIs are not reusable. In this paper, CHT Cloud Service Enabling Architecture is introduced to overcome issues of silo system architecture and create capacity to enable integrated cloud service efficiently.},
  Doi                      = {10.1109/APNOMS.2015.7275360},
  Keywords                 = {cloud computing;computer software;meta data;telecommunication network planning;telecommunication services;CHT cloud service enabling architecture;CSP;OSS;catalog management mechanism;cloud service providers;communication service providers;integrated cloud service;metadata;multivendor environment;operation support system;telecommunication companies;third party software vendors;ystem API;Business;Computer architecture;Data models;Databases;IEEE catalogs;Software;Standards;Cloud Service;Service Enabling},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@Article{7436635,
  Title                    = {An Agile Approach to Building RISC-V Microprocessors},
  Author                   = {Y. Lee and A. Waterman and H. Cook and B. Zimmer and B. Keller and A. Puggelli and J. Kwak and R. Jevtic and S. Bailey and M. Blagojevic and P. F. Chiu and R. Avizienis and B. Richards and J. Bachrach and D. Patterson and E. Alon and B. Nikolic and K. Asanovic},
  Journal                  = {IEEE Micro},
  Year                     = {2016},

  Month                    = {Mar},
  Number                   = {2},
  Pages                    = {8-20},
  Volume                   = {36},

  Abstract                 = {The final phase of CMOS technology scaling provides continued increases in already vast transistor counts, but only minimal improvements in energy efficiency, thus requiring innovation in circuits and architectures. However, even huge teams are struggling to complete large, complex designs on schedule using traditional rigid development flows. This article presents an agile hardware development methodology, which the authors adopted for 11 RISC-V microprocessor tape-outs on modern 28-nm and 45-nm CMOS processes in the past five years. The authors discuss how this approach enabled small teams to build energy-efficient, cost-effective, and industry-competitive high-performance microprocessors in a matter of months. Their agile methodology relies on rapid iterative improvement of fabricatable prototypes using hardware generators written in Chisel, a new hardware description language embedded in a modern programming language. The parameterized generators construct highly customized systems based on the free, open, and extensible RISC-V platform. The authors present a case study of one such prototype featuring a RISC-V vector microprocessor integrated with a switched-capacitor DC-DC converter alongside an adaptive clock generator in a 28-nm, fully depleted silicon-on-insulator process.},
  Doi                      = {10.1109/MM.2016.11},
  ISSN                     = {0272-1732},
  Keywords                 = {CMOS integrated circuits;DC-DC power convertors;hardware description languages;microprocessor chips;programming languages;reduced instruction set computing;switched capacitor networks;CMOS technology scaling;Chisel;RISC-V vector microprocessor;adaptive clock generator;agile hardware development methodology;energy efficiency;extensible RISC-V platform;fully depleted silicon-on-insulator process;hardware description language;hardware generators;modern programming language;rapid iterative improvement;size 28 nm;size 45 nm;switched-capacitor DC-DC converter;Agile software development;CMOS integrated circuits;CMOS technology;Energy efficiency;Generators;Microprocessors;Software development;computer system implementation;computer systems organization;hardware;instruction set design;integrated circuits;microcomputers;microprocessors;systems specification methodology},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7167171,
  Title                    = {Towards Post-Agile Development Practices through Productized Development Infrastructure},
  Author                   = {M. Leppänen and T. Kilamo and T. Mikkonen},
  Booktitle                = {2015 IEEE/ACM 2nd International Workshop on Rapid Continuous Software Engineering},
  Year                     = {2015},
  Month                    = {May},
  Pages                    = {34-40},

  Abstract                 = {Modern software is developed to meet evolving customer needs in a timely fashion. The need for a rapid time-to-market together with changing requirements has led software intensive companies to utilize agile development, where each iteration aims at producing end-user value and change is embraced. In today's post-agile software development world, there is a need for processes and tools that deliver new software to the end-user as fast as possible. The level of adoption of these continuous software engineering practices depends on the product, customers, and the business domain. In this paper, we investigate the benefits gained from implementing a completely continuous delivery workflow using a domain specific productized development infrastructure through a descriptive single case study. Embracing the continuous delivery mindset throughout the development pipeline allows the case customer company to gain fast insight on new business directions and lends the services to live experimentation which in turn adds to end-user value. Up-to-date feedback cycles between all stakeholders all the way from concept design to end-users are offered.},
  Doi                      = {10.1109/RCoSE.2015.14},
  Keywords                 = {Continuous software engineering;continuous delivery;development infrastructure},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7102619,
  Title                    = {A Scalable Big Data Test Framework},
  Author                   = {N. Li and A. Escalona and Y. Guo and J. Offutt},
  Booktitle                = {2015 IEEE 8th International Conference on Software Testing, Verification and Validation (ICST)},
  Year                     = {2015},
  Month                    = {April},
  Pages                    = {1-2},

  Abstract                 = {This paper identifies three problems when testing software that uses Hadoop-based big data techniques. First, processing big data takes a long time. Second, big data is transferred and transformed among many services. Do we need to validate the data at every transition point? Third, how should we validate the transferred and transformed data? We are developing a novel big data test framework to address these problems. The test framework generates a small and representative data set from an original large data set using input space partition testing. Using this data set for development and testing would not hinder the continuous integration and delivery when using agile processes. The test framework also accesses and validates data at various transition points when data is transferred and transformed.},
  Doi                      = {10.1109/ICST.2015.7102619},
  ISSN                     = {2159-4848},
  Keywords                 = {Big Data;parallel processing;program testing;Hadoop-based big data techniques;big data processing;big data test framework;data validation;input space partition testing;software testing;Big data;Clinical trials;Data mining;Data transfer;Databases;Software;Testing},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7515497,
  Title                    = {Skyfire: Model-Based Testing with Cucumber},
  Author                   = {N. Li and A. Escalona and T. Kamal},
  Booktitle                = {2016 IEEE International Conference on Software Testing, Verification and Validation (ICST)},
  Year                     = {2016},
  Month                    = {April},
  Pages                    = {393-400},

  Doi                      = {10.1109/ICST.2016.41},
  Keywords                 = {Unified Modeling Language;graph theory;program testing;software prototyping;BDD;CI;MBT;Skyfire;agile development;behavior-driven development tool;behavioral UML diagram;continuous integration rhythm;cucumber mappings;cucumber tests;graph coverage criteria;model-based testing;model-based testing tool;product analysts;software industry;Boolean functions;Concrete;Data structures;Software;Testing;Unified modeling language},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7582798,
  Title                    = {Applying combinatorial test data generation to big data applications},
  Author                   = {N. Li and Y. Lei and H. R. Khan and J. Liu and Y. Guo},
  Booktitle                = {2016 31st IEEE/ACM International Conference on Automated Software Engineering (ASE)},
  Year                     = {2016},
  Month                    = {Sept},
  Pages                    = {637-647},

  Abstract                 = {Big data applications (e.g., Extract, Transform, and Load (ETL) applications) are designed to handle great volumes of data. However, processing such great volumes of data is time-consuming. There is a need to construct small yet effective test data sets during agile development of big data applications. In this paper, we apply a combinatorial test data generation approach to two real-world ETL applications at Medidata. In our approach, we first create Input Domain Models (IDMs) automatically by analyzing the original data source and incorporating constraints manually derived from requirements. Next, the IDMs are used to create test data sets that achieve t-way coverage, which has shown to be very effective in detecting software faults. The generated test data sets also satisfy all the constraints identified in the first step. To avoid creating IDMs from scratch when there is a change to the original data source or constraints, our approach extends the original IDMs with additional information. The new IDMs, which we refer to as Adaptive IDMs (AIDMs), are updated by comparing the changes against the additional information, and are then used to generate new test data sets. We implement our approach in a tool, called comBinatorial big daTa Test dAta Generator (BIT-TAG). Our experience shows that combinatorial testing can be effectively applied to big data applications. In particular, the test data sets created using our approach for the two ETL applications are only a small fraction of the original data source, but we were able to detect all the faults found with the original data source.},
  Keywords                 = {Big Data;program testing;AIDM;BIT-TAG;Medidata;adaptive IDM;combinatorial big data test data generator;input domain models;real-world ETL applications;Data mining;Data models;Databases;Research and development;Testing;Adaptive Input Domain Model;Big Data Testing;Combinatorial Testing;Input Domain Model;Test Data Generation},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7107402,
  Title                    = {A test automation language framework for behavioral models},
  Author                   = {N. Li and J. Offutt},
  Booktitle                = {2015 IEEE Eighth International Conference on Software Testing, Verification and Validation Workshops (ICSTW)},
  Year                     = {2015},
  Month                    = {April},
  Pages                    = {1-10},

  Abstract                 = {Model-based testers design tests in terms of models, such as paths in graphs. This results in abstract tests, which have to be converted to concrete tests because the abstract tests use names and events that exist in the model, but not the implementation. Model elements often appear in many abstract tests, so testers write the same redundant code many times. However, many existing model-based testing techniques are very complicated to use in practice, especially in agile software development. Thus, testers usually have to transform abstract tests to concrete tests by hand. This is time-consuming, labor-intensive, and error-prone. This paper presents a language to automate the creation of mappings from abstract tests to concrete tests. Three issues are addressed: (1) creating mappings and generating test values, (2) transforming graphs and using coverage criteria to generate test paths, and (3) solving constraints and generating concrete tests. Based on the language, we developed a test automation language framework. The paper also presents results from an empirical comparison of testers using the framework with manual mapping on 11 open source and 6 example programs. We found that the automated test generation method took 29.6% of the time the manual method took on average, and the manual tests contained 48 errors in which concrete tests did not match their abstract tests while the automatic tests had zero errors.},
  Doi                      = {10.1109/ICSTW.2015.7107402},
  Keywords                 = {program testing;software prototyping;agile software development;behavioral models;model-based tester design test;test automation language framework;Adaptation models;Automation;Concrete;Manuals;Testing;Transforms;Unified modeling language},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7107453,
  Title                    = {Mutation testing in practice using Ruby},
  Author                   = {N. Li and M. West and A. Escalona and V. H. S. Durelli},
  Booktitle                = {2015 IEEE Eighth International Conference on Software Testing, Verification and Validation Workshops (ICSTW)},
  Year                     = {2015},
  Month                    = {April},
  Pages                    = {1-6},

  Abstract                 = {Mutation testing is an effective testing technique to detect faults and improve code quality. However, few practitioners have adopted mutation testing into practice, which raises several questions: Are tests capable of killing mutants useful? What is the main hindrance to adopting mutation testing in practice? Can practitioners really integrate mutation testing into real-world agile development processes? In this paper, we present two major contributions. First, based on our analysis and knowledge of Ruby, we devised eight new mutation operators for Ruby. Second, we applied mutation testing to an industrial Ruby project at Medidata and reported the lessons learned from the study. We confirmed that mutation-adequate tests are useful and could improve code quality from the perspective of practitioners and found long mutation execution time hinders the agile process. In addition, we used an enterprise-level Amazon cloud-computing technique to reduce the computational cost of running mutants. Considering the availability of a mutation testing tool with our suggested features, we argue that mutation testing can be used in practice.},
  Doi                      = {10.1109/ICSTW.2015.7107453},
  Keywords                 = {cloud computing;fault diagnosis;program testing;software fault tolerance;software quality;code quality;computational cost reduction;enterprise-level Amazon cloud-computing technique;fault detection;industrial Ruby project;mutation testing technique;real-world agile development processes;Computational efficiency;Computers;Conferences;Indexes;Industries;Software;Testing},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@Article{7350211,
  Title                    = {Software-Defined Network Function Virtualization: A Survey},
  Author                   = {Y. Li and M. Chen},
  Journal                  = {IEEE Access},
  Year                     = {2015},
  Pages                    = {2542-2553},
  Volume                   = {3},

  Abstract                 = {Diverse proprietary network appliances increase both the capital and operational expense of service providers, meanwhile causing problems of network ossification. Network function virtualization (NFV) is proposed to address these issues by implementing network functions as pure software on commodity and general hardware. NFV allows flexible provisioning, deployment, and centralized management of virtual network functions. Integrated with SDN, the software-defined NFV architecture further offers agile traffic steering and joint optimization of network functions and resources. This architecture benefits a wide range of applications (e.g., service chaining) and is becoming the dominant form of NFV. In this survey, we present a thorough investigation of the development of NFV under the software-defined NFV architecture, with an emphasis on service chaining as its application. We first introduce the software-defined NFV architecture as the state of the art of NFV and present relationships between NFV and SDN. Then, we provide a historic view of the involvement from middlebox to NFV. Finally, we introduce significant challenges and relevant solutions of NFV, and discuss its future research directions by different application domains.},
  Doi                      = {10.1109/ACCESS.2015.2499271},
  ISSN                     = {2169-3536},
  Keywords                 = {optimisation;software architecture;software defined networking;SDN;agile traffic steering;network function virtualization;network ossification;software-defined NFV architecture;software-defined network function virtualization;virtual network function;Computer architecture;Control systems;Hardware;Home appliances;Servers;Software;Virtualization;Software-defined networks;middlebox;network function virtualization;network virtualization;service chain},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7890614,
  Title                    = {Adoption and Suitability of Software Development Methods and Practices},
  Author                   = {S. A. Licorish and J. Holvitie and S. Hyrynsalmi and V. Leppänen and R. O. Spínola and T. S. Mendes and S. G. MacDonell and J. Buchan},
  Booktitle                = {2016 23rd Asia-Pacific Software Engineering Conference (APSEC)},
  Year                     = {2016},
  Month                    = {Dec},
  Pages                    = {369-372},

  Doi                      = {10.1109/APSEC.2016.062},
  ISSN                     = {1530-1362},
  Keywords                 = {project management;software maintenance;software management;source coding;Brazil;Finland;Kanban;New Zealand;Scrum;coding standards;process management;project management;refactoring;software development methods;Correlation;Instruments;Organizations;Portfolios;Project management;Software;Standards organizations;Adoption and suitability;Agile practices;Empirical studies;Software development methods;Survey},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6662989,
  Title                    = {Adapting American ERP systems for China: Cross-cultural issues and a case study},
  Author                   = {Yiqi Lin and L. Markowsky and Shuanxi Liu and G. Markowsky},
  Booktitle                = {2013 IEEE 7th International Conference on Intelligent Data Acquisition and Advanced Computing Systems (IDAACS)},
  Year                     = {2013},
  Month                    = {Sept},
  Pages                    = {572-577},
  Volume                   = {02},

  Abstract                 = {Enterprise Resource Planning (ERP) systems currently used by American businesses are unsuitable for adoption by small and medium size Chinese businesses. Cross-cultural issues include not only the obvious localization and interface language differences but also bearable implementation costs, culturally-specific management styles, and financial report format discrepancies. This paper discusses the cross-cultural issues that must be addressed to bridge the gap between American and Chinese ERP systems and presents a case study of an ERP system designed using scrum, an agile software engineering methodology, to meet this need.},
  Doi                      = {10.1109/IDAACS.2013.6662989},
  Keywords                 = {cultural aspects;enterprise resource planning;small-to-medium enterprises;software prototyping;American ERP systems;American businesses;China;Chinese ERP systems;agile software engineering methodology;cross-cultural issues;culturally-specific management styles;enterprise resource planning;financial report format discrepancies;implementation costs;interface language differences;scrum;small and medium size Chinese businesses;China;ERP;agile software engineering;enterprise resource planning systems;scrum},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7293857,
  Title                    = {On datastore support for agile software development},
  Author                   = {J. Liu},
  Booktitle                = {2014 9th International Conference on Software Engineering and Applications (ICSOFT-EA)},
  Year                     = {2014},
  Month                    = {Aug},
  Pages                    = {183-188},

  Abstract                 = {Most database-base applications support two main sets of features: customer facing transactional capabilities such as purchasing books at an online bookstore and functionality required by managers and business analysts such as identifying trends in sales data by combing through aggregated sales data. The conventional approach of having just one main database to support both features greatly restrict developers freedom in applying the best approach to quickly implement new features, to enhance existing features, or to mend defects because any attempt in changing database schema means code and test cases modifications in many places and may even require a large amount of effort in testing. Such an inherited resistance in changing introduced by data store does not fit the evolutionary development nature of Agile software development methodology. We argue that we should consider having at least two databases: one support transactional capabilities and the other support reporting and possible data warehouse needs, and will show how such an approach supports the Agile software development methodology.},
  Keywords                 = {Agile software development;Business;Database systems;Relational databases;Servers;Software;Agile Software Development Process;Database Management Systems;Databases;MongoDB;NoSQL;Software Development},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7490775,
  Title                    = {The research of testing process and data tracing based on hybrid model},
  Author                   = {Xiaochen Liu and Haihua Yan and Yang Sun},
  Booktitle                = {2015 4th International Conference on Computer Science and Network Technology (ICCSNT)},
  Year                     = {2015},
  Month                    = {Dec},
  Pages                    = {387-392},
  Volume                   = {01},

  Abstract                 = {Software testing process is an important factor affecting the quality of software testing, which plays an important role in the entire software development life cycle. In order to achieve a precise result of testing, different software testing process model will be chosen in different software development process for testing. Traditional testing process model will be chosen in traditional software development, and agile testing process model will be chosen in agile software development. However, there is no kind of testing process model proposed for a special software development which is a combination of traditional software development and agile software development. This article will propose a hybrid software testing process model aiming at a combination of traditional software development model and agile software development model. In the following sections, traditional testing process model and agile testing process model will be introduced respectively in the first place. Most attentions will be paid to the introduction and analysis of the hybrid software testing process model through one case. Furthermore, we will discuss the relationship of the data tracing involved in the testing process model.},
  Doi                      = {10.1109/ICCSNT.2015.7490775},
  Keywords                 = {program testing;software development management;software prototyping;agile software development model;data tracing;hybrid software testing process model;software development life cycle;software development process;software testing quality;Agile software development;Analytical models;Data models;Software;Software testing;agile;data tracing;hybrid model;testing process},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7477924,
  Title                    = {Problems in the Adoption of Agile-Scrum Methodologies: A Systematic Literature Review},
  Author                   = {J. López-Martínez and R. Juárez-Ramírez and C. Huertas and S. Jiménez and C. Guerra-García},
  Booktitle                = {2016 4th International Conference in Software Engineering Research and Innovation (CONISOFT)},
  Year                     = {2016},
  Month                    = {April},
  Pages                    = {141-148},

  Doi                      = {10.1109/CONISOFT.2016.30},
  Keywords                 = {organisational aspects;software prototyping;agile adoption;agile-scrum methodologies;company culture;functional product delivery;software developers;systematic literature review;Bibliographies;Companies;Scrum (Software development);Software;Systematics;Scrum;adoption problems;agile methodologies;systematic literature review},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6612892,
  Title                    = {How We Successfully Adapted Agile for a Research-Heavy Engineering Software Team},
  Author                   = {A. A. Lorber and K. D. Mish},
  Booktitle                = {2013 Agile Conference},
  Year                     = {2013},
  Month                    = {Aug},
  Pages                    = {156-163},

  Abstract                 = {In our development team at Sandia National Laboratories we have honed our Scrum processes to where we continually deliver high-performance engineering analysis software to our customers. We deliver despite non-ideal circumstances, including development work that can be categorized as exploratory research, regular use of part-time developers, team size that varies widely among Sprints, highly specialized technical skill sets and a broad range of deliverables. We believe our methodologies can be applied to many research-oriented environments such as those found in government laboratories, academic institutions and corporate research facilities. Our goal is to increase the adoption of Lean/Agile project management in these environments by sharing our experiences with those research-oriented development teams who are considering using Lean/Agile, or have started and are encountering problems. In this paper we discuss how we create and prioritize our product backlog, write our user stories, calculate our capacity, plan our Sprints, report our results and communicate our progress to customers. By providing guidance and evidence of success in these areas we hope to overcome real and perceived obstacles that may limit the adoption of Lean/Agile techniques in research-oriented development environments.},
  Doi                      = {10.1109/AGILE.2013.20},
  Keywords                 = {project management;software development management;software prototyping;Sandia National Laboratories;Scrum processes;Sprints planning;agile project management;capacity calculation;high-performance engineering analysis software;lean project management;product backlog;research-heavy engineering software team;research-oriented development environments;user stories;Fluids;Inspection;Laboratories;Mathematical model;Planning;Software;Uncertainty;Agile;Scrum;engineering analysis software;research;scientific programming},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7320415,
  Title                    = {Forging high-quality User Stories: Towards a discipline for Agile Requirements},
  Author                   = {G. Lucassen and F. Dalpiaz and J. M. E. M. van der Werf and S. Brinkkemper},
  Booktitle                = {2015 IEEE 23rd International Requirements Engineering Conference (RE)},
  Year                     = {2015},
  Month                    = {Aug},
  Pages                    = {126-135},

  Abstract                 = {User stories are a widely used notation for formulating requirements in agile development projects. Despite their popularity in industry, little to no academic work is available on assessing their quality. The few existing approaches are too generic or employ highly qualitative metrics. We propose the Quality User Story Framework, consisting of 14 quality criteria that user story writers should strive to conform to. Additionally, we introduce the conceptual model of a user story, which we rely on to design the AQUSA software tool. AQUSA aids requirements engineers in turning raw user stories into higher-quality ones by exposing defects and deviations from good practice in user stories. We evaluate our work by applying the framework and a prototype implementation to three user story sets from industry.},
  Doi                      = {10.1109/RE.2015.7320415},
  ISSN                     = {1090-705X},
  Keywords                 = {software prototyping;software quality;software tools;AQUSA software tool;agile development projects;agile requirements;high-quality user stories;highly qualitative metrics;quality user story framework;requirements engineers;Databases;Estimation;Natural language processing;Semantics;Software;Syntactics;Unified modeling language;AQUSA;NLP;QUS Framework;User stories;requirements engineering;requirements quality},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@Article{7448777,
  Title                    = {On the fading of organizational interfaces in the era of Internet-of-Things},
  Author                   = {F. Lustenberger},
  Journal                  = {IEEE Engineering Management Review},
  Year                     = {2016},

  Month                    = {First},
  Number                   = {1},
  Pages                    = {14-15},
  Volume                   = {44},

  Abstract                 = {THE previous article discussed the adaptation from a Greek temple structure to the tightly packed atomic structure, when tackling the organizational issues related to the transformation of a (hardware) product centric company to the business-driven entity. It turned out that tight interaction is necessary if fast- evolving data-driven business services or software products are to be developed and marketed. Therefore, it might be interesting to investigate a unique approach nowadays often used in the software world: DevOps, a term first forged by Andrew Clay Shafer and Patrick Debois at the Agile 2008 conference [1].},
  Doi                      = {10.1109/EMR.2016.2530642},
  ISSN                     = {0360-8581},
  Keywords                 = {Agile software development;Internet of things;Organizational aspects;Product life cycle management},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7427859,
  Title                    = {Towards DevOps in the Embedded Systems Domain: Why is It So Hard?},
  Author                   = {L. E. Lwakatare and T. Karvonen and T. Sauvola and P. Kuvaja and H. H. Olsson and J. Bosch and M. Oivo},
  Booktitle                = {2016 49th Hawaii International Conference on System Sciences (HICSS)},
  Year                     = {2016},
  Month                    = {Jan},
  Pages                    = {5437-5446},

  Doi                      = {10.1109/HICSS.2016.671},
  ISSN                     = {1530-1605},
  Keywords                 = {embedded systems;software engineering;DevOps techniques;agile principles;continuous product improvement;embedded system domain;multiple-case study approach;software development;Collaboration;Companies;Embedded systems;Interviews;Production;Software as a service;DevOps;continuous deployment;embedded systems},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6928978,
  Title                    = {A Graph-Based Approach to Assisting Creation of Mobile Web Applications},
  Author                   = {Y. Ma and X. Lu and Y. Luo and X. Liu},
  Booktitle                = {2014 IEEE International Conference on Web Services},
  Year                     = {2014},
  Month                    = {June},
  Pages                    = {728-729},

  Abstract                 = {Web applications have played an important role in mobile computing since they are developed by standard web technology, easy to achieve portability and always up to date. As a widely adopted development fashion, mashup integrates data, computation and UI elements from multiple web-delivered services into a single web application, which is a promising way to develop applications for mobile devices. However, developing mobile web applications by mashup has faced two challenges: on one hand, the growing popularity of web-delivered services, especially those equipped with mobile features like LBS, increases the difficulty of finding proper services and connections between services to create situational applications, on the other hand, mobile computing yields for agile development and fast iteration to meet users everchanging requirements, imposing more burden on developers. This paper presents a graph-based approach to helping mobile developers create mobile web applications. Based on this graph model, algorithms by synthesizing different recommendation patterns are designed to assist mashup completion, such as finding the missing components, connections between them, or potentially relevant options.},
  Doi                      = {10.1109/ICWS.2014.120},
  Keywords                 = {Internet;graph theory;mobile computing;software engineering;graph-based approach;mashup completion;mobile Web application creation;mobile computing;recommendation patterns;Educational institutions;Integrated circuits;Mashups;Mobile communication;Mobile computing;Steiner trees;mobile;recommendation;service mashup;web application},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7807535,
  Title                    = {Smart distributed subarray MIMO (DS-MIMO) microstrip antenna system with frequency agile for communication and radar applications},
  Author                   = {Y. M. Madany and H. M. Elkamchouchi and A. E. Ahmed},
  Booktitle                = {2016 Loughborough Antennas Propagation Conference (LAPC)},
  Year                     = {2016},
  Month                    = {Nov},
  Pages                    = {1-5},

  Abstract                 = {Recent technologies enable electronic and RF circuits in communication devices and radar to be miniaturized and become physically smaller in size. Antenna design has been one of the key limiting constraints to the development of small communication terminals and also in meeting next generation and radar requirements. Multiple antenna technologies (MATs) have gained much attention in the last few years because of the huge gain. MATs can enhance the reliability and the channel capacity levels. Furthermore, multiple antenna systems can have a big contribution to reduce the interference both in the uplink and the downlink. To increase the communication systems reliability, multiple antennas can be installed at the transmitter or/and at the receiver. The idea behind multiple antenna diversity is to supply the receiver by multiple versions of the same signal transmitted via independent channels. In modern communication transceiver and radar systems, primary aims are to direct high power RF signal from transmitter to antenna while preventing leakage of that large signal into more sensitive frontend of receiver. So, a Single-Pole Double-Throw (SPDT) Transmitter/Receiver (T/R) Switch plays an important role. In this paper, design of smart distributed subarray MIMO (DS-MIMO) microstrip antenna system with controller unit and frequency agile has been introduced and investigated. All the entire proposed antenna system has been evaluated using a commercial software. The final proposed design has been fabricated and the radiation characteristics have been illustrated using network analyzer to meet the requirements for communication and radar applications.},
  Doi                      = {10.1109/LAPC.2016.7807535},
  Keywords                 = {MIMO communication;microstrip antennas;radar antennas;radar receivers;radar transmitters;wireless channels;DS-MIMO microstrip antenna system;MAT;RF circuits;SPDT;T/R;Transmitter/Receiver;antenna design;channel capacity levels;communication applications;communication devices;communication radar;communication transceiver;frequency agile;independent channels;interference;multiple antenna technologies;network analyzer;radar applications;radar systems;radiation characteristics;single pole double throw;smart distributed subarray MIMO;MIMO;Microstrip;Microstrip antennas;Radar antennas;Radio frequency;Switches;MIMO;Multiple antennas;SPDT-T/R;communication and radar applications;distributed subarray},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7070420,
  Title                    = {The Economic Impact of Software Development Process Choice -- Cycle-Time Analysis and Monte Carlo Simulation Results},
  Author                   = {T. Magennis},
  Booktitle                = {2015 48th Hawaii International Conference on System Sciences},
  Year                     = {2015},
  Month                    = {Jan},
  Pages                    = {5055-5064},

  Doi                      = {10.1109/HICSS.2015.599},
  ISSN                     = {1530-1605},
  Keywords                 = {Monte Carlo methods;management of change;software development management;Monte Carlo simulation;change assessment;cycle-time analysis;economic value;process change initiative;quantitative approach;software development process choice;software development process methodology;software process methodology change;Delays;Economics;Probability distribution;Production;Shape;Software;Weibull distribution;agile;cycle time;kanban;monte carlo;process;scrum;weibull},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7778513,
  Title                    = {HCI usability techniques in agile development},
  Author                   = {D. A. Magües and J. W. Castro and S. T. Acuna},
  Booktitle                = {2016 IEEE International Conference on Automatica (ICA-ACCA)},
  Year                     = {2016},
  Month                    = {Oct},
  Pages                    = {1-7},

  Doi                      = {10.1109/ICA-ACCA.2016.7778513},
  Keywords                 = {formal specification;human computer interaction;program verification;software prototyping;user centred design;ASDP;HCI activities;HCI usability techniques;SMS;UCD;agile software development process;development projects;human-computer interaction techniques;requirements analysis;requirements elicitation;requirements engineering;systematic literature review;systematic mapping study;user-centred design;Agile software development;Bibliographies;Human computer interaction;Requirements engineering;Systematics;Usability;Agile Software Development;Usability;Usability Techniques;User-centred Design},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7833347,
  Title                    = {Usability in agile development: A systematic mapping study},
  Author                   = {D. A. Magües and J. W. Castro and S. T. Acuña},
  Booktitle                = {2016 XLII Latin American Computing Conference (CLEI)},
  Year                     = {2016},
  Month                    = {Oct},
  Pages                    = {1-8},

  Abstract                 = {Background: Interest in the integration of the agile software development process (ASDP) and user-centred design (UCD) has grown over the last decade. However, there are not many papers that study this issue holistically and uncover the current state of this integration. Aim: This study sets out to answer the following research question: What is the current state of integration between agile processes and usability? Method: We conduct a systematic mapping study (SMS). A SMS is a form of systematic literature review that aims to identify and classify the research papers published about a specified issue. Results: We retrieved a total of 161 primary studies, which we categorized according to four criteria: process, practice, team and technology integration. The largest group refers to process integration with a total of 76 primary studies. Judging by the increase in the number of publications over the last decade, the integration of human-computer interaction (HCI) activities and techniques into the ASDP is an issue of notable interest. Conclusions: There are very few papers that study the literature holistically and report the current state of usability in the ASDP. Additionally, there are no formalized proposals for adopting usability techniques in ASDP.},
  Doi                      = {10.1109/CLEI.2016.7833347},
  Keywords                 = {human computer interaction;software prototyping;user centred design;ASDP;HCI;SMS;UCD;agile software development process;human-computer interaction;process integration;systematic mapping study;team integration;technology integration;usability techniques;user-centred design;Agile software development;Human computer interaction;Proposals;Systematics;Usability;User centered design;Agile software development;systematic mapping study;usability;user-centred design},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7795483,
  Title                    = {Agile cognizant transceiver link for mission critical applications},
  Author                   = {A. R. Mahasamudram and R. Srinivasaiah and Raveendranath KR and S. Ramanath},
  Booktitle                = {MILCOM 2016 - 2016 IEEE Military Communications Conference},
  Year                     = {2016},
  Month                    = {Nov},
  Pages                    = {1137-1142},

  Abstract                 = {Reliable and secure wireless communications is fundamental to connectivity between smarter gadgets and people. This is much more true in defence applications with its unique requirements and challenges. Broadly the data link requirements in defence applications are seen under two categories. One, robust fool-proof zero downtime data links for telemetry, command and control. Second, broad band data links for data streaming and high bandwidth information exchanges. The data link platforms offered for these applications must therefore address the need to quickly prototype waveforms, be easy for field and use-case tests, support quick means for security layer add-ons and easily be amenable to technology adoption, ruggedization and deployment. This paper describes some of the challenges of design and prototyping for defence applications and presents how agile systems built with the right choice of design partition and architecture choices with hardware, software and waveforms can be cognizant of the challenges of the defence applications and illustrates few example cases with simulations and real field deployment trials. It is envisaged that the Agile Cognizant Transceiver (ACT) platform built, helps faster prototyping of defence systems and paves the way for faster product induction cycles in defence automation.},
  Doi                      = {10.1109/MILCOM.2016.7795483},
  Keywords                 = {automation;military communication;radio transceivers;telecommunication security;agile cognizant transceiver link;agile systems;command and control;data link requirements;data streaming;defence applications;defence automation;information exchanges;mission critical applications;product induction cycles;real field deployment trials;reliable wireless communications;robust fool-proof zero downtime data links;secure wireless communications;security layer add-ons;telemetry;Bandwidth;Computer architecture;Hardware;Security;Software;Throughput;Transceivers;Data link;Multiple access;OFDMA;Software-defined Radio (SDR);Spread spectrum;Transceiver},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7320358,
  Title                    = {FDMD: Feature-Driven Methodology Development},
  Author                   = {R. Mahdavi-Hezave and R. Ramsin},
  Booktitle                = {2015 International Conference on Evaluation of Novel Approaches to Software Engineering (ENASE)},
  Year                     = {2015},
  Month                    = {April},
  Pages                    = {229-237},

  Keywords                 = {Encoding;Engines;Object oriented modeling;Programming;Requirements engineering;Software;Software engineering;Feature-Driven Development;Requirements Engineering;Situational Method Engineering;Software Development Methodology},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7475214,
  Title                    = {Reviews on agile methods in mobile application development process},
  Author                   = {D. M. Mahmud and N. A. S. Abdullah},
  Booktitle                = {2015 9th Malaysian Software Engineering Conference (MySEC)},
  Year                     = {2015},
  Month                    = {Dec},
  Pages                    = {161-165},

  Doi                      = {10.1109/MySEC.2015.7475214},
  Keywords                 = {mobile computing;small-to-medium enterprises;software prototyping;agile methods;mobile application development;small medium enterprise;Application programming interfaces;Business;Mobile applications;Mobile communication;Programming;Smart phones;Software;agile;agile maniefesto;mobile application;mobile application development;software methodology},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7919499,
  Title                    = {Automated virtual network functions onboarding},
  Author                   = {C. Makaya and D. Freimuth},
  Booktitle                = {2016 IEEE Conference on Network Function Virtualization and Software Defined Networks (NFV-SDN)},
  Year                     = {2016},
  Month                    = {Nov},
  Pages                    = {206-211},

  Abstract                 = {Network functions virtualization (NFV) opens up a new ability of network enablement through agile network DevOps to design, develop, and test new services and to provide ongoing updates of existing services. This paper proposes a tool and methodology to aid the NFV designer to rapidly design and onboard new services and applications. Although the main focus is on the service design and onboarding, we provide the relation with other aspects such as management and orchestration, and service assurance of a complete lifecycle for network service. The proposed tool and methodology is called VNF Onboarding Automation Tool (VOAT). The prototype implementation is discussed as well as various use cases where VOAT has been used. With VOAT, an automated service design and onboarding can be efficiently achieved, hence reducing significantly the timeframe for deploying new services in telco cloud-based environment.},
  Doi                      = {10.1109/NFV-SDN.2016.7919499},
  Keywords                 = {computer networks;virtualisation;NFV;VNF onboarding automation tool;VOAT;agile network DevOps;network enablement;network functions virtualization;telco cloud-based environment;virtual network functions onboarding;Automation;Cloud computing;Conferences;Metadata;Monitoring;NFV;VNF;descriptors;management;onboarding;orchestration;service catalog;templates;virtualization},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6526379,
  Title                    = {Achieving quality product in a long term software product development in healthcare application using Lean and Agile principles: Software engineering and software development},
  Author                   = {K. N. Manjunath and J. Jagadeesh and M. Yogeesh},
  Booktitle                = {2013 International Mutli-Conference on Automation, Computing, Communication, Control and Compressed Sensing (iMac4s)},
  Year                     = {2013},
  Month                    = {March},
  Pages                    = {26-34},

  Abstract                 = {The objective of any software development is to deploy quality product with zero defects by meeting the end user expectations. There are several Software Development Life Cycle methodologies being followed to achieve this and the selection of best methodology is circumstance dependent. With our experience using Lean and Agile principles since last 4 years, in this paper we would like to explain in detail with statistics that these principles and practices can be successfully implemented in a iterative model development SDLC to achieve the matured, quality software in a long term medical imaging product. We will prove that it has positive impact on the software quality by comparing the outcome after following Lean and Agile principles with the prior results where traditional waterfall method was followed.},
  Doi                      = {10.1109/iMac4s.2013.6526379},
  Keywords                 = {health care;iterative methods;medical computing;software quality;statistical analysis;agile principle;health care application;iterative model development;lean principle;medical imaging product;software development life cycle methodology;software engineering;software product development;software quality;statistics;Computer bugs;Encoding;Guidelines;Schedules;Software;Testing;Agile;Iterative development;Lean;Software Development Life Cycle;V model;Waterfall model},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6676873,
  Title                    = {On Rapid Releases and Software Testing},
  Author                   = {M. V. Mäntylä and F. Khomh and B. Adams and E. Engström and K. Petersen},
  Booktitle                = {2013 IEEE International Conference on Software Maintenance},
  Year                     = {2013},
  Month                    = {Sept},
  Pages                    = {20-29},

  Abstract                 = {Large open and closed source organizations like Google, Facebook and Mozilla are migrating their products towards rapid releases. While this allows faster time-to-market and user feedback, it also implies less time for testing and bug fixing. Since initial research results indeed show that rapid releases fix proportionally less reported bugs than traditional releases, this paper investigates the changes in software testing effort after moving to rapid releases. We analyze the results of 312,502 execution runs of the 1,547 mostly manual system level test cases of Mozilla Fire fox from 2006 to 2012 (5 major traditional and 9 major rapid releases), and triangulated our findings with a Mozilla QA engineer. In rapid releases, testing has a narrower scope that enables deeper investigation of the features and regressions with the highest risk, while traditional releases run the whole test suite. Furthermore, rapid releases make it more difficult to build a large testing community, forcing Mozilla to increase contractor resources in order to sustain testing for rapid releases.},
  Doi                      = {10.1109/ICSM.2013.13},
  ISSN                     = {1063-6773},
  Keywords                 = {program testing;Mozilla Firefox;Mozilla QA engineer;manual system-level test cases;rapid release models;software testing;Browsers;Computer bugs;Google;Measurement;Software;Software testing;Mozilla;Software testing;agile releases;bugs;builds;opensource;release model},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6779530,
  Title                    = {Moving agile based projects on Cloud},
  Author                   = {M. Manuja and Manisha},
  Booktitle                = {2014 IEEE International Advance Computing Conference (IACC)},
  Year                     = {2014},
  Month                    = {Feb},
  Pages                    = {1392-1397},

  Doi                      = {10.1109/IAdCC.2014.6779530},
  Keywords                 = {cloud computing;software prototyping;software quality;CTQ;agile based software development;agile development methodology;capital expenditure;cloud computing;cost, time and quality;customer collaboration;incremental-iterative development;linear development approach;moving agile based projects;network accessibility;operational expenditure;platform availability;reduced OPEX;reduced time to market;runtime infrastructure cost;sequential development approach;software development methodology;software industry;waterfall model;zero CAPEX;Cloud computing;Computational modeling;Planning;Portals;Servers;Testing;Agile Methodologies;Cloud Computing;IaaS;PaaS;SaaS;Scrum},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7772124,
  Title                    = {Blind propagation channel estimation with enhanced auto-deconvolution},
  Author                   = {R. Maoudj and A. Dziri and M. Terre},
  Booktitle                = {2016 24th International Conference on Software, Telecommunications and Computer Networks (SoftCOM)},
  Year                     = {2016},
  Month                    = {Sept},
  Pages                    = {1-6},

  Abstract                 = {This paper deals with blind propagation channel estimation that should be a key feature for future agile waveforms. The proposed approach is based on high order statistics, inverse Fourier Transform and auto-deconvolution. The paper can be seen as a follow up to a previous work devoted to this subject [10]. It introduces an important improvement in the auto-deconvolution step based on a whitening algorithm able to equalize additive noise corrupting high order statistical moments estimation. Simulations results highlight the significance of this new stage, showing its impact, not only on the mean square error, but also on the bit error rate for 4 to 64-QAM modulations.},
  Doi                      = {10.1109/SOFTCOM.2016.7772124},
  Keywords                 = {Fourier transforms;channel estimation;deconvolution;error statistics;higher order statistics;inverse transforms;quadrature amplitude modulation;radiocommunication;radiowave propagation;4-QAM modulation;64-QAM modulation;additive noise;autodeconvolution enhancement;bit error rate;blind propagation channel estimation;high order statistical moment estimation;inverse Fourier transform;whitening algorithm;Channel estimation;Delays;Estimation;Fourier transforms;Frequency response;Mathematical model;OFDM;Blind estimation;Channel estimation;High order moments;Noise withening},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7735838,
  Title                    = {A mathematical model for energy efficient SDN/NFV using autonomic network intelligence},
  Author                   = {H. Materwala and V. Jain and P. Ranjan},
  Booktitle                = {2016 Progress in Electromagnetic Research Symposium (PIERS)},
  Year                     = {2016},
  Month                    = {Aug},
  Pages                    = {5078-5078},

  Abstract                 = {Summary form only given: In past couple of years, SDN/NFV has turned the table around for programmable networks. SDN disintegrates the Control plane and the Data plane making the network more flexible, agile and easy to deploy. Also, NFV makes the network more optimized in real time depending upon the traffic demand and type. But, along with this advancement, the global concern today is reduction of power consumption and moving towards green computing. Thus, in this paper we have proposed a model, for energy efficient SDN/NFV network, by making the virtual machines active/inactive using either Markov model or Degree of virtual machines based on the probability of packet loss calculated using Bayesian network. The reduction in power consumption is up to 26.6% for Atlanta network and 28% for Germany 50 network.},
  Doi                      = {10.1109/PIERS.2016.7735838},
  Keywords                 = {Bayes methods;Markov processes;computer network management;green computing;power aware computing;software defined networking;virtual machines;Atlanta network;Bayesian network;Germany;Markov model;NFV;SDN;autonomic network intelligence;green computing;packet probability;power consumption;programmable networks;virtual machine degree;Computational modeling;Electromagnetics;Green computing;Mathematical model;Power demand;Real-time systems;Virtual machining},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7883315,
  Title                    = {How Surveys, Tutors and Software Help to Assess Scrum Adoption in a Classroom Software Engineering Project},
  Author                   = {C. Matthies and T. Kowark and K. Richly and M. Uflacker and H. Plattner},
  Booktitle                = {2016 IEEE/ACM 38th International Conference on Software Engineering Companion (ICSE-C)},
  Year                     = {2016},
  Month                    = {May},
  Pages                    = {313-322},

  Keywords                 = {computer science education;project management;software prototyping;Scrum adoption;agile methods;classroom software engineering project;collaboration artifacts;post-hoc tool-supported analysis;scaled Scrum version;student satisfaction;Collaboration;Education;Planning;Scrum (Software development);Software;Software engineering;Synchronization;Classroom project;Scrum;collaboration analysis;multi-level assessment},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7757684,
  Title                    = {Agile metrics for a university software engineering course},
  Author                   = {C. Matthies and T. Kowark and M. Uflacker and H. Plattner},
  Booktitle                = {2016 IEEE Frontiers in Education Conference (FIE)},
  Year                     = {2016},
  Month                    = {Oct},
  Pages                    = {1-5},

  Doi                      = {10.1109/FIE.2016.7757684},
  Keywords                 = {computer science education;educational courses;software metrics;software prototyping;teaching;agile metrics;agile software development teaching;oral exams;university courses;university software engineering course;Best practices;Complexity theory;Context;Education;Measurement;Software;Software engineering;Assessment tools;Capstone projects;Computer engineering;Higher education;Metrics},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6953437,
  Title                    = {Power converter control framework for agile research and development},
  Author                   = {T. N. Matzen and K. B. Larsen and A. L. Jørgensen and M. Weje},
  Booktitle                = {2014 IEEE Energy Conversion Congress and Exposition (ECCE)},
  Year                     = {2014},
  Month                    = {Sept},
  Pages                    = {513-520},

  Doi                      = {10.1109/ECCE.2014.6953437},
  ISSN                     = {2329-3721},
  Keywords                 = {C++ language;field programmable gate arrays;permanent magnet generators;power convertors;sensorless machine control;synchronous generators;torque control;wind turbines;C++ template code-generation;FPGA;Matlab-Simulink wrapper;Python;active grid control;automated testing;back-to-back converter;build server;control platform;control software development;controller board;converter behaviour;converter control systems;converter model simulation;field weakening;flexible converter control framework;flexible pheriphals;header-generation;integration engineering;open source Jenkins contionous integration server;permanent magnet synchronous generator;real-time simulation;sensorless torque control;simulation environment;software development framework;test scripts;wind turbine application;Field programmable gate arrays;Hardware;Integrated circuit modeling;Pulse width modulation;Real-time systems;Software;Voltage control},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7757682,
  Title                    = {An agile software engineering process improvement game},
  Author                   = {B. R. Maxim and R. Kaur and C. Apzynski and D. Edwards and E. Evans},
  Booktitle                = {2016 IEEE Frontiers in Education Conference (FIE)},
  Year                     = {2016},
  Month                    = {Oct},
  Pages                    = {1-4},

  Abstract                 = {Many computing students do not receive adequate training in software quality management. Some students do not have the opportunity to practice software process improvement activities even if they do see the topics covered in their course lectures and textbooks. Serious games are gaining popularity as a means of instruction in higher education. Some excellent prescriptive software process simulation games have been created, as well as a few software engineering drill and practice games. In general, these games do not allow students to create agile process models or experiment with process improvement strategies. We are creating a serious game that will serve as a virtual learning environment to allow students to explore agile process improvement practices. Our game is designed as a single-player game where the player takes the role of software team leader and plays against an AI (artificial intelligence) opponent representing the customer's interests and needs. Players are rewarded for developing project strategies that allow for completion of projects on time, within budget, and meet the necessary software quality requirements. It is our intention to create a game with sufficiently detailed instructions to allow instructors to introduce hands on practice with agile process improvement activities without requiring additional class time.},
  Doi                      = {10.1109/FIE.2016.7757682},
  Keywords                 = {artificial intelligence;computer aided instruction;computer science education;further education;project management;serious games (computing);software development management;software process improvement;software prototyping;software quality;AI;agile software engineering process improvement game;artificial intelligence;computing students;higher education;project strategies development;serious games;single-player game;software process simulation games;software quality management;software quality requirements;software team leader;virtual learning;Artificial intelligence;Computers;Education;Games;Project management;Software;Software engineering;agile;gaming;process improvement;scrum},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7814513,
  Title                    = {Quality Assurance in Agile Safety-Critical Systems Development},
  Author                   = {T. McBride and M. Lepmets},
  Booktitle                = {2016 10th International Conference on the Quality of Information and Communications Technology (QUATIC)},
  Year                     = {2016},
  Month                    = {Sept},
  Pages                    = {44-51},

  Abstract                 = {In this position paper we examine how safety could be assured when increasingly complex systems are developed using agile software development methods. We first discuss the source and nature of complexity in software systems and how a probe - sense - learn approach recommended by the Cynefin Framework is appropriate for designing complex systems and a sense - analyse - learn approach is appropriate for developing a complicated system whose design has been determined. We then examine how quality assurance is incorporated into agile software development before pointing out that those characteristics of a self-managed team that produce so many benefits for software development of complex systems whose solution evolves with problem understanding, are also vulnerable to confirmation bias. This suggests that for safety critical system development, software systems developed by agile teams will need verification and validation by independent parties. We review current quality management practices for medical device software development before discussing how our earlier findings could be adopted into safety critical software quality management.},
  Doi                      = {10.1109/QUATIC.2016.016},
  Keywords                 = {medical information systems;program verification;quality assurance;safety-critical software;software metrics;software prototyping;software quality;Cynefin framework;agile safety-critical software system development;agile software development methods;agile teams;complex systems;confirmation bias;medical device software development;probe-sense-learn approach;quality assurance;safety critical software quality management;self-managed team characteristics;sense-analyse-learn approach;software system complexity;software validation;software verification;Complex systems;Medical diagnostic imaging;Production;Quality assurance;Safety;Software systems;Safety critical;complex systems;quality assurance;software development},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@Article{7725727,
  Title                    = {Do you need a plan?},
  Author                   = {B. McCluskey},
  Journal                  = {Engineering Technology},
  Year                     = {2016},

  Month                    = {Nov},
  Number                   = {10},
  Pages                    = {68-71},
  Volume                   = {11},

  Abstract                 = {Agile has proved so successful that it has not only found favour among vast swathes of the developer community but has also been appropriated, and misunderstood, by management consultants and corporate senior management in multiple sectors - a sure-fire sign of any concept's acceptance into the mainstream. Now, hardware engineers and product designers working with physical goods are looking at how they can adopt agile practices. Even teams working on safety-critical systems have embraced elements of agile development. The paper discusses that tο come up with product designs more quickly and deal with rapid changes in needs, hardware designers are taking a leaf out of the software development 'Agile' manual.},
  Doi                      = {10.1049/et.2016.1006},
  ISSN                     = {1750-9637},
  Keywords                 = {agile manufacturing;electronics industry;product development;agile development;agile practices;hardware engineers;product designers;safety-critical systems},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@Article{7530847,
  Title                    = {A Scalable Algorithm for the Placement of Service Function Chains},
  Author                   = {M. Mechtri and C. Ghribi and D. Zeghlache},
  Journal                  = {IEEE Transactions on Network and Service Management},
  Year                     = {2016},

  Month                    = {Sept},
  Number                   = {3},
  Pages                    = {533-546},
  Volume                   = {13},

  Abstract                 = {Network function virtualization (NFV) decouples software implementations of network functions from their hosts (or hardware). NFV exposes a new set of entities, the virtualized network functions (VNFs). The VNFs can be chained with other VNFs and physical network functions to realize network services. This flexibility introduced by NFV allows service providers to respond in an agile manner to variable service demands and changing business goals. In this context, the efficient establishment of service chains and their placement becomes essential to reduce capital and operational expenses and gain in service agility. This paper addresses the placement aspect of these service chains by finding the best locations and hosts for the VNFs and to steer traffic across these functions while respecting user requirements and maximizing provider revenue. We propose a novel eigendecomposition-based approach for the placement of virtual and physical network function chains in networks and cloud environments. A heuristic based on a custom greedy algorithm is also presented to compare performance and assess the capability of the eigendecomposition approach. The performance of both algorithms is compared to a multi-stage-based method from the state of the art that also addresses the chaining of network services. Performance evaluation results show that our matrix-based method, eigendecomposition of adjacency matrices, has reduced complexity and convergence times that essentially depend only on the physical graph sizes. Our proposal also outperforms the related work in provider's revenue and acceptance rate.},
  Doi                      = {10.1109/TNSM.2016.2598068},
  ISSN                     = {1932-4537},
  Keywords                 = {computer networks;NFV;VNF;adjacency matrices;business goals;computer networks;eigendecomposition;network function virtualization;network services;physical graph sizes;physical network function;physical network functions;scalable algorithm;service function chains;software implementations;user requirements;variable service demands;virtual network function;virtualized network functions;Cloud computing;Hardware;Heuristic algorithms;Network topology;Resource management;Routing;Terminology;Virtual network function;distributed cloud environments;eigendecomposition;function placement and chaining},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7113577,
  Title                    = {Experiment Report on the Implementation of Agile Testing},
  Author                   = {D. A. Menéndez and E. S. Menendez and T. G. R. Sousa and P. C. d. Silva},
  Booktitle                = {2015 12th International Conference on Information Technology - New Generations},
  Year                     = {2015},
  Month                    = {April},
  Pages                    = {772-773},

  Abstract                 = {The process of software testing in agile environments presents complexity due to the need to be performed at short time intervals. Currently, there is no consensus in literature of the best approach to deploy agile testing. The testing management is often one of the hardest steps to be adapted to these methods, due to the short time for deliveries, which reduces the time available for testing, as a result, it is usually relegated to the background. In order to assess the viability and possible benefits in the implementation of an agile testing process, an exploratory research was made on the deployment approaches of agile testing, successfully used in different contexts and some of these approaches have been implemented in a software development company, which uses principles of agile methods.},
  Doi                      = {10.1109/ITNG.2015.138},
  Keywords                 = {program testing;software prototyping;agile testing deployment approach;agile testing implementation;agile testing process;software development company;software testing process;testing management;Automation;Companies;Context;Industries;Software;Software testing;agile development;agile testing;test deployment approaches},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7320357,
  Title                    = {Architectural challenges in migrating plan-driven projects to agile},
  Author                   = {V. Menon and R. Sinha and S. MacDonell},
  Booktitle                = {2015 International Conference on Evaluation of Novel Approaches to Software Engineering (ENASE)},
  Year                     = {2015},
  Month                    = {April},
  Pages                    = {223-228},

  Abstract                 = {Software development has steadily embraced agile software development methodology/method (ASDM) and has been moving away from the plan driven software development methodology (PDM) approaches like waterfall. Given the iterative nature of agile development, the integration of software architecture into the agile way has become challenging. This research identifies the challenges of having a robust architecture in projects already executed by plan driven methods and new projects likewise by conducting a literature review and a case study analysis. The ensuing analysis finds that there are three major areas: people, process and technology, in which these challenges could be mapped.},
  Keywords                 = {Agile software development;Bibliographies;Computer architecture;Requirements engineering;Software;Software architecture;Variable speed drives;Agile;Plan Driven Methods;Requirements Engineering;Software Architecture;Software Development;Software Development Life Cycle;Waterfall},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7496585,
  Title                    = {The Italian Army C2 evolution: From the current SIACCON2 land command \& control system to the LC2EVO using "agile" software development methodology},
  Author                   = {A. Messina and F. Fiore},
  Booktitle                = {2016 International Conference on Military Communications and Information Systems (ICMCIS)},
  Year                     = {2016},
  Month                    = {May},
  Pages                    = {1-8},

  Abstract                 = {The continuous evolution of the military “land operations ” generates instability of the Command & Control systems requirements obliging the developers to work with unstable and unconsolidated mission needs. In 2013, the Italian Army General Staff Logistic Department decided to overcome the problem of the “volatile requirement” transitioning to a completely different software development methodology derived from the commercial, area but almost completely new to the “mission critical” software applications: the so called “agile” methodology. The introduction of “agile” in the development of high reliability software was not easy and implied the generation of a brand new “agile” methodology called: Italian Army Agile or ITA2. Setting up the LC2Evo (the evolution software of the land C2) implied the solution of many problems and the construction of a solid structure based on four “pillars”: User Community Governance, Specific “agile” Training, new “agile” CASE1 Tools, custom “agile” development doctrine. This paper gives a short description of the Italian C2 software evolution from the current SIACCON2 to the LC2Evo whose first components are in use already in various national and out of area operations. The LC2Evo “dismounted Soldier segment software using augmented reality and goggle glass-like display is also described. The major problems tackled and solved for the construction of the “four pillars” are treated.},
  Doi                      = {10.1109/ICMCIS.2016.7496585},
  Keywords                 = {Augmented reality;Force;Logistics;Radiation detectors;Security;Software;C2;LC2Evo;agile development;augmented reality;dismounted soldier;land command & control;software engineering;volatile requirements},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6911181,
  Title                    = {Empowering business process users through a pragmatic approach: A case study},
  Author                   = {R. Meziani},
  Booktitle                = {2014 International Conference on Multimedia Computing and Systems (ICMCS)},
  Year                     = {2014},
  Month                    = {April},
  Pages                    = {639-645},

  Abstract                 = {Organizations face frequent changes generally impacting its business processes. These processes are often relegated to the background, and do not get the expected attention. Before talking about process improvement, it needs first to be designed and formalized, which is far from being the case for the majority of organizations. In this paper, we present ANEW (collAborative busiNess procEss management Wiki) approach that attempts to offer pragmatic and simple ways in managing business processes using agile and social concepts to help bridge the gap between IT and business and the opportunity to empower business users to actively participate in all process's phases. We deployed our approach in two pilot projects, and collected data that allowed us to assess its main concepts and draw initial concluding remarks.},
  Doi                      = {10.1109/ICMCS.2014.6911181},
  Keywords                 = {Web sites;business data processing;ANEW approach;business process users;collaborative business process management Wiki;pragmatic approach;Business;Software;Training;ANEW;agile bpm;business process management;social bpm;user empowerment},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@Article{7849149,
  Title                    = {Topology-Aware Prediction of Virtual Network Function Resource Requirements},
  Author                   = {R. Mijumbi and S. Hasija and S. Davy and A. Davy and B. Jennings and R. Boutaba},
  Journal                  = {IEEE Transactions on Network and Service Management},
  Year                     = {2017},

  Month                    = {March},
  Number                   = {1},
  Pages                    = {106-120},
  Volume                   = {14},

  Doi                      = {10.1109/TNSM.2017.2666781},
  ISSN                     = {1932-4537},
  Keywords                 = {computer networks;graph theory;learning (artificial intelligence);neural nets;resource allocation;telecommunication computing;virtualisation;NFV;VNFC;graph neural network;machine learning;middleboxes;network functions virtualization;resource requirements;resource utilization;topology-aware prediction;virtualized network function component;Dynamic scheduling;Multimedia communication;Neural networks;Proposals;Reliability;Resource management;Topology;Network functions virtualisation;dynamic resource allocation;graph neural networks;machine learning;prediction;topology-awareness;virtual network functions},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7818394,
  Title                    = {A connectionist approach to dynamic resource management for virtualised network functions},
  Author                   = {R. Mijumbi and S. Hasija and S. Davy and A. Davy and B. Jennings and R. Boutaba},
  Booktitle                = {2016 12th International Conference on Network and Service Management (CNSM)},
  Year                     = {2016},
  Month                    = {Oct},
  Pages                    = {1-9},

  Abstract                 = {Network Functions Virtualisation (NFV) continues to gain attention as a paradigm shift in the way telecommunications services are deployed and managed. By separating Network Functions (NFs) from traditional middleboxes, NFV is expected to lead to reduced CAPEX and OPEX, and to more agile services. However, one of the main challenges to achieving these objectives is on how physical resources can be efficiently, autonomously, and dynamically allocated to Virtualised Network Functions (VNFs) whose resource requirements ebb and flow. In this paper, we propose a Graph Neural Network (GNN)-based algorithm which exploits Virtual Network Function Forwarding Graph (VNF-FG) topology information to predict future resource requirements for each Virtual Network Function Component (VNFC). The topology information of each VNFC is derived from combining its past resource utilisation as well as the modelled effect on the same from VNFCs in its neighbourhood. Our proposal has been evaluated using a deployment of a virtualised IP Multimedia Subsystem (IMS), and real VoIP traffic traces, with results showing an average prediction accuracy of 90%. Moreover, compared to a scenario where resources are allocated manually and/or statically, our proposal reduces the average number of dropped calls by at least 27% and improves call setup latency by over 29%.},
  Doi                      = {10.1109/CNSM.2016.7818394},
  Keywords                 = {neural nets;telecommunication network topology;virtual private networks;CAPEX;GNN-based algorithm;IMS;NFV;OPEX;VNF-FG topology information;VNFC;VoIP traffic traces;connectionist;dynamic resource management;graph neural network;network functions virtualisation;resource utilisation;setup latency;telecommunications services;virtual network function component;virtual network function forwarding graph;virtualised IP multimedia subsystem;virtualised network functions;Containers;Dynamic scheduling;Mathematical model;Proposals;Resource management;Servers;Topology;Artificial Intelligence;Machine Learning;Network Functions Virtualisation;Neural Networks;Resource Management;Topology Awareness},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7784913,
  Title                    = {Agile methods adoption in large software development projects},
  Author                   = {A. Mishra},
  Booktitle                = {2016 5th International Conference on Reliability, Infocom Technologies and Optimization (Trends and Future Directions) (ICRITO)},
  Year                     = {2016},
  Month                    = {Sept},
  Pages                    = {16-16},

  Abstract                 = {The Agile Software Development paradigm has become increasingly popular in the last few years, since it claims lower costs, better productivity, better quality and better business satisfaction. In large software development projects due to its scope, uncertainty, complex and unstable requirements, it is not possible to develop it with predictable software development process models. Agile methodologies are becoming popular toward such kinds of projects that involve change and uncertainty, and are adaptive rather than predictive. How an agile process is introduced will significantly impact the implementation success of the process change. The objective of this talk is to analyze different agile development methodologies, quality assurance and management approach used in developing a large software project and how to overcome risks and barriers in large software development projects.},
  Doi                      = {10.1109/ICRITO.2016.7784913},
  Keywords                 = {software prototyping;software quality;agile development methodologies;agile software development;large software development;management approach;quality assurance;software development process models},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6613453,
  Title                    = {Understanding Collaborative Practices in Distributed Agile Development: Research Proposal},
  Author                   = {S. Modi and P. Abbott},
  Booktitle                = {2013 IEEE 8th International Conference on Global Software Engineering Workshops},
  Year                     = {2013},
  Month                    = {Aug},
  Pages                    = {74-77},

  Abstract                 = {Agile methodologies in software development are gaining prominence in global settings where distributed cross-cultural software teams collaborate on projects, addressing the needs of dynamic business environments. However, undertaking collaborative work in distributed settings can create significant challenges, especially as a number of agile principles and practices rely on physical proximity and face-to-face interactions. An interpretative qualitative approach using case studies has been adopted to gain deeper insights into how such teams work. The analysis is being informed by theoretical concepts of awareness, common ground and boundary objects. Early findings suggest that distributed team members use multifaceted techniques, such as shared software artifacts that evolve over time to negotiate and enhance common ground for better collaborative practices to emerge. It is expected that research undertaken will provide a framework to understand this process. Practically, the research will propose guidelines for global software teams planning to adopt agile methods in distributed environments.},
  Doi                      = {10.1109/ICGSEW.2013.16},
  ISSN                     = {2329-6305},
  Keywords                 = {globalisation;groupware;project management;software development management;software prototyping;team working;agile methodologies;awareness concept;boundary objects;collaborative practices;common ground concept;distributed agile development;distributed cross-cultural software teams;distributed team members;dynamic business environments;face-to-face interactions;global software development;global software team planning;interpretative qualitative approach;multifaceted techniques;physical proximity;shared software artifacts;software projects;team collaboration;team working;Collaboration;Collaborative work;Communities;Information systems;Interviews;Organizations;Software;awareness cues;boundary objects;distributed collaborative work;establishing and negotiating common ground;globally distributed agile teams},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6615431,
  Title                    = {A hybrid model for agile practices using case based reasoning},
  Author                   = {M. Mukhtar and Y. H. Motla and M. Riaz and M. A. Khan and M. Ahmed and M. A. Abbas and H. Naz and A. Batool},
  Booktitle                = {2013 IEEE 4th International Conference on Software Engineering and Service Science},
  Year                     = {2013},
  Month                    = {May},
  Pages                    = {820-823},

  Doi                      = {10.1109/ICSESS.2013.6615431},
  ISSN                     = {2327-0586},
  Keywords                 = {case-based reasoning;expert systems;software prototyping;AI technique;CBR;agile practices;agile software development;artificial intelligence technique;case-based reasoning;expert response method;hybrid model;Cognition;Monitoring;Software;Agile;Case Based Reasoning;Hybrid Software Engineering Process;RUP;Scrum Model;Software Engineering Practices},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7521520,
  Title                    = {Toward assessing the implementation and use of agile methodologies in SMEs: An analysis of the actual agile methodologies assessment tools},
  Author                   = {M. Muñoz and J. Mejia and B. Corona},
  Booktitle                = {2016 11th Iberian Conference on Information Systems and Technologies (CISTI)},
  Year                     = {2016},
  Month                    = {June},
  Pages                    = {1-6},

  Abstract                 = {Nowadays, many small settings as well as small and medium enterprises (SMEs) prefer the use of agile methodologies. However, the lack of knowledge on how to use agile methodologies results in the empirical adoption of them and therefore without implementing them in a right way. The goal of this paper is to establish a state of art regarding the tools focused on assessing if an organization has adopted and used in a right way the agile methodologies. To achieve this goal 41 tools, which were obtained as a result of performing a systematic review, were analyzed. The paper includes both the analysis performed and a discussion of the main findings.},
  Doi                      = {10.1109/CISTI.2016.7521520},
  Keywords                 = {organisational aspects;small-to-medium enterprises;software prototyping;software tools;SME;agile methodologies assessment tools;organization;small and medium enterprises;Art;Corona;Decision support systems;ISO Standards;Organizations;Silicon compounds;Software;SMEs;agile assessing tools;agile methodologies},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7809359,
  Title                    = {Optimizing Software Development Processes},
  Author                   = {B. Murphy},
  Booktitle                = {2016 IEEE/ACM 4th International Workshop on Conducting Empirical Studies in Industry (CESI)},
  Year                     = {2016},
  Month                    = {May},
  Pages                    = {4-4},

  Abstract                 = {It would appear that developing software programs or services is one of the easiest things in the world to do. The theorist would have us believe that all practitioners need to do is to write the code in specific software language (e.g. functional language) and follow specific processes (e.g. agile) and ideally deploy as a continuously evolving service and you will reach perfection. If you run into problems then that is because your engineers are not good enough and/or you are not following the process correctly. The reality is very different, especially when developing software at scale. This talk will describe why there are no universal development processes that can be applied across all software product and service. While practitioners are well aware of this reality, there is little assistance, based on empirical evidence, to help them either choose a suitable development process for their product or service, or in optimizing the solution they have already chosen. Over the last few years I and other researchers have being looking at how to assist developers in optimizing their process, based on the attributes of the product or services they are developing. In this talk I will describe the current state of our research in this space.},
  Doi                      = {10.1109/CESI.2016.010},
  Keywords                 = {optimisation;software process improvement;software prototyping;agile processes;functional language;software development processes optimization;software language;software product;software service;Conferences;Current measurement;Focusing;Industries;Software;Software engineering;Software measurement;Software Development;Software Processes},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6688869,
  Title                    = {To branch or not to branch that is the question},
  Author                   = {B. Murphy},
  Booktitle                = {2013 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW)},
  Year                     = {2013},
  Month                    = {Nov},
  Pages                    = {55-55},

  Abstract                 = {One of the most contentious areas in software development is branching. Proponents of agile development methodologies are often against the concept of branching as a matter of principle, other large software development projects, such as Windows, are heavy users of branches to control the software generated by thousands of its engineers. Microsoft is migrating its development processes to be able to simultaneously produce software as both stand-alone products and as a SAAS (e.g. Windows 8 and Azure), requiring a re-architecture of these processes. To fully understand the impact of any changes to their development processes the product groups addressed the question of whether and how to use branching within its development process. Bases on this assessment this talk attempts to go back to first principles in regard to software development and shows that there are a lot more similarities than differences between agile and non-agile software development methods. The talk will also discuss the pros and cons of branching identifying where it will positively and negatively impact software development.},
  Doi                      = {10.1109/ISSREW.2013.6688869},
  Keywords                 = {project management;software development management;software process improvement;software prototyping;Microsoft;SAAS;Windows 8;Windows Azure;agile development methodologies;branching;software development project;software production;stand-alone product;Abstracts;Software as a service},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6681340,
  Title                    = {Have Agile Techniques been the Silver Bullet for Software Development at Microsoft?},
  Author                   = {B. Murphy and C. Bird and T. Zimmermann and L. Williams and N. Nagappan and A. Begel},
  Booktitle                = {2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement},
  Year                     = {2013},
  Month                    = {Oct},
  Pages                    = {75-84},

  Abstract                 = {Background. The pressure to release high-quality, valuable software products at an increasingly faster rate is forcing software development organizations to adapt their development practices. Agile techniques began emerging in the mid-1990s in response to this pressure and to increased volatility of customer requirements and technical change. Theoretically, agile techniques seem to be the silver bullet for responding to these pressures on the software industry. Aims. This paper tracks the changing attitudes to agile adoption and techniques, within Microsoft, in one of the largest longitudinal surveys of its kind (2006-2012). Method. We collected the opinions of 1,969 agile and non-agile practitioners in five surveys over a six-year period. Results. The survey results reveal that despite intense market pressure, the growth of agile adoption at Microsoft is slower than would be expected. Additionally, no individual agile practice exhibited strong growth trends. We also found that while development practices of teams may be similar, some perceive and declare themselves to be following an agile methodology while others do not. Both agile and non-agile practitioners agree on the relative benefits and problem areas of agile techniques. Conclusions. We found no clear trends in practice adoption. Non-agile practitioners are less enamored of the benefits and more strongly in agreement with the problem areas. The ability for agile practices to be used by large-scale teams generally concerned all respondents, which may limit its future adoption.},
  Doi                      = {10.1109/ESEM.2013.21},
  ISSN                     = {1949-3770},
  Keywords                 = {DP industry;software development management;software prototyping;team working;Microsoft;agile adoption;agile methodology;agile practice;agile techniques;changing attitudes;customer requirements;development practices;high-quality valuable software products;large-scale teams;market pressure;silver bullet;software development organizations;software industry;technical change;Companies;Industries;Interviews;Market research;Software;Testing;Agile;Agile development;Interviews;Survey},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6973819,
  Title                    = {Migrating Agile Development into the Cloud Computing Environment},
  Author                   = {G. Mwansa and E. Mnkandla},
  Booktitle                = {2014 IEEE 7th International Conference on Cloud Computing},
  Year                     = {2014},
  Month                    = {June},
  Pages                    = {818-825},

  Abstract                 = {The emergence of cloud computing is influencing how businesses develop, re-engineer, and implement critical software applications. The cloud requires developers to elevate the importance of compliance with security policies, regulations and internal engineering standards in their software development life cycles. Cloud computing and agile development methodologies are new technologies that have come with new approaches in the way computing services are provisioned and development of quality software respectively. However, the synergy between the two is bonded with technical and non-technical challenges. In this paper, a conceptual framework is proposed to support the process of migration of South African small, medium and micro enterprises (SMMEs) who are using agile software development methodologies to cloud computing environment.},
  Doi                      = {10.1109/CLOUD.2014.113},
  ISSN                     = {2159-6182},
  Keywords                 = {cloud computing;small-to-medium enterprises;software prototyping;software quality;SMME;South African small-medium-and-microenterprises;agile development migration;agile software development methodologies;cloud computing environment;compliance;computing service provisioning;conceptual framework;critical software application development;critical software application implementation;critical software application re-engineering;internal engineering standards;nontechnical issue;quality software development;security policies;security regulations;software development life cycles;technical issue;Cloud computing;Companies;Servers;Software as a service;Agile Development Methodologies;Cloud Computing;SMMEs},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6933103,
  Title                    = {Situational software engineering Complex Adaptive responses of software development teams},
  Author                   = {A. Myburgh},
  Booktitle                = {2014 Federated Conference on Computer Science and Information Systems},
  Year                     = {2014},
  Month                    = {Sept},
  Pages                    = {841-850},

  Doi                      = {10.15439/2014F196},
  Keywords                 = {software development management;software quality;team working;CASM;SEMAT Essence;complex adaptive responses;complex adaptive situational model;complexity science;controlled quality;crafted quality;dynamic equilibrium;governance requirements;managed costs;management governance;production governance;self-directed quality;situational software engineering;software development teams;software engineering feasibility;software engineering initiatives;software engineering success;waterfall;wetagile;Complexity theory;Dynamic equilibrium;Educational institutions;Kernel},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7448075,
  Title                    = {An agile development process for petrochemical safety conformant software},
  Author                   = {T. Myklebust and T. Stålhane and N. Lyngby},
  Booktitle                = {2016 Annual Reliability and Maintainability Symposium (RAMS)},
  Year                     = {2016},
  Month                    = {Jan},
  Pages                    = {1-6},

  Abstract                 = {The cost of software development is one of the major contributors to the development cost for safety systems in the petrochemical industry. It is hard to make developers work faster but it is possible to make them work more efficient. One way to achieve that is to introduce agile development methods. Agile methods are gaining increasing popularity in safety critical areas such as the petrochemical industry. Agile methods promise reduced costs and shorter time to market through incremental development, less production of unnecessary documents and more maintainable code. The IEC 61511:2003 standard is normally used by the petrochemical industry. The second edition of this standard will be issued in 2015. Both the current and the new draft edition IEC 61511:2014 of the IEC 61511 standard are evaluated against agile development approach in this paper. Both editions of the IEC 61511 standard have a strong link to IEC 61508. Manufacturers and suppliers of devices shall use IEC 61508, while system designers, integrators and users shall use IEC 61511. The IEC 61508 standard's relationship to agile development has been evaluated with success in a previous paper (Stalhane 2012). While the architectural design also in agile development is done up front, detailed design is done incrementally. Based on reported experiences in other domains, we expect the following benefits: · Easier to discover and correct faulty or incomplete system requirements · Simpler software, thus reducing the development and maintenance costs · Only documents that are needed, either for certification or development, are developed The ones that are developed are used and kept up-to-date · Improved opportunities for reuse and site development. The challenge is to introduce agile development without compromising safety. Development of safety systems needs to be compliant with IEC 61511. This standard impose rigor and additional co- ts, but proper adaptation of agile methods can add flexibility and efficiency. In order to evaluate this proposition we use a three step process: · Go through all relevant requirements in the standard and mark all requirements as (1) fully met using agile development, (2) possible to meet using agile development and (3) cannot be fulfilled "as is" using agile development. · All requirements in category (2) are studied further in order to assign them to category (1) - OK, category (2) - adaptations to the agile method by including add-on's or category (3) - changes to the development process. · Suggest appropriate modifications to the agile development. This is the same process that we have used with success for IEC 61508 (Stalhane 2012) and IEC 60880 (Stalhane 2013). The work on IEC 61508 resulted in a method called SafeScrum. The SafeScrum model are reused and improved to fit the current and new edition of IEC 61511. There are no requirements in the current standards that prevents for an adjusted agile development process as SafeScrum. When the issues identified as category 2 in section 2 are settled, it should be straight forward to use SafeScrum and still be IEC 61511 conformant. It is now important to get one or more companies to try it out in cooperation with the certification bodies and / or authorities to get a reality check of the concepts discussed. This will allow us to identify possible problems and to make the adjustments necessary for industrial application. The main challenges are the IEC 61511 requirements on configuration management, traceability, detailed planning and documentation. However, in order to reap the full benefits of agile development, it is not enough to show conformance to IEC 61511. Suggested improvements of IEC 61511 are more requirements and information regarding modern software development methods. This is also in accordance with preliminary work performed by the current IE},
  Doi                      = {10.1109/RAMS.2016.7448075},
  Keywords                 = {petroleum industry;safety systems;safety-critical software;software architecture;software prototyping;IEC 60880;IEC 61508 standard;IEC 61508-3 maintenance committee;IEC 61511:2014;SafeScrum;agile development process;architectural design;development costs reduction;incomplete system requirements;maintenance costs reduction;petrochemical safety conformant software;safety systems development;site development;software development methods;IEC Standards;Industries;Maintenance engineering;Petrochemicals;Safety;Software;IEC 61511;SafeScrum;Safety-Critical Software},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6986023,
  Title                    = {On the current agile assessment methods and approaches},
  Author                   = {M. Z. Nafchi and H. Zulzalil and T. J. Gandomani},
  Booktitle                = {2014 8th. Malaysian Software Engineering Conference (MySEC)},
  Year                     = {2014},
  Month                    = {Sept},
  Pages                    = {251-254},

  Abstract                 = {Agile methods are widely used in software companies in recent years. Many software companies are replacing their traditional development methods with Agile methods. Nonetheless, measuring agility that they have achieved has be topic of debate. So far, only a few methods and tools have been proposed to measure the agility of software companies who are moving to agile. The main aim of this paper is reviewing the existing agile assessment methods and providing a brief discussion on drawbacks of these methods. This paper tries to elucidate the actual position of these methods in measuring agility degree of companies who are moving to agile approach.},
  Doi                      = {10.1109/MySec.2014.6986023},
  Keywords                 = {DP industry;software prototyping;agile assessment methods;development methods;software companies;Adaptation models;Agile software development;Companies;Computers;Software;Software engineering;Agile assessment;Agile assessment models;Agile software development;Agile transformation;Agility assessment},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7160177,
  Title                    = {Comparative study of ERP implementation strategies},
  Author                   = {S. Nagpal and S. K. Khatri and A. Kumar},
  Booktitle                = {2015 Long Island Systems, Applications and Technology},
  Year                     = {2015},
  Month                    = {May},
  Pages                    = {1-9},

  Doi                      = {10.1109/LISAT.2015.7160177},
  Keywords                 = {enterprise resource planning;CSF;ERP implementation strategies;ERP software;agile methodology;consultant-specific ERP implementation methodology;critical success factor;custom-made ERP implementation methodology;enterprise resource planning;inventory management and control systems;vendor-specific ERP implementation methodology;waterfall model;Materials requirements planning;Organizations;Schedules;Software;Testing;Accelerated SAP (ASAP);Agile Methodology;Critical Success Factors (CSF;Enterprise Resource Planning (ERP;Microsoft Dynamics Sure Step Methodology;Oracle Unified Method (OUM)},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@Article{6774772,
  Title                    = {Building CLiiME via Test-Driven Development: A Case Study},
  Author                   = {A. Nanthaamornphong and J. C. Carver and K. Morris and H. A. Michelsen and D. W. I. Rouson},
  Journal                  = {Computing in Science Engineering},
  Year                     = {2014},

  Month                    = {May},
  Number                   = {3},
  Pages                    = {36-46},
  Volume                   = {16},

  Doi                      = {10.1109/MCSE.2014.33},
  ISSN                     = {1521-9615},
  Keywords                 = {groupware;program testing;software engineering;CLiiME design;CSE software;TDD;agile methodology;collaborative model;community laser-induced incandescence modeling environment;computational science and engineering software;contemporary computational modeling;large-scale software development;multidisciplinary efforts;serve a broad audience;test-driven development;Computational modeling;Mathematical model;Object oriented modeling;Production facilities;Scientific computing;Software development;agile methodologies;computational science and engineering;scientific computing;software engineering;test-driven development},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6615094,
  Title                    = {A case study: Agile development in the community laser-induced incandescence modeling environment (CLiiME)},
  Author                   = {A. Nanthaamornphong and K. Morris and D. W. I. Rouson and H. A. Michelsen},
  Booktitle                = {2013 5th International Workshop on Software Engineering for Computational Science and Engineering (SE-CSE)},
  Year                     = {2013},
  Month                    = {May},
  Pages                    = {9-18},

  Abstract                 = {The multidisciplinary requirements of current computational modeling problems preclude the development of scientific software that is maintained and used by selected scientists. The multidisciplinary nature of these efforts requires the development of large scale software projects established with a wide developer and user base in mind. This article describes some of the software-engineering practices adopted in a scientific-software application for a laser-induced incandescence community model. The project uses an Agile and Test-Driven Development approach to implement the infrastructure for the development of a collaborative model that is to be extended, modified, and used by different researchers. We discuss some of the software-engineering practices that can be exploited through the life of a project, starting with its inception when only a hand full of developers are contributing to the project and the mechanism we have put in place in order to allow the natural expansion of the model.},
  Doi                      = {10.1109/SECSE.2013.6615094},
  Keywords                 = {software prototyping;CLiiME;agile development;collaborative model;community laser induced incandescence modeling environment;computational modeling problems;laser induced incandescence community model;multidisciplinary nature;scientific software application;software engineering practices;test driven development;Laser modes;Mathematical model;Object oriented modeling;Schedules;Software;Unified modeling language;agile development method;computational software development;software engineering;test driven development},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7872732,
  Title                    = {A case study: Adoption of agile in Thailand},
  Author                   = {A. Nanthaamornphong and R. Wetprasit},
  Booktitle                = {2016 International Conference on Advanced Computer Science and Information Systems (ICACSIS)},
  Year                     = {2016},
  Month                    = {Oct},
  Pages                    = {585-590},

  Abstract                 = {Agile methods are attracting increasing industry and research interest; however, among studies that have investigated the use of agile methods, most have focused on developed countries (e.g., North America, Europe). The use of agile methods in Asian countries, particularly Thailand, is poorly understood and requires additional investigation. This paper presents findings on the adoption of agile methods among software developers within Thailand, and the data are based on in-person interviews. The primary objective of this study is to determine how the use of agile methods for software development projects is perceived in Thailand. The results of this study will provide insights into the Thai software developer community.},
  Doi                      = {10.1109/ICACSIS.2016.7872732},
  Keywords                 = {project management;software prototyping;Asian countries;Thai software developer community;Thailand;agile adoption;agile methods;software development projects;Companies;Data analysis;Interviews;Programming;Scrum (Software development);Software;agile;empirical study;software engineering},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7474527,
  Title                    = {Investigating students' behavior and code quality when applying pair-programming as a teaching technique in a Middle Eastern society},
  Author                   = {M. Nawahdah and D. Taji},
  Booktitle                = {2016 IEEE Global Engineering Education Conference (EDUCON)},
  Year                     = {2016},
  Month                    = {April},
  Pages                    = {32-39},

  Abstract                 = {Pair-programming is a software development technique that was introduced as part of Extreme Programming. In pair-programming, two developers share a computer to work together on developing one piece of code. To test Pair-programming effects on students' behavior and performance in a Middle Eastern society where some interaction restrictions are found, we devised an experiment that was carried out over an entire academic year consists of two semesters. The experiment targeted two sections per semester of an advanced computer programming course. The students of one of the sections worked in pairs during the lab sessions, applying pair-programming rules and techniques. The other section had students who worked individually, as it is the norm in most programming labs. Video recordings were recorded throughout the lab sessions, and then studied and analyzed. In addition, code samples were collected from the students to study the effect of pair-programming on the students' code quality. Through this experiment we found out that pair-programming has the potential to increase the students' confidence, their enjoyment of the course, and improved the course's completion rate. In addition, the students in the pair-programming sections showed that they were able to individually produce code of better quality than the students in the traditional section.},
  Doi                      = {10.1109/EDUCON.2016.7474527},
  Keywords                 = {computer aided instruction;computer science education;educational courses;programming;software prototyping;student experiments;video recording;Middle Eastern society;advanced computer programming course;code quality;extreme programming;pair programming;software development technique;students behavior;teaching technique;video recordings;Computers;Education;Keyboards;Mice;Navigation;Programming profession;Behavior Analysis;Computer Supported Collaborative Learning;Computing Education;Pair-programming;Teaching/Learning Methodologies},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7508196,
  Title                    = {A survey on agile practices in the Indian IT industry},
  Author                   = {N. Nazir and N. Hasteer and A. Bansal},
  Booktitle                = {2016 6th International Conference - Cloud System and Big Data Engineering (Confluence)},
  Year                     = {2016},
  Month                    = {Jan},
  Pages                    = {635-640},

  Abstract                 = {Advancements in technology have added to more complex demands of software development. The adoption of Agile practices to develop the software gives an adaptable environment to cater to the changes according to the client's requirements. In this paper we investigate the extent of adoption of agile practices with regard to the Indian IT Industry. We hosted a web based survey focusing on five major areas pertaining to adoption, self-organization, effect of agile, application domain of agile practices and the stakeholder interaction. We have found that adoption of agile practices affects the cost and increases the productivity.},
  Doi                      = {10.1109/CONFLUENCE.2016.7508196},
  Keywords                 = {Internet;software prototyping;Indian IT Industry;Web;agile practices;software development;Agile software development;Companies;Industries;Programming;Software;Stakeholders;adoption;agile practices;application domain;self organization;stakeholder interaction},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6612887,
  Title                    = {Continuous Delivery? Easy! Just Change Everything (Well, Maybe It Is Not That Easy)},
  Author                   = {S. Neely and S. Stolt},
  Booktitle                = {2013 Agile Conference},
  Year                     = {2013},
  Month                    = {Aug},
  Pages                    = {121-128},

  Abstract                 = {Rally Software transitioned from shipping code every eight-weeks, with time-boxed Scrum sprints, to a model of continuous delivery with Kanban. The team encountered complex challenges with their build systems, automated test suites, customer enablement, and internal communication. But there was light at the end of the tunnel - greater control and flexibility over feature releases, incremental delivery of value, lower risks, fewer defects, easier on-boarding of new developers, less off-hours work, and a considerable up tick in confidence. This experience report describes the journey to continuous delivery with the aim that others can learn from our mistakes and get their teams deploying more frequently. We will describe and contrast this transition from the business (product management) and engineering perspectives.},
  Doi                      = {10.1109/AGILE.2013.17},
  Keywords                 = {automatic test software;kanban;software engineering;Kanban;Rally Software;automated test suites;business product management;continuous software delivery;customer enablement;incremental delivery;internal communication;shipping code;time-boxed Scrum sprints;Companies;Monitoring;Planning;Production;Software;Testing},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7543176,
  Title                    = {An agile quality assurance framework for the development of fusion real-time applications},
  Author                   = {A. C. Neto and F. Sartori and R. Vitelli and L. Capellà and G. Ferrò and I. Herrero and H. Novella},
  Booktitle                = {2016 IEEE-NPSS Real Time Conference (RT)},
  Year                     = {2016},
  Month                    = {June},
  Pages                    = {1-7},

  Doi                      = {10.1109/RTC.2016.7543176},
  Keywords                 = {Tokamak devices;high energy physics instrumentation computing;plasma diagnostics;plasma toroidal confinement;Agile quality assurance framework;ITER real-time application;ITER software environment;MARTe software framework;MISRA-C++:2008 compliance;QA certifiable environment;fast plant systems;fusion real-time control system;industrial suppliers;multiplatform framework;scientific community;software quality assurance strategy;Computer architecture;Documentation;Encoding;Quality assurance;Real-time systems;Software;Standards;MARTe;Software quality assurance;control software;real-time},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6573035,
  Title                    = {Software bundling selection for Cloud virtual machine images},
  Author                   = {M. A. S. Netto and M. D. Assunção},
  Booktitle                = {2013 IFIP/IEEE International Symposium on Integrated Network Management (IM 2013)},
  Year                     = {2013},
  Month                    = {May},
  Pages                    = {575-581},

  Abstract                 = {Organisations and end-users are increasingly using Cloud resources to take advantage of the anticipated benefits of a more cost effective and agile IT infrastructure. Virtual machines are provisioned based on a selection of available images, which often contain the operating system and the software stack required by applications. When managing an image library, some of the challenges faced by a resource provider include (i) identifying the optimal number of virtual machine images that satisfy most user requirements, and (ii) bundling software systems into images to minimise the time to provision virtual machines and ease the selection of images from an end-user's perspective. Using a traditional data centre workload, this paper proposes an algorithm for selecting software bundles for virtual machine images and examines the impact of bundle selection on the number and characteristics of resulting images. The main finding is that creating a small set of virtual machine images packed with the most popular software systems is enough to drastically reduce the time to deploy the software stack required by applications, and hence minimise the time for provisioning virtual servers in a Cloud infrastructure.},
  ISSN                     = {1573-0077},
  Keywords                 = {cloud computing;computer centres;operating systems (computers);virtual machines;agile IT infrastructure;cloud resources;cloud virtual machine images;data centre workload;end user perspective;image library;operating system;resource provider;software bundling selection;software stack;software systems;Middleware;Servers;Software algorithms;Software packages;Software systems;Virtual machining},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7783191,
  Title                    = {Mobile Agile Peer Assisted Learning},
  Author                   = {N. R. Ngatirin and Z. Zainol and W. C. Fang},
  Booktitle                = {2016 3rd International Conference on Computer and Information Sciences (ICCOINS)},
  Year                     = {2016},
  Month                    = {Aug},
  Pages                    = {71-76},

  Abstract                 = {Student have difficulties in understanding programming concepts because they find learning programming and coding is difficult. Several approaches have been proposed to help students with the process of learning programming. In this paper we proposed Mobile Agile Peer Assisted Learning (M-APAL), a mobile system designed to assist students in managing and completing programming assignments/tasks given by lecturer. Besides that, it also helps students in learning introductory programming C++ with their peers. M-APAL is designed using both peer learning concept and agile methodology approach i.e SCRUM. It is implemented on Android mobile application. The language used is HTML5, CSS3, AngularJS, and JavaScript. The prototype of the application is successfully tested on first year students from the School of Computer Sciences and we found that the application helps the student to learn better with their peers using this platform.},
  Doi                      = {10.1109/ICCOINS.2016.7783191},
  Keywords                 = {C++ language;Java;computer aided instruction;computer science education;educational institutions;hypermedia markup languages;mobile learning;Android mobile application;AngularJS;C++ learning;CSS3;HTML5;JavaScript;M-APAL;SCRUM;School of Computer Sciences;coding learning;mobile agile peer assisted learning;programming assignments;programming concept understanding;programming learning;Collaborative work;Computers;Mobile communication;Programming profession;Schedules;Software;Agile;Mobile;Peer Learning;SCRUM},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7592787,
  Title                    = {Towards an Early Stage Software Startups Evolution Model},
  Author                   = {A. Nguyen-Duc and S. M. A. Shah and P. Ambrahamsson},
  Booktitle                = {2016 42th Euromicro Conference on Software Engineering and Advanced Applications (SEAA)},
  Year                     = {2016},
  Month                    = {Aug},
  Pages                    = {120-127},

  Abstract                 = {Startup process is a series of experiments before reaching a successful product. However, it is often difficult for startup founders to learn from their own experiences as well as from other startups. In order to capture the evolution of product and customer, we developed a theoretical model for early stage software startups. The model was adopted to describe five European software startups. Data was collected by interviews and documents. The model revealed the co-evolution patterns of product and customer knowledge. In addition, it discovers a common startup patterns among our cases, such as prototype-centric development and scale-up Agile. Last but not least, the model highlights signification pivots and possible relationship among them.},
  Doi                      = {10.1109/SEAA.2016.21},
  ISSN                     = {2376-9505},
  Keywords                 = {software development management;European software startups;coevolution patterns;customer knowledge;early stage software startups evolution model;product knowledge;prototype-centric development;startup founders;Software;Software engineering;customer development;empirical study;exploratory case study;prototyping;software startup evolution},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7860908,
  Title                    = {Optimization algorithm using scrum process},
  Author                   = {S. Nootyaskool and P. Ounsrimuang},
  Booktitle                = {2016 International Conference on Machine Learning and Cybernetics (ICMLC)},
  Year                     = {2016},
  Month                    = {July},
  Pages                    = {245-250},
  Volume                   = {1},

  Abstract                 = {Scrum process is methodology for software development. Members in a scrum team have self-organizing team by planning and sharing knowledge. This paper introduces optimization algorithm using the population as scrum team doing the scrum process to find an optimum solution. The proposed algorithm maintains the level of exploration and the exploitation search by specific of the scrum-team. The experiment has compared the proposed approach with GA and PSO by finding an optimal solution of five numerical functions. The experiment result indicates that the proposed algorithm provides the best solution and finds the result quickly.},
  Doi                      = {10.1109/ICMLC.2016.7860908},
  Keywords                 = {optimisation;planning (artificial intelligence);search problems;software engineering;team working;exploitation search;exploration search;knowledge planning;knowledge sharing;optimization algorithm;scrum process;self-organizing scrum team;software development;Biological cells;Cybernetics;Optimization;Scrum (Software development);Sociology;Software;Statistics;Evolutionary computation;Numerical function;Optimization technique;Scrum process},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7284597,
  Title                    = {Managing Technical Debt in Software Projects Using Scrum: An Action Research},
  Author                   = {F. Oliveira and A. Goldman and V. Santos},
  Booktitle                = {2015 Agile Conference},
  Year                     = {2015},
  Month                    = {Aug},
  Pages                    = {50-59},

  Abstract                 = {Ward Cunningham in his experience report presented at the OOPSLA'92 conference introduced the metaphor of technical debt. This metaphor is related to immature, incomplete or inadequate artifacts in the software development cycle that cause higher costs and lower quality. A strategy for the technical debt management is still a challenge because its definition is not yet part of the software development process. Carolyn Seaman and Yuepu Guo proposed a technical debt management framework based on three stages. First, debts are identified and listed. After that, debts are measured by their payment efforts and then debts are selected to be considered in the software development cycle. This study evaluates the application of this framework in the real context of software projects adopting Scrum. Action research is conducted in two companies where their projects have significant technical debt. We performed three action research cycles based on the three stages of the framework for both companies. The main contribution of this paper is to provide real experiences and improvements for projects using Scrum and that may adopt the technical debt management framework proposed by Seaman and Guo. Both teams recognized that the proposed approach is feasible for being considered in the software development process after some modifications. Because of projects time constraints and ease of use, we reduced the use of the proposed metrics to two: Principal and the Current Amount of Interest. In consequence, decision-making was benefitted by the early consideration of the debts that really need to be paid. Instead of using probabilities to find the interest, these are registered every time the technical debt occurs. During the first phase, the debts identification was improved when all Scrum roles participated, while measurement and decision-making were improved when the team was responsible for these phases. The Product Owner role in both companies understood the importance of Techni- al Debt monitoring and prioritization during a development cycle. With these changes, the two teams mentioned they would remain using the resulting approach.},
  Doi                      = {10.1109/Agile.2015.7},
  Keywords                 = {financial management;project management;software development management;Scrum;projects time constraints;software development cycle;software projects;technical debt management;technical debt monitoring;Companies;Decision making;Monitoring;Planning;Seminars;Software;Visualization;Scrum;Technical Debt;Technical Debt Management},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6575261,
  Title                    = {An exploratory analysis of the influence of information security on the adoption of cloud computing},
  Author                   = {O. J. Opala and S. M. Rahman},
  Booktitle                = {2013 8th International Conference on System of Systems Engineering},
  Year                     = {2013},
  Month                    = {June},
  Pages                    = {165-170},

  Abstract                 = {Cloud computing is the current IT buzzword synonymous with outsourced data center management and agile solution architecture. It has the potential to improve scalability of large enterprise network delivery of services and the capability to revolutionize how data is delivered as a service. At its core, cloud computing is not a new technology but rather a new approach of distributed shared pooling of IT infrastructure linked together to offer centralized IT services on demand. The study results determined that management's perception of security, cost-effectiveness and IT compliance factors significantly influence their decisions to adopt cloud computing. The results of multiple linear regression analysis testing in this study showed that management's perception of cost-effectiveness is more significantly correlated to their decision to adopt cloud computing than security.},
  Doi                      = {10.1109/SYSoSE.2013.6575261},
  Keywords                 = {cloud computing;conformance testing;regression analysis;security of data;statistical testing;IT compliance factors;agile solution architecture;centralized IT service on demand;cloud computing;distributed IT infrastructure shared pooling;exploratory analysis;information security;large enterprise network service delivery;management cost-effectiveness perception;management security perception;multiple linear regression analysis testing;outsourced data center management;Cloud computing;Computational modeling;Correlation;Information security;Organizations;Distributed computing;cloud security and cloud compliance;infrastructure-as-a-service;software-as-a-service},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@Article{7459632,
  Title                    = {Integrating Agile Methods into a Level 5 CMMI-DEV Organization: a Case Study},
  Author                   = {G. Arauz Ortiz and M. E. Morales Trujillo and H. Oktaba and E. Ramirez Hernandez},
  Journal                  = {IEEE Latin America Transactions},
  Year                     = {2016},

  Month                    = {March},
  Number                   = {3},
  Pages                    = {1440-1446},
  Volume                   = {14},

  Abstract                 = {Integrating new practices into software development processes requires previous research and planning; thus, the transition becomes easier, the maturity is achieved in a gradual but constant manner, and consequently, the organization fulfills its business objectives. This paper describes the experience of a Mexican software development organization that integrated agile methods into its CMMI-DEV level 5 development processes. This case study identifies and discusses quantitative and qualitative benefits related to the competitive level of the organization, enriched ways of working, optimization of resources and time, and encouraging a motivating working environment.},
  Doi                      = {10.1109/TLA.2016.7459632},
  ISSN                     = {1548-0992},
  Keywords                 = {Capability Maturity Model;software prototyping;CMMI-DEV level 5 development processes;Mexican software development organization;agile methods;level 5 CMMI-DEV organization;software development processes;Optimization;Organizations;Planning;Robustness;Scrum (Software development);Software;CMMI;agile;software development;software process improvement},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7059149,
  Title                    = {Choosing the Most Suitable Model for Developing a Software},
  Author                   = {S. L. Osmani and G. Arifi and F. Idrizi},
  Booktitle                = {2014 Sixth International Conference on Computational Intelligence, Communication Systems and Networks},
  Year                     = {2014},
  Month                    = {May},
  Pages                    = {83-88},

  Abstract                 = {There is a wide variety of models known that are used during the development of software. Each have its own strengths and weaknesses that based on the project team, availability of the resources, time and budget constraints, is suitable in different situations and types of projects. For choosing the most suitable model for software development the foremost thing is to know what kind of application we are developing, because this action determines the success or the failure of a project. In many cases the failure is the result of either not using a model at all or using the wrong model. This paper is dealing about different software process models by introducing and comparing three of them: waterfall, prototype and spiral model. It also indicates which one of them may be well-matched for use in various situations.},
  Doi                      = {10.1109/CICSyN.2014.30},
  Keywords                 = {software engineering;budget constraints;project failure;project team;software development;software engineering;software process models;spiral model;time constraints;Computational modeling;Documentation;Planning;Prototypes;Software;Software engineering;Spirals;Software development model;comparison of three model;most suitable model},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7784618,
  Title                    = {An Empirical Study on the Relationship between Software Security Skills, Usage and Training Needs in Agile Settings},
  Author                   = {T. D. Oyetoyan and D. S. Cruzes and M. G. Jaatun},
  Booktitle                = {2016 11th International Conference on Availability, Reliability and Security (ARES)},
  Year                     = {2016},
  Month                    = {Aug},
  Pages                    = {548-555},

  Abstract                 = {Organizations recognize that protecting their assets against attacks is an important business. However, achieving what is adequate security requires taking bold steps to address security practices within the organization. In the Agile software development world, security engineering process is unacceptable as it runs counter to the agile values. Agile teams have thus approached software security activities in their own way. To improve security within agile settings requires that management understands the current practices of software security activities within their agile teams. In this study, we use survey to investigate software security usage, competence, and training needs in two agile organizations. We find that (1) The two organizations perform differently in core software security activities but are similar when activities that could be leveraged for security are considered (2) regardless of cost or benefit, skill drives the kind of activities that are performed (3) Secure design is expressed as the most important training need by all groups in both organizations (4) Effective software security adoption in agile setting is not automatic, it requires a driver.},
  Doi                      = {10.1109/ARES.2016.103},
  Keywords                 = {security of data;software prototyping;agile software development;software security activity;software security skill;software security training needs;software security usage;Organizations;Programming;Security;Software;Standards organizations;Testing;Training;Agile software development;Empirical study;Software security;Software security activities},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6612882,
  Title                    = {Adapting Agile Methodology to Overcome Social Differences in Project Members},
  Author                   = {H. Ozawa and L. Zhang},
  Booktitle                = {2013 Agile Conference},
  Year                     = {2013},
  Month                    = {Aug},
  Pages                    = {82-87},

  Abstract                 = {Projects often consist with members with different values that may cause conflicts within the team causing decrease in members' motivation, involvement, and cohesiveness. In our experiences with off shoring Japanese software development projects to China, we were having difficulties with low quality deliverables and high turnover rate of Chinese members because of social differences. Our attempts to create a common culture were not very successful because people in general are less likely to change their basic views and behavior in a short period of time. We, however, were able to obtain success by acknowledging that differences are going to exist and adopting and adapting agile practices in consideration of the existence of these differences. We will show Kaizen as is used by a Japanese company in software development. We will focus on our experiences with social differences we've found and how we continuously adapted practices in our project to take better advantage of the situation as relationship between members changed. It is based on our over 10 years of experience in trying to improve a software package development at a software company in China, which has now become our subsidiary. During our attempts, we have learned the importance of agile mentality in resolving value difference issues. We believe what we've learned in adapting agile practices is not just limited to our particular project but can be useful in agile projects in general and thus can be used to assist resolve value differences in organizations as well.},
  Doi                      = {10.1109/AGILE.2013.13},
  Keywords                 = {cultural aspects;human factors;project management;social sciences;software development management;software houses;software packages;software prototyping;team working;Chinese members;Japanese company;Japanese software development project offshoring;Kaizen;agile mentality;agile methodology;agile practices;agile projects;member cohesiveness;member involvement;member motivation;project member values;social differences;software company;software package development;value difference issues;Companies;Cultural differences;Indexes;Planning;Software;Uncertainty;Scrum;collaboration;communication;distributed project;global software development;offshore;outsourcing;socioculture},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7467290,
  Title                    = {Risks, Challenges and Issues in a Possible Scrum and COBIT Marriage},
  Author                   = {N. Ozkan},
  Booktitle                = {2015 Asia-Pacific Software Engineering Conference (APSEC)},
  Year                     = {2015},
  Month                    = {Dec},
  Pages                    = {111-118},

  Abstract                 = {Today's turbulent business environment is compelling software development providers to face several challenges. As a response to this case, adoption of Scrum methods is increasing. COBIT, on the other side, has domination in information technology (IT) and is a de-facto standard providing an IT governance model with international set of generally accepted IT control objectives. Considered the coverage of Scrum and COBIT (version 4.1 in this case), a coexistence of them in a same organization has a possibility of emergence for organizations that want to use Scrum in their COBIT environments. While a rationalized, engineering-based approach has dominated software development almost since its inception and has a co-occurrence and similarities with COBIT, melting COBIT and Scrum in an organization is very new and can be an intriguing subject. This study holds the aim of shedding light on organizations by focusing on the identification of risks, challenges and issues of Scrum implementation within a COBIT environment. This study works as a risk map for organizations that have opportunity to tailor COBIT. It also exhibits a list of challenges for organizations that must fully comply with COBIT framework.},
  Doi                      = {10.1109/APSEC.2015.29},
  Keywords                 = {software engineering;COBIT marriage;Scrum methods;control objectives for information and related technology;information technology;software development;Documentation;Face;Organizations;Planning;Scrum (Software development);Software;Standards organizations;Agile;COBIT;Scrum;software development},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6915250,
  Title                    = {Towards Rapid Releases in Large-Scale XaaS Development at Ericsson: A Case Study},
  Author                   = {M. Paasivaara and B. Behm and C. Lassenius and M. Hallikainen},
  Booktitle                = {2014 IEEE 9th International Conference on Global Software Engineering},
  Year                     = {2014},
  Month                    = {Aug},
  Pages                    = {16-25},

  Doi                      = {10.1109/ICGSE.2014.22},
  ISSN                     = {2329-6305},
  Keywords                 = {cloud computing;object-oriented programming;product development;research and development;software prototyping;team working;Ericsson;Internet;R&D organization;R&D product development program;XaaS platform;agile software development;agile teams;cloud computing;component-based virtual teams;cross-component teams;cross-functional teams;cross-site teams;end-to-end development;everything-as-a-service;large-scale XaaS development;lean software development;Communities;Companies;Interviews;Software;Springs},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7577422,
  Title                    = {Scaling Scrum in a Large Globally Distributed Organization: A Case Study},
  Author                   = {M. Paasivaara and C. Lassenius},
  Booktitle                = {2016 IEEE 11th International Conference on Global Software Engineering (ICGSE)},
  Year                     = {2016},
  Month                    = {Aug},
  Pages                    = {74-83},

  Abstract                 = {We present a case study on scaling Scrum in a large globally distributed software development project at Nokia, a global telecommunications company. We discuss how the case project scaled Scrum while growing from two collocated Scrum teams to 20 teams located in four countries and employing a total of 170 persons. Moreover, we report scaling challenges the case project faced during this 2,5 year journey. We gathered data by 19 semi-structured interviews of project personnel from two sites, interviewees comprising different roles including managers, architects, product owners, developers and testers. The project was highly successful from the business point of view, as agile enabled fast response to customer requirements. However, the project faced significant challenges in scaling Scrum despite attempts at applying the Large-scale Scrum (LeSS) framework. The organization experimented with different ways of implementing scaling practices like implementing common sprint planning meetings, Scrum-of-Scrums meetings, common demos and common retrospectives, as well as scaling the Product Owner role. We conclude the paper by reflecting on the scaling approach used in the case organization in contrast to the LeSS framework.},
  Doi                      = {10.1109/ICGSE.2016.34},
  ISSN                     = {2329-6313},
  Keywords                 = {software development management;software prototyping;LeSS framework;globally distributed software development;large-scale Scrum framework;scaling approach;Companies;Industries;Interviews;Scrum (Software development);Software;Telecommunications;LeSS;agile transformation;large-scale agile},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6910401,
  Title                    = {Deepening Our Understanding of Communities of Practice in Large-Scale Agile Development},
  Author                   = {M. Paasivaara and C. Lassenius},
  Booktitle                = {2014 Agile Conference},
  Year                     = {2014},
  Month                    = {July},
  Pages                    = {37-40},

  Doi                      = {10.1109/AGILE.2014.18},
  Keywords                 = {personnel;software development management;software prototyping;CoPs;communities of practice;knowledge sharing;large-scale agile software development;lean development;software development organization;waterfall model;Agile software development;Buildings;Communities;Context;Organizations;Software;Software engineering;Scrum;communities of practice;large-scale agile development},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6613078,
  Title                    = {Integrating Global Sites into the Lean and Agile Transformation at Ericsson},
  Author                   = {M. Paasivaara and C. Lassenius and V. T. Heikkilä and K. Dikert and C. Engblom},
  Booktitle                = {2013 IEEE 8th International Conference on Global Software Engineering},
  Year                     = {2013},
  Month                    = {Aug},
  Pages                    = {134-143},

  Doi                      = {10.1109/ICGSE.2013.25},
  ISSN                     = {2329-6305},
  Keywords                 = {software prototyping;Ericsson;agile development;cross-site visits;cultural differences;global sites;large organizations;lean thinking;organizational levels;plan-driven process;Companies;Data collection;Interviews;Planning;Software;Training},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7480122,
  Title                    = {Applying agile practices to avoid chaos in User Acceptance Testing: A case study},
  Author                   = {K. V. Jeeva Padmini and I. Perera and H. M. N. Dilum Bandara},
  Booktitle                = {2016 Moratuwa Engineering Research Conference (MERCon)},
  Year                     = {2016},
  Month                    = {April},
  Pages                    = {96-101},

  Abstract                 = {Agile practices have gained increasing popularity in Information Technology (IT), Education, Marketing, and Advertising industry, as it brings quality products into the market faster. Scrum, Lean Development, and Extreme Programming are the most commonly considered processes under the Agile umbrella. Scrum or scrum variants form a high performance, collaborative team to handle projects that are more complex. We examine the applicability of the scrum framework to a large-scale revenue management system for User Acceptance Testing (UAT). Industry believes integration and acceptance testing is not easy to perform within the scrum framework. Nevertheless, very little is explored about the acceptance testing in Agile practices. We fill this gap by empirically evaluating UAT of a complex, large-scale system (in a public sector organization) to showcase the applicability of scrum framework. While the initial UAT team consisted of 100 domain experts, no process was defined for the UAT. This made it easier to streamline the UAT into the scrum framework. Once the scrum framework was introduced significant improvements in the UAT team was experienced with improved morale, productivity, efficiency, and time to market while having a smooth flow.},
  Doi                      = {10.1109/MERCon.2016.7480122},
  Keywords                 = {program testing;software houses;software prototyping;UAT;acceptance testing;agile practices;complex-large-scale system;efficiency improvement;large-scale revenue management system;morale improvement;productivity improvement;public sector organization;scrum framework;time-to-market improvement;user acceptance testing;Interviews;Productivity;Software;Stakeholders;Testing;Training;agile practice;agile testing;scrum framework;user acceptance testing},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6614478,
  Title                    = {Towards widespread SDN adoption: Need for synergy between photonics and SDN within the data center},
  Author                   = {V. Pandey},
  Booktitle                = {2013 IEEE Photonics Society Summer Topical Meeting Series},
  Year                     = {2013},
  Month                    = {July},
  Pages                    = {227-228},

  Abstract                 = {This paper looks at the use of photonics in future data center networks and stresses the need for SDN Controller and concepts - programmability, virtualization and end-to-end optimization - to control, manage and automate these elements to enable an optimized, elastic and agile data center.},
  Doi                      = {10.1109/PHOSST.2013.6614478},
  ISSN                     = {1099-4742},
  Keywords                 = {computer centres;software radio;data center networks;photonics;software defined networking;Bandwidth;Network topology;Optical packet switching;Optical switches;Photonics;Topology;Virtualization;Software Defined Networking (SDN);hybrid packet-optical switches;network virtualization;overlays;silicon photonics;traffic engineering},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6986022,
  Title                    = {Hidden facilitators of agile transition: Agile coaches and agile champions},
  Author                   = {R. M. Parizi and T. J. Gandomani and M. Z. Nafchi},
  Booktitle                = {2014 8th. Malaysian Software Engineering Conference (MySEC)},
  Year                     = {2014},
  Month                    = {Sept},
  Pages                    = {246-250},

  Abstract                 = {Prevalence of Agile methods in software companies is increasing. Software companies need to employ these methods to overcome the inherent challenges of traditional methods. However, transitioning to Agile approach is a topic of debate and needs to be supported by appropriate facilitators. Conducting a large-scale research study, revealed the most important Agile transition facilitators. This paper solely presents two hidden facilitators of Agile transition, Agile coaches and Agile champions, which rarely have been taken into consideration. Both of these facilitators directly impress the people involved in the transition. People-intensive nature of Agile methods and critical role of the people in the transition process reflect the importance of these facilitators when a software company is in the transition process. This study showed that considering these facilitators when can highly impress the success of the transition and revealed the real responsibilities of Agile coaches and Agile champions when transitioning to Agile.},
  Doi                      = {10.1109/MySec.2014.6986022},
  Keywords                 = {software prototyping;agile champions;agile coaches;agile methods;agile transition facilitators;software companies;Agile software development;Collaboration;Companies;Educational institutions;Software;Software engineering;Agile champions;Agile coaches;Agile software development;Agile transformation;Agile transition;Grounded Theory;Software Engineering},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6676222,
  Title                    = {Efficiency factor and risk factor based user case point test effort estimation model compatible with agile software development},
  Author                   = {A. W. M. M. Parvez},
  Booktitle                = {2013 International Conference on Information Technology and Electrical Engineering (ICITEE)},
  Year                     = {2013},
  Month                    = {Oct},
  Pages                    = {113-118},

  Abstract                 = {In software outsourcing industry, to win a contract, outsourcing companies need to consider the price that they will introduce to customers. Therefore, estimation has played an important role in any type of software project and as well as for test projects. Particularly, the estimation of testing has been more critical and magnitude as companies need to present or bid their prices on the project to win the outsourcing contract. Wrong estimation can negatively affect the company sales in both ways. On the one side, the profit margin could be reduced or hurt when the bidding is less than that real effort. On the other side, the company could lose the project when the bidding is higher than that of competitors. Therefore, it is extremely necessary to apply economic and systematic estimation model or process to enhance the accuracy in estimation. The integration of highly skilled workforce and accurate test effort estimation software will provide significant benefits to companies. Up to now, there are various existing models of test effort estimation, yet use case point estimation is one of the most popular models in the agile software development industry. The present paper aims to investigate the use case point estimation model. Following the analysis, we have developed two important elements namely, efficiency and risk factor based on a new layer in the model developed by us. The benefit of the new model is to increase the performance and effectiveness of the use case point estimation model.},
  Doi                      = {10.1109/ICITEED.2013.6676222},
  Keywords                 = {contracts;outsourcing;profitability;risk management;software cost estimation;software prototyping;agile software development industry;economic model;outsourcing contract;profit margin;software outsourcing industry;software project;systematic estimation model;user case point test effort estimation model;Outsourcing;Software estimation;agile development;efficiency factor;risk factor;use case point estimation},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6825237,
  Title                    = {An adaptable patient-centric electronic health record system for personalized home care},
  Author                   = {F. Patara and E. Vicario},
  Booktitle                = {2014 8th International Symposium on Medical Information and Communication Technology (ISMICT)},
  Year                     = {2014},
  Month                    = {April},
  Pages                    = {1-5},

  Abstract                 = {The increasing ageing of population and the prevalence of chronic diseases push the adoption of home care processes that can delay or discontinue the access to hospitalization and specialized structures. To this end, ICT plays a crucial enabling role providing a growing ecosystem of diagnostic and monitoring devices, communication networks, and information management applications. As a part of this, advanced software architectures provide means for effective integration and management of clinical data produced by a variety of sources and accessed by a variety of actors involved in the care process. We describe the software architecture of an Electronic Health Record (EHR) system that exploits the Reflection architectural pattern to allow agile tailoring for the needs of different medical specialties. We then show how this adaptability can be further exploited to face a number of challenging requirements posed by the context of home care, including: patient-centric personalization of the record structure; user-adapted content presentation; automated support for compliance verification; systems medicine connection of clinical observations pertaining to different specialties; integration of users observations and data streams acquired from remote monitoring devices.},
  Doi                      = {10.1109/ISMICT.2014.6825237},
  ISSN                     = {2326-828X},
  Keywords                 = {electronic health records;medical computing;patient care;software architecture;telemedicine;ICT;Reflection architectural pattern;adaptable patient-centric EHR system;advanced software architectures;clinical data integration;clinical data management;compliance verification automated support;data streams;electronic health record system;home care processes;personalized home care;record structure patient-centric personalization;remote monitoring devices;systems medicine connection;user adapted content presentation;Context;Diseases;Electronic medical records;Medical diagnostic imaging;Monitoring;Software architecture;Electronic Health Record (EHR) system;Home care;Reflection architectural pattern;adaptable systems;personalized medicine},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7070423,
  Title                    = {Do Daily Scrums Have to Take Place Each Day? A Case Study of Customized Scrum Principles at an E-commerce Company},
  Author                   = {D. Pauly and B. Michalik and D. Basten},
  Booktitle                = {2015 48th Hawaii International Conference on System Sciences},
  Year                     = {2015},
  Month                    = {Jan},
  Pages                    = {5074-5083},

  Abstract                 = {Agile development approaches, such as Scrum, continue to gain importance in today's world. Since previous research has predominantly treated development approaches as a black box, we answer the call for empirical research concerning adoption of agile methods. The study's aim is to assess the adoption or adaption of Scrum principles at an e-commerce company. The findings of our in-depth single case study reveal that not all Scrum principles are suitable in each context. By discussing the reasons for adopting or adapting the principles, we contribute to a deeper understanding of agile methods and help to open the black box of development approaches in information systems research. The in-depth insights gained at our case company provide practitioners a useful reference for adapting agile methods to their specific contexts.},
  Doi                      = {10.1109/HICSS.2015.601},
  ISSN                     = {1530-1605},
  Keywords                 = {electronic commerce;software prototyping;Scrum principles;agile development approach;agile method;e-commerce company;information system research;Collaboration;Companies;Context;Interviews;Planning;agile methods;case study;development approaches;information systems;scrum},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7494352,
  Title                    = {The methodological approach to software key modules for 20GHz agile microwave signal generator},
  Author                   = {Wang Peng and S. Liu},
  Booktitle                = {2015 12th IEEE International Conference on Electronic Measurement Instruments (ICEMI)},
  Year                     = {2015},
  Month                    = {July},
  Pages                    = {899-902},
  Volume                   = {02},

  Abstract                 = {Based on the agile signal generator, the paper places emphasis on two key modules of software, the user interface module and the baseband & data control module. Firstly, with the concept of object-oriented analysis in mind, we presents the realization of efficient and intuitionistic graph user interface, then introduces the basic concept, design requirements for baseband and data control. Then we focus on the data structure and algorithm of the control module. This software is now being used in agile signal generator and gain well replies.},
  Doi                      = {10.1109/ICEMI.2015.7494352},
  Keywords                 = {Baseband;Frequency control;Frequency modulation;Instruments;Signal generators;Software;UI;control software;frequency agile;signal generator},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7956044,
  Title                    = {Understand Your Chains: Towards Performance Profile-Based Network Service Management},
  Author                   = {M. Peuster and H. Karl},
  Booktitle                = {2016 Fifth European Workshop on Software-Defined Networks (EWSDN)},
  Year                     = {2016},
  Month                    = {Oct},
  Pages                    = {7-12},

  Abstract                 = {Allocating resources to virtualized network functions and services to meet service level agreements is a challenging task for NFV management and orchestration systems. This becomes even more challenging when agile development methodologies, like DevOps, are applied. In such scenarios, management and orchestration systems are continuously facing new versions of functions and services which makes it hard to decide how much resources have to be allocated to them to provide the expected service performance. One solution for this problem is to support resource allocation decisions with performance behavior information obtained by profiling techniques applied to such network functions and services. In this position paper, we analyze and discuss the components needed to generate such performance behavior information within the NFV DevOps workflow. We also outline research questions that identify open issues and missing pieces for a fully integrated NFV profiling solution. Further, we introduce a novel profiling mechanism that is able to profile virtualized network functions and entire network service chains under different resource constraints before they are deployed on production infrastructure.},
  Doi                      = {10.1109/EWSDN.2016.9},
  Keywords                 = {Measurement;Monitoring;Production;Resource management;Runtime;Topology;5g;benchmarking;devops;emulation;network function virtualization;network management;profiling;resource management;sdn},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7856583,
  Title                    = {Large pages and lightweight memory management in virtualized environments: Can you have it both ways?},
  Author                   = {B. Pham and J. Veselý and G. H. Loh and A. Bhattacharjee},
  Booktitle                = {2015 48th Annual IEEE/ACM International Symposium on Microarchitecture (MICRO)},
  Year                     = {2015},
  Month                    = {Dec},
  Pages                    = {1-12},

  Abstract                 = {Large pages have long been used to mitigate address translation overheads on big-memory systems, particularly in virtualized environments where TLB miss overheads are severe. We show, however, that far from being a panacea, large pages are used sparingly by modern virtualization software. This is because large pages often preclude lightweight memory management, which can outweigh their Translation Look aside Buffer (TLB) benefits. For example, they reduce opportunities to de duplicate memory among virtual machines in overcommitted systems, interfere with lightweight memory monitoring, and hamper the agility of virtual machine (VM) migrations. While many of these problems are particularly severe in overcommitted systems with scarce memory resources, they can (and often do) exist generally in cloud deployments. In response, virtualization software often (though it doesn't have to) splinters guest operating system (OS) large pages into small system physical pages, sacrificing address translation performance for overall system-level benefits. We introduce simple hardware that bridges this fundamental conflict, using speculative techniques to group contiguous, aligned small page translations such that they approach the address translation performance of large pages. Our Generalized Large-page Utilization Enhancements (GLUE) allow system hypervisors to splinter large pages for agile memory management, while retaining almost all of the TLB performance of unsplintered large pages.},
  Doi                      = {10.1145/2830772.2830773},
  Keywords                 = {operating systems (computers);storage management;GLUE;TLB;address translation overheads;big-memory systems;generalized large-page utilization enhancements;lightweight memory management;operating system;translation look aside buffer;virtual machine;Cloud computing;Containers;Hardware;Memory management;Servers;Virtual machine monitors;Virtualization;Speculation;TLB;Virtual Memory;Virtualization},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6568385,
  Title                    = {Patterns of a cooperative malware analysis workflow},
  Author                   = {D. Plohmann and S. Eschweiler and E. Gerhards-Padilla},
  Booktitle                = {2013 5th International Conference on Cyber Conflict (CYCON 2013)},
  Year                     = {2013},
  Month                    = {June},
  Pages                    = {1-18},

  Abstract                 = {In recent years, an ever-increasing number of IT security incidents have been observed, often involving malicious software. In order to cope with the threat posed, it is essential to have a structured analysis workflow for assessment and mitigation. In this paper, we give a thorough explanation of the malware analysis workflow specified and employed by our team of analysts. It was deducted from observed work patterns and best practices with a strong focus on enabling collaboration, i.e. analyses conducted by multiple analysts in parallel in order to achieve a speed-up. The proposed workflow starts at the point where one or more malware samples have already been extracted. It consists of four phases as a whole, each with its own goals, constraints, and abort conditions. The first phase aims at gaining an overview of the current situation and specifying goals of the analysis and their respective priorities. The second phase features a preliminary analysis used to sharpen the picture of the threat, using methods of Open Source Intelligence (OSINT) and automated tools in order to obtain a quick assessment enabling first mitigation. In addition, one objective is to facilitate and prepare a more granular dissection of the malware sample, e.g. by unpacking and deobfuscation. The third phase comprises an in-depth analysis relying heavily on reverse engineering of selected parts of the malware. The selection may be influenced by earlier findings or focus on prominent aspects like nesting, functionality, or communication protocols. The final phase builds upon the results of the preceding phases, leading to tailored mitigation concepts for the specimen analysed. For each of the proposed phases, we give an overview of potential key tools, e.g. helping to gain information or improve collaboration. On a higher level, we highlight challenges to cooperative analysis and our approach to handle them. In this regard, the workflow contains adoptions of principles known from agile soft- are development methodologies. For example, Scrum is used for management of tasks and coordination, aiding the creation of a reproducible and reliable chain of results.},
  ISSN                     = {2325-5366},
  Keywords                 = {groupware;invasive software;reverse engineering;software prototyping;IT security incident;OSINT;agile software development;cooperative malware analysis workflow;malicious software;open source intelligence;reverse engineering;Best practices;Charge coupled devices;Collaboration;Documentation;Inspection;Malware;Software;cooperation;malware analysis;workflow},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7809512,
  Title                    = {Are the Old Days Gone? A Survey on Actual Software Engineering Processes in Video Game Industry},
  Author                   = {C. Politowski and L. Fontoura and F. Petrillo and Y. G. Guéhéneuc},
  Booktitle                = {2016 IEEE/ACM 5th International Workshop on Games and Software Engineering (GAS)},
  Year                     = {2016},
  Month                    = {May},
  Pages                    = {22-28},

  Abstract                 = {In the past 10 years, several researches studied video game development process who proposed approaches to improve the way how games are developed. These approaches usually adopt agile methodologies because of claims that traditional practices and the waterfall process are gone. However, are the ``old days" really gone in the game industry? In this paper, we present a survey of software engineering processes in video game industry from postmortem project analyses. We analyzed 20 postmortems from Gamasutra Portal. We extracted their processes and modelled them through using the Business Process Model and Notation (BPMN). This work presents three main contributions. First, a postmortem analysis methodology to identify and extract project processes. Second, the study main result: the ``old days" are gone, but not completely. Iterative practices are increasing and are applied to at least 65% of projects in which 45% of this projects explicitly adopted Agile practices. However, waterfall process is still applied at least 30% of projects. Finally, we discuss some implications, directions and opportunities for video game development community.},
  Doi                      = {10.1109/GAS.2016.012},
  Keywords                 = {computer games;software engineering;BPMN;Gamasutra portal;business process model-and-notation;software engineering processes;video game development process;video game industry;Analytical models;Business;Games;Industries;Production;Software;Software engineering},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7577440,
  Title                    = {Scrumconix: Agile and Documented Method to AGSD},
  Author                   = {L. T. Portela and G. Borrego},
  Booktitle                = {2016 IEEE 11th International Conference on Global Software Engineering (ICGSE)},
  Year                     = {2016},
  Month                    = {Aug},
  Pages                    = {195-196},

  Abstract                 = {Many companies have adopted agile software development (ASD), mainly due to it can handle scarce requirements. However, some unsolved challenges exist in ASD, particularly in global software development (GSD) companies (known as AGSD). These challenges include ASD lax documentation contrasted by the methodological standardization required in GSD, due to its inherent distances. Lax documentation leads to documentation debt and architectural knowledge (AK) vaporization, which cause negative effects on the development process and on the product itself. In order to reduce these effects, we propose Scrumconix, a hybrid method that uses a lightweight approach to document in AGSD environments, which also aims to decrease the effect of linguistic and cultural distances. In addition, we present preliminary results of Scrumconix implementation in a Mexican AGSD company.},
  Doi                      = {10.1109/ICGSE.2016.39},
  ISSN                     = {2329-6313},
  Keywords                 = {formal specification;formal verification;software prototyping;standardisation;system documentation;ASD lax documentation;Mexican AGSD company;Scrumconix;agile software development;architectural knowledge vaporization;development process;documentation debt;documented method;global software development;scarce requirements handling;standardization;Companies;Documentation;Estimation;Robustness;Software;Unified modeling language;Variable speed drives;ICONIX;Scrum;agile global software development;architectural knowledge vaporization;documentation debt},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6637469,
  Title                    = {ScrumTutor: A web-based interactive tutorial for Scrum Software development},
  Author                   = {S. Potineni and S. K. Bansal and A. Amresh},
  Booktitle                = {2013 International Conference on Advances in Computing, Communications and Informatics (ICACCI)},
  Year                     = {2013},
  Month                    = {Aug},
  Pages                    = {1884-1890},

  Abstract                 = {In a traditional software engineering class, students are typically engaged in theoretical lectures followed by homework assignments or a project. Use of hands-on training and laboratory activities using real-world projects is more likely to produce students with a higher level of achievement and more confidence in the course material. If every topic or technique introduced in the course has a corresponding hands-on activity that demonstrates an application or use of the concept in the industry, students better understand the need for the technique and the learning environment is more interactive, engaging, and interesting to students. This paper presents a project called ScrumTutor that aims at providing an engaging learning experience of Scrum Software development process through a web-based Interactive tutorial. It is designed and developed for undergraduate students in introductory Software Engineering courses. This software tool introduces its users to modern software engineering methodology used these days in the software industry known as Agile Software Development that includes the Scrum framework for managing software projects or products.},
  Doi                      = {10.1109/ICACCI.2013.6637469},
  Keywords                 = {computer aided instruction;computer science education;educational courses;software engineering;Scrum software development;ScrumTutor project;Web-based interactive tutorial;agile software development;learning experience;software engineering class;software engineering course;software product management;software project management;Databases;Education;Games;Planning;Software;Software engineering;Tutorials;Agile Software Development;Scrum;Software Engineering Education;Web-based interactive tutorial},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7427857,
  Title                    = {Sensemaking and Complexity in Large-Scale Lean-Agile Transformation: A Case Study from Cisco},
  Author                   = {K. Power},
  Booktitle                = {2016 49th Hawaii International Conference on System Sciences (HICSS)},
  Year                     = {2016},
  Month                    = {Jan},
  Pages                    = {5417-5426},

  Abstract                 = {For organizations undergoing agile and lean transformation, it can be difficult to get meaningful, actionable insights into progress and impediments. Teams and organizations are best understood as complex adaptive human systems. Understanding what is happening in such systems requires approaches grounded in the complexity sciences and social sciences. This paper describes an approach using complexity science and sensemaking that helps an organization understand its culture, how it is progressing with its strategic initiatives, and the types of impediments that are holding it back. It provides a means of qualitative and quantitative analysis that helps teams and organizations improve. This paper also correlates the experiences of the people in the organization to its goals of being a more agile organization.},
  Doi                      = {10.1109/HICSS.2016.669},
  ISSN                     = {1530-1605},
  Keywords                 = {software development management;software prototyping;Cisco;agile organization;complex adaptive human system;complexity science;large-scale lean-agile transformation;sensemaking;social science;Adaptive systems;Complexity theory;Context;Measurement;Organizations;Software;agile;complexity;culture;flow;impediments;lean;narrative;organizations;sensemaking;strategy;teams;transformation},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6910402,
  Title                    = {Impediment Impact Diagrams: Understanding the Impact of Impediments in Agile Teams and Organizations},
  Author                   = {K. Power},
  Booktitle                = {2014 Agile Conference},
  Year                     = {2014},
  Month                    = {July},
  Pages                    = {41-51},

  Abstract                 = {Achieving a smooth flow of work through the system is a goal for many teams and organizations that embrace agile and lean approaches. However, the flow of work faces many impediments as it flows through teams and organizations. Agile and lean approaches can reveal impediments that impact teams and organizations. Often at the start of their agile transition, but also frequently after the initial transition, teams and organizations can find themselves with a significant quantity of impediments that demand attention. With limited time and capacity, they need techniques to help them understand the impediments and make decisions about where to invest their time. This paper introduces a new technique called Impediment Impact Diagrams that helps people to understand which impediments to address, and who needs to be involved in addressing them. The technique can also be used to understand other attributes of impediments such as the relative cost of removing the impediment, or the relative duration it is likely to take to remove the impediments. The Impediment Impact Diagram can be used on its own or as part of an Impediment Removal Process. Drawing from original research on impediment removal, this paper includes detailed steps to use the technique, presents several examples of Impediment Impact Diagrams from multiple teams and organizations, and describes their experiences with the technique.},
  Doi                      = {10.1109/AGILE.2014.21},
  Keywords                 = {software prototyping;agile organizations;agile teams;agile transition;impediment impact diagrams;impediment removal process;Adaptation models;Adaptive systems;Conferences;Context;Europe;Organizations;action research;adaptive action;agile;capacity;decision making;flow;human systems dynamics;impediment;impediment categories;impediment impact diagram;lean;stakeholder;visualization;waste},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@Article{6717169,
  Title                    = {An Agile Digital Radio System for UHF White Spaces},
  Author                   = {A. Prata and A. S. R. Oliveira and N. B. Carvalho},
  Journal                  = {IEEE Microwave Magazine},
  Year                     = {2014},

  Month                    = {Jan},
  Number                   = {1},
  Pages                    = {92-97},
  Volume                   = {15},

  Abstract                 = {In recent years, we have experienced an impressive spread of mobile communications as well as the emergence of new communication protocols. This lead to an overutilization of some spectrum bands, while the utilization of other bands is sometimes minimal or insignificant. The exploration of the white spaces concept, which represents the unused portions of the spectrum, mainly due to the shutdown of analog TV transmissions, has arisen as a solution for spectrum reuse. Currently, the electromagnetic spectrum is statically allocated, associating each technology to a particular frequency band, which leads to an inefficient use of the spectrum. Thus, it would be advantageous to change the way the electromagnetic spectrum is accessed, adopting a dynamic access paradigm-dynamic spectrum access (DSA). However, for this to be possible, in addition to regulatory changes, it is necessary that the radio physical layer becomes flexible and adaptable, enabling the efficient configuration of various parameters such as transmit frequency and power, modulation, and bandwidth, among others. The well-known concepts or paradigms of software defined radio (SDR) and cognitive radio (CR) are precisely the key to meeting these requirements. Based on these concepts, it will be possible to build a smart, adaptable, efficient, self-aware, and self-learning radio that could easily implement the DSA paradigm [1].},
  Doi                      = {10.1109/MMM.2013.2288809},
  ISSN                     = {1527-3342},
  Keywords                 = {UHF radio propagation;cognitive radio;mobile radio;protocols;software radio;CR;DSA;SDR;UHF white spaces;agile digital radio system;analog TV transmissions;cognitive radio;communication protocols;dynamic access paradigm dynamic spectrum access;electromagnetic spectrum;mobile communications;radio physical layer;software defined radio;white spaces concept;Band-pass filters;Field programmable gate arrays;Frequency shift keying;Mobile communication;Radio frequency;Receivers;Synchronization;UHF communication;White spaces},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7733456,
  Title                    = {Adopting collaborative games into Open Kanban},
  Author                   = {A. Przybylek and M. K. Olszewski},
  Booktitle                = {2016 Federated Conference on Computer Science and Information Systems (FedCSIS)},
  Year                     = {2016},
  Month                    = {Sept},
  Pages                    = {1539-1543},

  Abstract                 = {The crucial element of any agile project is people. Not surprisingly, principles and values such as “espect for people”, “Communication and Collaboration”, “Lead using a team approach”, and “Learn and improve continuously” are an integral part of Open Kanban. However, Open Kanban has not provided any tools or techniques to aid the human side of software development. Moreover, as a Lean initiative, it is not as comprehensively defined process as Scrum or XP. Accordingly, inexperienced Kanban teams may feel a bit lost. To deal with these challenges, we propose an extension to Open Kanban, which contains a set of 12 collaborative games. The feedback received from three Kanban teams who leveraged our extension in commercial projects, indicates that the adopted games improved participants' communication, commitment, motivation and creativity.},
  Keywords                 = {computer games;groupware;kanban;software prototyping;Open Kanban;agile software development;collaborative games;Context;Games;Limiting;Organizations;Software;Teamwork},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7133548,
  Title                    = {A Reusable Automated Acceptance Testing Architecture for Microservices in Behavior-Driven Development},
  Author                   = {M. Rahman and J. Gao},
  Booktitle                = {2015 IEEE Symposium on Service-Oriented System Engineering},
  Year                     = {2015},
  Month                    = {March},
  Pages                    = {321-325},

  Abstract                 = {Cloud Computing and Mobile Cloud Computing are reshaping the way applications are being developed and deployed due to their unique needs such as massive scalability, guaranteed fault tolerance, near zero downtime, etc. and also daunting challenges such as security, reliability, continuous deployment and update capability. Microservices architecture, where application is composed of a set of independently deployable services, is increasingly becoming popular due to its capability to address most of these needs and challenges. In recent years, the Behavior-Driven Development (BDD) has become one of the most popular agile software development processes, and frequently used in microservices development. The key to success of BDD is the executable acceptance tests that describe the expected behavior of a feature and its acceptance criteria in the form of scenarios using simple and business people readable syntax. The reusability, auditability, and maintainability become some of the major concerns when BDD test framework is applied for each microservice repository and no previous research addresses these concerns. In this paper, we present a reusable automated acceptance testing architecture to address all these concerns.},
  Doi                      = {10.1109/SOSE.2015.55},
  Keywords                 = {cloud computing;mobile computing;program testing;software prototyping;BDD test framework;agile software development process;behavior-driven development;cloud computing;mobile cloud computing;reusable automated acceptance testing architecture;Boolean functions;Business;Data structures;Maintenance engineering;Software;Testing;executable automated acceptance testing; Gherkin; functional testing; behavior-driven development; microservice},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6899279,
  Title                    = {Media Supported Workspaces in Agile Software Development: Doctoral Symposium Paper},
  Author                   = {F. Raith and R. Lindermeier},
  Booktitle                = {2014 IEEE 38th Annual Computer Software and Applications Conference},
  Year                     = {2014},
  Month                    = {July},
  Pages                    = {630-633},

  Abstract                 = {The use of software tools has become a common practice in global software engineering to handle requirements and to exchange project status amongst distributed teams and stakeholders. In context of agile software development the replacement of paper-based media (e.g. Task Board) with software tools results in heavily decreased collaboration and transparency within agile teams. Since the number of agile projects in global context increases, it is necessary to find an adequate solution to share project status without influencing the underlying agile process in a negative way. The proposed research project investigates why the replacement of paper-based media has such strong influence on group work in agile teams. Thereby, the focus of research is on the agile Task Board as the most important example for paper-based media of agile workspaces. With help of these findings we will develop a conceptual and technical solution, based on optical tracking of a paper-based Task Board, to share project status amongst stakeholders. The paper introduces the current state of the art, corresponding research questions, the entire research methods and current progress of our research.},
  Doi                      = {10.1109/COMPSAC.2014.46},
  Keywords                 = {software prototyping;agile software development;agile task board;global software engineering;media supported workspace;optical tracking;paper-based media;software tool;Cognition;Context;Media;Project management;Software;Teamwork;Agile Development;Distributed Development;Informative Workspace;Task Board},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7578902,
  Title                    = {DevOps culture and its impact on cloud delivery and software development},
  Author                   = {M. Rajkumar and A. K. Pole and V. S. Adige and P. Mahanta},
  Booktitle                = {2016 International Conference on Advances in Computing, Communication, Automation (ICACCA) (Spring)},
  Year                     = {2016},
  Month                    = {April},
  Pages                    = {1-6},

  Abstract                 = {DevOps presents a significant broader perspective in delivering software solutions. The perception of DevOps being a mere tool has been formulated into a change in culture, paradigms in automation, clarity in measuring risks and facilitating ease of sharing. DevOps has been responsible for companies to move from a monolithic pace of software releases to an agile mindset. This paper discovers the significance of DevOps and tries to explore the process of transformation from a legacy method and onto the impact of the change on overall architecture and software scale out. The transformation from a legacy mindset to agile mindset requires a formidable change to the organizational setup. The journey of adoption of such a culture requires various degrees of effort and techniques. In this paper, we cover the concepts, adoption strategies and the impact of such adoption strategies.},
  Doi                      = {10.1109/ICACCA.2016.7578902},
  Keywords                 = {cloud computing;software architecture;software prototyping;DevOps culture;adoption strategies;agile mindset;cloud delivery;legacy method;legacy mindset;software development;software solutions;Computer architecture;Engines;Organizations;Production;Software;Standards organizations;Agile;Culture;DevOps;Leadership},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6842969,
  Title                    = {Kanban Pull and Flow – A transparent workflow for improved quality and productivity in software developmet},
  Author                   = {H. K. Raju and Y. T. Krishnegowda},
  Booktitle                = {Fifth International Conference on Advances in Recent Technologies in Communication and Computing (ARTCom 2013)},
  Year                     = {2013},
  Month                    = {Sept},
  Pages                    = {44-51},

  Doi                      = {10.1049/cp.2013.2233},
  Keywords                 = {continuous improvement;kanban;lean production;project management;software development management;agile methodology;continuous lean software development;flow-based kanban;iterative agile-scrum methods;kanban pull-and-flow;productivity;project management paradigm;quality;sequential waterfall model;software industry;transparent workflow;Agile methodologies;kanban;scrum;software development;visualization;waterfall model;work-flow;work-in-progress},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6650204,
  Title                    = {An improvised prespective to agile methodology},
  Author                   = {H. P. Rakshith and A. P. Patil},
  Booktitle                = {2013 IEEE 3rd International Conference on System Engineering and Technology},
  Year                     = {2013},
  Month                    = {Aug},
  Pages                    = {381-384},

  Abstract                 = {In last few years, anecdotal evidence of mostly positive experiences with the implementation of agile development has emerged from various case studies. This enables data gathering from a larger sample of organizations, to learn about the factors driving the adoption and use of agile practices, and their benefits and challenges as perceived by early adopters of this software development methodology. From the studies it's discovered that present agile methodologies have some unsuitable practices. These practices can be revisited and thus a new model for agile methodology is proposed in this paper, which increases the productivity.},
  Doi                      = {10.1109/ICSEngT.2013.6650204},
  Keywords                 = {software prototyping;agile development implementation;agile methodologies;agile practice adoption;agile practice usage;data gathering;software development methodology;Companies;Conferences;Planning;Productivity;Software;Systems engineering and theory;Testing;Snoopers;agile;analyzers},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7224607,
  Title                    = {Preliminary Investigation},
  Author                   = {L. Ramadani and N. I. Utama},
  Booktitle                = {2015 Second International Conference on Computing Technology and Information Management (ICCTIM)},
  Year                     = {2015},
  Month                    = {April},
  Pages                    = {134-139},

  Doi                      = {10.1109/ICCTIM.2015.7224607},
  Keywords                 = {project management;safety-critical software;software prototyping;agile methodology;project management;secure software engineering;software development methodology;standard SDLC;Agile software development;Documentation;Risk management;Security;Software;Software engineering;Testing;agile methodology;secure software;software engineering},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6685063,
  Title                    = {Innovation-directed experiential learning using service blueprints},
  Author                   = {J. Ramanathan and R. Ramnath and M. J. Herold and B. J. R. Wierwille},
  Booktitle                = {2013 IEEE Frontiers in Education Conference (FIE)},
  Year                     = {2013},
  Month                    = {Oct},
  Pages                    = {1406-1412},

  Abstract                 = {An analysis of hiring patterns showed emerging trends: the complexity of information technology (IT) is shifting from development to post-deployment and integration needed for services. Given the complexity of deployed service systems, generated big data, and the national dialogue on educating engineers, we asked ourselves related questions. Do our graduate students have evaluation skills needed to work at the most advanced level of Bloom's taxonomy? Can they learn to frame and solve the problems within complex industry environments while applying the current research? How do we structure a graduate curriculum and an environment that provides experiences in innovation within the constraints of the academic calendar? Here we present an interdisciplinary curriculum comprised of three components: a service interaction blueprint for framing the industry problem, agile principles focusing on aspects of the solution, and Christensen's theory-building to frame the next iteration of research. The environment for industry problems was created through an National Science Funded Industry & University Cooperative Research Center. The feedback from a pilot graduate-level class is positive and provides insights for further research. We show through feedback discussions that it is possible to have translational activity at the industry-university enterprise boundary resourced in by advanced experiential learning.},
  Doi                      = {10.1109/FIE.2013.6685063},
  ISSN                     = {0190-5848},
  Keywords                 = {computer aided instruction;engineering computing;engineering education;Bloom taxonomy;National Science Funded Industry;University Cooperative Research Center;data generation;deployed service system complexity;information technology complexity;innovation-directed experiential learning;national dialogue;service blueprints;Buildings;Context;Educational institutions;Medical services;Software;Technological innovation;complex systems;design;innovation;performance metrics;services science;technology management},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7056955,
  Title                    = {Extreme Programming for service-based application development architecture},
  Author                   = {G. Sivanageswara Rao and C. V. Phani Krishna and K. Rajasekhar Rao},
  Booktitle                = {2014 Conference on IT in Business, Industry and Government (CSIBIG)},
  Year                     = {2014},
  Month                    = {March},
  Pages                    = {1-4},

  Doi                      = {10.1109/CSIBIG.2014.7056955},
  Keywords                 = {Web services;service-oriented architecture;software prototyping;software quality;SBA;Web services;extreme programming;out-of-the-box instances;rational unified process;service oriented architecture;service-based application development architecture;services operation environment;software architectures;software product versions;software-development process framework;Educational institutions;Servers;Testing},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7170653,
  Title                    = {Reducing human resources in management of information technology (IT) projects},
  Author                   = {J. Raszka and L. Jamroż},
  Booktitle                = {2015 8th International Conference on Human System Interaction (HSI)},
  Year                     = {2015},
  Month                    = {June},
  Pages                    = {115-121},

  Abstract                 = {The paper presents methods of aiding the project management of a computer information system as an example of discrete dynamical systems (DDS). Human resource management (HRM) is a feature of organization designed to maximize staff productivity to achieve the strategic goals of an information technology company, in particular concerning the general management of an IT project. This project relates to the development of a distributed monitoring system of the technological process for allocating team members, such as the product owner or the scrum master in the increasingly popular agile methodologies. The results were obtained by applying the general theory of a linear max plus system, which is a mathematical model of the management process. Some theoretical results and mathematical foundations of the max-plus system and in particular various other aspects of controlling discrete processes are presented.},
  Doi                      = {10.1109/HSI.2015.7170653},
  ISSN                     = {2158-2246},
  Keywords                 = {human resource management;information systems;information technology;optimisation;productivity;project management;resource allocation;software prototyping;DDS;HRM;IT project management;agile methodology;computer information system;discrete dynamical systems;discrete process control;distributed monitoring system;general management;human resource management;human resource reduction;information technology company;linear max plus system;management process;mathematical foundation;max-plus system;product owner;scrum master;staff productivity maximization;strategic goals;team member allocation;technological process;Algebra;Mathematical model;Petri nets;Process control;Project management;Throughput;Transforms;Human Machine Interface (HMI);IT project management;human resources;max-plus linear system;simulation & control of discrete processes},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7087120,
  Title                    = {Test orchestration a framework for Continuous Integration and Continuous deployment},
  Author                   = {N. Rathod and A. Surve},
  Booktitle                = {2015 International Conference on Pervasive Computing (ICPC)},
  Year                     = {2015},
  Month                    = {Jan},
  Pages                    = {1-5},

  Abstract                 = {The enterprises follow Agile Software Development methodology to because business requirements changes frequently. In Agile Software Development methodology, it is essential to continuously integrate the component into a main trunk of a project to test the new component of the system. Then test all the component of the project; this happens frequently so it needs to stream line processes to orchestrate the tests. So it is difficult to manage the software development life cycle for those changes and maintain the software code quality. To maintain the product quality it is essential to integrate the product component and need to deploy a product on pre-production environment and test the product. Hence the need for Continuous Integration and Continuous Delivery process for software product. The popularization of DevOps, and cloud computing has revolutionized the software delivery process- making it faster and affordable for business to release their software continuously. Hence Enterprises need for reliable and predictable delivery process of software. The objective of the paper is to design an effective framework for automated testing and deployment to help to automate the code analysis, test selection, test scheduling, environment provisioning, test execution, results analysis and deployment pipeline. Test orchestration framework typically very complicated to develop such pipeline to make software reliable, and bug free. For environment provisioning can be provided through virtualization and cloud computing.},
  Doi                      = {10.1109/PERVASIVE.2015.7087120},
  Keywords                 = {program testing;scheduling;software prototyping;software quality;DevOps;agile software development methodology;cloud computing;code analysis;component test;continuous deployment process;continuous integration process;deployment pipeline;environment provisioning;product quality;results analysis;software code quality;software development life cycle;software product;test execution;test orchestration;test scheduling;test selection;virtualization;Automation;Pipelines;Software;Software reliability;Software testing;Agile Software Development;Cloud Computing;Continious Deployment (CD);ContinuousIntegration (CI);Delivery Pipeline;DevOps;Test Oracle;Test Orchestration},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7284606,
  Title                    = {Gap Analysis between State of Practice and State of Art Practices in Agile Software Development},
  Author                   = {A. Rauf and M. AlGhafees},
  Booktitle                = {2015 Agile Conference},
  Year                     = {2015},
  Month                    = {Aug},
  Pages                    = {102-106},

  Abstract                 = {Agile software development can be considered as a development methodology which suits the situations where requirements are changing frequently. Most of the literature about agile is specific to one or two practices. Lack of a comprehensive discussion on all the commonly used agile practices in literature and their adoption results by industry is very much evident. This work is an ongoing effort, where we are going to discuss some of the literature, we have gone through to solicit common agile practices, score them on the basis of frequency of referral and then we have tried to get an opinion from industry regarding our findings. Our aim is to have a comprehensive review of all the literature presented for Agile in last decade and have an analysis of these results based on feedback from industry of at-least 2-3 continents. In this short paper, we are presenting some of our findings and we hope to extend our work gradually.},
  Doi                      = {10.1109/Agile.2015.21},
  Keywords                 = {feedback;software prototyping;agile practices;agile software development;feedback;gap analysis;Companies;Industries;Programming;Scrum (Software development);Software;Scrum;Software development;XP;agile methods;agile practices},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6986017,
  Title                    = {Agile development in large and distributed environments: A systematic literature review on organizational, managerial and cultural aspects},
  Author                   = {A. M. Razavi and R. Ahmad},
  Booktitle                = {2014 8th. Malaysian Software Engineering Conference (MySEC)},
  Year                     = {2014},
  Month                    = {Sept},
  Pages                    = {216-221},

  Abstract                 = {Agile Software Development has been around for more than a decade. Over this period, the focus of applications, problems and consequently research themes has been changed dramatically. However, the main efforts have been arguably yielded to employ agile development in large and distributed environments. This imposes sophisticated needs to deal with e.g. project definition and management in such environments, as well as techniques and methods for communication, coordination, collaboration, etc., and even, the resulting cultural and organizational problems. This paper provides a systematic literature review in which main problems and themes of agile software development in large organizations, systems or projects and/or in distributed teams and environments have been sought and classified. The source of data is limited to IEEE publishing whether conferences or journals, and from 2005 onward. The results show that the major problems chronologically began with issues of cultural readiness, method implementation/adoption and project management, and then for the most recent years, the emphasis has been mainly switched to quality management as well as communication and collaboration mechanisms. Meanwhile, the results also reveal that indeed large organizations are even more eager and pioneer to transition to agile development due to their high degrees of cost as well as competitiveness. This fact paves the way to use their valuable, early experiences for other large as well as medium and small teams and organizations particularly those who have not switched yet. The study ends up with a few predictions for the future of agile development research themes in large and distributed environments.},
  Doi                      = {10.1109/MySec.2014.6986017},
  Keywords                 = {organisational aspects;project management;quality management;reviews;software prototyping;IEEE publishing;agile software development;cultural aspects;data source;distributed environments;large organizations;literature review;offshore development;project management;quality management;Bibliographies;Collaboration;Conferences;Cultural differences;Global communication;Organizations;Software;Agile Methods;Agile Software Development;Distributed Teams;Global Environments;Large Organizations;Offshore Development;Systematic Literature Review},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7579487,
  Title                    = {An Empirical Study on Lean and Agile Methods in Global Software Development},
  Author                   = {M. A. Razzak},
  Booktitle                = {2016 IEEE 11th International Conference on Global Software Engineering Workshops (ICGSEW)},
  Year                     = {2016},
  Month                    = {Aug},
  Pages                    = {61-64},

  Abstract                 = {Nowadays, many individuals and teams involved on projects are already using agile development techniques as part of their daily work. However, we have much less experience in how to scale and manage agile practices in distributed software development. Distributed and global development-that requiring attention to many technical, organizational, and cultural issues as the teams interact to cooperatively delivery the solution. Alongside, very large team sizes, teams of teams, and more complex management structures forcing additional attention to coordination and management. At this level, there is an increasing need to standardize best practices to avoid reinvention and miscommunication across artifacts and processes. Complexity issues in enterprise software delivery can have significant impact on the adoption of agile approaches. As a consequence, agile strategies will typically need to be evaluated, tailored, and perhaps combined with traditional approaches to suit the particular context. The characteristics of software products and software development processes open up new possibilities that are different from those offered in other domains to achieve leanness and flexibility. Whilst Lean principles are universal, a further understanding of the techniques required to apply such principles from a software development angle. Thus, the aim of this research is to identify, how can combination of Lean and Agile practices facilitate to scale and manage distributed software development.},
  Doi                      = {10.1109/ICGSEW.2016.22},
  Keywords                 = {software prototyping;agile development techniques;complex management structures;enterprise software delivery;global distributed software development;lean principles;software products;Companies;Complexity theory;Conferences;Context;Manufacturing;Software;Software engineering;Agile;Global Software Development;Lean Software Development;Scaling agile},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6933185,
  Title                    = {Knowledge sharing in distributed agile projects: Techniques, strategies and challenges},
  Author                   = {M. A. Razzak and R. Ahmed},
  Booktitle                = {2014 Federated Conference on Computer Science and Information Systems},
  Year                     = {2014},
  Month                    = {Sept},
  Pages                    = {1431-1440},

  Doi                      = {10.15439/2014F280},
  Keywords                 = {knowledge management;software prototyping;KM;agile software development;distributed agile projects;knowledge management;knowledge sharing;Agile software development;Collaboration;Companies;Educational institutions;Interviews;Programming;Software;Global software development;agile;distributed;knowledge management;knowledge sharing},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7095978,
  Title                    = {Be an engineer right from the start},
  Author                   = {D. Reith and C. Bachmeier and I. Groß},
  Booktitle                = {2015 IEEE Global Engineering Education Conference (EDUCON)},
  Year                     = {2015},
  Month                    = {March},
  Pages                    = {249-254},

  Abstract                 = {At the Bonn-Rhein-Sieg University of Applied Sciences (BRSU), Germany, students of engineering sciences are trained in thinking and acting like an engineer right from the start - by creating a Rube Goldberg machine in an introductory project, organized with SCRUM techniques.},
  Doi                      = {10.1109/EDUCON.2015.7095978},
  ISSN                     = {2165-9559},
  Keywords                 = {engineering education;further education;BRSU;Bonn-Rhein-Sieg University of Applied Sciences;Germany;Rube Goldberg machine;SCRUM technique;engineering sciences;Conferences;Electrical engineering;Engineering education;Mechanical engineering;Organizations;Physics;Scrum (Software development);Engineering;Introductury project;Rube Goldberg machine;SCRUM;Study entrants},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@Article{7372484,
  Title                    = {Measuring the Impact of Agile Coaching on Students' Performance},
  Author                   = {G. Rodríguez and Á. Soria and M. Campo},
  Journal                  = {IEEE Transactions on Education},
  Year                     = {2016},

  Month                    = {Aug},
  Number                   = {3},
  Pages                    = {202-209},
  Volume                   = {59},

  Abstract                 = {Nowadays, considerable attention is paid to agile methods as a means to improve management of software development processes. The widespread use of such methods in professional contexts has encouraged their integration into software engineering training and undergraduate courses. Although several research efforts have focused on teaching Scrum through simulating a software development project, they covered only the learning of programming practices within a Scrum team. Furthermore, few studies tackle nontechnical skills other than the development practices themselves. The work presented here introduces an original Scrum-based training model enhanced with agile coaching to maximize student performance. This was validated by a case study on a capstone project in a Scrum course. This paper summarizes the positive results of introducing agile coaching, which resulted in approximately 22% more coverage of software engineering practices. In addition, a survey data showed that, compared to students who did not receive coaching, coached students gained valuable insight into the internalization of Scrum, problem solving, and guidance by means of checkpoint meetings.},
  Doi                      = {10.1109/TE.2015.2506624},
  ISSN                     = {0018-9359},
  Keywords                 = {computer based training;computer science education;educational courses;further education;software development management;software prototyping;Scrum course;Scrum team;Scrum-based training model;agile coaching;capstone project;programming practices;software development process management;software development project;software engineering training;student performance;undergraduate courses;Context;Industries;Scrum (Software development);Software;Software engineering;Training;Agile coaching;Scrum;capstone project;software engineering education;teaching/learning strategies},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6759188,
  Title                    = {Combining Lean Thinking and Agile Methods for Software Development: A Case Study of a Finnish Provider of Wireless Embedded Systems Detailed},
  Author                   = {P. Rodríguez and J. Partanen and P. Kuvaja and M. Oivo},
  Booktitle                = {2014 47th Hawaii International Conference on System Sciences},
  Year                     = {2014},
  Month                    = {Jan},
  Pages                    = {4770-4779},

  Abstract                 = {Lean Software Development has attracted a great deal of attention during last years. However, it remains unclear how Lean is implemented in a domain that fundamentally differs from the automotive industry in which it originated. This study provides empirical evidence of how Lean can be combined with Agile methods to enhance software development processes. A case study was conducted at Elektrobit Wireless Segment, which has used Agile from 2007 and began to adopt Lean in 2010. Our findings evidence numerous compatibilities between Lean and Agile. In addition to well-established practices in Agile, Lean thinking has brought new elements to software development such as Kanban and work-in-progress limits, a “pull” and “less waste” oriented culture, and a stronger emphasis on transparency and collaborative development. Scaling flexibility, business management involvement and waste reduction were found as challenges, whilst setting up teams, self-organization and empowerment appeared easier to achieve.},
  Doi                      = {10.1109/HICSS.2014.586},
  ISSN                     = {1530-1605},
  Keywords                 = {embedded systems;lean production;software prototyping;waste reduction;Elektrobit wireless segment;agile method;automotive industry;business management;lean software development;scaling flexibility;self-organization;waste reduction;wireless embedded systems;Companies;Industries;Software;Variable speed drives;Wireless communication;Agile software development;le-agile;lean software development;method adoption;process improvement;process introduction},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7356489,
  Title                    = {Manual testing's newfound place in the automated testing world},
  Author                   = {G. P. Rogers and P. Miles},
  Booktitle                = {2015 IEEE AUTOTESTCON},
  Year                     = {2015},
  Month                    = {Nov},
  Pages                    = {199-202},

  Abstract                 = {A comprehensive automated testing suite has been touted for years as an integral part of a software program's overall quality assurance strategy. One particular classification of tests - functional tests for web applications - is frequently automated, perhaps being the centerpiece of automated testing efforts. However, the build-out of an automated testing suite is expensive, requiring specialized software, frameworks, and staff who typically possess programming knowledge. Indeed, it is common to have roles such as that of a Test Automation Engineer or Software Developer In Test (SDET) on Agile teams these days, supplementing traditional Quality Analysts. With regard to web application tests, however, the calculus on whether or not to automate these tests is changing. Enter on-demand services - they have become available to perform manual testing as needed, without introducing delay, and are often many times faster than equivalent automated tests. These on-demand services feature test scripts written in natural language, which are executed by trained external testers when prompted, such that feedback is rapidly provided on the results of the testing. In this article, we'll explore these on-demand services (which can also be referred to as “Testing as a Service”) and provide business and financial analysis illustrating when this approach may complement or be a better alternative to building an automated testing suite for web-based applications.},
  Doi                      = {10.1109/AUTEST.2015.7356489},
  Keywords                 = {automatic testing;program testing;software quality;SDET;Web application tests;Web-based applications;agile teams;automated testing;business analysis;financial analysis;functional tests;manual testing;natural language;on-demand services;quality analysts;quality assurance strategy;software developer in test;software program;test automation engineer;test scripts;testing as a service;Automation;Business;Error analysis;Pipelines;Software;Automatic testing;Computer errors;Error analysis;Man machine systems;Software testing;System testing;Testing},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7932678,
  Title                    = {On the Agile Transformation in a Large-Complex Globally Distributed Company: Why Boarding this Journey, Steps Taken and Main Foreseen Concerns},
  Author                   = {G. Roman and S. Marczak and A. Dutra and R. Prikladnicki},
  Booktitle                = {2015 6th Brazilian Workshop on Agile Methods (WBMA)},
  Year                     = {2015},
  Month                    = {Oct},
  Pages                    = {32-39},

  Abstract                 = {ORG, fictitious name, is a large company with complex-globally distributed projects that has recently started a "big-bang" transition to agile. About a year ago the new CIO announced it was time to aim for faster deliveries and decided on a company-wide roll-out to agile, including legacy systems. In this paper we report on an interview-based qualitative study that aimed to identify the reasons of why the company is moving to an agile approach, the steps took towards becoming agile during this first year of work, and the main concerns of management given the size of the company, the complexity of the projects developed, and the team's global distribution. We interviewed 18 managers, including members of the board committee that support the CIO in strategic decisions. Our findings add to the current literature on the topic by discussing the transformation in a large-complex scenario that, to the best of our knowledge, has never been reported in literature.},
  Doi                      = {10.1109/WBMA.2015.13},
  Keywords                 = {distributed processing;project management;software maintenance;software prototyping;strategic planning;CIO;ORG;agile transformation;big-bang transition;company size;complex-globally distributed projects;interview-based qualitative study;large-complex globally distributed company;legacy systems;project complexity;strategic decisions;team global distribution;Companies;Finance;Interviews;Planning;Software;Agile Transformation;ComplexSystem;Empirical Study;Global Software Development;Large Company},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7113578,
  Title                    = {Project Management Using the Scrum Agile Method: A Case Study within a Small Enterprise},
  Author                   = {B. L. Romano and A. D. d. Silva},
  Booktitle                = {2015 12th International Conference on Information Technology - New Generations},
  Year                     = {2015},
  Month                    = {April},
  Pages                    = {774-776},

  Abstract                 = {This paper tackles the use of the Scrum agile method within a Brazilian small business enterprise. It provides monitoring activities for software project management. It involves the use of human, financial, and temporal resources during a project development, increasing the rate of its successful deliveries. In order to enable the Scrum adoption, the following four distinct steps were defined: infrastructure set up, team training, Scrum agile deployment, and deployment refinement. An analysis of its main results was obtained from the application of a survey to all project stakeholders. The major improvements were identified since the first sprints, mainly involving communication, team motivation, and adaptation agility, during the chosen case study within a small enterprise.},
  Doi                      = {10.1109/ITNG.2015.139},
  Keywords                 = {business data processing;project management;software management;software prototyping;Brazilian small business enterprise;deployment refinement;project management;scrum agile deployment;scrum agile method;software project management;Monitoring;Planning;Project management;Scrum (Software development);Software;Training;Agile method;Scrum;project management;small enterprises},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6671036,
  Title                    = {The agility, flexibility and efficiency of hypervisors in engineering education},
  Author                   = {G. W. Romney and B. R. Sinha and P. P. Dey and M. N. Amin},
  Booktitle                = {2013 12th International Conference on Information Technology Based Higher Education and Training (ITHET)},
  Year                     = {2013},
  Month                    = {Oct},
  Pages                    = {1-8},

  Abstract                 = {Virtualization, as a process, differs from the Hypervisor that is the software that makes the process possible. By the proper utilization of hypervisors agility, flexibility and efficiency may be gained in engineering hands-on education. Layered accreditation and certification impose additional challenges on engineering and cyber security programs. Consequently, there is an extra degree of oversight, assessment and thoroughness required in curricula in order to meet all standards. At National University only through the use of virtualization is it possible to add hands-on experience in a one-month delivery of a full semester of instruction per course. The use of virtualization through private and public cloud delivery as well as on a student's personal computer makes this possible. The employment of multi-factor authentication and a VPN provides the necessary security for students who are dispersed all over the world. The collaborative synergy of Computer Science, Information Technology and Cyber Security disciplines has made the creation of a dynamically morphing virtual lab possible. The teaching efficiencies gained by using virtualization are significant: 1) the lab exercises do not impact the student's base laptop configuration, 2) the immediate exercise is made available for completion, 3) the synergy of having assignments and labs intermixed throughout the teaching cycle reinforce one another, and 4) the versatility and ability of the instructor to introduce new concepts literally dynamically helps maintain current courseware.},
  Doi                      = {10.1109/ITHET.2013.6671036},
  Keywords                 = {authorisation;cloud computing;computer aided instruction;educational courses;educational institutions;engineering education;laboratories;teaching;virtual private networks;National University;VPN;assessment degree;computer science;courseware;cyber security programs;engineering education;hypervisors agility;hypervisors efficiency;hypervisors flexibility;information technology;layered accreditation;layered certification;multifactor authentication;oversight degree;private cloud delivery;public cloud delivery;student personal computer;teaching cycle;teaching efficiencies;thoroughness degree;virtual laboratory;virtual private network;virtualization;Cloud computing;Computer security;Educational institutions;Servers;Virtual machine monitors;Virtualization;Agile;Parallels;VMware;Virtual Box;cloud;cyber security;online;virtualization},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7284602,
  Title                    = {Symbolic Innovation in Agile Transformations},
  Author                   = {D. Rose},
  Booktitle                = {2015 Agile Conference},
  Year                     = {2015},
  Month                    = {Aug},
  Pages                    = {82-86},

  Abstract                 = {Much of the empirical research on agile transformations concentrates on the success factors for effective change management. Although these factors are essential in establishing beneficial norms and practices, the existing research does not adequately address the importance of language in distinguishing the current plan-driven processes from their agile counterparts. The labels in agile and plan-driven processes represent practices that are well established. Accurate process labeling is the foundation for creating any inter-organizational lessons. This paper establishes the link between linguistic manipulation and how it might lead to a form of symbolic innovation that can impede a greater understanding of transformational challenges. During an agile transformation some organizational actors re-label deterministic plan-driven processes using agile language. The symbolic innovation leads to no improvement and as a result is more easily abandoned without meaningful process change.},
  Doi                      = {10.1109/Agile.2015.17},
  Keywords                 = {innovation management;management of change;organisational aspects;software prototyping;agile language;agile transformations;deterministic plan-driven processes;effective change management;interorganizational lessons;linguistic manipulation;organizational actors;plan-driven processes;symbolic innovation;transformational challenges;Documentation;Organizations;Planning;Pragmatics;Software;Technological innovation;agile;language;project management;re-labeling;software development;symbolic innovation;transformation},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6983802,
  Title                    = {Predicting Release Quality},
  Author                   = {P. Rotella and S. Chulani},
  Booktitle                = {2014 IEEE International Symposium on Software Reliability Engineering Workshops},
  Year                     = {2014},
  Month                    = {Nov},
  Pages                    = {60-61},

  Doi                      = {10.1109/ISSREW.2014.116},
  Keywords                 = {software metrics;software quality;software reliability;SW CSAT;SWDPMH;hybrid agile-waterfall releases;in-process development;release quality;reliability performance;software customer satisfaction;software defects per million hours;test metrics;Correlation;Maintenance engineering;Measurement;Predictive models;Software;Software reliability;customer experience;reliability modeling;software products;software releases;testing metrics},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6719640,
  Title                    = {A study of future communications concepts and technologies for the national airspace system (the first six months)},
  Author                   = {A. Roy and B. Haynes and A. Defense and J. M. Wichgers and R. Collins and D. Ponchak and R. Apaza},
  Booktitle                = {2013 IEEE/AIAA 32nd Digital Avionics Systems Conference (DASC)},
  Year                     = {2013},
  Month                    = {Oct},
  Pages                    = {1-30},

  Abstract                 = {Preliminary findings indicate that spectrum and technology certification will continue to pose a challenge, especially in areas where software is increasingly used to perform hardware functions. It is anticipated that although some spectrum will become available as a result of the decommissioning of technologies i.e. VOR, the demand for spectrum will increase and future technologies will need to provide the ability to maximize the use of finite spectrum resources. Advances in electronics and communications technology will enable the integration of services and applications and thus reduce the number of systems deployed to the aircraft. Finally, the future aviation radio technology will depend on numerous factors including: air traffic management procedures, airline operations business models and the configuration of the airspace, which is anticipated to include Unmanned Aircraft Systems, hypersonic flights and manned aircraft.},
  Doi                      = {10.1109/DASC.2013.6719640},
  ISSN                     = {2155-7195},
  Keywords                 = {air traffic;aircraft communication;VOR;air traffic management;aircraft communication;airline operation business model;aviation radio technology;communication technology;electronic technology;finite spectrum resources;hypersonic flights;manned aircraft;national airspace system;technology certification;unmanned aircraft systems},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7943152,
  Title                    = {Handling non-functional requirements for big data and IOT projects in Scrum},
  Author                   = {V. Sachdeva and L. Chung},
  Booktitle                = {2017 7th International Conference on Cloud Computing, Data Science Engineering - Confluence},
  Year                     = {2017},
  Month                    = {Jan},
  Pages                    = {216-221},

  Abstract                 = {Agile methodologies are gaining popularity at a lightning pace in the software industry. Prominent agile methodologies, such as Scrum and Extreme Programming (XP), help quickly deliver a system that meets Functional Requirements (FRs), while adapting to the changes in the customer requirements and feedback. However, Non-Functional Requirements (NFRs) by and large have been either mostly ignored or introduced and retrofit late in the software development cycle, oftentimes leading to project failures. With the recent, increasing shifts towards cloud and emphasis in big data in the software industry, NFRs, such as security and performance, have become more critical than ever before. This research proposes a novel approach to handling security and performance NFRs for projects involving big data and cloud, using Scrum. An industrial case study, conducted over a span of 9 months, shows that the approach helps deal with security and performance requirements individually as well as conflicts between them in an agile methodology.},
  Doi                      = {10.1109/CONFLUENCE.2017.7943152},
  Keywords                 = {Big Data;Internet of Things;software houses;software maintenance;software prototyping;Big Data;IOT projects;NFR;Scrum;XP;agile methodologies;extreme programming;functional requirements;nonfunctional requirements handling;software development cycle;software industry;software retrofitting;Big Data;Cloud computing;Industries;Security;US Department of Defense;Agile Methodologies;Big Data;Internet of Things (IoT);NFRs;Scrum},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6861055,
  Title                    = {Analyzing the evolution of software development: From creative chaos to software ecosystems},
  Author                   = {M. H. Sadi and E. Yu},
  Booktitle                = {2014 IEEE Eighth International Conference on Research Challenges in Information Science (RCIS)},
  Year                     = {2014},
  Month                    = {May},
  Pages                    = {1-11},

  Abstract                 = {As a software organization matures and expands, it often evolves through different styles of organization, for example, beginning with creative chaos as a start-up, then introducing disciplined processes to raise quality, and later regaining agility through light-weight practices. Recently, many firms join collaborative networks to develop software products and platforms for a shared market, constituting “Software Ecosystems”. At each stage of evolution, the software organization aims to overcome critical challenges faced in its earlier stages, while balancing business, organizational, social, and technical forces of change. To illustrate how the evolutionary trajectory of a software development firm is shaped by various interacting forces, we draw upon a longitudinal case study taken from the literature. We use the i* strategic actors modeling framework to help analyze the forces that trigger the transition from one organizational configuration to another.},
  Doi                      = {10.1109/RCIS.2014.6861055},
  ISSN                     = {2151-1349},
  Keywords                 = {chaos;groupware;software engineering;software houses;software quality;collaborative networks;creative chaos;i* strategic actor modeling framework;light-weight practices;shared market;software development evolution;software development firm;software ecosystems;software organization;software platforms;software products;Ecosystems;Organizations;Software;Agile Development;Creative Chaos;Evolution;Modeling & Analysis;Product Line Engineering;Software Development Organization;Software Ecosystems;Strategic Actors;Waterfall},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6822273,
  Title                    = {Accounting System on Cloud: A Case Study},
  Author                   = {M. Sadighi},
  Booktitle                = {2014 11th International Conference on Information Technology: New Generations},
  Year                     = {2014},
  Month                    = {April},
  Pages                    = {629-632},

  Abstract                 = {Nowadays, cloud computing has become a relatively popular approach between those businesses that would like to be agile, flexible and provident. For these purposes many companies have started to transfer all or parts of their business processes to the cloud platform. In this paper cloud migration process of a sample company has been studied through a case which is a company. Since current accounting software in this company can't be responder to the changes anymore, management boards have decided to deploy it on the cloud. This paper aims at providing an analysis of the difficulties of company's traditional accounting system, reviewing factors affecting migration and finally as a conclusion suggesting the best cloud deployment and service models complying with company requirements.},
  Doi                      = {10.1109/ITNG.2014.26},
  Keywords                 = {accounts data processing;cloud computing;accounting software;accounting system;cloud computing;cloud deployment;cloud migration process;service models;Cloud computing;Companies;Computational modeling;Hardware;Accounting software;Cloud computing;Cloud computing accounting software;Cloud migration},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@Article{6216346,
  Title                    = {Introducing an Iterative Life-Cycle Model at Credit Suisse IT Switzerland},
  Author                   = {K. Sägesser and B. Joseph and R. Grau},
  Journal                  = {IEEE Software},
  Year                     = {2013},

  Month                    = {March},
  Number                   = {2},
  Pages                    = {68-73},
  Volume                   = {30},

  Abstract                 = {Credit Suisse IT Switzerland decided to introduce an iterative life-cycle model (ILCM) based on the Rational Unified Process (RUP), a de facto industry standard, in addition to the well-established waterfall life-cycle model (WLCM). Such a large-scale change management initiative involves risks, challenges, and an organizational mindset shift. The Credit Suisse project carefully considered issues such as the gap between RUP and CMMI, process vocabulary, best practices, development and maintenance effort, training, and company culture as a precursor to the change. The activities to deploy the model throughout the organization were coordinated in collaboration with actual practitioners toward creating awareness, managing knowledge, and managing resistance factors to effect the required mindset change.},
  Doi                      = {10.1109/MS.2012.74},
  ISSN                     = {0740-7459},
  Keywords                 = {information technology;software engineering;ILCM;RUP;WLCM;credit suisse IT Switzerland;credit suisse project;de facto industry standard;iterative life cycle model;rational unified process;waterfall life-cycle model;Banking;Collaboration;Iterative methods;Process management;Product life cycle management;Software development;Standards organizations;Training;RUP;Rational Unified Process;iterative software development;software development life cycle;software development process management},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6823558,
  Title                    = {Improving the efficiency of software development through Software Augmentation Isochronism model},
  Author                   = {P. Sainath and Kishor Kumar Reddy C and O. A. Syed and S. Venugopal},
  Booktitle                = {2013 International Conference on Green Computing, Communication and Conservation of Energy (ICGCE)},
  Year                     = {2013},
  Month                    = {Dec},
  Pages                    = {877-882},

  Abstract                 = {Software is a generic term for organized collections of computer data and instructions; it is amalgamation of machine understandable instructions that preside over the processor of computer to perform itemized operations. The importance of software accompanies the effect of its malleability towards software development life cycle. Antecedent models such as Prototyping model, Incremental model, waterfall model, Transformation model, RAD model, Spiral model Model, Agile models and so on were found to be more efficient during its inception phase which later leaded to have some barricades such as risk factor, cost factor, time complexity and so on. The present research emphasizes a new model i.e. Software Augmentation Isochronism model in order to perturb those barricades present with the previous approaches. This paper clenches a prominent model with features such as classified exigency, bilateral databases, mini marketing, testimonial access and significant testing methodologies in order to produce efficient software which decreases the risk factors and decreases the costs to develop the software and thus finally provides a complete complacency and thesis of assurance between customer and company.},
  Doi                      = {10.1109/ICGCE.2013.6823558},
  Keywords                 = {software engineering;software houses;RAD model;agile model;antecedent model;cost factor;incremental model;machine understandable instructions amalgamation;prototyping model;risk factor;software augmentation isochronism model;software development;spiral model;time complexity;transformation model;waterfall model;Companies;Computational modeling;Computer architecture;Maintenance engineering;Production;Software;Testing;Agile model;Exigency;Process models;Software;Testimonial access;Testing},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7814556,
  Title                    = {Adopting Logical Architectures within Agile Projects},
  Author                   = {N. Santos and R. J. Machado and N. Ferreira},
  Booktitle                = {2016 10th International Conference on the Quality of Information and Communications Technology (QUATIC)},
  Year                     = {2016},
  Month                    = {Sept},
  Pages                    = {242-247},

  Abstract                 = {Agile Software Development (ASD) is a movement that emerged in the late 1990's and since then has been increasingly adopted by organizations. They are successful in projects characterized by rapid changes, small teams and small cycles. Implementing the same agile philosophy but with an increase of complexity, i.e., large-scale agile (LSA) development, are sometimes criticized of not being as effective as typical ASD, requiring additional concerns and the need to address new research challenges. This PhD research proposes an approach for embedding architecture design in agile development, first in early analysis and then during the iterations and by properly providing the mechanisms to deal with the changes in requirements. The main result is a method for adopting logical architectures, Four-Step-Rule-Set (4SRS), properly adapted to ASD contexts, to be used as complementary approaches to an ASD lifecycle, so that ASD teams can use that information as input for delivering the working software.},
  Doi                      = {10.1109/QUATIC.2016.059},
  Keywords                 = {software architecture;software prototyping;4SRS architecture;ASD;LSA development;agile software development;four-step-rule-set architecture;large-scale agile development;logical architecture;Computer architecture;Context;Documentation;Planning;Software;Software architecture;Unified modeling language;agile development;architecture design;large-scale agile;software logical architectures},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7819141,
  Title                    = {A system reconfiguration architecture for hybrid automation systems based in agents and programmable logic controllers},
  Author                   = {T. Santos and L. Ribeiro and A. Dionisio Rocha and J. Barata},
  Booktitle                = {2016 IEEE 14th International Conference on Industrial Informatics (INDIN)},
  Year                     = {2016},
  Month                    = {July},
  Pages                    = {98-103},

  Abstract                 = {As web related technologies continue to find their way into production related activities, their true potential can only be explored with a shop floor that is cyber-physically agile. This means the ability to quickly reconfigure a production system during production changeovers while significantly reducing setup times and non value-adding activities keeping the overall performance of the control system. Currently, system reconfiguration in mainly supported by reprogramming. However, reprogramming of large complex systems is often a time consuming and risky activity since it has a non negligible potential for introducing errors which normally result in long debugging times. In this context, this paper details an agent-based system architecture that enables quick system reconfiguration and minimizes the reprogramming effort. For this purpose a production system is abstracted as a multiagent system that dynamically interacts with a native, programmable-logic-controller-based control system and is able to re-parametrize it. The focus on re-parametrization means that the native system can still operate in the absence of the agent system which improves the overall robustness of the solution, using readily available equipment and enables its integration with legacy systems.},
  Doi                      = {10.1109/INDIN.2016.7819141},
  Keywords                 = {multi-agent systems;production control;production engineering computing;programmable controllers;software architecture;Web related technologies;agent-based system architecture;hybrid automation systems;multiagent system;production changeovers;production system;programmable logic controllers;reparametrization;reprogramming;system reconfiguration architecture;Automation;Context;Control systems;Multi-agent systems;Process control;Production systems;Cyber-physical Multiagent Systems;Production System Reconfiguration;System Integration},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6759183,
  Title                    = {The Influence of Organizational Factors on Inter-team Knowledge Sharing Effectiveness in Agile Environments},
  Author                   = {V. Santos and A. Goldman and H. Filho and D. Martins and M. Cortés},
  Booktitle                = {2014 47th Hawaii International Conference on System Sciences},
  Year                     = {2014},
  Month                    = {Jan},
  Pages                    = {4729-4738},

  Abstract                 = {Agile software development is known by focusing on interaction among team members to share knowledge. However, little guidance is provided to encourage interaction across agile teams. Based on a preliminary conceptual model, this paper examines influencing factors, such as organizational strategy, and communication flow and channels, regarding inter-team knowledge sharing (KS) effectiveness in agile environments. We analyze the characteristics and the influence of the mentioned factors through a survey research method. Data was gathered from seven Brazilian agile software organizations. We employed statistical analysis techniques, e.g., structural equation modeling and cross-table analysis, to analyze the results. Within the surveyed companies, organizational strategy reflects on moderate commitment towards knowledge. KS practices are carried out to an acceptable standard. Extensive communication flow and the use of several channels denote that agile companies are also fostering interaction across teams. We found strong relationship between these factors and the companies' experience on agile methods. As companies continue on an agile adoption program, they growingly focus on long-term goals and consider knowledge as strategic resource. However, they still need to improve strategy alignment to all organization levels. Thus, we recommend that agile companies consider these factors when striving on this endeavor.},
  Doi                      = {10.1109/HICSS.2014.581},
  ISSN                     = {1530-1605},
  Keywords                 = {knowledge management;software prototyping;statistical analysis;team working;Brazilian agile software organizations;KS;agile adoption program;agile companies;agile environments;agile software development;communication channels;communication flow;conceptual model;cross-table analysis;interteam knowledge sharing effectiveness;organizational factors;organizational strategy;statistical analysis techniques;strategy alignment;structural equation modeling;survey research method;Companies;Context;Data collection;Mathematical model;Reliability;Software;Agile methods;Inter-team Knowledge Sharing;Organizational factors},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6480429,
  Title                    = {The Influence of Practices Adopted by Agile Coaching and Training to Foster Interaction and Knowledge Sharing in Organizational Practices},
  Author                   = {V. Santos and A. Goldman and H. Roriz Filho},
  Booktitle                = {2013 46th Hawaii International Conference on System Sciences},
  Year                     = {2013},
  Month                    = {Jan},
  Pages                    = {4852-4861},

  Doi                      = {10.1109/HICSS.2013.528},
  ISSN                     = {1530-1605},
  Keywords                 = {Companies;Indexes;Lightning;Software;Training;Variable speed drives;Agile coaching and training;inter-team knowledge sharing;interaction;organizational conditions;practices},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7323104,
  Title                    = {Automated model-based testing based on an agnostic-platform modeling language},
  Author                   = {C. Sanz and A. Salas and M. de Miguel and A. Alonso and J. A. de la Puente and C. Benac},
  Booktitle                = {2015 3rd International Conference on Model-Driven Engineering and Software Development (MODELSWARD)},
  Year                     = {2015},
  Month                    = {Feb},
  Pages                    = {1-8},

  Abstract                 = {Currently multiple Domain Specific Languages (DSLs) are used for model-driven software development, in some specific domains. Software development methods, such as agile development, are test-centered, and their application in model-based frameworks requires model support for test development. We introduce a specific language to define generic test models, which can be automatically transformed into executable tests for particular testing platforms. The resulting test models represent the test plan for applications also built according to a model-based approach. The approach presented here includes some customisations for the application of the developed languages and transformation tools for some specific testing platforms. These languages and tools have been integrated with some specific DSL designed for software development.},
  Keywords                 = {program testing;software development management;DSL;agnostic platform modeling language;automated model;generic test models;model driven software development;multiple domain specific languages;software development methods;Architecture;Complexity theory;Computer architecture;Engines;Software;Testing;Unified modeling language;Agile Development;Automated Testing;Model-based Testing},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@Article{7359113,
  Title                    = {Lightness: A Function-Virtualizable Software Defined Data Center Network With All-Optical Circuit/Packet Switching},
  Author                   = {G. M. Saridis and S. Peng and Y. Yan and A. Aguado and B. Guo and M. Arslan and C. Jackson and W. Miao and N. Calabretta and F. Agraz and S. Spadaro and G. Bernini and N. Ciulli and G. Zervas and R. Nejabati and D. Simeonidou},
  Journal                  = {Journal of Lightwave Technology},
  Year                     = {2016},

  Month                    = {April},
  Number                   = {7},
  Pages                    = {1618-1627},
  Volume                   = {34},

  Abstract                 = {Modern high-performance data centers are responsible for delivering a huge variety of cloud applications to the end-users, which are increasingly pushing the limits of the currently deployed computing and network infrastructure. All-optical dynamic data center network (DCN) architectures are strong candidates to overcome those adversities, especially when they are combined with an intelligent software defined control plane. In this paper, we report the first harmonious integration of an optical flexible hardware framework operated by an agile software and virtualization platform. The LIGHTNESS deeply programmable all-optical circuit and packet switched data plane is able to perform unicast/multicast switch-over on-demand, while the powerful software defined networking (SDN) control plane enables the virtualization of computing and network resources creating a virtual data center and virtual network functions (VNF) on top of the data plane. We experimentally demonstrate realistic intra DCN with deterministic latencies for both unicast and multicast, showcasing monitoring, and database migration scenarios each of which is enabled by an associated network function virtualization element. Results demonstrate a fully functional complete unification of an advanced optical data plane with an SDN control plane, promising more efficient management of the next-generation data center compute and network resources.},
  Doi                      = {10.1109/JLT.2015.2509476},
  ISSN                     = {0733-8724},
  Keywords                 = {computer centres;multicast communication;optical switches;packet switching;software defined networking;DCN architectures;LIGHTNESS deeply programmable all-optical circuit;SDN control plane;all-optical circuit-packet switching;all-optical dynamic data center network;database migration scenarios;function-virtualizable software defined data center network;high-performance data centers;intelligent software defined control plane;multicast switch-over on-demand;network infrastructure;network resources;next-generation data center;optical data plane;optical flexible hardware framework;packet switched data plane;showcasing monitoring;unicast switch-over on-demand;virtual data center;virtual network functions;virtualization platform;Optical feedback;Optical fiber networks;Optical filters;Optical packet switching;Optical switches;Servers;Virtualization;Data Center Networking;Data center networking;Multicast;Network Function Virtualization;Optical Circuit Switching;Optical Packet Switching;Software Defined Networking;Virtual Data Center;Virtual Network Function;multicast;network function virtualization;optical circuit switching;optical packet switching;software defined networking;virtual data center;virtual network function},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7753191,
  Title                    = {A holacratic socio-technical system architecture},
  Author                   = {G. Savage and A. Franz and J. S. Wasek},
  Booktitle                = {2016 IEEE International Symposium on Systems Engineering (ISSE)},
  Year                     = {2016},
  Month                    = {Oct},
  Pages                    = {1-6},

  Doi                      = {10.1109/SysEng.2016.7753191},
  Keywords                 = {management information systems;organisational aspects;pattern classification;software architecture;software prototyping;systems engineering;HBAMI index;HEM architecture;HSTSA;Holacratic Business Architecture Measurement Instrument;Holacratic engineering management;Holacratic enterprise engineering architectures;Holacratic socio-technical system architecture;SIC;agile software;correlation analysis;dynamic organizational input structure;engineering management process model;organizational holacracy levels;standard industrial classification;systems engineering;Adaptation models;Computer architecture;Modeling;Organizations;Research and development management;Adaptive Systems;Engineering Architecture;Holacracy;Multi-Agent Systems;Systems Engineering},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7883285,
  Title                    = {Continuous Deployment at Facebook and OANDA},
  Author                   = {T. Savor and M. Douglas and M. Gentili and L. Williams and K. Beck and M. Stumm},
  Booktitle                = {2016 IEEE/ACM 38th International Conference on Software Engineering Companion (ICSE-C)},
  Year                     = {2016},
  Month                    = {May},
  Pages                    = {21-30},

  Abstract                 = {Continuous deployment is the software engineering practice of deploying many small incremental software updates into production, leading to a continuous stream of 10s, 100s, or even 1,000s of deployments per day. High-profile Internet firms such as Amazon, Etsy, Facebook, Flickr, Google, and Netflix have embraced continuous deployment. However, the practice has not been covered in textbooks and no scientific publication has presented an analysis of continuous deployment. In this paper, we describe the continuous deployment practices at two very different firms: Facebook and OANDA. We show that continuous deployment does not inhibit productivity or quality even in the face of substantial engineering team and code size growth. To the best of our knowledge, this is the first study to show it is possible to scale the size of an engineering team by 20X and the size of the code base by 50X without negatively impacting developer productivity or software quality. Our experience suggests that top-level management support of continuous deployment is necessary, and that given a choice, developers prefer faster deployment. We identify elements we feel make continuous deployment viable and present observations from operating in a continuous deployment environment.},
  Keywords                 = {productivity;social networking (online);software development management;software quality;team working;Facebook;OANDA;code size growth;continuous deployment;developer productivity;engineering team size;high-profile Internet firms;small incremental software updates deployment;software engineering;software quality;top-level management support;Facebook;Organizations;Productivity;Servers;Software;Testing;Agile Process;Continuous Delivery;Continuous Deployment;Deployment Process;DevOps;Release Engineering;Release Management},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7724385,
  Title                    = {A recent trends in software defined networking (SDN) security},
  Author                   = {M. Saxena and R. Kumar},
  Booktitle                = {2016 3rd International Conference on Computing for Sustainable Global Development (INDIACom)},
  Year                     = {2016},
  Month                    = {March},
  Pages                    = {851-855},

  Abstract                 = {Software defined networking (SDN) has established a new method for creating and administering networks. It is a new architecture which has been designed to enable more agile and cost effective networks. It promotes separation of data plane and control plane. Thereby enabling network switches in the data plane to act as packet forwarding devices. It also uses logical centralized software to control the entire network behavior. SDN introduces new vulnerabilities that are not present in traditional networks such as communication bottlenecks between control plane and data plane. Current research in SDN follows several identifiable trends that are related to the state of deployment of SDN technologies. In this paper, SDN architecture, its salient features along with recent security aspects have been highlighted.},
  Keywords                 = {computer network security;software defined networking;SDN;communication bottlenecks;control plane;data plane;logical centralized software;network switches;packet forwarding devices;salient features;software defined networking security;Conferences;Decision support systems;Handheld computers;Application layer;Control layer;Infrastructure layer;Open Networking Foundation;OpenFlow;SDN;Security},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7406852,
  Title                    = {Towards an Agile Requirements Engineering Process Combining HERMES 5 and SCRUM},
  Author                   = {B. Schär and S. Jüngling and B. Thönssen},
  Booktitle                = {2015 International Conference on Enterprise Systems (ES)},
  Year                     = {2015},
  Month                    = {Oct},
  Pages                    = {98-109},

  Doi                      = {10.1109/ES.2015.17},
  Keywords                 = {formal verification;government data processing;project management;software prototyping;Federal IT Steering Unit;HERMES 5 project management method;IT projects;SCRUM;Swiss Federal Administration;agile requirements engineering process;agile software development;customized IT application;Planning;Project management;Requirements engineering;Scrum (Software development);Software;HERMES 5;SCRUM;agility;requirements engineering},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6595247,
  Title                    = {Scrum in a software engineering course: An in-depth praxis report},
  Author                   = {A. Scharf and A. Koch},
  Booktitle                = {2013 26th International Conference on Software Engineering Education and Training (CSEE T)},
  Year                     = {2013},
  Month                    = {May},
  Pages                    = {159-168},

  Abstract                 = {Working in a team for a limited period of time and to deliver a high quality product are some of the skills students should gain during their studies at the university. Therefore universities should offer software engineering courses teaching agile methodologies broadly used in the industry as well. These courses need to simulate a real world working environment introducing agile methods like XP or Scrum. We present the design of our Scrum based undergraduate course Software Engineering 1, provide in-depth information about important course details and also give recommendations for tools we find useful. Unlike other software engineering courses we have a large staff of up to 11 supervisors allowing us to simulate close to real world working conditions. We provide every team with a tutor who is responsible for observing his team and answer questions. Additional research assistants are playing the role of customers.},
  Doi                      = {10.1109/CSEET.2013.6595247},
  ISSN                     = {1093-0175},
  Keywords                 = {computer science education;educational courses;educational institutions;software prototyping;teaching;Scrum method;XP method;agile methodology teaching;software engineering course;student skill;university;Customer relationship management;Educational institutions;Games;Programming;Servers},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6759189,
  Title                    = {Coordination in Large-Scale Agile Software Development: A Multiteam Systems Perspective},
  Author                   = {A. Scheerer and T. Hildenbrand and T. Kude},
  Booktitle                = {2014 47th Hawaii International Conference on System Sciences},
  Year                     = {2014},
  Month                    = {Jan},
  Pages                    = {4780-4788},

  Abstract                 = {The widespread use of lean and agile development methods shows a fundamental shift in how organizations try to cope with complexity and volatility issues. In large-scale settings, the coordination of many people often results in a team of teams setup. We introduce the multiteam systems perspective to describe different conceptual strategy types for inter-team coordination. These types are illustrated with examples from a large enterprise software development organization.},
  Doi                      = {10.1109/HICSS.2014.587},
  ISSN                     = {1530-1605},
  Keywords                 = {software prototyping;team working;enterprise software development organization;interteam coordination;large-scale agile software development;lean method;multiteam systems perspective;Cognition;Complexity theory;Context;Organizations;Planning;Software;Standards organizations},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7070425,
  Title                    = {Model-Driven Co-evolution for Agile Development},
  Author                   = {J. Schönböck and J. Etzlstorfer and E. Kapsammer and A. Kusel and W. Retschitzegger and W. Schwinger},
  Booktitle                = {2015 48th Hawaii International Conference on System Sciences},
  Year                     = {2015},
  Month                    = {Jan},
  Pages                    = {5094-5103},

  Abstract                 = {In agile Model-Driven Engineering, the evolution of diverse software artifacts is omnipresent. Especially the evolution of metamodels, defining the grammar of, e.g., Domain Specific Languages, is quite challenging, since many dependent artifacts, including models and transformations, have to be co-evolved to re-establish consistency. Although much research effort has been spent to automate co-evolution, crucial issues remain open and a systematic survey of the state of research across different domains is still missing. This paper provides an extensive survey evaluating various co-evolution approaches also from areas in software engineering like data, ontology, and grammar engineering on basis of a detailed set of criteria serving as a research roadmap for further developments in the area of co-evolution for agile MDE. Based on these results, a conceptual co-evolution framework is presented and illustrated by a running example especially targeting a decrease in co-evolution effort, an increase in co-evolution consistency, and an advance in extensibility.},
  Doi                      = {10.1109/HICSS.2015.603},
  ISSN                     = {1530-1605},
  Keywords                 = {formal specification;ontologies (artificial intelligence);software maintenance;software prototyping;agile MDE;agile development;agile model-driven engineering;co-evolution automation;grammar engineering;metamodels;model-driven co-evolution;ontology;software artifacts;software engineering;DSL;Estimation;Grammar;Ontologies;Semantics;Software;XML;Agile Model-Driven Development;Co-Evolution;Evolution},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7490597,
  Title                    = {An implementer's view of the evolutionary systems engineering for autonomous unmanned systems},
  Author                   = {C. Scrapper and R. Halterman and J. Dahmann},
  Booktitle                = {2016 Annual IEEE Systems Conference (SysCon)},
  Year                     = {2016},
  Month                    = {April},
  Pages                    = {1-8},

  Doi                      = {10.1109/SYSCON.2016.7490597},
  Keywords                 = {Analytical models;Government;Software;System integration;Systematics},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7500564,
  Title                    = {A concept for an Agile Mission Development Facility for CubeSat and suborbital missions},
  Author                   = {D. Selva and B. Dingwall and S. Altunc},
  Booktitle                = {2016 IEEE Aerospace Conference},
  Year                     = {2016},
  Month                    = {March},
  Pages                    = {1-17},

  Abstract                 = {This paper introduces the Agile Mission Development Facility (AMDF), a concept for a new mission development platform at NASA Wallops that will develop a specific kind of Earth observing missions based on networks of small assets (CubeSats, UAVs and balloons) in a timeframe of weeks to months. To achieve this reduced development time, the AMDF will use a new catalog-based and platform-based approach to mission design that emphasizes commonality at the subsystem or assembly level and the use of COTS components when possible. This will necessarily constrain the range of performance achievable by these missions, since only a few alternatives will be available for each subsystem. Only missions whose objectives can be achieved through a combination of the available modules will be considered. In addition to providing a high-level description of the AMDF architecture, this paper describes the process by which this platform consisting of a few standard modules will be optimally designed to maximize the range of attainable performance while keeping short development times. Particular emphasis is put on the communications module that will enable cross-links between nanosatellites, UAVs, balloons, and ground assets. Importantly, the AMDF focuses on a different customer segment than other similar NASA facilities such as the IDC at GSFC or Team X at JPL. AMDF Missions are not meant to compete with larger NASA missions in terms of performance, operational risk or mission assurance, but rather they intend to be complementary. In particular, the very short development time and multi-asset character of these systems will enable a completely new class of missions that can effectively respond to a rapidly changing phenomenon of opportunity, such as a hurricane, a volcano or a geopolitical event of interest for which a larger mission would be inappropriate. Additionally, they can be used to accelerate technology infusion for future larger missions, as long as the new technology satis- ies a certain set of interface requirements. The AMDF will maximize reuse of existing design, integration and testing software and hardware infrastructure at NASA Wallops as well as other NASA centers. All potentially relevant stakeholders, such as NASA Goddard, Headquarters, JPL, Ames, the Aerospace Corp., Applied Physics Lab, and universities with nanosatellite programs will be involved and considered in the AMDF development process. This paper focuses on the description of the design aspects of the AMDF, as this is where most of the novelty lies. Integration, testing, launching and operations are only briefly discussed. A description of the system architecture of the AMDF is given using model-based systems engineering tools (SysML). An example application mission to measure ecological changes in the Jefferson and Washington National Forests is also discussed to illustrate the new kinds of missions that this facility could enable.},
  Doi                      = {10.1109/AERO.2016.7500564},
  Keywords                 = {aerospace computing;aerospace testing;artificial satellites;program testing;software engineering;systems engineering;AMDF development process;AMDF system architecture;COTS components;CubeSat;Earth observing missions;GSFC;JPL;NASA Wallops;NASA facility;SysML;Team X;UAVs;agile mission development facility;assembly level;balloons;catalog-based approach;ground assets;hardware infrastructure testing;mission assurance;model-based systems engineering tools;multiasset character;nanosatellites;operational risk;platform-based approach;small asset network;software infrastructure testing;suborbital missions;Computer architecture;Earth;Earth Observing System;NASA;Real-time systems;Space vehicles},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7210467,
  Title                    = {Enhancing usability through agility: Pair programming for a practice-oriented integration approach},
  Author                   = {M. Seyam},
  Booktitle                = {2015 International Conference on Collaboration Technologies and Systems (CTS)},
  Year                     = {2015},
  Month                    = {June},
  Pages                    = {460-463},

  Abstract                 = {In many of today's small companies and startups, software development teams consist of small number of developers who can sometimes perform the roles of designers as part of their tasks. This leads to development processes that may not give enough attention to the importance of UX/UI design for the product under development. Moreover, such small teams may lack the required organization skills that help them manage how they work together. As a result, such teams usually face problems with delivering the “right” product, as well as not being able to follow a sustainable development process. In a similar context, CS students in programming classes are facing almost the same problems of small teams in industry. To tackle these problems, many researchers and practitioners have proposed integrating practices from agile and UX design methods to help developers emphasize the UX requirements and be able to organize their work environment. Despite the differences in how they approach their goals, both agile and UX teams seek user satisfaction by providing working and usable software. In our research, we explore how such integration can be a good fit for both CS students and software developers. We begin by showing our proposed set of practices that can be directly applied by developers. We also show how we will proceed by focusing on Pair Programming (PP) as an agile practice that promotes a collaborative work environment, which we will study its impact on students who build user interfaces in a Mobile Software Development course. Using PP in a class sitting will help us evaluate how agile practices that emphasize collaborative workspaces work with UX design, as well as introducing an adaptive and collaborative teaching approach that can be used in CS programming labs.},
  Doi                      = {10.1109/CTS.2015.7210467},
  Keywords                 = {computer science education;educational courses;software prototyping;software reusability;teaching;user centred design;Mobile Software Development course;UX design methods;adaptive teaching approach;agile design methods;collaborative teaching approach;collaborative work environment;pair programming;practice-oriented integration approach;usability enhancement;user experience;Collaboration;Context;Decision support systems;Education;Medical services;Software;Sustainable development;Frameworks for collaboration;collaboration in education;collaborative software development},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7757533,
  Title                    = {Teaching mobile application development through lectures, interactive tutorials, and Pair Programming},
  Author                   = {M. Seyam and D. S. McCrickard and S. Niu and A. Esakia and W. Kim},
  Booktitle                = {2016 IEEE Frontiers in Education Conference (FIE)},
  Year                     = {2016},
  Month                    = {Oct},
  Pages                    = {1-9},

  Abstract                 = {Research suggests that different teaching styles and multiple exposures of different styles to material can aid in the learning process. While there are guidelines for identifying the best teaching style for material, new and evolving areas can present unique challenges. The emerging area of mobile software development, which combines aspects of software, hardware, and interpersonal interaction, captures many such challenges; e.g., understanding how to develop for multiple screen sizes, designing for GPS time lag, dealing with unreliable sensor data. Teaching these challenging materials seemed well suited for multiple approaches that leveraged different learning styles. This paper examines three teaching approaches employed in ten teaching modules across two semesters of a mobile software development course. The approaches included lectures, interactive tutorials, and Pair Programming. Lectures were used to introduce topics and explore underlying theories of development. The lectures included time for questions from and for the students, but otherwise did not have an active learning component. Two active learning approaches used in the class were interactive tutorials and Pair Programming. Interactive tutorials presented applied development approaches, then explored their use in an individual-based hands-on demos. Pair Programming is an agile software development practice, used in both industry and education, which enforces a role-based approach to learning new programming concepts. Homeworks were used to assess learning, and surveys reflected student satisfaction. Results show areas of promise and of concern with regard to the learning styles. It seems that repetition of topics is important for mastery of the topics. Foundational theories seem well suited for lectures, while programming concepts work better in active learning situations. Additional learning took place through office hours, online question forums, and individual and group online explora- ion. The findings suggest specific approaches to teaching challenging and unique mobile software development topics as well as a general approach to identifying ways to distribute learning objectives across lectures, interactive tutorials, and Pair Programming sessions.},
  Doi                      = {10.1109/FIE.2016.7757533},
  Keywords                 = {computer aided instruction;computer science education;educational courses;mobile computing;software engineering;teaching;GPS time lag;active learning component;active learning situations;agile software development practice;distribute learning objectives;group online exploration;hardware;homeworks;individual-based hands-on demos;interactive tutorials;interpersonal interaction;learning process;learning styles;lectures;mobile software development course;mobile software development topics;online question forums;pair programming sessions;programming concepts;student satisfaction;teaching mobile application development;teaching modules;teaching styles;unreliable sensor data;Mobile communication;Programming profession;Software;Springs;Tutorials;Computer Science Education;Mobile Application Development;Pair Programming},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7210412,
  Title                    = {Collaborating on mobile app design through pair programming: A practice-oriented approach overview and expert review},
  Author                   = {M. Seyam and S. McCrickard},
  Booktitle                = {2015 International Conference on Collaboration Technologies and Systems (CTS)},
  Year                     = {2015},
  Month                    = {June},
  Pages                    = {124-131},

  Abstract                 = {In many of today's small companies and startups, developers may not give enough attention to the importance of UX/UI design for the product under development. Moreover, such small teams may lack the required organization skills that help them to collaborate and work together. As a result, such teams usually face problems with delivering the “right” product, as well as not being able to follow a sustainable development process. In a similar context, CS students in programming classes are facing almost the same problems of small teams in industry. To tackle these problems, various approaches for integrating agile development methods and UX design methods have been proposed to help developers carefully consider the UX requirements, and to be able to organize their work environment. In this paper, we explore how such integration can be a good fit for both CS students and software developers, especially for those who work on mobile development. We present our proposed set of integration guidelines, and then we focus on Pair Programming (PP) as an agile practice that promotes a collaborative work environment. The expert reviews conducted in this paper helped us exlore how PP can be introduced to CS students (and later, to developers in the market) to support collaborative work environments. Moreover, Using PP in class provides an adaptive and collaborative teaching approach that can be used in CS programming labs. We also discuss the pitfalls that can affect developers during PP sessions, and how to avoid such negative effects. We conclude by providing a set of recommended practices that can be applied to introduce PP for developers in both academic and industrial contexts.},
  Doi                      = {10.1109/CTS.2015.7210412},
  Keywords                 = {computer science education;groupware;mobile computing;programming;software prototyping;sustainable development;teaching;user interfaces;CS students;UX requirements;UX-UI design;adaptive teaching approach;agile development methods;collaborative teaching approach;collaborative work environment;mobile app design;mobile development;pair programming;product development;programming classes;sustainable development process;Collaboration;Collaborative work;Decision support systems;Education;Organizations;Programming profession;Frameworks for collaboration;UX design;agile methods;collaboration in education;collaborative software development;pair programming},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7463881,
  Title                    = {FLAX: A Flexible Architecture for Large Scale Cloud Fabric},
  Author                   = {Y. Shao and Y. Luo and X. Hu and Y. Xue and Y. Xiang and K. Yin},
  Booktitle                = {2015 IEEE International Conference on Smart City/SocialCom/SustainCom (SmartCity)},
  Year                     = {2015},
  Month                    = {Dec},
  Pages                    = {1151-1154},

  Abstract                 = {The scalability and geographical location agility of data centers have become two key concerns for those critical cloud applications. However, it is still infeasible to build non-blocking data centers which are scalable, agile and cost-effective, given that current network devices are either closed high-end or performance limited, and the dedicated fiber is expensive and hard to expand. This paper proposes FLAX, a flexible architecture consolidating intra-and inter-cloud networks for large scale fabric. By leveraging on Software-Defined Networking techniques, FLAX can provide non-blocking application networks and scale out to millions of 10 gigabit ethernet ports across geographically-separated and arbitrarily-connected cloud data centers. Under the global view of network controllers, uniformed design of switches in different hierarchies and involving Wide Area Networks make it possible to fully use all network elements, and hence driving down the cost of network infrastructure. We present the architecture design and future work in this paper, and also a prototype deployed in one of the largest third-party data centers in eastern China.},
  Doi                      = {10.1109/SmartCity.2015.226},
  Keywords                 = {cloud computing;computer centres;local area networks;software defined networking;wide area networks;Ethernet ports;FLAX;arbitrarily-connected cloud data center;architecture design;critical cloud applications;flexible architecture;geographical location agility;geographically-separated cloud data center;intercloud network;intracloud network;large scale cloud fabric;large scale fabric;network controllers;nonblocking data centers;software-defined networking techniques;wide area networks;Bandwidth;Cloud computing;Control systems;Fabrics;Network topology;Ports (Computers);Topology;Cloud Fabric;Data Center Interconnection;Software-Defined Networking},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7857596,
  Title                    = {Identifying the contextual relationship among the Agile adoption factors through interpretive structural modeling},
  Author                   = {S. Sharma and N. Hasteer and S. P. Mishra and J. P. Van Belle},
  Booktitle                = {2016 International Conference on Information Technology (InCITe) - The Next Generation IT Summit on the Theme - Internet of Things: Connect your Worlds},
  Year                     = {2016},
  Month                    = {Oct},
  Pages                    = {87-92},

  Abstract                 = {Today, industry is moving towards adopting an Agile development methodology due to its numerous benefits over other methodologies. There are certain pertinent attributes of this methodology that facilitates towards adoption of Agile at large. Our study focuses on identification of these attributes and establishes a contextual relationship among them. We have incorporated the Interpretive Structural Modeling (ISM) approach to establish a model and classify the identified attributes.},
  Doi                      = {10.1109/INCITE.2016.7857596},
  Keywords                 = {software prototyping;ISM;agile adoption factors;agile development methodology;contextual relationship;interpretive structural modeling;Agile software development;Correlation;Industries;Organizations;Principal component analysis;Social factors;Software;Agile adoption;Interpretive Structural Modeling(ISM);success factors},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7154962,
  Title                    = {Communication understandability enhancement in GSD},
  Author                   = {S. Sharma and P. Kaur and U. Kaur},
  Booktitle                = {2015 International Conference on Futuristic Trends on Computational Analysis and Knowledge Management (ABLAZE)},
  Year                     = {2015},
  Month                    = {Feb},
  Pages                    = {28-33},

  Abstract                 = {Global software development (GSD) is becoming a common practice in today's world and it has brought significant changes to software development industries. Majority of the software development companies are adopting Global Software Development (GSD) to get benefits like reduced development cost, better quality product and access to skilled labor etc. However along with various benefits many challenges related to communication, coordination and control are also involved in globally distributed projects as compared to co-located projects. Mitigation of these Global Software Development challenges by themselves is not an easy task. Agile Software Development can be beneficial with respect to GSD as it emphasize on customer collaboration, interaction between individuals, continuous requirement gathering, delivering of the software with in time and budget constraints etc. There are also certain differences accompanied with the benefits of merger between agile and Global software development like communication, cultural and time zone differences, trust and knowledge management. This research study aims to look at current empirical evidence regarding challenges faced in a particular GSD context and mitigation strategies to deal with these challenges both from the perspectives of literature and industry and to develop a framework that helps to mitigate these GSD challenges.},
  Doi                      = {10.1109/ABLAZE.2015.7154962},
  Keywords                 = {knowledge management;software prototyping;software quality;GSD;agile software development;communication understandability enhancement;continuous requirement gathering;cultural differences;customer collaboration;global software development;knowledge management;software quality;time zone differences;Agile software development;Companies;Industries;Knowledge management;Market research;Software;Software engineering;Automatic Spell Correction;Communication issues;Global Software Development;Regional languages},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7577421,
  Title                    = {Agile Workbench: Tying People, Process, and Tools in Distributed Agile Delivery},
  Author                   = {V. S. Sharma and V. Kaulgud},
  Booktitle                = {2016 IEEE 11th International Conference on Global Software Engineering (ICGSE)},
  Year                     = {2016},
  Month                    = {Aug},
  Pages                    = {69-73},

  Doi                      = {10.1109/ICGSE.2016.17},
  ISSN                     = {2329-6313},
  Keywords                 = {customer satisfaction;software development management;software prototyping;agile software development approaches;agile workbench;context-rich actionable alerts;customer requirements;distributed agile delivery projects;gamification approaches;global software delivery model;interactive agile workbench;software teams;Collaboration;Context;Measurement;Organizations;Software;Stakeholders;Standards organizations;Agile Gamification;Contextual Collaboration;Distributed Agile Delivery},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7426640,
  Title                    = {An Automated Contextual Collaboration Approach for Distributed Agile Delivery},
  Author                   = {V. S. Sharma and V. Kaulgud},
  Booktitle                = {2015 30th IEEE/ACM International Conference on Automated Software Engineering Workshop (ASEW)},
  Year                     = {2015},
  Month                    = {Nov},
  Pages                    = {74-77},

  Abstract                 = {The Agile way of developing and delivering software systems is gaining mainstream adoption due to the imperatives of a quickly changing technical landscape, business requirements and customer expectations. To truly leverage the power of Agile, big organizations need to be able to utilize distributed teams effectively. However, Agile delivery relies hugely on collaboration among team members and this can become a stumbling block among such geographically dispersed teams. Moreover, in such large projects the development and process layer needs to be monitored for any problematic patterns or events that could potentially cause the Sprints to fail. Here, we describe an automated approach which allows for contextual collaboration in such distributed Agile projects. The approach captures important events from the process and the development environment and uses a rule based approach to then automatically create awareness regarding them to appropriate roles in the project. Every team member receives an actionable feed in a MyContext pane which then leads the team member to navigate to an Activity centric context where collaboration specific to that activity can take place. This approach has been implemented in a process guidance and awareness workbench that we are piloting within our organization.},
  Doi                      = {10.1109/ASEW.2015.24},
  Keywords                 = {software prototyping;MyContext pane;activity centric context;automated contextual collaboration approach;distributed Agile projects;Collaboration;Context;Electronic mail;Feeds;Organizations;Planning;Stakeholders;Contextual Collaboration;Distributed Agile},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7890571,
  Title                    = {Does the } # x201c;Project Manager  # {x201d; Still Exist in Agile Software Development Projects?},
  Author                   = {Y. Shastri and R. Hoda and R. Amor},
  Booktitle                = {2016 23rd Asia-Pacific Software Engineering Conference (APSEC)},
  Year                     = {2016},
  Month                    = {Dec},
  Pages                    = {57-64},

  Abstract                 = {The project manager has been a ubiquitous feature of traditional software development projects. However, agile software development (ASD) methods which emphasize selforganizing teams and rapid response to change have done away with the project manager's title. New job titles such as the scrum master and product owner have been introduced instead. It is unclear as to what extent the "project manager" is still encountered in the agile software industry. An online survey was posted out to agile special interest groups on popular social media platforms to discover the frequency of the job title "project manager" in agile projects. Analysis of the 97 responses from 31 countries around the world revealed that: a) the title of project manager is still widely used (67%); b) there is a correlation between the team size and presence of project manager such that there is a higher probability the project manager will be present in teams of 5-10 members and those over 25 members; and c) there is an inverse correlation between the co-location of a team and presence of project manager. Further research is needed to better understand why the project manager continues to be present on ASD projects and how their role may have changed.},
  Doi                      = {10.1109/APSEC.2016.019},
  ISSN                     = {1530-1362},
  Keywords                 = {software prototyping;ASD projects;agile software development projects;agile software industry;product owner;project manager;rapid response;scrum master;self organizing teams;social media platforms;ubiquitous feature;Agile software development;Buildings;Decision making;Planning;Project management;Software;agile project management;agile software development;project manager;software project management},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7292582,
  Title                    = {Traditional vs Agile development a comparison using chaos theory},
  Author                   = {D. M. Shawky},
  Booktitle                = {2014 9th International Conference on Software Paradigm Trends (ICSOFT-PT)},
  Year                     = {2014},
  Month                    = {Aug},
  Pages                    = {109-114},

  Abstract                 = {Agile software development describes those methods with iterative and incremental development. This development method came into view to overcome the drawbacks of traditional development methods. Although agile development methods have become very popular since the introduction of the Agile Manifesto in 2001, however, there is an ongoing debate about the strengths and weakness of these methods in comparison with traditional ones. In this paper, a new dimension for the comparison between the two methods is presented. We postulate that, since both methods are based mainly on human activity, the two methods can be modeled using Chaos Theory. Source codes that are produced by the two methods in subsequent versions are characterized by a set of software metrics. Modeling and analysis of these metrics are performed using the Chaos Theory. Initial results show that the metrics sequences of both methods are chaotic sequences. Furthermore, agile methods produce more chaotic metrics sequences. However, is being chaotic a good or a bad feature? We argue that sometimes being chaotic is not a weakness, on the contrary, it is a strength.},
  Keywords                 = {Complexity theory;Correlation;Measurement;Mutual information;Software;Time series analysis;Agile Development;Chaos Theory;Software Metrics;Waterfall Method},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7166091,
  Title                    = {Toward Defining the Role of the Software Architect},
  Author                   = {S. Sherman and I. Hadar},
  Booktitle                = {2015 IEEE/ACM 8th International Workshop on Cooperative and Human Aspects of Software Engineering},
  Year                     = {2015},
  Month                    = {May},
  Pages                    = {71-76},

  Abstract                 = {Software architecture is integral part of the software development; however, its integration in the development process has become more challenging with the transition from traditional to agile development methods, and with the architects becoming much more than technological experts responsible for high-level design. Some attention has been paid in recent years to the role of the architect, seeking a contemporary and comprehensive definition of this role. This paper reports on the results of an online survey, with the participation of 104 software architects, aimed at defining the soft aspects of the software architect's role. The results reveal that architects perform a variety of human-centered activities such as mentoring, leadership, reviewing and management,. Moreover, in the contexts of mentoring and leadership, software architects strive to do more than they currently do.},
  Doi                      = {10.1109/CHASE.2015.17},
  Keywords                 = {software architecture;agile development methods;human-centered activities;software architecture;software development;Computer architecture;Project management;Software;Software architecture;Software architect;communication;leadership;mentoring;soft skills},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7490713,
  Title                    = {The status quo and realization of Waterfall simulation based on particle system},
  Author                   = {L. Shi and W. Wang},
  Booktitle                = {2015 4th International Conference on Computer Science and Network Technology (ICCSNT)},
  Year                     = {2015},
  Month                    = {Dec},
  Pages                    = {91-93},
  Volume                   = {01},

  Doi                      = {10.1109/ICCSNT.2015.7490713},
  Keywords                 = {computer graphics;digital simulation;dying;graphics generation algorithm;particle movement;particle system;virtual realization technology;waterfall simulation;Collision avoidance;Computational modeling;Computers;Graphics;Heuristic algorithms;Mathematical model;Real-time systems;Collision detection;Particle System;Waterfall Simulation},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7814526,
  Title                    = {Agility and Quality Attributes in Open Source Software Projects Release Practices},
  Author                   = {A. C. B. G. d. Silva and G. d. F. Carneiro and A. C. M. d. Paula and M. P. Monteiro and F. B. e. Abreu},
  Booktitle                = {2016 10th International Conference on the Quality of Information and Communications Technology (QUATIC)},
  Year                     = {2016},
  Month                    = {Sept},
  Pages                    = {107-112},

  Abstract                 = {Context: The need to accelerate software delivery, supporting faster time-to-market and frequent community developers/ users feedback are issues that have lead to relevant changes in software development practices. Many Open Source Software (OSS) projects have engaged to achieve this through the adoption of agile practices in software release practices. Problem: There is no secondary study in the literature discussing evidences of the influence of agile approaches in OSS projects release practices. Goal: Identify published reports in the literature that characterize to which extent agility has influenced release approaches in OSS projects. Method: The characterization of studies followed a fivephase process to present a panoramic view of software releases practices in the context of OSS projects. Results: The overall data collected from 14 studies published from January 2006 to January 2016 depicted the following scenario: nine issues that characterize the advantages/influence of agility in OSS release approaches; four challenge issues in this approach; three possibilities of implementation and two main motivations towards the adoption of software release approaches through agility; and finally three main strategies to implement it. Conclusion: This study provides an up-to-date and structured understanding of the influence of agility on OSS projects release approaches based on findings systematically collected from a list of relevant references in the last decade.},
  Doi                      = {10.1109/QUATIC.2016.029},
  Keywords                 = {project management;public domain software;software development management;OSS projects;OSS release approach;agility attribute;open source software;open source software projects release practices;quality attribute;software delivery;Best practices;Context;Focusing;Linux;Open source software;Software engineering;Agile Methods;Frequent Releases;Open Source Software Projects;Rapid Releases},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6984101,
  Title                    = {Towards a System Requirements Specification Template that Minimizes Combinatorial Effects},
  Author                   = {A. R. d. Silva and J. Verelst and H. Mannaert and D. A. Ferreira and P. Huysmans},
  Booktitle                = {2014 9th International Conference on the Quality of Information and Communications Technology},
  Year                     = {2014},
  Month                    = {Sept},
  Pages                    = {124-129},

  Abstract                 = {This paper introduces the problem of combinatorial effects based on the evidence of many dependencies that explicitly or implicitly exist among the elements commonly used on system requirements specification (SRS). We start from the analysis and comparison of three popular SRS templates (namely IEEE 830-1998, RUP and with all templates), mainly from the perspective of the constructs and models involved. Then we propose and discuss a set of practical recommendations to help defining a SRS template that may better prevent (to some extent) the referred problem.},
  Doi                      = {10.1109/QUATIC.2014.22},
  Keywords                 = {formal specification;program verification;IEEE 830-1998 template;RUP template;SRS templates;Withall template;combinatorial effect minimization;system requirements specification template;Business;Context;Context modeling;Sections;Software;Terminology;Unified modeling language;Combinatorial Effect (CE);SRS templates;System Requirements Specification (SRS)},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6910405,
  Title                    = {Agile Methods Adoption on Software Development: A Pilot Review},
  Author                   = {C. C. Silva and A. Goldman},
  Booktitle                = {2014 Agile Conference},
  Year                     = {2014},
  Month                    = {July},
  Pages                    = {64-65},

  Abstract                 = {Scientific publications throughout the years describe study cases and experience reports from organizations that have been through the agile adoption process. At the same time, frameworks and generic methods for adoption have also been published intending to obtain some predictability on the steps of this transition. However, when disposing of either generic or specific inputs to help them on their way towards agility, companies do not know how or where to start their changes. This short paper describes the current investigation state of a systematic review that aims to understand better how organizations effectively adopt agile methods, trying to find a correlation between the characteristics of an organization and the way it effectively transitions to agile.},
  Doi                      = {10.1109/AGILE.2014.14},
  Keywords                 = {organisational aspects;software houses;software prototyping;agile method adoption;organization characteristics;scientific publications;software development;systematic review;Abstracts;Companies;Computer science;Context;Software;Systematics;agile methods;agile methods adoption;organizational characteristics;systematic review},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6984105,
  Title                    = {A Reference Model for Agile Quality Assurance: Combining Agile Methodologies and Maturity Models},
  Author                   = {F. S. Silva and F. S. F. Soares and A. L. Peres and I. M. d. Azevedo and P. P. Pinto and S. R. d. L. Meira},
  Booktitle                = {2014 9th International Conference on the Quality of Information and Communications Technology},
  Year                     = {2014},
  Month                    = {Sept},
  Pages                    = {139-144},

  Abstract                 = {The area of Quality Assurance (QA) is a challenge for many software development organizations that want to implement maturity models level rating, like Capability Maturity Model Integration (CMMI), together with agile methodologies. This study aims to present AgileQA-RM, an Agile Quality Assurance Reference Model to help organizations in QA implementation. The model proposition considers results of a systematic literature review about CMMI and agile, and a case study about QA in an organization with CMMI and agile. The methodology for model evaluation started with a check of its process areas adherence with other maturity models and with agile practices and activities. A survey based on expert opinion was also performed. Five maturity levels and eighteen process areas compose AgileQA-RM. Each process area has mandatory purpose, expected results and informative work products. Initial model assessments indicates that it can contribute to help organizations assessing its current situation about agile QA practices and supporting quality improvement through adoption of agile QA practices.},
  Doi                      = {10.1109/QUATIC.2014.25},
  Keywords                 = {Capability Maturity Model;quality assurance;software prototyping;software quality;AgileQA-RM;CMMI;Capability Maturity Model Integration;QA implementation;agile QA practices;agile activities;agile methodologies;agile quality assurance reference model;maturity models level rating;model assessments;model evaluation;quality improvement;software development organizations;Capability maturity model;Organizations;Planning;Quality assurance;Software;Standards organizations;Training;CMMI;agile methodologies;maturity models;quality assurance},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7748914,
  Title                    = {An experience in blending the traditional and Agile methodologies to assist in a small software development project},
  Author                   = {W. Singhto and N. Denwattana},
  Booktitle                = {2016 13th International Joint Conference on Computer Science and Software Engineering (JCSSE)},
  Year                     = {2016},
  Month                    = {July},
  Pages                    = {1-5},

  Abstract                 = {Agile methodology has been adopted for many software development projects, due to its ability to deal with changing product requirements, while Traditional methods are better suited to dealing with projects that have clearly defined requirements. Because of the differences in the two methodologies and their diverse approaches to solving development problems, it is necessary to understand their individual approaches in order for the benefits to be compared and synthesized. This study is necessary to understand the differences and diversities of the two methodologies using the checklist table to select and adopt the appropriate methodology for particular development projects. Results of this study not only provide positive answers but also offer suggestions for better integration.},
  Doi                      = {10.1109/JCSSE.2016.7748914},
  Keywords                 = {formal specification;project management;software development management;software prototyping;agile methodologies;development problems;product requirements;software development project;Adaptation models;Computer science;Encoding;Organizations;Software;Testing;Training;Agile;Combined Agile and Traditional;Project mangement;SMEs;Traditional},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7070417,
  Title                    = {Adaptive Finance and Control: Combining Lean, Agile, and Beyond Budgeting for Financial and Organizational Flexibility},
  Author                   = {R. Sirkiä and M. Laanti},
  Booktitle                = {2015 48th Hawaii International Conference on System Sciences},
  Year                     = {2015},
  Month                    = {Jan},
  Pages                    = {5030-5037},

  Abstract                 = {Enterprises that approach uncertainty and risk in software development based on lean and agile methods [1] often do experience financial planning of projects as a restriction. Traditional budgeting and cost reporting is a system based on rigid frames, and it -- along with the process of project cost accounting -- burdens the lean and agile enterprise with unnecessary and counterproductive overhead and friction. The traditional system provides, at best, a false sense of cost control to any enterprise. In this paper we share insights related to how project-based cost accounting can be transformed to a structure based on agile and lean finance and control. Our insights and examples are intended to remove a key impediment to transforming the finance function of your enterprise to something measurably more lean and agile. This work is based both on an actual case completed with our employer and on our knowledge of financial processes at major Finnish companies.},
  Doi                      = {10.1109/HICSS.2015.596},
  ISSN                     = {1530-1605},
  Keywords                 = {budgeting;cost accounting;planning;project management;software prototyping;Finnish companies;agile SW development;agile method;agile software development;budgeting;cost control;cost reporting;enterprise;finance function;financial flexibility;financial planning;financial processes;lean method;organizational flexibility;project cost accounting process;Companies;Finance;Investment;Planning;Portfolios;Uncertainty;agile;agile organizations;behind budgeting;finance and budgeting},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7170402,
  Title                    = {An agile strategy for implementing CMMI project management practices in software organizations},
  Author                   = {F. S. F. Soares and S. R. de Lemos Meira},
  Booktitle                = {2015 10th Iberian Conference on Information Systems and Technologies (CISTI)},
  Year                     = {2015},
  Month                    = {June},
  Pages                    = {1-4},

  Abstract                 = {The transition from traditional methods to agile project management methods and the changes needed to obtain their real benefits are difficult to achieve. Applying agile methodologies based on maturity models such as Capability Maturity Model Integration (CMMI) has been the focus of much debate in academic circles and in the software industry. Given the high and widespread rate of failure in adopting agility, and also arising from many of the reasons given to project management, this paper proposes a strategy for implementing agile project management in companies which seek to comply with CMMI by making use of the best practices of Agile Project Management and of the main agile methods and frameworks in a gradual and disciplined manner thereby contributing to the increased success rate of software development projects.},
  Doi                      = {10.1109/CISTI.2015.7170402},
  ISSN                     = {2166-0727},
  Keywords                 = {Capability Maturity Model;project management;software prototyping;CMMI project management;Capability Maturity Model integration;agile project management methods;software development projects;software industry;software organizations;Analytical models;Capability maturity model;Companies;Project management;Software;Standards organizations;APM;CMMI;agile methodologies;maturity model;project management},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7302745,
  Title                    = {Implementing a model-based design and test workflow},
  Author                   = {V. Socci},
  Booktitle                = {2015 IEEE International Symposium on Systems Engineering (ISSE)},
  Year                     = {2015},
  Month                    = {Sept},
  Pages                    = {130-134},

  Abstract                 = {A model-based design workflow for embedded control systems can accelerate product development, improve performance, increase reliability, and reduce engineering cost. Several current technology trends are driving engineering organizations to establish model-based workflows that enable concurrent and collaborative engineering. In this way, embedded controls engineers can quickly develop reliable products of the highest performance. This paper discusses trends in automotive embedded controls and explains the use of model-based engineering workflows to accelerate embedded controls development. These trends include: platform-based requirements, systems/HW/SW codesign, agile methods, rapid prototyping needs, growing software content, integrated data systems, greater system complexity, and growing engineering needs. A model-based design workflow improves product development processes in the current engineering paradigm. Methods to accelerate development of model-based controls through the V cycle are described. Unconstrained prototyping with constrained design is shown as an effective means to converge on an implementation. Pros and cons of product development processes are contrasted. Model-based workflows provide a framework for controls engineers to incrementally create requirements, evaluate algorithms, develop architectures, coordinate designs, and facilitate requirements-based systems verification and validation testing. A framework that integrates requirements and testing improves system reliability and reduces development risks. Industry standards, such as ISO26262 and DO-178C, enforce such a framework. Tools and technologies that can be used to support modelbased development from functional requirements to automated testing are outlined. Readers gain an understanding of how to establish and deploy a model-based design workflow into their organizations to effectively and efficiently manage the development lifecycle of embedded controls.},
  Doi                      = {10.1109/SysEng.2015.7302745},
  Keywords                 = {automotive engineering;concurrent engineering;control engineering computing;design engineering;embedded systems;formal verification;hardware-software codesign;product life cycle management;program testing;software prototyping;software reliability;standards;V cycle;agile method;automated testing;automotive embedded control systems;collaborative engineering;concurrent engineering;functional requirements;industry standard;integrated data system;model-based control;model-based design workflow;platform-based requirement;product development lifecycle management;rapid prototyping;requirement-based systems verification;software content;system reliability improvement;system-HW-SW codesign;validation testing;Automotive engineering;Complexity theory;Market research;Organizations;Software;Standards organizations;Testing;automotive;embedded controls;model-based;prototyping;software},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7857233,
  Title                    = {Spatial-aware iterative integration of crisis management information systems},
  Author                   = {B. Sojeva and J. Xie},
  Booktitle                = {2016 3rd International Conference on Information and Communication Technologies for Disaster Management (ICT-DM)},
  Year                     = {2016},
  Month                    = {Dec},
  Pages                    = {1-3},

  Abstract                 = {Information systems are playing increasingly more important role in modern crisis management process. An integrated system with capabilities like foresight, prediction and decision support capabilities can provide substantial addedvalue for decision makers on both tactical and policy-making levels. It is however a challenging task to seamlessly integrate various systems with dedicated functionalities on functional and technical aspects, especially when these systems are developed independently from each other with substantially different design rationale and software technology. In this paper, an iterative system integration approach is proposed by harmonising service-oriented, model-driven and agile system development. Several design principles and best practices from the software engineering community are adopted to facilitate the integration task. In addition, extra attention is paid to provide enhanced support for integrating spatial data into the crisis management workflow. This approach aims to provide a pragmatic system integration methodology to integrate crisis management information systems in a more effective and efficient fashion.},
  Doi                      = {10.1109/ICT-DM.2016.7857233},
  Keywords                 = {data integration;emergency management;iterative methods;management information systems;service-oriented architecture;software prototyping;agile system development;crisis management information systems;crisis management workflow;design rationale;functional aspects;iterative system integration;model-driven development;policy-making levels;service-oriented development;software engineering community;software technology;spatial data integration;spatial-aware iterative integration;tactical levels;technical aspects;Containers;Crisis management;Information systems;Service-oriented architecture;Spatial databases;System integration;Disaster management;geographical information system;service-oriented architecture;system integration},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6962616,
  Title                    = {Scrum integration in stage-gate models for collaborative product development – A case study of three industrial manufacturers},
  Author                   = {A. F. Sommer and A. Slavensky and V. Thuy Nguyen and K. Steger-Jensen and I. Dukovska-Popovska},
  Booktitle                = {2013 IEEE International Conference on Industrial Engineering and Engineering Management},
  Year                     = {2013},
  Month                    = {Dec},
  Pages                    = {1278-1282},

  Abstract                 = {The relevance of collaborative Product Development (PD) is rising with the decrease of product life cycles combined with growing customer demands. Industrial manufacturers now experience competition in the global market where differentiation is necessary for survival. Hence, in order to differentiate from low-cost competitors and increase PD performance, some industrial manufacturers now seek competitive advantage by experimenting with new ways for collaborative PD. This includes integrating customer-focused agile process models like Scrum from the software industry into their existing PD models. Thus, instead of replacing traditional stage-gate models, agile methods are currently integrated in existing PD models generating hybrid solution for collaborative PD. This paper includes a study of three industrial cases that have successfully integrated Scrum into the stage-gate process model for collaborative PD. The paper introduces the three functional hybrid models, including the impact on PD performance, PD roles and customer collaboration.},
  Doi                      = {10.1109/IEEM.2013.6962616},
  ISSN                     = {2157-3611},
  Keywords                 = {customer relationship management;product development;product life cycle management;PD models;PD performance;collaborative product development;customer collaboration;customer-focused agile process models;global market;product life cycles;scrum integration;software industry;stage-gate models;three industrial manufacturers;Collaboration;Companies;Interviews;Planning;Product development;Project management;Software;Collaborative product development;Scrum implementation;Stage-gate model;performance},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7436936,
  Title                    = {End to End Automation on Cloud with Build Pipeline: The Case for DevOps in Insurance Industry, Continuous Integration, Continuous Testing, and Continuous Delivery},
  Author                   = {M. Soni},
  Booktitle                = {2015 IEEE International Conference on Cloud Computing in Emerging Markets (CCEM)},
  Year                     = {2015},
  Month                    = {Nov},
  Pages                    = {85-89},

  Doi                      = {10.1109/CCEM.2015.29},
  Keywords                 = {cloud computing;insurance data processing;program diagnostics;program testing;software prototyping;source code (software);DevOps;agile methodology;build pipeline;cloud computing;code analysis;continuous delivery;continuous integration;continuous testing;end to end automation;infrastructure provisioning;insurance industry;notifications;packaging;software deployment;source code compilation;test execution;Automation;Cloud computing;Configuration management;Insurance;Pipelines;Servers;Testing;Automation;Cloud Computing;Configuration Management;Continuous Delivery;Continuous Integration;Continuous Testing;DevOps},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6612875,
  Title                    = {Assessing an Organization's Capability to Effectively Implement Its Selected Agile Method(s): An Objectives, Principles, Strategies Approach},
  Author                   = {S. Soundararajan and O. Balci and J. D. Arthur},
  Booktitle                = {2013 Agile Conference},
  Year                     = {2013},
  Month                    = {Aug},
  Pages                    = {22-31},

  Abstract                 = {Agile methods provide an organization or a team with the flexibility to adopt a selected subset of principles and practices based on their culture, their values, and the types of systems that they develop. More specifically, every organization or team implements a customized agile method, tailored to better accommodate its needs. However, the extent to which a customized method supports the organizational objectives, i.e. the 'goodness' of that method, should be demonstrable. Existing agile assessment approaches focus on comparative analyses, or are limited in scope and application. In this research, we present a systematic, comprehensive approach to assessing the 'goodness' of agile methods. We examine an agile method based on (1) its adequacy, (2) the capability of the organization to support the adopted principles and practices specified by the method, and (3) the method's effectiveness. We employ the Objectives, Principles and Strategies (OPS) Framework to guide our assessment process. The Framework (a) specifies objectives of the agile philosophy, (b) identifies principles that support the objectives, (c) designates strategies that implement the principles, (d) defines linkages that relate objectives to principles, and principles to strategies, and (e) prescribes indicators for assessing the extent to which an organization supports the implementation and effectiveness of those strategies. The propagation of indicator values along the linkages provides a multi-level assessment view of the agile method. In this paper, we discuss our assessment approach and substantiation results.},
  Doi                      = {10.1109/AGILE.2013.9},
  Keywords                 = {organisational aspects;software development management;software prototyping;OPS framework;adequacy;agile assessment;agile philosophy objectives;customized agile method;indicator values;method effectiveness;multilevel assessment view;objectives-principles-and-strategies;organizational objectives;Capability maturity model;Couplings;Documentation;Measurement;Object recognition;Organizations;Software;Adequacy;Agile Assessment;Capability;Effectiveness;Indicators;Linkages among Objectives;Principles;and Strategies},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7427860,
  Title                    = {Using Scrum in Outsourced Government Projects: An Action Research},
  Author                   = {T. L. d. Sousa and E. Venson and R. M. d. C. Figueiredo and R. A. Kosloski and L. C. M. R. Júnior},
  Booktitle                = {2016 49th Hawaii International Conference on System Sciences (HICSS)},
  Year                     = {2016},
  Month                    = {Jan},
  Pages                    = {5447-5456},

  Abstract                 = {The growth in popularity of Agile methods plus a dissatisfaction of Government agencies with traditional software development methods have stimulated the adoption of Agile Methods. The action research approach was used in this work to assess the implementation of a process for the Management of Agile Development Demands - whose original acronym in Portuguese is 'GeDDAS' - for a software factory in a Brazilian Federal Government Organisation. There, two-action research cycles were done with two pilot projects. The work of action research was effective and contributed to the successful outcome of the initiative. The implementation of agile approaches in a public organisation is slow and complex affair mainly due to the interferences made in the working environment of the companies involved and to a high staff turnover. In the end, the difficulties found and lessons learned in the process, as well as the results achieved are presented.},
  Doi                      = {10.1109/HICSS.2016.672},
  ISSN                     = {1530-1605},
  Keywords                 = {government data processing;software prototyping;Brazilian federal government organisation;GeDDAS;agile development methods;outsourced government projects;public organisation;software development methods;software factory;Companies;Context;Contracts;Government;Planning;Production facilities;Software;Action research;Outsourcing;Scrum},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7344249,
  Title                    = {Evaluating capstone project through flexible and collaborative use of Scrum framework},
  Author                   = {R. T. de Souza and S. D. Zorzo and D. A. da Silva},
  Booktitle                = {2015 IEEE Frontiers in Education Conference (FIE)},
  Year                     = {2015},
  Month                    = {Oct},
  Pages                    = {1-7},

  Abstract                 = {Scrum framework disseminates principles that guarantee a dynamic and adaptable Software development process. Supporting the software engineering teaching using agile methodologies and Scrum framework with some proper adaptations is the challenge of Federal University of São Carlos in the Software Engineering specialization course for graduated students. The article presents an evaluation of Scrum adaptations performed to evaluate the capstone project. In this case study, the adoption of Scrum to manage the capstone project represents a direct and objective approach in order to have an environment similar to the real one. Moreover, the inexperience of the teams, the partial dedication in the projects and the distributed teams showed the necessity of self-management of the teams among other lessons learned to teach Software Engineering in this setting. Finally, evaluating a capstone project using Scrum framework in a flexible and collaborative way made it possible to realize the difficulties faced by the teams and the need for technical improvements, thanks to Scrum framework functions.},
  Doi                      = {10.1109/FIE.2015.7344249},
  Keywords                 = {computer aided instruction;computer science education;educational courses;groupware;software prototyping;Scrum framework;adaptable software development process;agile methodology;capstone project;dynamic software development process;software engineering specialization course;software engineering teaching;Collaboration;Education;Industries;Planning;Scrum (Software development);Software;Software engineering;SCRUM;agile methodologies;higher education;software engineering},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7500911,
  Title                    = {Estimation and reduction of drag in fuselage of solar powered UAV},
  Author                   = {V. Srinivasa and G. A. Nagappa and S. Sridhara and B. A. Biradar},
  Booktitle                = {2016 IEEE Aerospace Conference},
  Year                     = {2016},
  Month                    = {March},
  Pages                    = {1-11},

  Abstract                 = {This research aims to optimize the fuselage geometry of Solar Unmanned Aerial Vehicle, in order to obtain minimal drag. Fuselage is found to be one of the major contributors to drag. Thus, a methodology is established consisting of 5 prominent phases. First, a Preliminary Fuselage, capable of hosting the various components that need to be secured within the fuselage of a Solar UAV is developed. Second, the drag coefficient on this fuselage is estimated using a flow analysis software, ANSYS® Fluent®. Thirdly, the geometry of the fuselage is then iterated using a code written on MATLAB® R2015a and XFOIL without compromising on the component layout, until an optimized geometry offering minimal drag is arrived. The next phase involves the development of fuselage using modelling software. The final phase involves drag coefficient estimation for the optimized fuselage. The results of the optimized fuselage are then compared with that of the preliminary fuselage. Also, the drag coefficient estimation on the generated splines are validated by verifying the results of ANSYS® with the results of XFOIL. It is seen that the drag coefficient and hence the drag force on the optimized fuselage is significantly less than the preliminary fuselage. The immediate consequence of drag reduction is a reduction in thrust required for steady flight, thereby reducing the power consumption. Reduced power consumption implies increased endurance for Unmanned Aerial Vehicles. Increasing endurance will lead to enhanced capabilities and applications. This methodology may be adopted to a variety of fuselages of conventional Unmanned Aerial Vehicles which are currently designed empirically.},
  Doi                      = {10.1109/AERO.2016.7500911},
  Keywords                 = {aerospace components;aerospace engineering;autonomous aerial vehicles;drag reduction;force;mechanical engineering computing;ANSYS Fluent software;MATLAB R2015a software;XFOIL software;drag coefficient estimation;drag force;drag reduction;fuselage geometry;solar powered UAV;solar unmanned aerial vehicle;Drag;Estimation;Finite element analysis;Geometry;MATLAB;Optimization;Splines (mathematics)},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7352703,
  Title                    = {Is there an agile handover? An empirical study of documentation and project handover practices across agile software teams},
  Author                   = {C. J. Stettina and E. Kroon},
  Booktitle                = {2013 International Conference on Engineering, Technology and Innovation (ICE) IEEE International Technology Management Conference},
  Year                     = {2013},
  Month                    = {June},
  Pages                    = {1-12},

  Abstract                 = {The growing use of agile and lean methods has heated the discussion on efficiency and sustainability of software engineering processes. During project handovers, for example, loss of knowledge has been indicated and critics of agile methods point at a lack of documentation. In this paper we take the perspective of patterns of human action, looking at the actions the teams take and the artifacts they use during a software project handover. Our results from 30 teams in small to large size projects cover the perceptions of a variety of roles and indicate that the adoption is a learning process in three interdependent phases: Environment, System and Architecture. The participants in our study perceived the biggest gaps in the usefulness of available design and requirements documentation. Based on our findings we suggest that documentation artifacts should rather support the learning process and that including maintenance staff in the development process significantly helps improving the handover.},
  Doi                      = {10.1109/ITMC.2013.7352703},
  Keywords                 = {learning (artificial intelligence);project management;software engineering;software management;software prototyping;agile handover;agile method;agile project management;agile software;lean method;learning process;software engineering process;software project handover;Documentation;Handover;Interviews;Maintenance engineering;Organizations;Software;Agile project management;agile teams;empirical study;knowledge sharing;organizational management and coordination;process improvement;software development},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7347190,
  Title                    = {Virtual openflow-based SDN Wi-Fi access point},
  Author                   = {O. Stiti and O. Braham and G. Pujolle},
  Booktitle                = {2015 Global Information Infrastructure and Networking Symposium (GIIS)},
  Year                     = {2015},
  Month                    = {Oct},
  Pages                    = {1-3},

  Abstract                 = {With cloud services and mobile devices remodeling how we live, work and play, people expect Wi-Fi to be both fast and reliable. For ICT, facing the fast growing mobility demand needs a more agile WLAN. Software Defined Networking (SDN) offers programmability, a logically centralized control model, and a flow-based paradigm that is perfectly designed for highly scalable mobile and Wi-Fi networks. Our approach provides an agile and cost-effective communications platform for addressing these challenges, while attaining the high degree of scalability, security, and flexibility needed to support a diverse complement of services. In our work we developed a solution that allows clients to instantiate and deploy virtual OpenFlow Wi-Fi Access Points (AP) and virtual SDN controllers on the fly. By this technic, virtual instances are isolated and fully scalable for creating our SDN. Our goal is to create an architecture that is both ergonomic and flexible in order to meet the need for connection and client mobility.},
  Doi                      = {10.1109/GIIS.2015.7347190},
  Keywords                 = {cloud computing;ergonomics;mobility management (mobile radio);software defined networking;wireless LAN;ICT;SDN;Wi-Fi networks;agile WLAN;client mobility;cloud services;connection mobility;cost-effective communication platform;flow-based paradigm;logically centralized control model;mobile device remodeling;programmability;software defined networking;virtual OpenFlow Wi-Fi access points;virtual SDN controllers;virtual openflow-based SDN Wi-Fi access point;Communication system security;IEEE 802.11 Standard;Mobile communication;Roaming;Security;Wireless LAN;Mobility;OpenFlow AP;Wi-Fi;Wireless SDN},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7302487,
  Title                    = {A Maturity Model for Scaling Agile Development},
  Author                   = {I. Stojanov and O. Turetken and J. J. M. Trienekens},
  Booktitle                = {2015 41st Euromicro Conference on Software Engineering and Advanced Applications},
  Year                     = {2015},
  Month                    = {Aug},
  Pages                    = {446-453},

  Abstract                 = {Although the agile software development approaches have gained wide acceptance in practice, the concerns regarding the scalability and integration of agile approaches in traditional system development organizations have remained. The difficulty of adopting agile practices increases when there is a need to scale these practices. Scaled Agile Framework (SAFe) has emerged as a solution to address some of these concerns. Despite few encouraging results of SAFe adoption, case studies indicate several challenges of SAFe adoption. Currently, there is a lack of a well-structured gradual approach for implementing and establishing SAFe. Before and during SAFe adoption, organizations require a uniform model for assessing the current state and progress, and for establishing a roadmap for the initiative. To address this need, we developed a maturity model for adopting agile and SAFe practices. Taking an existing agile maturity model as the basis, we extended the model with practices that are key to scaling agile practices for the SAFe. The model is developed and refined using a Delphi study. Subsequently, a case study was conducted in a large organization where the model was applied to assess the maturity level of the organization in adopting SAFe.},
  Doi                      = {10.1109/SEAA.2015.29},
  ISSN                     = {1089-6503},
  Keywords                 = {Capability Maturity Model;software prototyping;Delphi study;SAFe maturity model;SAFe practices;agile maturity model;agile practices;agile software development scaling;organization maturity level;scaled agile framework;Collaboration;Industries;Organizations;Planning;Portfolios;Software;Testing;Agile software development;Delphi study;SAFe;maturity model;scaled agile framework},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7060120,
  Title                    = {Developing software product and test automation software using Agile methodology},
  Author                   = {A. K. Sultanía},
  Booktitle                = {Proceedings of the 2015 Third International Conference on Computer, Communication, Control and Information Technology (C3IT)},
  Year                     = {2015},
  Month                    = {Feb},
  Pages                    = {1-4},

  Abstract                 = {The use of testing framework has become a growing requirement in software development. This framework is a kind of software which can automate the pre-generated test cases. So, for developing test automation software an incremental and timeframe iterative approach known as Agile Software Development Methodology can be used. It provides software developers a working test framework early with respect to traditional software development methods e.g. waterfall model. In this paper, an approach of developing test automation software with closed collaboration with product development team is discussed. The proposed method modifies the Agile Development method with scrum by introducing few meetings for combined teams working for development of software product and test automation software. An industrial case study is also presented in the paper.},
  Doi                      = {10.1109/C3IT.2015.7060120},
  Keywords                 = {program testing;software development management;software prototyping;team working;agile software development methodology;incremental iterative approach;pregenerated test cases;product development team;software product development;team working;test automation software development;timeframe iterative approach;waterfall model;Automation;Companies;Manuals;Product development;Scrum (Software development);Software;Testing;agile methodology;scrum;software development model;test automation;test tool},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7911978,
  Title                    = {Agile: Adapting to need of the hour: Understanding Agile methodology and Agile techniques},
  Author                   = {D. Sunner},
  Booktitle                = {2016 2nd International Conference on Applied and Theoretical Computing and Communication Technology (iCATccT)},
  Year                     = {2016},
  Month                    = {July},
  Pages                    = {130-135},

  Doi                      = {10.1109/ICATCCT.2016.7911978},
  Keywords                 = {software prototyping;agile development;software development method;software industry;Crystals;Documentation;Organizations;Planning;Programming;Software;Testing;Agile;Agile methods;Agile techniques},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6986020,
  Title                    = {Agile project manager behavior: The taxonomy},
  Author                   = {K. Sutling and Z. Mansor and S. Widyarto and S. Letchmunan and N. H. Arshad},
  Booktitle                = {2014 8th. Malaysian Software Engineering Conference (MySEC)},
  Year                     = {2014},
  Month                    = {Sept},
  Pages                    = {234-239},

  Doi                      = {10.1109/MySec.2014.6986020},
  Keywords                 = {ethical aspects;human resource management;innovation management;project management;software development management;agile methodology;agile project manager behavior;communication behavior;creative and innovative behavior;ethics behavior;innovation growth;leadership behavior;openness behavior;results orientation behavior;software development process;software project management;strategic behavior;Agile software development;Collaboration;Ethics;Lead;Project management;Software;Taxonomy;agile behavior;agile methodologies;agile project manager;communication;creative;ethics;innovative;leadership;openness;result orientation;strategic},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7471379,
  Title                    = {Cloud Ecosystems Support for Internet of Things and DevOps Using Patterns},
  Author                   = {M. H. Syed and E. B. Fernandez},
  Booktitle                = {2016 IEEE First International Conference on Internet-of-Things Design and Implementation (IoTDI)},
  Year                     = {2016},
  Month                    = {April},
  Pages                    = {301-304},

  Abstract                 = {An ecosystem is the expansion of a software product line architecture to include systems outside the product which interact with the product. A cloud ecosystem includes interdependent and communicating components. Not only the cloud ecosystem itself keeps evolving, but it also affects the way in which we develop and deploy software. We model the architecture of a cloud ecosystem as a set of patterns, showing partial descriptions for some of them. We then discuss the role of this evolving platform in facilitating the Internet of Things and the new DevOps framework for developing software.},
  Doi                      = {10.1109/IoTDI.2015.31},
  Keywords                 = {Internet of Things;cloud computing;object-oriented methods;object-oriented programming;software architecture;software product lines;software prototyping;DevOps framework;Internet of Things;IoT;agile software development;cloud ecosystem support;software pattern;software product line architecture;Cloud computing;Computer architecture;Containers;Ecosystems;Security;Unified modeling language;DevOps;Internet of Things;Software ecosystems;cloud computing;fog computing;reference architectures;software containers},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6525520,
  Title                    = {A Survey to Service Composition Methods Using Aspects Classification},
  Author                   = {Y. Syu and Y. Y. Fanjiang},
  Booktitle                = {2013 IEEE Seventh International Symposium on Service-Oriented System Engineering},
  Year                     = {2013},
  Month                    = {March},
  Pages                    = {170-181},

  Abstract                 = {As a promising, few-risk, low-cost, and agile way to rapidly produce and construct executable intended software, in recent years automatic service composition related techniques and methods have been a prevailing and deeply-studied research field, receiving a lot of attentions. For this research field, upon our long-term studies and efforts as well as papers reviewed we present, in this article, a technical profound survey along with the future challenges and directions observed. Before the main body of the survey appears, there are introductions to some vital background knowledge and adopted survey framework, respectively. The framework used in organizing the structure of the survey has been aided and inspired by aspect-oriented paradigm.},
  Doi                      = {10.1109/SOSE.2013.55},
  Keywords                 = {Web services;aspect-oriented programming;semantic Web;service-oriented architecture;aspect classification;aspect-oriented paradigm;automatic service composition;executable intended software construction;executable intended software production;semantic Web service;service composition methods;Automation;Cascading style sheets;Ontologies;Runtime;Semantics;Service-oriented architecture;Automatic Service Composition;Semantic Web Service;Service-Oriented Architecture},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7121876,
  Title                    = {Agile network re-optimization supporting seamless service migration},
  Author                   = {Y. Takita and T. Hashiguchi and K. Tajima and T. Katagiri and T. Naito and Q. Zhang and X. Wang and Inwoong Kim and P. Palacharla and M. Sekiya},
  Booktitle                = {2015 Optical Fiber Communications Conference and Exhibition (OFC)},
  Year                     = {2015},
  Month                    = {March},
  Pages                    = {1-3},

  Abstract                 = {We demonstrate novel re-optimization design techniques for realizing agile and seamless service migration with minimum connection disruptions. We also show the effectiveness of our integer linear programming based approach through network simulations.},
  Doi                      = {10.1364/OFC.2015.Tu3H.2},
  Keywords                 = {computer network management;graph theory;integer programming;linear programming;software defined networking;software prototyping;agile network reoptimization design technique;dependency graph construction;integer linear programming based approach;minimum connection disruptions;network resource control;network resource management;network resource utilization;network simulations;optimal resource assignment;seamless service migration;software-defined networking;Bandwidth;Bridges;Optical fiber networks;Optical fibers;Optimization;Resource management;Routing},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@Article{7593429,
  Title                    = {"Anything as a Service" for 5G Mobile Systems},
  Author                   = {T. Taleb and A. Ksentini and R. Jantti},
  Journal                  = {IEEE Network},
  Year                     = {2016},

  Month                    = {November},
  Number                   = {6},
  Pages                    = {84-91},
  Volume                   = {30},

  Abstract                 = {5G network architecture and its functions are yet to be defined. However, it is generally agreed that cloud computing, network function virtualization (NFV), and software defined networking (SDN) will be key enabling technologies for 5G. Indeed, putting all these technologies together ensures several advantages in terms of network configuration flexibility, scalability, and elasticity, which are highly needed to fulfill the numerous requirements of 5G. Furthermore, 5G network management procedures should be as simple as possible, allowing network operators to orchestrate and manage the lifecycle of their virtual network infrastructures (VNIs) and the corresponding virtual network functions (VNFs), in a cognitive and programmable fashion. To this end, we introduce the concept of “Anything as a Service” (ANYaaS), which allows a network operator to create and orchestrate 5G services on demand and in a dynamic way. ANYaaS relies on the reference ETSI NFV architecture to orchestrate and manage important services such as mobile Content Delivery Network as a Service (CDNaaS), Traffic Offload as a Service (TOFaaS), and Machine Type Communications as a Service (MTCaaS). Ultimately, ANYaaS aims for enabling dynamic creation and management of mobile services through agile approaches that handle 5G network resources and services.},
  Doi                      = {10.1109/MNET.2016.1500244RP},
  ISSN                     = {0890-8044},
  Keywords                 = {5G mobile communication;cognitive radio;software defined networking;telecommunication traffic;5G mobile systems;5G network architecture;5G network management;5G network resources;5G network services;ANYaaS;ETSI NFV architecture;anything as a service;machine type communications;mobile content delivery network as a service;network function virtualization;software defined networking;virtual network infrastructures;5G mobile communication;Cloud computing;Computer architecture;Mobile computing;Monitoring},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@Article{7725222,
  Title                    = {The Architect's Role in Community Shepherding},
  Author                   = {D. A. Tamburri and R. Kazman and H. Fahimi},
  Journal                  = {IEEE Software},
  Year                     = {2016},

  Month                    = {Nov},
  Number                   = {6},
  Pages                    = {70-79},
  Volume                   = {33},

  Abstract                 = {Software architects don't just design architecture components or champion architecture qualities; they often must guide and harmonize the entire community of project stakeholders. The community-shepherding aspects of the architect's role have been gaining attention, given the increasing importance of complex "organizational rewiring" scenarios such as DevOps, open source strategies, transitions to agile development, and corporate acquisitions. In these scenarios, architects would benefit by having effective models to align communities with architectures. This article discusses the "smells" indicating that a community isn't functioning efficiently, offers a set of mitigations for those smells, and provides an overview of community types.},
  Doi                      = {10.1109/MS.2016.144},
  ISSN                     = {0740-7459},
  Keywords                 = {organisational aspects;software architecture;software quality;architecture component design;architecture qualities;community shepherding;organizational rewiring;project stakeholders;software architects;Computer architecture;Cultural differences;Professional aspects;Software architecture;architectural social debt;social debt management;software architecture shepherds;software communities;software community smells;software development;software engineering;software organizational structure;software social debt},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7396338,
  Title                    = {Agile for large scale projects ??? A hybrid approach},
  Author                   = {M. Tanveer},
  Booktitle                = {2015 National Software Engineering Conference (NSEC)},
  Year                     = {2015},
  Month                    = {Dec},
  Pages                    = {14-18},

  Abstract                 = {Agile Process is an established methodology mostly adopted by small organizations as a software process model because of its fast and effective response to client requirements during the software development cycle. For that matter, most of the agile practices are focused on team needs and are very effective in implementing client requirements. However, multi-portfolio and team based corporations employ Rational Unified Professing (RUP) model which is good in handling very complex processes but slower in terms of abrupt client interventions. A hybrid approach could be adopted to bring more accountability along with overcoming RUP's undesired delays. This paper analyses the strength and weakness of both Agile and RUP. Finally, an eclectic approach is suggested combining the best practices of both Agile and RUP in management, communication and predictability.},
  Doi                      = {10.1109/NSEC.2015.7396338},
  Keywords                 = {project management;software development management;software prototyping;RUP model;RUP undesired delays;abrupt client intervention;accountability;agile process;best practices;client requirement;eclectic approach;hybrid approach;large scale project;multiportfolio corporation;rational unified professing model;software development cycle;software process model;team based corporation;Documentation;Organizations;Schedules;Scrum (Software development);Software;Testing;RUP;Scrum and RUP;agile;hybrid;large scale projects},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7019376,
  Title                    = {FDRD: Feature driven reuse development process model},
  Author                   = {S. Thakur and H. Singh},
  Booktitle                = {2014 IEEE International Conference on Advanced Communications, Control and Computing Technologies},
  Year                     = {2014},
  Month                    = {May},
  Pages                    = {1593-1598},

  Abstract                 = {As fast the business requirements changes, the need of rapid of development and economical feasible software also increases. The new software development techniques and models are coming to picture to solve the problems of rapid changing requirements. Agile methodology is one of the approaches to fulfill the current business requirements, which is flexible to adapt the change at any phase of development. Feature driven development (FDD) is an agile based process model based on feature development, adapted by many organizations. The limitation of agile process is its incapability to reuse components those are developed through agile processes. Adopting reuse is a challenging task but it can be used at an initial level by integrating with various development processes. Reuse oriented development of software is considered to be one of the most efficient techniques to improve software quality as it increases the productivity and reduces the development effort and cost. This paper purposes a reengineered Feature driven reuse development (FDRD) process model which integrate reuse concept with feature driven development process model. The model improves the productivity of organization and quality of the produced product.},
  Doi                      = {10.1109/ICACCCT.2014.7019376},
  Keywords                 = {software houses;software prototyping;software quality;software reusability;FDD;FDRD process model;agile based process model;business requirements;development cost reduction;development effort reduction;organization productivity improvement;product quality improvement;productivity improvement;reengineered feature driven reuse development process model;reuse concept;reuse oriented software development;software quality improvement;Adaptation models;Companies;Productivity;Software;Unified modeling language;Feature Driven Development (FDD);Software Reuse},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7550829,
  Title                    = {Business process ontology for defining user story},
  Author                   = {C. Thamrongchote and W. Vatanawood},
  Booktitle                = {2016 IEEE/ACIS 15th International Conference on Computer and Information Science (ICIS)},
  Year                     = {2016},
  Month                    = {June},
  Pages                    = {1-4},

  Abstract                 = {Writing a user story is essential to communicate with end users and developers. It is popular practices found in most agile methodologies. Therefore, to reuse the user stories from the previous successful projects becomes necessary. In this paper, we propose the business process ontology for defining user story. The ontology is a knowledge base designed to collect the user stories in term of N-triple. The ontology schema is designed using classes and hierarchy relation along with the properties according to Role-Action-Object relations. We introduce the synonym property to simplify and reduce the number of the nodes in the ontology as well. Finally, we demonstrate how to initially populate and build the ontology from the historical user stories.},
  Doi                      = {10.1109/ICIS.2016.7550829},
  Keywords                 = {business data processing;knowledge based systems;ontologies (artificial intelligence);software prototyping;agile methodologies;business process ontology;hierarchy relation;historical user stories;knowledge base;role-action-object relations;synonym property;Business;Computers;Knowledge based systems;Ontologies;Software systems;Writing;Business Process;Ontology;User Story},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6912659,
  Title                    = {Using boundary management for more effective product development},
  Author                   = {V. Thomson},
  Booktitle                = {Proceedings of the 2014 International Conference on Innovative Design and Manufacturing (ICIDM)},
  Year                     = {2014},
  Month                    = {Aug},
  Pages                    = {2-2},

  Abstract                 = {Summary form only given. Twenty years ago, most companies developed their own products in a single location and brought them to market themselves. Today, original equipment manufacturers are enlisting partners on a global scale as subsystem designers and manufacturers in order to create and deliver new products into the market more rapidly and more frequently. This is especially true for large, complex products from the aerospace, telecommunications, electronics, and software industries. To assure the delivery of information across organizational boundaries, new coordination mechanisms need to be adopted (boundary management). In this presentation, best practices are described on how original equipment manufacturers and partners self-organize and use agile, cooperative techniques to maintain daily communication among numerous internal and partner engineers to better coordinate product design and system integration. Boundary management techniques can also be applied to coordinate partners in supply chains. The presentation focuses on examples from the aerospace industry; however, these tactics can be applied in any organization to innovate at faster rates, to make delivery times more predictable, and to realize shorter product development timelines.},
  Doi                      = {10.1109/IDAM.2014.6912659},
  Keywords                 = {product design;product development;aerospace industry;boundary management;complex products;coordination mechanisms;information across organizational boundaries;original equipment manufacturers;product design;product development timelines;software industries;subsystem designers;supply chains;system integration},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@Book{6908664,
  Title                    = {Hard Problems in Software Testing:Solutions Using Testing as a Service (TaaS)},
  Author                   = {Scott Tilley and Brianna Floss},
  Publisher                = {Morgan \& Claypool},
  Year                     = {2014},

  Booktitle                = {Hard Problems in Software Testing:Solutions Using Testing as a Service (TaaS)},
  Doi                      = {10.2200/S00587ED1V01Y201407SWE002},
  ISBN                     = {9781627055246},
  Owner                    = {ville},
  Pages                    = {103-},
  Timestamp                = {2017.06.27},
  Url                      = {http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6908664}
}

@InProceedings{7102624,
  Title                    = {MetTest: A Test Automation Framework for Development of a Point-To-Multipoint Radio},
  Author                   = {M. D. Tokcan and O. Ozturk and H. Tuna},
  Booktitle                = {2015 IEEE 8th International Conference on Software Testing, Verification and Validation (ICST)},
  Year                     = {2015},
  Month                    = {April},
  Pages                    = {1-2},

  Abstract                 = {Continuous and timely testing is an indispensable activity for agile software development, which requires assignment of persistent and dedicated resources throughout the whole life cycle of a project. Testing becomes even more complicated when the system under test is a distributed and embedded real-time system. In this study, we present MetTest, an industrial test automation framework designed and deployed for development of a point-to-multipoint Ethernet based radio having various modes of operation, each with an associated performance goal. MetTest pursues an automated and a scheduled sequence of actions consisting of building executable from a code repository, running unit and full system performance tests on hardware, measuring and verifying necessary performance metrics and e- mailing a summary to the attention of software developers. MetTest also stores test results for long term analysis and tracking of software performance through a web application. Some long- term statistics and test results acquired from the framework are also presented to demonstrate the usefulness of the framework.},
  Doi                      = {10.1109/ICST.2015.7102624},
  ISSN                     = {2159-4848},
  Keywords                 = {radio networks;software prototyping;wireless LAN;MetTest;agile software performance tracking;e-mailing;industrial test automation framework design;long-term statistics;point-to-multipoint Ethernet based radio;web application;Automation;Computer bugs;Defense industry;Measurement;Software;Testing;Throughput},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7174673,
  Title                    = {Weekly Round Trips from Norms to Requirements and Tests: An Industrial Experience Report},
  Author                   = {P. Tonella and R. Tiella},
  Booktitle                = {2015 IEEE/ACM 2nd International Workshop on Requirements Engineering and Testing},
  Year                     = {2015},
  Month                    = {May},
  Pages                    = {20-26},

  Abstract                 = {SEAC is a major software provider in Italy in the area of business management, with a focus on norms and human resources. SEAC is re-engineering their huge legacy system to C#/SQL Server. To minimise the risks associated with such reengineering project, SEAC has adopted an incremental and agile process model, which produces small and frequent releases of new, incremental modules that replace a portion of the legacy system at a time. Since the SEAC software handles business activities that are highly dependent on norms, such as the contracts of employees, the taxation of incomes and salaries, the pension contributions, one of the key challenges is to support a smooth transformation of norms into requirements, into code and eventually into test cases used to verify that norms have been implemented as prescribed by the law. The SE research unit at FBK has been involved to introduce a set of practices aimed at supporting such transformation, so as to improve the current process. We report the experience made during the project in this paper.},
  Doi                      = {10.1109/RET.2015.12},
  Keywords                 = {C++ language;formal verification;program testing;software maintenance;software prototyping;C# server;FBK;Italy;SEAC software;SQL server;agile process model;business management;industrial experience report;law;legacy system;reengineering project;taxation;Aging;Computer architecture;Contracts;Manuals;Software;Testing;Industrial experience;agile process;requirements and testing in practice},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7851797,
  Title                    = {Metamorphic testing: A new student engagement approach for a new software testing paradigm},
  Author                   = {D. Towey and T. Y. Chen and F. C. Kuo and H. Liu and Z. Q. Zhou},
  Booktitle                = {2016 IEEE International Conference on Teaching, Assessment, and Learning for Engineering (TALE)},
  Year                     = {2016},
  Month                    = {Dec},
  Pages                    = {218-225},

  Abstract                 = {Software testing, as part of the software quality assurance processes in software engineering (SE), is seldom cited as the most engaging part of a software engineer's training. In spite of its importance, it was often a neglected area, and only recently, with the adoption of more agile methodologies, has testing come to the fore. Testers face challenges, including the need to be able to identify when software is not behaving as expected. Metamorphic Testing (MT) first appeared twenty years ago in an effort to help testers facing the oracle problem (not having a mechanism to determine correct software behavior). Although MT is simple in concept, it has demonstrated very impressive fault-finding ability, and has recently been attracting a great deal of interest. Training students and practitioners to effectively apply MT has become an important goal, but to date, no textbook or guidelines have been made readily available. This paper, written by some of the leading voices in the MT community, is a sharing of some of the experiences, reflections and insights gained through teaching MT (and other related subjects). These experiences indicate that not only is MT effective in industry and at fault-finding, it has the potential to really engage students in creative SE classroom activities.},
  Doi                      = {10.1109/TALE.2016.7851797},
  Keywords                 = {computer science education;program testing;SE classroom activities;agile methodologies;metamorphic testing;software engineer training;software engineering;software quality assurance;software testing;student engagement;Context;Education;Reflection;Software;Software engineering;Software testing;Autoethnography;Metamorphic Testing;Reflection;Teaching Computer Science;Teaching Software Engineering},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7831582,
  Title                    = {Tailoring MDevSPICE® for Mobile Medical Apps},
  Author                   = {K. Trektere and F. McCaffery and M. Lepmets and G. Barry},
  Booktitle                = {2016 IEEE/ACM International Conference on Software and System Processes (ICSSP)},
  Year                     = {2016},
  Month                    = {May},
  Pages                    = {106-110},

  Abstract                 = {Mobile medical apps play an important role within the healthcare industry. Developers of mobile medical apps need to understand what is required when a mobile application fulfils the definition of a medical device. Such applications have to be developed in compliance with medical device regulations. This can be a challenge for mobile medical application developers as medical device software is normally developed with a focus upon producing the regulatory documentation that is essential to market such devices. Regulatory compliance is usually achieved by adopting a plan-driven software development approach, which is not typically the method used to develop mobile applications. MDevSPICE® is a medical device software process framework that integrates processes from various medical device software and generic software development best practice standards. In this paper the authors describe how the MDevSPICE® framework can be tailored to support mobile medical applications development by introducing agile practices into the framework.},
  Doi                      = {10.1109/ICSSP.2016.022},
  Keywords                 = {biomedical equipment;medical computing;mobile computing;mobile handsets;software engineering;MDevSPICE;generic software development;healthcare industry;medical device regulations;medical device software process;mobile application;mobile medical applications;mobile medical apps;plan-driven software development;regulatory compliance;Documentation;IEC Standards;ISO Standards;Medical diagnostic imaging;Mobile communication;Software;Agile software development;Software and its engineering;Software development methods;Software development process management},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6480425,
  Title                    = {From Traditional, to Lean, to Agile Development: Finding the Optimal Software Engineering Cycle},
  Author                   = {J. Trimble and C. Webster},
  Booktitle                = {2013 46th Hawaii International Conference on System Sciences},
  Year                     = {2013},
  Month                    = {Jan},
  Pages                    = {4826-4833},

  Abstract                 = {In 2008, our team at NASA Ames Research Center launched a five-year project to deliver a user-centric software platform for mission control. We began with a six-month delivery cycle. Within two years we were delivering functional software every three weeks. Our evolution from traditional, to lean, then agile, did not happen because of a focused goal to become lean or agile. Rather, we responded iteratively to problems, we were disconnected from our customer, the long delivery cycles created issues with testing and verification, and we were unable to effectively measure our progress. We changed our delivery cycle first to six weeks, then three, with the team focused on the highest-priority features and bug fixes. Our one measure of progress became working code. We delivered a nightly build to our customer. Our QA team tested features as they rolled out. In our journey from traditional to agile, we tailored our processes to our team culture and our context of work. We found that agile methods increased customer and team satisfaction, and enabled us to use limited team resources where they were most effective -- the design and development of the software.},
  Doi                      = {10.1109/HICSS.2013.237},
  ISSN                     = {1530-1605},
  Keywords                 = {Buildings;Encoding;NASA;Quality assurance;Software;Testing;User centered design;agile;lean},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7070422,
  Title                    = {Introduction to Agile and Lean Software Engineering Minitrack},
  Author                   = {J. Tripp and A. Aitken},
  Booktitle                = {2015 48th Hawaii International Conference on System Sciences},
  Year                     = {2015},
  Month                    = {Jan},
  Pages                    = {5073-5073},

  Abstract                 = {Presents the introduction the conference track.},
  Doi                      = {10.1109/HICSS.2015.662},
  ISSN                     = {1530-1605},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6759191,
  Title                    = {Exploring the Relationship between Organizational Adoption Motives and the Tailoring of Agile Methods},
  Author                   = {J. F. Tripp and D. J. Armstrong},
  Booktitle                = {2014 47th Hawaii International Conference on System Sciences},
  Year                     = {2014},
  Month                    = {Jan},
  Pages                    = {4799-4806},

  Doi                      = {10.1109/HICSS.2014.589},
  ISSN                     = {1530-1605},
  Keywords                 = {software prototyping;software quality;agile information system development methods;agile methods;agile practices;organizational adoption motives;pragmatic tailoring;software development approach;software quality;Correlation;Information systems;Organizations;Planning;Project management;Software quality;Agile software development;method tailoring},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6759096,
  Title                    = {Toward an Understanding of Job Satisfaction on Agile Teams: Agile Development as Work Redesign},
  Author                   = {J. F. Tripp and C. K. Riemenschneider},
  Booktitle                = {2014 47th Hawaii International Conference on System Sciences},
  Year                     = {2014},
  Month                    = {Jan},
  Pages                    = {3993-4002},

  Doi                      = {10.1109/HICSS.2014.494},
  ISSN                     = {1530-1605},
  Keywords                 = {software prototyping;agile development;agile methodologists;agile methods;agile teams;job perceptions;job satisfaction;key value proposition;work redesign;Encoding;Job design;Planning;Programming;Software;Standards;Testing},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6915096,
  Title                    = {A comparative study between iterative waterfall and incremental software development life cycle model for optimizing the resources using computer simulation},
  Author                   = {P. Trivedi and A. Sharma},
  Booktitle                = {2013 2nd International Conference on Information Management in the Knowledge Economy},
  Year                     = {2013},
  Month                    = {Dec},
  Pages                    = {188-194},

  Abstract                 = {To achieve the maximum productivity using minimum resource is the aim of any software industry. Software engineering provides an abstraction process to develop software product. It has introduced various methodologies, principles and concepts. Most of them are the software process models which are also known as software life cycle models. In the software industry different-different types of projects (small, medium, large, complex) arrive in random inter arrival time for development of software products. Before implementing the products, project managers decide an appropriated software process model in documentation that is used in production of products. An empirical study conducted in 2012 that presents various effecting factors for selecting any software life cycle model. One of the important factors is team size. Software industry has a development team which works in co-ordination and depends on each other. Sometimes project managers are not intelligently assigned resources to particular phases of software life cycle model. Therefore to overcome these issues we are simulating iterative waterfall and incremental model to determine optimal resources for every phase of software life cycle model. This study shall enable the project manager to determine optimal resource without implementing software product. As future work, we shall be simulating spiral and iterative incremental model to determine which SDLC model is more appropriate for software industry.},
  Keywords                 = {DP industry;iterative methods;software product lines;SDLC model;computer simulation;incremental software development life cycle model;iterative incremental model;iterative waterfall simulation;minimum resource;optimal resource;random inter arrival time;resource optimization;software engineering;software industry;software process models;software product development;Analytical models;Business;Computational modeling;Industries;Maintenance engineering;Software;Testing;Increment model;Iterative waterfall model;Science;Simphony .NET;Simphony model;Software engineering;Software process model},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7070302,
  Title                    = {Continuous Requirements Risk Profiling in Information Systems Development},
  Author                   = {T. Tuunanen and T. Vartiainen and M. Ebrahim and M. Liang},
  Booktitle                = {2015 48th Hawaii International Conference on System Sciences},
  Year                     = {2015},
  Month                    = {Jan},
  Pages                    = {4019-4028},

  Abstract                 = {With the increasing adoption of agile, lean, and iterative development methods, information systems development (ISD) has become continuous, meaning that system development moves rapidly from release to release. This means that work practices and challenges that practitioners face have changed. Despite these changes, requirements development is still critical in ISD. However, IS literature is silent on how to manage requirements-related risks in the practice of continuous IS development. To fill this gap, we propose a continuous requirements risk profiling method. The study is informed by design science research methodology, and we apply focus group interviews and a Delphi study for data collection to support the method development. The developed method can be integrated to ISD projects using different continuous ISD methods.},
  Doi                      = {10.1109/HICSS.2015.483},
  ISSN                     = {1530-1605},
  Keywords                 = {information systems;risk management;software engineering;Delphi study;ISD;continuous requirements risk profiling;data collection;focus group interview;information systems development;risk management;system development;Complexity theory;Design methodology;Encoding;Industries;Risk management;Software;Continuous Profiling;Delphi study;Information Systems Development;Requirements;Risk Management},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6702241,
  Title                    = {Investigation into spectrum shape fluctuations of oscillators and signal sources},
  Author                   = {M. Underhill},
  Booktitle                = {2013 Joint European Frequency and Time Forum International Frequency Control Symposium (EFTF/IFC)},
  Year                     = {2013},
  Month                    = {July},
  Pages                    = {729-732},

  Abstract                 = {A standard SDR receiver with digital FFT type spectrum analysis software and a time waterfall display is used to investigate spectrum shape and `spur' fluctuations in LC and crystal oscillators. Oscillator start-up spectra are found to narrow exponentially in time towards the expected Leeson model `bell' shape, with a time constant inversely proportional to the resonator bandwidth. Spurs can be seen most prominent around the 3dB bandwidth frequencies of the oscillator resonator. The spur frequencies in general are a constant fixed offset from the carrier frequency and do not drift. Spur amplitude fluctuations appear to be random but with an average periodicity inversely proportional to spacing from the carrier. Some theory for the fluctuations is under development.},
  Doi                      = {10.1109/EFTF-IFC.2013.6702241},
  Keywords                 = {crystal oscillators;digital instrumentation;fast Fourier transforms;fluctuations;radio receivers;random processes;signal sources;software radio;spectral analysers;LC oscillator;bell shape;carrier frequency;constant fixed offset;crystal oscillator;digital FFT type spectrum analysis software;expected Leeson model;oscillator resonator bandwidth;oscillator start-up spectra;periodicity;random amplitude fluctuation;signal sources;spectrum shape fluctuations;spur amplitude fluctuations;standard SDR receiver;time constant;time waterfall display;Amplitude modulation;Bandwidth;Fluctuations;Noise;Oscillators;Resonant frequency;Shape;digital FFT spectrum analyser;oscillator fluctuation theory;oscillator time spectra;spectrum time waterfall},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6651970,
  Title                    = {Initial investigation of a novel passive HF radar technique using available DRM and data signals},
  Author                   = {M. J. Underhill},
  Booktitle                = {2013 International Conference on Radar},
  Year                     = {2013},
  Month                    = {Sept},
  Pages                    = {112-117},

  Abstract                 = {Digitale Radio Mondiale (DRM) signals have properties that allow extraction of aircraft distance and velocity passively at distances of up to 1500km, or more depending on the DRM type. The DRM spectra are flat and typically 10kHz wide. Aircraft velocity and approximate distance can be found from the interference patterns created by the `direct' and reflected waves received from a distant DRM transmitter as observed in a software radio SDR `waterfall' spectrum/time display of the received DRM spectrum. Up to three aircraft can typically be observed visually `by eye'. Data FAX signals having a flat 2.5kHz spectrum can be also used when DRM signals are not available. More accurate and improved ranges for more aircraft should be possible with proposed second stage FFT and radar tracking DSP algorithms operating on the received waterfalls. At HF ionospheric reflections provide a long distance OTH capability. The ionospheric multipath can be removed by suitable processing techniques. Some fundamental information theoretic performance limits of this novel technique are examined for the case of a single receiver with an omnidirectional antenna. Aircraft direction and position can to some extent be inferred from flight profile constraints. Better positioning is obtained by combining the information from Data or DRM transmissions on more than one frequency and from different locations. Phased array reception gives target direction for single frequency DRM illumination, at some increase in cost and complexity. ADS-B `virtual radar' plots provide data on local civil aircraft movements that can be compared with the DRM waterfall data for algorithm development in this novel passive radar technique.},
  Doi                      = {10.1109/RADAR.2013.6651970},
  ISSN                     = {1097-5764},
  Keywords                 = {fast Fourier transforms;multipath channels;omnidirectional antennas;passive radar;phased array radar;radar tracking;radio transmitters;radiofrequency interference;software radio;ADS-B virtual radar;DRM signals;DRM spectra;DSP algorithms;FFT;HF ionospheric reflections;aircraft distance;aircraft velocity;data FAX signals;data signals;digitale radio mondiale signals;direct waves;distant DRM transmitter;flight profile constraints;frequency 10 kHz;frequency 2.5 kHz;interference patterns;ionospheric multipath;omnidirectional antenna;passive HF radar;phased array reception;radar tracking;reflected waves;software radio;waterfall spectrum-time display;Aircraft;Doppler effect;Interference;Radar;Radio transmitters;Receivers;Reflection;DRM-spectra;Passive HF radar;signal-processing;software-radio},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7501027,
  Title                    = {Involving citizens in smart city projects: Systems engineering meets participation},
  Author                   = {T. Vácha and O. Přibyl and M. Lom and M. Bacúrová},
  Booktitle                = {2016 Smart Cities Symposium Prague (SCSP)},
  Year                     = {2016},
  Month                    = {May},
  Pages                    = {1-6},

  Abstract                 = {Nowadays, the term smart city is often used as a selling argument for projects. Unfortunately, it is often degraded to a simple use of advanced technology. However, it was demonstrated in several scientific publications as well as for example in Amsterdam city that the citizen's quality of life shall be one of the main objectives in any smart city project. In order to enhance this topic, we provide a clear view on the implementation of smart city projects from the citizen's perspective. In this paper, we first describe the importance of citizen's participation and different forms of such participation in different smart city project phases. Two case studies are presented as well to demonstrate the benefits of participation in municipal projects. Additionally, we propose a formal solution to this topic. In general, Systems Engineering methodologies are used in order to ensure the right project outcome. There are different methodologies, mostly adopted from the information technology field. Unfortunately, they focus mainly on the relation between a customer (in the case of smart cities it is typically a municipality) and a solution provider. They also do not take into account the new challenges which occur in smart city projects, such as focus on interdisciplinary teams, sharing of resources, or even involvement of citizens. In this paper we enhance this topic by demonstrating how a Hybrid-Agile Methodology (HAM) can used to involve citizens in the different project phases. This is certainly a novel approach not addressed by the current methodologies and not properly addressed in smart city projects. It has been mentioned several times that we cannot have a smart city without smart citizens.},
  Doi                      = {10.1109/SCSP.2016.7501027},
  Keywords                 = {information systems;project management;smart cities;software prototyping;systems engineering;town and country planning;HAM;citizen participation;hybrid-agile methodology;information technology;smart city project;systems engineering;Electronic mail;Planning;Smart cities;Stakeholders;Systems engineering and theory;Hybrid-Agile Methodology;Participation;Smart City;Systems Engineering},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7235826,
  Title                    = {Maximising productivity and learnability in internships},
  Author                   = {A. Vakaloudis and K. Anagnostopoulos},
  Booktitle                = {2015 IEEE International Professional Communication Conference (IPCC)},
  Year                     = {2015},
  Month                    = {July},
  Pages                    = {1-6},

  Doi                      = {10.1109/IPCC.2015.7235826},
  ISSN                     = {2158-091X},
  Keywords                 = {C++ language;business communication;business data processing;company reports;innovation management;professional aspects;project management;software prototyping;vocational training;C++;agile-based framework;code revision;communication tasks;competitive analysis;idea generation;idea presentation;internship session;professional practices;programming;project lifecycle;project plan generation;research tasks;technical internships;technical progress reporting;technical tasks;test driven design;Documentation;Industries;Planning;Standards;Technological innovation;Training;Agile;Internship;Scrum;research and presentation training;technical writing training},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7012981,
  Title                    = {SPLICE: A Lightweight Software Product Line Development Process for Small and Medium Size Projects},
  Author                   = {T. Vale and B. Cabral and L. Alvim and L. Soares and A. Santos and I. Machado and I. Souza and I. Freitas and E. Almeida},
  Booktitle                = {2014 Eighth Brazilian Symposium on Software Components, Architectures and Reuse},
  Year                     = {2014},
  Month                    = {Sept},
  Pages                    = {42-52},

  Abstract                 = {Combining Software Product Line Engineering (SPLE) and Agile Software Development (ASD) is an approach for companies working with similar systems in scenarios of volatile requirements aiming to address fast changes and a systematic variability management. However, a development process covering the whole SPLE lifecycle and using agile practices in small and medium size development projects has not been established yet. There is a need to disseminate such combination through well-defined roles, activities, tasks and artifacts. This paper presents SPLICE, a lightweight development process combining SPLE and agile practices, following reactive and extractive approaches to build similar systems. SPLICE addresses the needs of small development teams aiming to adopt SPL practices with low upfront costs and fast return on investment. In order to evaluate our proposal, we report our experience in a case study by developing Rescue MeSPL, a product line for mobile applications that assists users in emergency situations. The case study results point SPLICE achieves the three evaluated aspects by providing short and proper iterations, possibilities for activities adaptations and continuous feedback.},
  Doi                      = {10.1109/SBCARS.2014.11},
  Keywords                 = {software product lines;software prototyping;ASD;Rescue MeSPL;SPL practices;SPLE lifecycle;SPLICE;agile software development;lightweight software product line development process;medium size development projects;mobile applications;small development teams;small size development projects;software product line engineering;systematic variability management;Aging;Business;Inspection;Planning;Portfolios;Software;Testing;agile software development;software process;software product lines},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6910403,
  Title                    = {Adapting to Changes in a Project's DNA: A Descriptive Case Study on the Effects of Transforming Agile Single-Site to Distributed Software Development},
  Author                   = {R. Vallon and C. Dräger and A. Zapletal and T. Grechenig},
  Booktitle                = {2014 Agile Conference},
  Year                     = {2014},
  Month                    = {July},
  Pages                    = {52-60},

  Abstract                 = {We present a 15-month descriptive case study on a real-world Scrum process transformation from a single-site to a distributed development environment in a medium-sized software development organization in Austria. The study describes what effects the scaling to a distributed development had on several key process indicators in one of the organization's major projects. An action research approach has been selected to generate results from an in-depth and first-hand research setting. To increase objectivity and separation of concerns, a two-cycle approach, practitioner-oriented and research-oriented, has been established that aligns with sprint iterations. Many possible adaptations to the Scrum process have been tested over the course of the study. Key findings include that constant customer shipments after each sprint were a turning point in supporting the process of integrating the different sites in the distributed development environment and that the retrospective was an invaluable tool to keep frustration levels low in an ever-changing process environment.},
  Doi                      = {10.1109/AGILE.2014.22},
  Keywords                 = {distributed processing;iterative methods;software houses;software prototyping;Austria;constant customer shipments;distributed software development;key process indicators;medium-sized software development organization;practitioner-oriented approach;project DNA;real-world Scrum process transformation;research-oriented approach;single-site software development;two-cycle approach;Planning;Problem-solving;Product development;Scrum (Software development);Software;Synchronization;Testing;Action Research;Agile Software Development;Descriptive Case Study;Distributed Software Development;Scrum},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7816504,
  Title                    = {Continuous Delivery Practices in a Large Financial Organization},
  Author                   = {C. Vassallo and F. Zampetti and D. Romano and M. Beller and A. Panichella and M. D. Penta and A. Zaidman},
  Booktitle                = {2016 IEEE International Conference on Software Maintenance and Evolution (ICSME)},
  Year                     = {2016},
  Month                    = {Oct},
  Pages                    = {519-528},

  Doi                      = {10.1109/ICSME.2016.72},
  Keywords                 = {financial data processing;program testing;quality assurance;software maintenance;software prototyping;software quality;source code (software);CD;CI infrastructure;ING Nederland;agile software development;automated testing;continuous delivery;continuous integration infrastructure;document source code;financial organization;product quality assurance;software refactoring;Measurement;Monitoring;Organizations;Pipelines;Software;Testing;Agile Development;Continuous Delivery;Continuous Integration;DevOps;Refactoring;Technical Debt;Test-Driven Development;Testing},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6879672,
  Title                    = {Towards Software Mass Customization for Business Collaboration},
  Author                   = {C. Verdouw and A. Beulens and S. Wolfert},
  Booktitle                = {2014 Annual SRII Global Conference},
  Year                     = {2014},
  Month                    = {April},
  Pages                    = {106-115},

  Abstract                 = {Supply chains are being transformed into agile networks in response the increasing volatility of business environments. The dynamic nature of business collaboration in such networks imposes stringent demands on the enabling software systems. This paper proposes the application of a mass customization approach to meet the great demands on software systems for business collaboration in agile business networks. We first introduce the concept of mass customization and define requirements for software mass customization. Next, the paper presents a Future Internet platform - called FIspace - for business to business collaboration that is currently being developed within Europe's Future Internet Public-Private Partnership program (FI-PPP) and that aims to provide an environment for software mass customization for business collaboration in the agriculture, food and logistics sectors.},
  Doi                      = {10.1109/SRII.2014.24},
  ISSN                     = {2166-0778},
  Keywords                 = {Internet;agile manufacturing;business data processing;mass production;product customisation;supply chains;Europe Future Internet Public-Private Partnership program;FI-PPP;FIspace;agile business networks;business environments;business to business collaboration;software mass customization approach;software systems;supply chains;Collaboration;Mass customization;Service-oriented architecture;Standards;Business Collaboration;Configuration;Future Internet;Software Mass Customization},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7173368,
  Title                    = {Understanding DevOps bridging the gap from continuous integration to continuous delivery},
  Author                   = {M. Virmani},
  Booktitle                = {Fifth International Conference on the Innovative Computing Technology (INTECH 2015)},
  Year                     = {2015},
  Month                    = {May},
  Pages                    = {78-82},

  Abstract                 = {As part of Agile transformation in past few years we have seen IT organizations adopting continuous integration principles in their software delivery lifecycle, which has improved the efficiency of development teams. With the time it has been realized that this optimization as part of continuous integration - alone - is just not helping to make the entire delivery lifecycle efficient or is not driving the organization efficiency. Unless all the pieces of a software delivery lifecycle work like a well oiled machine - efficiency of organization to optimize the delivery lifecycle can not be met. This is the problem which DevOps tries to address. This paper tries to cover all aspects of Devops applicable to various phases of SDLC and specifically talks about business need, ways to move from continuous integration to continuous delivery and its benefits. Continuous delivery transformation in this paper is explained with a real life case study that how infrastructure can be maintained just in form of code (IAAC). Finally this paper touches upon various considerations one must evaluate before adopting DevOps and what kind of benefits one can expect.},
  Doi                      = {10.1109/INTECH.2015.7173368},
  Keywords                 = {integrated software;software prototyping;DevOps;IAAC;SDLC;agile transformation;continuous delivery;continuous integration;software delivery lifecycle;Automation;Optimization;Organizations;Production;Software;Testing;Continuous Delivery;Continuous Integration;DevOps;Infrastructure as a Code (IAAC)},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7202988,
  Title                    = {The Development of a Dashboard Tool for Visualising Online Teamwork Discussions},
  Author                   = {R. Vivian and H. Tarmazdi and K. Falkner and N. Falkner and C. Szabo},
  Booktitle                = {2015 IEEE/ACM 37th IEEE International Conference on Software Engineering},
  Year                     = {2015},
  Month                    = {May},
  Pages                    = {380-388},
  Volume                   = {2},

  Abstract                 = {Many software development organisations today adopt global software engineering (GSE) and agile models, requiring software engineers to collaborate and develop software in flexible, distributed, online teams. However, many employers have expressed concern that graduates lack teamwork skills and one of the most commonly occurring problems with GSE models are issues with project management. Team managers and educators often oversee a number of teams and the large corpus of data, in combination with agile models, make it difficult to efficiently assess factors such as team role distribution and emotional climate. Current methods and tools for monitoring software engineering (SE) teamwork in both industry and education settings typically focus on member contributions, reflection, or product outcomes, which are limited in terms of real-time feedback and accurate behavioural analysis. We have created a dashboard that extracts and communicates team role distribution and team emotion information in real-time. Our proof of concept provides a real-time analysis of teamwork discussions and visualises team member emotions, the roles they have adopted and overall team sentiment during the course of a collaborative problem-solving project. We demonstrate and discuss how such a tool could be useful for SE team management and training and the development of teamwork skills in SE university courses.},
  Doi                      = {10.1109/ICSE.2015.170},
  ISSN                     = {0270-5257},
  Keywords                 = {computer science education;data visualisation;groupware;project management;software development management;software prototyping;software tools;GSE;SE team management;SE university courses;agile models;behavioural analysis;collaborative problem-solving project;dashboard tool development;emotional climate;global software engineering;online teamwork discussion visualisation;project management;real-time analysis;real-time feedback;software development organisations;software engineering teamwork monitoring;team role distribution;teamwork skill development;training;Industries;Monitoring;Software;Teamwork;Training},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7522179,
  Title                    = {Agile development of a hospital information system},
  Author                   = {S. L. R. Vrhovec},
  Booktitle                = {2016 39th International Convention on Information and Communication Technology, Electronics and Microelectronics (MIPRO)},
  Year                     = {2016},
  Month                    = {May},
  Pages                    = {416-421},

  Doi                      = {10.1109/MIPRO.2016.7522179},
  Keywords                 = {DP industry;health care;medical information systems;project management;software management;software prototyping;user interfaces;agile development;healthcare information systems;hospital information system;large-scale information systems;software industry;software project;user requirements;Hospitals;Information systems;Prototypes;Software;Stakeholders},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7502477,
  Title                    = {An implementation of hierarchical service function chaining using OpenDaylight platform},
  Author                   = {A. V. Vu and Y. Kim},
  Booktitle                = {2016 IEEE NetSoft Conference and Workshops (NetSoft)},
  Year                     = {2016},
  Month                    = {June},
  Pages                    = {411-416},

  Abstract                 = {In recent year, the rise of Network Function Virtualization (NFV) and Software-defined Networking (SDN) makes the service chain and application provisioning process much agile and simpler, promoting the development of Service Function Chaining (SFC). Service Function Chaining (SFC) provides flexibility and agility for deploying and managing network services. The most challenging problems in SFC are deploying and organizing in large scale, multi-region data center with multiple operational teams. One feasible solution for these issues is decomposing SFC into multiple nested lower-level domains, establishing a hierarchical structure. In this paper, we present a Hierarchical Service Function Chaining (H-SFC) architecture using SDN to enable multi-layered service function chains. We implement the architecture in the OpenDaylight SFC environment and prove that it could simplify SFC management and orchestration.},
  Doi                      = {10.1109/NETSOFT.2016.7502477},
  Keywords                 = {computer centres;computer network management;software defined networking;H-SFC architecture;NFV;OpenDaylight SFC environment;OpenDaylight platform;SDN;application provisioning process;hierarchical service function chaining;hierarchical structure;large scale multiregion data center;multilayered service function chains;multiple nested lower-level domains;multiple operational teams;network function virtualization;network service management;software-defined networking;Companies;Complexity theory;Computer architecture;Electronic mail;Indexes;Routing;Standards;Network Function Virtualization;OpenDaylight;Service Function Chaining;Software-defined Networking},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7107420,
  Title                    = {From agile software development to the sharing economy and the collaborative commons: Social apps for enterprises},
  Author                   = {H. Wagger},
  Booktitle                = {2015 IEEE Eighth International Conference on Software Testing, Verification and Validation Workshops (ICSTW)},
  Year                     = {2015},
  Month                    = {April},
  Pages                    = {1-2},

  Abstract                 = {In this article we motivate the ongoing changes in our economy due to digitalization of enterprises and the changes in workforce. The evolution and growth of digital and mobile technologies has radically changed the way we work. The success of agile software development can be seen as a forerunner of an economic transformation that results in purpose-driven organisations, the sharing economy and the collaborative commons. In such a setting, it is of uttermost importance to listen to the needs of employees and to create a working environment that helps them to thrive. The app effect - well known from the consumer market - has finally reached the enterprise.},
  Doi                      = {10.1109/ICSTW.2015.7107420},
  Keywords                 = {groupware;mobile computing;organisational aspects;socio-economic effects;software prototyping;agile software development;collaborative commons;consumer market;economic transformation;enterprise digitalization;purpose-driven organisations;sharing economy;social apps;Agile software development;Business;Collaboration;Communities;Economics;Software;Technological innovation},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6597258,
  Title                    = {Generating goal-oriented models from creative requirements using model driven engineering},
  Author                   = {F. Wanderley and J. Araujo},
  Booktitle                = {2013 3rd International Workshop on Model-Driven Requirements Engineering (MoDRE)},
  Year                     = {2013},
  Month                    = {July},
  Pages                    = {1-9},

  Abstract                 = {The KAOS framework aims to avoid eliciting ambiguous or irrelevant requirements and allows efficient and easy communication between stakeholders. Nevertheless, KAOS is designed mainly for requirements engineers, not so much for other important stakeholders, that understand better other kinds of models, such as mind maps. Thus, this paper proposes an approach for generating KAOS goal models from mind maps by adopting model-driven techniques. The use of mind maps, as a creative and agile requirements technique, aims to encourage the construction of KAOS goal models more effectively and in a simpler way by involving all kinds of stakeholders that do need to know about KAOS. Our approach also contains the definition of a systematic process and is applied to an industrial case application.},
  Doi                      = {10.1109/MoDRE.2013.6597258},
  Keywords                 = {object-oriented methods;software engineering;KAOS framework;KAOS goal model;goal-oriented model generation;mind maps;model driven engineering;requirements engineering;Biological system modeling;Business;Computational modeling;Context modeling;Software;Systematics;Unified modeling language;Goal-Oriented Requirements;Mind Mapping Modelling;Model-Driven Engireering},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6911782,
  Title                    = {Tualatin: Towards network security service provision in cloud datacenters},
  Author                   = {X. Wang and Z. Liu and J. Li and B. Yang and Y. Qi},
  Booktitle                = {2014 23rd International Conference on Computer Communication and Networks (ICCCN)},
  Year                     = {2014},
  Month                    = {Aug},
  Pages                    = {1-8},

  Abstract                 = {Multi-tenant infrastructures deployed in cloud datacenters need network security protection. However, the rigid control mechanism of current security middleboxes induces inflexible orchestration, limiting the agile and on-demand security provision in virtualized datacenters. This paper presents Tualatin, a consolidated framework of delivering security services in multi-tenant datacenters. It meets security requirements of different scenarios by hardware and software co-design. Leveraging Software-Defined Networking (SDN) and OpenFlow techniques, Tualatin provides fine-grained security protection in dynamically changing network topologies, where both switches and security middleboxes are programmatically controlled by logically centralized controllers. With service-level APIs exposed, Tualatin could be easily integrated with other Cloud Management System (CMS). A proof-of-concept system has been deployed in a Tier-IV datacenter, providing customizable network security services for tenant Virtual Private Cloud (VPC) infrastructure.},
  Doi                      = {10.1109/ICCCN.2014.6911782},
  ISSN                     = {1095-2055},
  Keywords                 = {cloud computing;computer centres;security of data;CMS;OpenFlow techniques;SDN;Tualatin;VPC infrastructure;cloud datacenters;cloud management system;customizable network security services;hardware and software codesign;multitenant datacenters;multitenant infrastructures;network security protection;network security service provision;on-demand security provision;proof-of-concept system;rigid control mechanism;service-level API;software-defined networking;virtual private cloud;virtualized datacenters;Cloud computing;Communication networks;Engines;Hardware;Inspection;Middleboxes;Security;Cloud Datacenter;Network Security;Software-Defined Networking},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7809428,
  Title                    = {Towards Applying a Safety Analysis and Verification Method Based on STPA to Agile Software Development},
  Author                   = {Y. Wang and S. Wagner},
  Booktitle                = {2016 IEEE/ACM International Workshop on Continuous Software Evolution and Delivery (CSED)},
  Year                     = {2016},
  Month                    = {May},
  Pages                    = {5-11},

  Doi                      = {10.1109/CSED.2016.010},
  Keywords                 = {formal verification;program diagnostics;software maintenance;software prototyping;software reliability;RAMS;S-Scrum;STPA;Safe Scrum;agile software development processes driving architecture design;model checking;reliability-availability-maintainability-safety;safety analysis method;safety requirements;safety verification method;safety-guided design;system-theoretic process analysis;Accidents;Agile software development;Computer architecture;Model checking;Safety;Software safety;Agile methods;STPA;Safety analysis;Safety verication;Safety-critical sytems},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7427798,
  Title                    = {Introduction to the IT/Project Management Minitrack},
  Author                   = {J. W. Weiss and S. Newell and J. Swan},
  Booktitle                = {2016 49th Hawaii International Conference on System Sciences (HICSS)},
  Year                     = {2016},
  Month                    = {Jan},
  Pages                    = {4930-4931},

  Doi                      = {10.1109/HICSS.2016.611},
  ISSN                     = {1530-1605},
  Keywords                 = {Agile software development;Bibliographies;Project management;Software;System implementation;Uncertainty},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6827100,
  Title                    = {Sustaining Agility through Architecture: Experiences from a Joint Research and Development Laboratory},
  Author                   = {B. Weitzel and D. Rost and M. Scheffe},
  Booktitle                = {2014 IEEE/IFIP Conference on Software Architecture},
  Year                     = {2014},
  Month                    = {April},
  Pages                    = {53-56},

  Abstract                 = {This paper is an experience report of a long running Scrum project, conducted in a collaboration between industry and research, in a so called "Joint Research and Development Laboratory". Over time in the collaboration, we experienced a constant decrease in the pace of our development progress. Planning forward only within the limits of single sprints was the main reason for this. It resulted in a degenerating design and therefore a lack of flexibility that affected the agility of our project. Therefore, we introduced the concept of "epic-architectures", an architecture design for a coherent group of user stories. Shifting the planning horizon further, across single sprints, helped us to create more stable and reusable concepts and to construct simpler, more elegant, and more maintainable solutions. We were able to significantly reduce the refactoring effort and increase the development speed, without significant overhead. With reporting on our experiences we hope to provide practically applicable guidance on how to integrate lightweight architecting in agile development processes, to sustain agility while creating high quality products.},
  Doi                      = {10.1109/WICSA.2014.38},
  Keywords                 = {project management;software architecture;software maintenance;software prototyping;software quality;Scrum project;agile development processes;architecture design;development speed;epic-architectures;high quality products;joint research and development laboratory;lightweight architecting;maintainable solutions;planning horizon;project agility;refactoring effort;user stories;Collaboration;Computer architecture;Concrete;Documentation;Planning;Software;Software architecture;Architecture;Scrum;agile;agility;development;experience report;industry;sustainable},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7070352,
  Title                    = {The Adoption of Agile Management Practices in a Traditional Project Environment: An IT/IS Case Study},
  Author                   = {H. Wells and D. Dalcher and H. Smyth},
  Booktitle                = {2015 48th Hawaii International Conference on System Sciences},
  Year                     = {2015},
  Month                    = {Jan},
  Pages                    = {4446-4453},

  Abstract                 = {Despite the growing interest in the usage and application of Agile Project Management Methodologies (PMMs), there is only scant research examining how and why organisations select agile approaches for managing and delivering Information Technology /Information Systems (IT/IS) projects. This paper reports on the findings of such research conducted within the context of a large technology-focused case organisation. The findings identify significant variance between business lines, specifically between product development and software development functions and their ability to follow agile guidelines. Generally across the organisation there was limited evidence of tailoring to context, an important organisational success factor, yet there was a more significant level of tailoring and responsiveness to client needs and wishes. Overall, there was a lack of clarity about the location of the decoupling points following the scoping of the project. Recommendations therefore require further attention and understanding of the implications of new practices employed by organisations, not least by senior management and for additional research underpinning such discovery.},
  Doi                      = {10.1109/HICSS.2015.532},
  ISSN                     = {1530-1605},
  Keywords                 = {information systems;product development;project management;software prototyping;IT/IS projects;PMM;agile approaches;agile guidelines;agile management practices adoption;agile project management methodologies;business lines;information systems;information technology;organisational success factor;product development;project environment;senior management;software development functions;Companies;Context;Interviews;Product development;Project management;Software;Agile Project Management;Barriers to Adoption;Project Management Methodologies;Tailoring},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6776665,
  Title                    = {Dynamic integration of ALM tools for agile software development},
  Author                   = {M. Wielsch and R. Bieniek and B. Grams and J. Lässig},
  Booktitle                = {Proceedings of the 2013 IEEE/SICE International Symposium on System Integration},
  Year                     = {2013},
  Month                    = {Dec},
  Pages                    = {567-573},

  Abstract                 = {The paper describes the need for and goals of tool-integration within software development processes. In particular we focus on agile software development but are not limited to. The integration of tools and data between the different domains of the process is essential for an efficient, effective and customized software development. We describe what the next steps in the pursuit of integration are and how major goals can be achieved. Beyond theoretical and architectural considerations we describe the prototypical implementation of an open platform approach. The paper introduces platform apps and a functionality store as general concepts to make apps and their functionalities available to the community. We describe the implementation of the approach and how it can be practically utilized. The description is based on one major use case and further steps are motivated by various other examples.},
  Doi                      = {10.1109/SII.2013.6776665},
  Keywords                 = {software prototyping;software tools;ALM tools;agile software development;customized software development;dynamic integration;functionality store;open platform approach;platform apps;software development processes;tool integration;Abstracts;Business;Connectors;Data models;Object oriented modeling;Software;XML},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7748916,
  Title                    = {Agile in public sector: Case study of dairy farm management projects},
  Author                   = {N. Wisitpongphan and T. Khampachua},
  Booktitle                = {2016 13th International Joint Conference on Computer Science and Software Engineering (JCSSE)},
  Year                     = {2016},
  Month                    = {July},
  Pages                    = {1-5},

  Abstract                 = {Agile software development approach seems to work well in an organization where processes change on a regular basis. Conversely, adopting Agile practice in public sector, where work procedures have to follow a well-defined processes, faces several challenges. In this paper, we investigated how Agile methods could be adopted for practice in a public sector context using two projects of different sizes and complexity as our case studies. Our results show that certain Agile methods were able to work well in a public sector with some additional procedures required, while the main challenges of applying Agile methods in public sector are the change request management and the procurement process.},
  Doi                      = {10.1109/JCSSE.2016.7748916},
  Keywords                 = {dairying;procurement;project management;software prototyping;agile methods;agile practice;agile software development;change request management;dairy farm management projects;procurement process;public sector;Context;Cows;Feeds;Orbits;Organizations;Planning;Software},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@Article{7123669,
  Title                    = {Supporting Scope Tracking and Visualization for Very Large-Scale Requirements Engineering-Utilizing FSC+, Decision Patterns, and Atomic Decision Visualizations},
  Author                   = {K. Wnuk and T. Gorschek and D. Callele and E. A. Karlsson and E. Åhlin and B. Regnell},
  Journal                  = {IEEE Transactions on Software Engineering},
  Year                     = {2016},

  Month                    = {Jan},
  Number                   = {1},
  Pages                    = {47-74},
  Volume                   = {42},

  Doi                      = {10.1109/TSE.2015.2445347},
  ISSN                     = {0098-5589},
  Keywords                 = {data visualisation;formal specification;FSC+;Feature Survival Charts+;VLSRE;atomic decision visualizations;change-tolerant release scope management process;decision patterns;requirements scoping process;scope tracking;very large-scale requirements engineering;very large-scale requirements engineering visualization;Companies;Electronic mail;Planning;Power capacitors;Software;Software engineering;Visualization;- D.2.1Requirements/Specifications D.2.9.d Initiation and scope definition D.2.9 Management;Requirements/specifications;initiation and scope definition;management},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6879694,
  Title                    = {A Future Internet Collaboration Platform for Safe and Healthy Food from Farm to Fork},
  Author                   = {S. Wolfert and D. Goense and C. A. G. Sørensen},
  Booktitle                = {2014 Annual SRII Global Conference},
  Year                     = {2014},
  Month                    = {April},
  Pages                    = {266-273},

  Abstract                 = {It is expected that the world population will further expand from the current 6 billion to 9-11 billion people in 2050. This faces us with an enormous challenge to feed this population and still keep production within the limits of planet Earth's carrying capacity. Smart Farming - i.e. the use of smart, data-rich ICT-services and applications, in combination with advanced hardware (in tractors, greenhouses, etc.) - can provide the much needed breakthroughs to producing enough good quality food in a safe and environmental-sound way. This paper introduces a Future Internet platform - called FIspace - for business to business collaboration that is currently being developed within Europe's Future Internet Public-Private Partnership programme (FI-PPP). On top of that a specific implementation will be made for the area of Smart Farming that will enable a global approach for Apps and Services development. It is expected that this will overcome many of the current bottlenecks in ICT development for Smart Farming such as interoperability and handling large amounts of data, and that it will lead to more agile and affordable software solutions. In this way, this development can contribute to the global challenge of producing enough safe and healthy food for the future within planet Earth's carrying capacity. New projects are planned and collaboration in Europe and beyond should further leverage the platform. The ambition is to become world-leading in this area.},
  Doi                      = {10.1109/SRII.2014.47},
  ISSN                     = {2166-0778},
  Keywords                 = {Internet;farming;open systems;organisational aspects;public administration;software prototyping;Europe Future Internet Public-Private Partnership programme;FI-PPP;FIspace;Future Internet collaboration platform;agile affordable software solutions;business-to-business collaboration;data handling;food quality;global approach;interoperability;planet Earth carrying capacity;safe-healthy food;smart data-rich ICT- applications;smart data-rich ICT-services;smart farming;Agriculture;Business;Collaboration;Europe;Internet;Production;Software;B2B collaboration;Future Internet;Smart farming},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@Article{7113223,
  Title                    = {Toward a software-based network: integrating software defined networking and network function virtualization},
  Author                   = {T. Wood and K. K. Ramakrishnan and J. Hwang and G. Liu and W. Zhang},
  Journal                  = {IEEE Network},
  Year                     = {2015},

  Month                    = {May},
  Number                   = {3},
  Pages                    = {36-41},
  Volume                   = {29},

  Abstract                 = {Communication networks are changing. They are becoming more and more “software- based.” Two trends reflect this: the use of software defined networking and the use of virtualization to exploit common off-the-shelf hardware to provide a wide array of network-resident functions. To truly achieve the vision shared by many service providers of a high-performance software-based network that is flexible, lowercost, and agile, a fast and carefully designed network function virtualization platform along with a comprehensive SDN control plane is needed. The shift toward software-based network services broadens the type of networking capabilities offered in provider networks and cloud platforms by allowing network services to be dynamically deployed across shared hosts. Combining this with an SDN control plane that recognizes the power of a dynamically changing network infrastructure allows network functions to be placed when they are needed and where they are most appropriate in the network. Our system, SDNFV harmoniously combines the two fast moving technological directions of SDN and virtualization to further the goal of achieving a true software-based network.},
  Doi                      = {10.1109/MNET.2015.7113223},
  ISSN                     = {0890-8044},
  Keywords                 = {software defined networking;virtualisation;SDN control plane;communication networks;network function virtualization;network functions;network infrastructure;network-resident functions;networking capabilities;software defined networking;software-based network services;Firewalls (computing);Middleboxes;Servers;Software defined networking;Software development;Telecommunication network management;Virtualization},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@Article{7217769,
  Title                    = {Aligning Architecture Work with Agile Teams},
  Author                   = {E. Woods},
  Journal                  = {IEEE Software},
  Year                     = {2015},

  Month                    = {Sept},
  Number                   = {5},
  Pages                    = {24-26},
  Volume                   = {32},

  Abstract                 = {Difficulties frequently arise when agile development teams and software architects work together. By adopting practices aligned with the "agile manifesto," software architects can work constructively with agile teams and significantly contribute to a project's success.},
  Doi                      = {10.1109/MS.2015.119},
  ISSN                     = {0740-7459},
  Keywords                 = {software architecture;software prototyping;agile development teams;software architects;Agile development;Agile software development;Computer architecture;Documentation;Pragmatics;Software architecture;Software development;Software engineering;Tutorials;agile teams;software architecture;software design;software development;software engineering},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6654409,
  Title                    = {Helping students track learning progress using burn down charts},
  Author                   = {C. J. Woodward and A. Cain and S. Pace and A. Jones and J. F. Kupper},
  Booktitle                = {Proceedings of 2013 IEEE International Conference on Teaching, Assessment and Learning for Engineering (TALE)},
  Year                     = {2013},
  Month                    = {Aug},
  Pages                    = {104-109},

  Abstract                 = {Agile software development methods, such as Scrum, have adopted the use of burn down charts to help track progress by development teams. We considered if this same technique could be applied to help students track their progress in programming units. Tools that help students visually track their progress may help address issues with time management, particularly in units that make use of frequent formative feedback. In this work we describe such a tool, named Doubtfire, and explain its use in helping students keep track of their progress across a number of undergraduate programming units.},
  Doi                      = {10.1109/TALE.2013.6654409},
  Keywords                 = {educational computing;further education;software prototyping;time management;Doubtfire;Scrum;agile software development method;burn down charts;development teams;frequent formative feedback;learning progress tracking;time management;undergraduate programming units;visual tracking;Conferences;Education;Object oriented programming;Portfolios;Programming profession;Software;agile software development;constructive alignment;introductory programming;portfolio assessment;project management},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7943886,
  Title                    = {Agile methodology for spacecraft ground software development: A cultural shift},
  Author                   = {K. Wortman and B. Duncan and E. Melin},
  Booktitle                = {2017 IEEE Aerospace Conference},
  Year                     = {2017},
  Month                    = {March},
  Pages                    = {1-8},

  Abstract                 = {In the Space Exploration Sector (SES) at Johns Hopkins University Applied Physics Laboratory (JHU/APL) the development of Mission Operations Ground Software (GSW) to support NASA and Department of Defense spacecraft missions has traditionally followed the incremental build methodology. As part of our continuous process improvement effort, the Agile methodology is being introduced as an alternative approach to software development. To meet the needs of sponsor requirements and satisfy our quality management processes a tailoring of Agile is required. Development of ground software tools is currently in progress at JHU/APL to support NASA's Solar Probe Plus (SPP) Mission Operations. Tool development for spacecraft operation planning activities is paving the way for the cultural shift to agile methodology on candidate projects. The user community, the SPP Mission Operations team located at JHU/APL, supports the Agile Manifesto of heavy user involvement, the need for flexibility to evolve requirements and deliver frequent software releases to support readiness activities for the SPP launch in the summer of 2018. Agile was implemented following Scrum on two SPP GSW products, a spacecraft software simulator and the spacecraft activity planning tool. The paper will briefly introduce the heritage development process and compare this process with the evolving Agile approach. The discussion will include an assessment of how Agile methodology is being tailored using Scrum to adhere to our quality management processes (e.g., peer reviews, software assurance) to meet sponsor compliance requirements for current and future JHU/APL spacecraft missions. The current SPP GSW projects implementing Agile and the experiences and lessons learned to date will be highlighted throughout the paper.},
  Doi                      = {10.1109/AERO.2017.7943886},
  Keywords                 = {Cultural differences;Scrum (Software development);Software;Space missions;Space vehicles;Tools},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@Article{7588283,
  Title                    = {Content-based security and protected core networking with software-defined networks},
  Author                   = {K. Wrona and S. Oudkerk and S. Szwaczyk and M. Amanowicz},
  Journal                  = {IEEE Communications Magazine},
  Year                     = {2016},

  Month                    = {October},
  Number                   = {10},
  Pages                    = {138-144},
  Volume                   = {54},

  Abstract                 = {Successful execution of future network-centric military operations relies on effective enforcement of both need-to-know and responsibility- to-share principles. In modern military missions and coalitions, which have an increasingly agile character, a promising solution is to enforce security policies based on the properties of individual information objects - we call this approach content-based security. This article discusses the enforcement of content-based security policies at the different layers of the TCP/ IP model, and introduces a proof-of-concept implementation of a content-based protection and release mechanism in a software-defined networking environment. Our aim is to provide consistent enforcement of security policies across multiple system layers and multiple security dimensions (confidentiality, integrity, and availability). The results of an analysis of a concrete example of a software-defined network emulated in Mininet are encouraging and confirm the effectiveness of our approach with respect to improving protection of data in transit. The work presented in this article offers a basis for further research in this area.},
  Doi                      = {10.1109/MCOM.2016.7588283},
  ISSN                     = {0163-6804},
  Keywords                 = {software defined networking;telecommunication security;transport protocols;ubiquitous computing;TCP/ IP model;content based security;protected core networking;security policies;software defined networks;Access control;Context;Military communication;Missiles;Network interfaces;TCPIP},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7284598,
  Title                    = {Explaining Agility with a Process Theory of Change},
  Author                   = {M. Wufka and P. Ralph},
  Booktitle                = {2015 Agile Conference},
  Year                     = {2015},
  Month                    = {Aug},
  Pages                    = {60-64},

  Doi                      = {10.1109/Agile.2015.10},
  Keywords                 = {software prototyping;agile approaches;dialectic interplay;process theory;Agile software development;Information systems;Organizations;Presses;Programming;Software;Stakeholders;agile development;agility;process theory},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7463797,
  Title                    = {FlexCloud: A Flexible and Extendible Simulator for Performance Evaluation of Virtual Machine Allocation},
  Author                   = {M. Xu and G. Li and W. Yang and W. Tian},
  Booktitle                = {2015 IEEE International Conference on Smart City/SocialCom/SustainCom (SmartCity)},
  Year                     = {2015},
  Month                    = {Dec},
  Pages                    = {649-655},

  Abstract                 = {Cloud Data centers aim to provide reliable, sustainable and scalable services for all kinds of applications. Resource scheduling is one of keys to cloud services. To model and evaluate different scheduling policies and algorithms, we propose FlexCloud, a flexible and scalable simulator that enables users to simulate the process of initializing cloud data centers, allocating virtual machine requests and providing performance evaluation for various scheduling algorithms. FlexCloud can be run on a single computer with JVM to simulate large scale cloud environments with focus on infrastructure as a service, adopts agile design patterns to assure the flexibility and extensibility, models virtual machine migrations which is lack in the existing tools, provides user-friendly interfaces for customized configurations and replaying. Comparing to existing simulators, FlexCloud has combined features for supporting public cloud providers, load-balance and energy-efficiency scheduling. FlexCloud has advantage in computing time and memory consumption to support large-scale simulations. The detailed design of FlexCloud is introduced and performance evaluation is provided.},
  Doi                      = {10.1109/SmartCity.2015.143},
  Keywords                 = {cloud computing;computer centres;digital simulation;energy conservation;resource allocation;scheduling;user interfaces;virtual machines;FlexCloud;JVM;agile design patterns;cloud data centers;cloud environments;cloud services;customized configurations;energy-efficiency scheduling;extendible simulator;flexible simulator;infrastructure as a service;load-balance;performance evaluation;public cloud providers;replaying;resource scheduling;scheduling policies;user-friendly interfaces;virtual machine allocation;virtual machine migrations;Cloud computing;Computational modeling;Load modeling;Resource management;Scheduling algorithms;Virtual machining;Cloud Data Centers;Flexibility and Extensibility;Performance Evaluation;Resource Scheduling Algorithms;Virtual Machine Allocation},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7020666,
  Title                    = {Test driven development contribution in universities in producing quality software: A systematic review},
  Author                   = {N. Yahya and N. S. Awang Abu Bakar},
  Booktitle                = {The 5th International Conference on Information and Communication Technology for The Muslim World (ICT4M)},
  Year                     = {2014},
  Month                    = {Nov},
  Pages                    = {1-6},

  Abstract                 = {Test driven development (TDD) is one of the Agile techniques adopted in education. TDD is an ideal approach to be taught in university due to its capability in producing quality software and at the same time teaching novice programmers to test and develop a product simultaneously. It helps novice programmers to think before they develop rather than using “trial-and-error” approach in their project. However, based on the existing research, TDD contribution in producing a better quality and the perception among novice programmers towards it needs to be analyzed. This systematic review will identify the quality of a product produced by the students in university and also their perception towards TDD.},
  Doi                      = {10.1109/ICT4M.2014.7020666},
  Keywords                 = {computer aided instruction;computer science education;educational institutions;human factors;program testing;programming;software quality;teaching;TDD;agile techniques;educational universities;novice programmer teaching;product development;product testing;programmer perception;quality-software production;test driven development contribution;Decision support systems;Test driven development;experiment;perception;quality;university},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7353440,
  Title                    = {Generation of dynamically feasible and collision free trajectory by applying six-order Bezier curve and local optimal reshaping},
  Author                   = {L. Yang and D. Song and Jizhong Xiao and Jianda Han and L. Yang and Yang Cao},
  Booktitle                = {2015 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS)},
  Year                     = {2015},
  Month                    = {Sept},
  Pages                    = {643-648},

  Abstract                 = {This paper considers the problem of generating dynamically feasible and collision free trajectory for unmanned aerial vehicles(UAVs) in cluttered environments. General random-based searching algorithms output piecewise linear paths, which cause big discrepancy when used as navigation reference for UAVs with high speed. Meanwhile, the disturbance may also occur to lead the UAVs into danger. In order to obtain agile autonomy without potential dangers, this paper introduces a three-step method to generate feasible reference. In the first step, a six-order Bezier curve, which uses Tuning Rotation to decrease the curvature, is introduced to smooth the output of the path planner. Then a forward simulation is implemented to find the potential dangerous regions. Finally, the path is reshaped by local optimal reshaping planner to eliminate residual dangers. The three steps form a circulation, the reshaped path sent to the first step again to check dynamic feasibility and safety. The method combining Six-order Bezier curve, Tuning Rotation, and local optimal reshaping is proposed by us for the first time, where the Tuning Rotation is able to meet various curvature requirements without violating the previous path, local optimal reshaping obtains both temporal and spatial reshaping with high time efficiency. The method addresses the system dynamics to achieve agile autonomy, which provides the geometry reference as well as the low level control. The effectiveness of the proposed method is demonstrated by the simulations.},
  Doi                      = {10.1109/IROS.2015.7353440},
  Keywords                 = {autonomous aerial vehicles;mobile robots;path planning;random processes;UAV path planning;collision free trajectory;dynamically feasible trajectory;forward simulation;local optimal reshaping;random-based searching algorithms;six-order Bezier curve;spatial reshaping;temporal reshaping;tuning rotation;unmanned aerial vehicles;Interpolation;Kinematics;Navigation;Smoothing methods;Trajectory;Tuning},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@Article{6957146,
  Title                    = {A new control plane for 5G network architecture with a case study on unified handoff, mobility, and routing management},
  Author                   = {V. Yazıcı and U. C. Kozat and M. O. Sunay},
  Journal                  = {IEEE Communications Magazine},
  Year                     = {2014},

  Month                    = {Nov},
  Number                   = {11},
  Pages                    = {76-85},
  Volume                   = {52},

  Abstract                 = {The tremendous growth in wireless Internet use is showing no signs of slowing down. Existing cellular networks are starting to be insufficient in meeting this demand, in part due to their inflexible and expensive equipment as well as complex and non-agile control plane. Software-defined networking is emerging as a natural solution for next generation cellular networks as it enables further network function virtualization opportunities and network programmability. In this article, we advocate an all-SDN network architecture with hierarchical network control capabilities to allow for different grades of performance and complexity in offering core network services and provide service differentiation for 5G systems. As a showcase of this architecture, we introduce a unified approach to mobility, handoff, and routing management and offer connectivity management as a service (CMaaS). CMaaS is offered to application developers and over-the-top service providers to provide a range of options in protecting their flows against subscriber mobility at different price levels.},
  Doi                      = {10.1109/MCOM.2014.6957146},
  ISSN                     = {0163-6804},
  Keywords                 = {mobility management (mobile radio);software radio;telecommunication network routing;5G network architecture;all-SDN network architecture;connectivity management;core network services;hierarchical network control;mobility management;over-the-top service;routing management;service differentiation;software-defined networking;unified handoff;Computer architecture;Mobile computing;Mobile radio mobility management;Network architecture;Next generation networking;Radio access networks;Wireless communication},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6982622,
  Title                    = {Norming to Performing: Failure Analysis and Deployment Automation of Big Data Software Developed by Highly Iterative Models},
  Author                   = {K. S. Yim},
  Booktitle                = {2014 IEEE 25th International Symposium on Software Reliability Engineering},
  Year                     = {2014},
  Month                    = {Nov},
  Pages                    = {144-155},

  Abstract                 = {We observe many interesting failure characteristics from Big Data software developed and released using some kinds of highly iterative development models (e.g., Agile). ~16% of failures occur due to faults in software deployments (e.g., Packaging and pushing to production). Our analysis shows that many such production outages are at least partially due to some human errors rooted in the high frequency and complexity of software deployments. ~51% of the observed human errors (e.g., Tran-Scription, education, and communication error types) are avoidable through automation. We thus develop a fault-tolerant automation framework to make it efficient to automate end-to-end software deployment procedures. We apply the framework to two Big Data products. Our case studies show the complexity of the deployment procedures of multi-homed Big Data applications and help us to study the effectiveness of the validation and verification techniques for user-provided automation programs. We analyze the production failures of the two products again after the automation. Our experimental data shows how the automation and the associated procedure improvements reduce the deployment faults and overall failure rate, and improve the feature launch velocity. Automation facilitates more formal, procedure-driven software engineering practices which not only reduce the manual work and human-oriented, avoidable production outages but also help engineers to better understand overall software engineering procedures, making them more auditable, predictable, reliable, and efficient. We discuss two novel metrics to evaluate progress in mitigating human errors and the conditions indicating points to start such transition from owner-driven deployment practice.},
  Doi                      = {10.1109/ISSRE.2014.31},
  ISSN                     = {1071-9458},
  Keywords                 = {Big Data;program verification;software fault tolerance;Big Data products;Big Data software;deployment automation;end-to-end software deployment procedures;failure analysis;failure characteristics;failure rate;fault-tolerant automation framework;iterative models;multihomed Big Data applications;procedure-driven software engineering practices;production failures;production outages;software deployment faults;user-provided automation programs;validation techniques;verification techniques;Automation;Big data;Fault tolerance;Fault tolerant systems;Production;Runtime;Software;Automation;failure classification;human error;incremental validation;iterative development;software deployment},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6615275,
  Title                    = {The research of resources authorization system in the workflow system},
  Author                   = {Xu Yin and HaibeiZheng},
  Booktitle                = {2013 IEEE 4th International Conference on Software Engineering and Service Science},
  Year                     = {2013},
  Month                    = {May},
  Pages                    = {145-148},

  Abstract                 = {Security is a very important concern in workflow system. According to business processes involved in large Numbers of business resources and the dynamic changing access object, give an agile authorization model. Namely according to the characteristics of resources in the workflow system, divide resources into function resources and process resources, and make the participants of system to organization model abstraction. Decouple the user and the permission by introducing the role as the carrier of access. The model is based on role to realize resources authorization of process, which is a kind of extensible authorization model and ensure that the business resources are not accessed illegally. This is a good way to realize the integrity of business data.},
  Doi                      = {10.1109/ICSESS.2013.6615275},
  ISSN                     = {2327-0586},
  Keywords                 = {authorisation;business data processing;data integrity;organisational aspects;resource allocation;workflow management software;access carrier;agile authorization model;business data integrity;business processes;business resources;dynamic changing access object;extensible authorization model;function resources;organization model abstraction;process resources;resources authorization system;security;workflow system;Encoding;Organizations;authorization;role;workflow},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7250384,
  Title                    = {Developing Sensoria: An audio frequency analyzer and visualizer built with open source software},
  Author                   = {W. Young and T. Pei and H. Kim},
  Booktitle                = {2015 10th International Conference on Computer Science Education (ICCSE)},
  Year                     = {2015},
  Month                    = {July},
  Pages                    = {936-940},

  Abstract                 = {We developed Sensoria, an audio analysis and visualization application through a re-use oriented software engineering approach in a combination of Extreme Programming. The application was developed by adopting Open Source Software (OSS) libraries from the Processing project. Sensoria allows an end-user to participate in the creation of dynamic visualizations that respond to input audio as interpreted in a variety of ways. The user can create and manipulate visual components corresponding to the input audio, and also save or load visualization sessions. Sensoria can be further extended to add more features as it is highly modularized and documented, and its source code is open and publicly available.},
  Doi                      = {10.1109/ICCSE.2015.7250384},
  Keywords                 = {audio equipment;public domain software;software prototyping;source code (software);OSS library;audio frequency analyzer;audio frequency visualizer;extreme programming;open source software;source code;Graphical user interfaces;Java;Libraries;Open source software;Shape;Visualization;Open source software;Processing;audio analysis;visualization},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@Article{7879096,
  Title                    = {The State of the Cloud},
  Author                   = {M. Yousif},
  Journal                  = {IEEE Cloud Computing},
  Year                     = {2017},

  Month                    = {Jan},
  Number                   = {1},
  Pages                    = {4-5},
  Volume                   = {4},

  Abstract                 = {This column examines the state of the cloud. Digitization is causing huge disruptions and changes in all public/government, education and research and businesses, including enterprises and small-medium businesses. Many topics are lumped under digitization such as cloud, big data, Internet of Things (IoT), mobility, social, in-memory computing, artificial intelligence and hyper-connec-tivity. You can add to (or remove from) the list as you wish. Such digital disruption is forcing the Chief in-formation officer (CIO) to put two hats on. The first requires them to be agile, fast and flexible; and the second requires them to be effective, resourceful and steady. For the former, the CIO needs to enable busi-ness growth, drive innovation, adopt smart services and ensure easy access to information. For the latter, the CIO focuses on reducing complexity, freeing up legacy IT budgets, ensuring high-quality operations and safeguarding data privacy & security.},
  Doi                      = {10.1109/MCC.2017.4},
  ISSN                     = {2325-6095},
  Keywords                 = {Big Data;Internet of Things;artificial intelligence;cloud computing;commerce;data privacy;security of data;software maintenance;Internet of Things;IoT;artificial intelligence;big data;business growth;data privacy;data security;digitization;hyper-connectivity;in-memory computing;legacy IT budgets;mobility;social computing;state of the cloud;Internet of Things (IoT);big data;cloud computing},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6612883,
  Title                    = {Beyond Requirements Dictator: How Agile Helped a Business Analyst Discover Her Real Value},
  Author                   = {D. Zajac-Woodie},
  Booktitle                = {2013 Agile Conference},
  Year                     = {2013},
  Month                    = {Aug},
  Pages                    = {88-93},

  Abstract                 = {This is my personal journey of discovering how to provide value as a business analyst on an agile team. I will share some things that smoothed my path and some obstacles that slowed me down. And for the many BAs struggling with how they fit into this new world, I will also redefine the role of a business analyst as more than a requirements dictator. In closing, I will illustrate how BAs, as well as the rest of the team, can reap the benefits of broadening their roles and stepping outside of their role boundaries.},
  Doi                      = {10.1109/AGILE.2013.14},
  Keywords                 = {business data processing;continuing education;formal verification;professional aspects;software prototyping;BA;agile team;business analyst;requirements dictator;Barium;Collaboration;Companies;Documentation;Software;Testing;agile;business analysis;coaching;collaboration;continuous learning;crossing role boundaries;culture change;documentation;facilitation;obstacles;requirements;software development;teams;testing;value},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7889675,
  Title                    = {Multi-discipline agile development and reliability and maintainability},
  Author                   = {C. C. Zanotti and A. J. Kaylor and K. L. Davidsen},
  Booktitle                = {2017 Annual Reliability and Maintainability Symposium (RAMS)},
  Year                     = {2017},
  Month                    = {Jan},
  Pages                    = {1-3},

  Abstract                 = {In today's competitive market place the need to reduce cost and increase speed in development require exploring a different approach than the traditional waterfall method of hardware development. The Waterfall method consists of a series of stages that are completed sequentially, once a stage has been completed, developers can't go back to the previous stage - not without scratching the project and starting over. In order to remain competitive, companies developing hardware are using Agile methodologies to help keep up with the accelerating rate of change. Scrum is a simple and flexible Agile methodology that provides the ability to respond to changing requirements, increase productivity, and enables rapid and flexible development cycles, with greater collaboration and reduced costs & defects. Integrating a Reliability And Maintainability (RAM) Scrum Team as part of the Agile product development can help deliver reliable and maintainable hardware quicker, and at lower costs providing a competitive advantage. In summary help enable transformational change. Be open to process change and work your RAM agile process model. Don't impose current waterfall processes on Scrum, they will not help. Be supportive and review the team's work products during the Sprint timeline in which they are being developed. Don't expect to see a lot of charts for reviews and table tops and don't direct the team to do additional work or direct how it should be done. Look at the team Scrum boards to understand what is going on and help remove impediments. Staff the team's needs with permanent solutions and take Scrum training to understand, enable and support the changes. Finally don't see failing as bad, especially if we fail early and learn from it.},
  Doi                      = {10.1109/RAM.2017.7889675},
  Keywords                 = {agile manufacturing;maintenance engineering;product development;reliability;Agile methodologies;Agile product development;RAM agile process model;maintainability;multidiscipline agile development;reliability;reliability and maintainability;waterfall method;Companies;Hardware;Prototypes;Random access memory;Reliability engineering;Software;Agile;Agile FRACAS;RAM;Scrum},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6605861,
  Title                    = {A Distributed Protective Approach for Multiechelon Supply Systems},
  Author                   = {X. Zhang and Z. Zheng and Y. Zhu and K. Cai},
  Booktitle                = {2013 IEEE 37th Annual Computer Software and Applications Conference Workshops},
  Year                     = {2013},
  Month                    = {July},
  Pages                    = {621-626},

  Abstract                 = {The future development trend of many supply systems is to become distributed, highlighting the requirements of agile and comprehensive decisions for both risk evaluation and protective approaches. According to the requirements, this paper proposes a distributed risk evaluation model, the distributed &tau;-interdiction median (DRIM) model for multiechelon supply systems, which enables the supply system to estimate the hazard using distributed computational resources. Furthermore, a protective resources allocation approach, the DRIM based protection approach (DRIMP approach) is introduced, aiming at making rational defensive strategies that consider the benefits of each facility. The experiment in typical data sets indicates that DRIM and DRIMP approach are able to fulfill the agility, distributed computing, and vendor-neutral requirements. The defensive strategies achieved by DRIMP approach are more rational in the distributed environment, compared to current centralized methods.},
  Doi                      = {10.1109/COMPSACW.2013.101},
  Keywords                 = {agile manufacturing;distributed processing;production engineering computing;resource allocation;supply chain management;DRIM based protection approach;DRIM model;DRIMP approach;distributed computational resources;distributed computing;distributed protective approach;distributed r-interdiction median model;multiechelon supply systems;protective approaches;risk evaluation;Computational modeling;Distributed databases;Indexes;Resource management;Semiconductor optical amplifiers;Service-oriented architecture;distributed approach;protection problems;risk evaluation;service-oriented architecture;supply systems},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@Article{7731178,
  Title                    = {A Comprehensive Bottom-Tracking Method for Sidescan Sonar Image Influenced by Complicated Measuring Environment},
  Author                   = {J. Zhao and X. Wang and H. Zhang and A. Wang},
  Journal                  = {IEEE Journal of Oceanic Engineering},
  Year                     = {2017},
  Number                   = {99},
  Pages                    = {1-13},
  Volume                   = {PP},

  Doi                      = {10.1109/JOE.2016.2602642},
  ISSN                     = {0364-9059},
  Keywords                 = {Frequency measurement;Pollution measurement;Sea measurements;Solids;Sonar measurements;Water pollution;Bottom tracking;complicated measuring environments;comprehensive tracking method;sidescan sonar (SSS);threshold method},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@Article{7509393,
  Title                    = {Network slicing as a service: enabling enterprises' own software-defined cellular networks},
  Author                   = {X. Zhou and R. Li and T. Chen and H. Zhang},
  Journal                  = {IEEE Communications Magazine},
  Year                     = {2016},

  Month                    = {July},
  Number                   = {7},
  Pages                    = {146-153},
  Volume                   = {54},

  Abstract                 = {With the blossoming of network functions virtualization and software-defined networks, networks are becoming more and more agile with features like resilience, programmability, and open interfaces, which help operators to launch a network or service with more flexibility and shorter time to market. Recently, the concept of network slicing has been proposed to facilitate the building of a dedicated and customized logical network with virtualized resources. In this article, we introduce the concept of hierarchical NSaaS, helping operators to offer customized end-to-end cellular networks as a service. Moreover, the service orchestration and service level agreement mapping for quality assurance are introduced to illustrate the architecture of service management across different levels of service models. Finally, we illustrate the process of network slicing as a service within operators by typical examples. With network slicing as a service, we believe that the supporting system will transform itself to a production system by merging the operation and business domains, and enabling operators to build network slices for vertical industries more agilely.},
  Doi                      = {10.1109/MCOM.2016.7509393},
  ISSN                     = {0163-6804},
  Keywords                 = {cellular radio;quality assurance;software defined networking;telecommunication services;virtualisation;NSaaS;customized logical network;dedicated logical network;end-to-end cellular networks;network functions virtualization;network slicing as a service;quality assurance;service level agreement mapping;service management;service orchestration;software-defined cellular networks;software-defined networks;Mobile communication;Mobile computing;Quality of service;Software defined networking;Wireless communication},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7158507,
  Title                    = {Architectural Decision Guidance Across Projects - Problem Space Modeling, Decision Backlog Management and Cloud Computing Knowledge},
  Author                   = {O. Zimmermann and L. Wegmann and H. Koziolek and T. Goldschmidt},
  Booktitle                = {2015 12th Working IEEE/IFIP Conference on Software Architecture},
  Year                     = {2015},
  Month                    = {May},
  Pages                    = {85-94},

  Abstract                 = {Architectural Knowledge Management (AKM) has been a major topic in software architecture research since 2004. Open AKM problems include an effective, seamless transition from reusable knowledge found in patterns books and technology blogs to project-specific decision guidance and an efficient, practical approach to knowledge application and maintenance. We extended our previous work with concepts for problem space modeling, focusing on reusable knowledge, as well as solution space management, focusing on project-level decisions. We implemented these concepts in ADMentor, an extension of Sparx Enterprise Architect. AD Mentor features rapid problem space modeling, UML model linkage, question-option-criteria diagram support, meta-information for model tailoring, as well as decision backlog management. We validated ADMentor by modeling and applying 85 cloud application design decisions and 75 workflow management decisions, creating one problem and three sample solution spaces covering control system architectures, and obtaining user feedback on tool and model content.},
  Doi                      = {10.1109/WICSA.2015.29},
  Keywords                 = {Unified Modeling Language;cloud computing;knowledge management;project management;software architecture;ADMentor;Sparx enterprise architect;UML model linkage;architectural decision guidance;architectural knowledge management;cloud application design decisions;cloud computing knowledge;control system architectures;decision backlog management;knowledge application;knowledge maintenance;meta-information;open AKM problems;problem space modeling;project-specific decision guidance;question-option-criteria diagram support;reusable knowledge;software architecture;solution space management;workflow management decisions;Communities;Computational modeling;Documentation;Knowledge engineering;Software;Software architecture;Unified modeling language;UML;agile practices;architectural decisions;architectural synthesis;cloud computing;knowledge management;patterns},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6684866,
  Title                    = {Using scrum to teach software engineering: A case study},
  Author                   = {S. D. Zorzo and L. de Ponte and D. Lucrédio},
  Booktitle                = {2013 IEEE Frontiers in Education Conference (FIE)},
  Year                     = {2013},
  Month                    = {Oct},
  Pages                    = {455-461},

  Doi                      = {10.1109/FIE.2013.6684866},
  ISSN                     = {0190-5848},
  Keywords                 = {computer science education;software prototyping;teaching;Scrum principles;agile methodologies;software development technologies;software engineering;student learning;teaching;Communities;Data visualization;Databases;Education;Programming;Software;Software engineering;SCRUM;academic teaching;agile methodologies;software engineering},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7780132,
  Title                    = {Architecture Description Language for Incremental Integration of Cloud Services Architectures},
  Author                   = {M. Zuñiga-Prieto and E. Insfran and S. Abrahão},
  Booktitle                = {2016 IEEE 10th International Symposium on the Maintenance and Evolution of Service-Oriented and Cloud-Based Environments (MESOCA)},
  Year                     = {2016},
  Month                    = {Oct},
  Pages                    = {16-23},

  Doi                      = {10.1109/MESOCA.2016.10},
  Keywords                 = {cloud computing;hardware description languages;service-oriented architecture;software prototyping;ADL;Microsoft Azure platform;SOA;SoaML language;agile development;architecture description language;choreography mechanisms;cloud service architectures;coarse-grained services;orchestration mechanisms;reconfiguration scripts;service-oriented architecture;software applications;Business;Cloud computing;Computer architecture;Service-oriented architecture;Unified modeling language;SoaML;architecture description language;architecture reconfiguration;cloud services architecture;incremental integration;service-oriented architecture},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7284596,
  Title                    = {The Prevalence of UX Design in Agile Development Processes in Industry},
  Author                   = {T. Øvad and L. B. Larsen},
  Booktitle                = {2015 Agile Conference},
  Year                     = {2015},
  Month                    = {Aug},
  Pages                    = {40-49},

  Abstract                 = {The gap between how the academic world develops usability and user experience (UX) methods, and how the industry employs these methods is perceived as both broad and deep. But is that the real picture -- and has there been a change in how companies work within these fields over the past two years? By conducting interviews with eight companies, this paper tries to answer these two questions. The companies were initially interviewed in 2013 and by follow-up interviews in 2015 the paper draws a picture of how the companies work with UX and usability in an agile development environment. We identify the challenges they are facing and if, and how the work progresses. We found that the UX maturity during these two years had changed significantly. This was revealed by the fact that almost all of the companies in 2015 had implemented or were in the process of developing a UX strategy together with more formalized UX processes. They also allocated more resources to conduct UX and usability work than earlier. We found that all of the companies made use of low-fi prototyping, followed by usability testing, workshops, personas, expert evaluations, user or customer journeys, customer visits and user task analyses. Almost all the companies carried out development using the Scrum framework. All of the companies were interested in the idea of agile UX, and found the idea of using the developers as a UX resource interesting. This, together with an idea of modifying existing usability methods to be used in an agile, industrial setting could be a solution to bridge the gap between academia and the industry.},
  Doi                      = {10.1109/Agile.2015.13},
  Keywords                 = {program testing;software prototyping;user centred design;Scrum framework;UX design;academic world;agile development processes;customer journey;customer visits;low-fi prototyping;resource allocation;usability testing;user experience;user journey;user task analyses;Companies;Hardware;Industries;Interviews;Testing;Usability;Agile Development;Industry;Usability;User Experience Design},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7733458,
  Title                    = {AgileSafe - a method of introducing agile practices into safety-critical software development processes},
  Author                   = {K. Łukasiewicz and J. Górski},
  Booktitle                = {2016 Federated Conference on Computer Science and Information Systems (FedCSIS)},
  Year                     = {2016},
  Month                    = {Sept},
  Pages                    = {1549-1552},

  Abstract                 = {This article introduces AgileSafe, a new method of incorporating agile practices into critical software development while still maintaining compliance with the software assurance requirements imposed by the application domain. We present the description of the method covering the process of its application and the input and output artefacts.},
  Keywords                 = {safety-critical software;software prototyping;AgileSafe;agile practice;compliance maintenance;safety-critical software development process;software assurance requirement;Certification;Companies;IEC Standards;Knowledge based systems;Safety;Software},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7427175,
  Title                    = {[Title page i]},
  Booktitle                = {2016 49th Hawaii International Conference on System Sciences (HICSS)},
  Year                     = {2016},
  Month                    = {Jan},
  Pages                    = {i-i},

  Abstract                 = {The following topics are dealt with: collaboration systems; learning technologies; teaching technologies; information systems technology; communication technology; disaster management; crisis management; team creativity; organizational creativity; cross-border IS/IT collaboration; cross-organizational IS/IT collaboration; data science; innovation; social networking services; distributed group decision-making; global virtual teams; task-centered assistance systems; human-centered assistance systems; human-computer interaction; information design; mobility-enhanced social collaborations; value creation; team collaboration; serious games; gamification; collaboration research; social media; e-Business transformation; e-Health; mobile value services; service science; systems sciences; sustainability decision technologies; Big Data analytics; Internet of Things; Web mining; text mining; data mining; business analytics; smart city government; e-Society services; ICT-enabled services; digital service innovations; open phenomena; humanitarian operations research; intelligent decision support; supply chain management; logistics; interactive visual decision analytics; multi-criteria decision analysis; service analytics; smart service systems; soft computing; streaming data analytics; systemic financial risk analytics; collective intelligence; network analysis; digital media; social computing; electric energy systems; renewable generation; distributed generation; power system monitoring; power system control; power system protection; resilient networks; electronic government; Big and Linked Data; BOLD; cybersecurity; information and communication technologies; human development; social justice; digital government; healthcare; global health IT strategies; health behavior change support systems; IT architectures; learning health systems; mobile applications; clinical decision-making; healthy aging technologies; user experience design; Internet; digital economy; crowdfunding; ele- tronic marketing; IS cross-cultural issues; behavioral IS security; privacy; Web content analysis; Web content usage; online games; game-like systems; social shopping; Internet of Everything; cloud computing; knowledge innovation; entrepreneurial systems; knowledge systems; socio-political legitimization; knowledge economics; knowledge flows; knowledge transfer; knowledge sharing; knowledge exchange; knowledge management; knowledge society; organizational learning; ecosystems decision support; enterprise architecture; human capital; business operations; information systems procurement; project management; IT management; open source application software; business intelligence; organizational information technologies; agile; lean; cybercrimes; cyberwarfare; defensive software technologies; offensive software technologies; digital forensics; parallel computing; software product lines; and wireless networks.},
  Doi                      = {10.1109/HICSS.2016.1},
  ISSN                     = {1530-1605},
  Keywords                 = {Internet;administrative data processing;computer games;data handling;data mining;decision making;ecology;emergency management;human computer interaction;information systems;operations research;organisational aspects;power systems;project management;public domain software;security;social networking (online);teaching;ubiquitous computing;value engineering;BOLD;Big Data analytics;Big and Linked Data;ICT-enabled services;IS cross-cultural issues;IT architectures;IT management;Internet;Internet of Everything;Internet of Things;Web content analysis;Web content usage;Web mining;agile;behavioral IS security;business analytics;business intelligence;business operations;clinical decision-making;cloud computing;collaboration research;collaboration systems;collective intelligence;communication technology;crisis management;cross-border IS/IT collaboration;cross-organizational IS/IT collaboration;crowdfunding;cybercrimes;cybersecurity;cyberwarfare;data mining;data science;defensive software technologies;digital economy;digital forensics;digital government;digital media;digital service innovations;disaster management;distributed generation;distributed group decision-making;e-Business transformation;e-Health;e-Society services;ecosystems decision support;electric energy systems;electronic government;electronic marketing;enterprise architecture;entrepreneurial systems;game-like systems;gamification;global health IT strategies;global virtual teams;health behavior change support systems;healthcare;healthy aging technologies;human capital;human development;human-centered assistance systems;human-computer interaction;humanitarian operations research;information and communication technologies;information design;information systems procurement;information systems technology;innovation;intelligent decision support;interactive visual decision analytics;knowledge economics;knowledge exchange;knowledge flows;knowledge innovation;knowledge management;knowledge sharing;knowledge society;knowledge systems;knowledge transfer;lean;learning health systems;learning technologies;logistics;mobile applications;mobile value services;mobility-enhanced social collaborations;multicriteria decision analysis;network analysis;offensive software technologies;online games;open phenomena;open source application software;organizational creativity;organizational information technologies;organizational learning;parallel computing;power system control;power system monitoring;power system protection;privacy;project management;renewable generation;resilient networks;serious games;service analytics;service science;smart city government;smart service systems;social computing;social justice;social media;social networking services;social shopping;socio-political legitimization;soft computing;software product lines;streaming data analytics;supply chain management;sustainability decision technologies;systemic financial risk analytics;systems sciences;task-centered assistance systems;teaching technologies;team collaboration;team creativity;text mining;user experience design;value creation;wireless networks},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7858181,
  Title                    = {[Title page]},
  Booktitle                = {2016 International Conference on Information Technology Systems and Innovation (ICITSI)},
  Year                     = {2016},
  Month                    = {Oct},
  Pages                    = {1-1},

  Abstract                 = {The following topics are dealt with: SDLC SPASI v. 4.0. business process; information extraction; statistics indicator tables; rule generalizations; ontology; conventional learning system; ICT-based learning; job training system; time-series data; RAID; software-based accelerator; virtualization environment; enterprise architecture government organization; TOGAF ADM; SONA; e- library; modified quantitative models for performance measurement system method; business process improvement; district government innovation service case study; government organization; m-government implementation evaluation; trusted Big Data; official statistics study case; data profiling; data quality improvement; secure internet access; copyright protection; color images; transform domain; luminance component; information network architecture; local government; software as a service; expert system; meningitis disease; certainty factor method; digital asset management system; broadcasting organizations; e-portofolio definition; system security requirement identification; electronic payment system; Internet-based long distance education; operational model data governance; requirement engineering; open government information network development; process capability assessment; information security management; information security governance; national cyber physical systems; e-learning readiness; remote co- trol system; serial communications mobile; microcontroller; knowledge sharing; indonesia higher educational institutions; cultural heritage metadata; geo linked open data; NUSANTARA: knowledge management system; adaptive personalized learning system; interactive learning media; RPP ICT; government human capital management; knowledge management tools utilization; knowledge management readiness; analytic hierarchy process; government institutions; usability testing; scrum methodology; assistant information system; automatic arowana raiser; pSPEA2; strength Pareto evolutionary algorithm 2; early diagnosis expert system deficiency; digital forensic; user acceptance; human resource information system; automated plasmodium detection; malaria diagnosis; thin blood smear image; 3D virtual game; MOODLE; SLOODLE; open simulator case study; color-based segmentation; feature detection; ball post; goal post; mobile soccer robot game field; smart farming; real time q-log-based feature normalization; distant speech recognition; Monte Carlo localization; robot operating system; finite element method; 3D DC resistivity modeling; multi GPU; breast cancer lesions; adaptive thresholding; morphological operation; gamification framework; online training; collaborative working system; classification breast cancer ultrasound images; posterior features;},
  Doi                      = {10.1109/ICITSI.2016.7858181},
  Keywords                 = {Big Data;Monte Carlo methods;analytic hierarchy process;asset management;biomedical ultrasonics;broadcasting;business data processing;cancer;cloud computing;computer aided instruction;copy protection;cyber-physical systems;digital forensics;diseases;distance learning;educational institutions;electronic money;enterprise resource planning;evolutionary computation;expert systems;feature extraction;finite element analysis;formal specification;further education;government data processing;groupware;history;human resource management;image classification;image colour analysis;image segmentation;information retrieval;knowledge management;meta data;mobile computing;mobile robots;ontologies (artificial intelligence);power system security;public administration;sentiment analysis;small-to-medium enterprises;speech recognition;sport;time series;transforms;trusted computing;3D DC resistivity modeling;3D virtual game;DES;ERP modules requirement;ICT-based learning;IT value model;Internet-based long distance education;MOODLE;Monte Carlo localization;NUSANTARA;QMPMS method;RAID;RGB primary color cluster;RPP ICT;SDLC SPASI v. 4.0. business process;SLOODLE;SONA;TOGAF ADM;adaptive personalized learning system;adaptive thresholding;analytic hierarchy process;assistant information system;automated plasmodium detection;automatic arowana raiser;breast cancer lesions;broadcasting organizations;business process improvement;business system requirement;certainty factor method;classification breast cancer ultrasound images;collaborative working system;color blind test quantification;color images;color-based segmentation;conventional learning system;copyright protection;cultural heritage metadata;data profiling;data quality improvement;digital asset management system;digital forensic;distant speech recognition;district government innovation service case study;e-learning readiness;e-library;e-portofolio definition;early diagnosis expert system deficiency;electronic payment system;enterprise architecture government organization;expert system;feature detection;finite element method;geo linked open data;government human capital management;government institutions;government organization;human resource information system;indonesia higher educational institutions;information extraction;information network architecture;information security governance;information security management;interactive learning media;job training system;knowledge management readiness;knowledge management system;knowledge management tools utilization;knowledge sharing;local government;luminance component;m-government implementation evaluation;malaria diagnosis;meningitis disease;microcontroller;mobile soccer robot game field;modified quantitative models for performance measurement system method;;morphological operation;multi GPU;national cyber physical systems;official statistics study case;ontology;open government information network development;open simulator case study;operational model data governance;pSPEA2;posterior features;power analysis attack;process capability assessment;public services satisfaction;real time q-log-based feature normalization;remote control system;requirement engineering;robot operating system;rule generalizations;scrum methodology;secure internet access;sentiment analysis;serial communications mobile;small and medium enterprise fashion industry;small craft companies;small culinary enterprises;smart farming;software as a service;software-based accelerator;statistics indicator tables;strength Pareto evolutionary algorithm 2;system security requirement identification;thin blood smear image;three-wheeled omnidirectional robot controller;time-series data;transform domain;trusted Big Data;usability testing;user acceptance;virtualization environment},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{7155050,
  Title                    = {[Title page]},
  Booktitle                = {2015 International Conference on Futuristic Trends on Computational Analysis and Knowledge Management (ABLAZE)},
  Year                     = {2015},
  Month                    = {Feb},
  Pages                    = {1-1},

  Abstract                 = {The following topics are dealt with: vibration signal based monitoring; mechanical microdrilling; rule based inflectional urdu stemmer usal; rule based derivational urdu stemmer usal; fuzzy logic controller; heat exchanger temperature process; text dependent speaker recognition; MFCC; SBC; multikeyword based sorted querying; encrypted cloud data; communication understandability enhancement; GSD; parsing; input power quality; switched reluctance motor drive; externally powered upper limb prostheses; program test data generation; launch vehicle optimal trajectory generation; misalignment fault detection; induction motors; current signature analysis; vibration signature analysis; wind power plants; vortex induced vibration; mechanical structure modal analysis; machining parameter optimization; diesel engines; high speed nonvolatile NEMS memory devices; image fusion; RGB color space; LUV color space; offline English character recognition; human skin detection; tumor boundary extraction; MR images; OdiaBraille; text transcription; shadow detection; YIQ color models; color aerial images; moving object segmentation; image data deduplication; iris recognition; two-stage series connected thermoelectric generator; education information system; cyclone separator CFD simulation; imperfect debugging; vulnerability discovery model; stochastic differential equation; cloud data access; attribute based encryption; agile SCRUM framework; PID controller optimisation; hybrid watermarking technique; privacy preservation; vertical partitioned medical database; power amplifier; software reliability growth modeling; cochlear implantation; cellular towers; feedforward neural networks; MBSOM; agent based semantic ontology matching; phonetic word identification; test case selection; MANET security issues; online movie data classification; modified LEACH protocol; mobile ad hoc networks; virtual machine introspection; task scheduling; cluster computing; image compression; green cloud computin- ; critical health data transmission system; irreversible regenerative Brayton cycle; task set based adaptive round robin scheduling; database security; heterogeneous online social networks; aspect oriented systems; IP network; MPLS network; DBSCAN algorithm; VANET; self-organizing feature map; image segmentation; enzyme classification; wireless sensor networks; energy smart routing protocol; adaptive gateway discovery mechanism; heuristic job scheduling; AODV based congestion control protocol; expert system; home appliances; relay node based heer protocol; data storage; TORA security; data aggregation; low energy adaptive stable energy efficient protocol; fuzzy logic based clustering algorithm; hybrid evolutionary MPLS tunneling algorithm; English mobile teaching; eigenvector centrality; genetic algorithms; data mining; heart disease prediction; lossless data compression; reconfigurable ring resonator; triple band stacked patch antenna; energy based spectrum sensing; cognitive radio networks; FPGA; knowledge representation; multiband microstrip antenna; Web indexing; HTML priority system; Web cache recommender system; e-learning; IT skill learning for visual impaired; user review data analysis; software up-gradation model; software testing; Web crawlers; secret key watermarking; WAV audio file; SRM drive; ZETA converter; fractional PID tuning; medical image reconstruction; speech recognition system; video authentication; digital forensics; content based image retrieval; image classification; hybrid wavelet transform; facial feature extraction; RBSD adder; smart home environment; generalized discrete time model; We Chat marketing; foreign language learning; carbon dioxide emission mitigation; power generation; smartphone storage enhancement; and virtualization.},
  Doi                      = {10.1109/ABLAZE.2015.7155050},
  Keywords                 = {Brayton cycle;IP networks;adders;aspect-oriented programming;audio watermarking;biomedical MRI;cardiology;character recognition;cloud computing;cochlear implants;cognitive radio;computational fluid dynamics;computer science education;content-based retrieval;cryptography;cyclone separators;data analysis;data compression;data mining;data privacy;diesel engines;differential equations;digital forensics;domestic appliances;drilling;educational administrative data processing;eigenvalues and eigenfunctions;enzymes;expert systems;face recognition;fault diagnosis;feature extraction;feedforward neural nets;field programmable gate arrays;fuzzy control;genetic algorithms;grammars;green computing;handicapped aids;heat exchangers;home computing;image classification;image coding;image colour analysis;image fusion;image reconstruction;image retrieval;image segmentation;image watermarking;indexing;induction motors;internetworking;iris recognition;knowledge representation;linguistics;medical image processing;microstrip antennas;mobile learning;modal analysis;nanoelectromechanical devices;object detection;ontologies (artificial intelligence);pattern clustering;power amplifiers;power supply quality;program debugging;program testing;radio spectrum management;recommender systems;reluctance motor drives;resonators;routing protocols;scheduling;self-organising feature maps;social networking (online);software reliability;speaker recognition;speech processing;storage management;telecommunication congestion control;thermoelectric conversion;three-term control;trajectory optimisation (aerospace);tumours;vehicular ad hoc networks;vibrations;video signal processing;virtual machines;virtualisation;wavelet transforms;wind power plants;wireless sensor networks;AODV based congestion control protocol;DBSCAN algorithm;English mobile teaching;FPGA;GSD;HTML priority system;IP network;IT skill learning for visual impaired;LUV color space;MANET security issues;MBSOM;MFCC;MPLS network;MR images;OdiaBraille;PID controller optimisation;RBSD adder;RGB color space;SBC;SRM drive;TORA security;VANET;WAV audio file;We Chat marketing;Web cache recommender system;Web crawlers;Web indexing;YIQ color models;ZETA converter;adaptive gateway discovery mechanism;agent based semantic ontology matching;agile SCRUM framework;aspect oriented systems;attribute based encryption;carbon dioxide emission mitigation;cellular towers;cloud data access;cluster computing;cochlear implantation;cognitive radio networks;color aerial images;communication understandability enhancement;content based image retrieval;critical health data transmission system;current signature analysis;cyclone separator CFD simulation;data aggregation;data mining;data storage;database security;diesel engines;digital forensics;e-learning;education information system;eigenvector centrality;encrypted cloud data;energy based spectrum sensing;energy smart routing protocol;enzyme classification;expert system;externally powered upper limb prostheses;facial feature extraction;feedforward neural networks;foreign language learning;fractional PID tuning;fuzzy logic based clustering algorithm;fuzzy logic controller;generalized discrete time model;genetic algorithms;green cloud computing;heart disease prediction;heat exchanger temperature process;heterogeneous online social networks;heuristic job scheduling;high speed nonvolatile NEMS memory devices;home appliances;human skin detection;hybrid evolutionary MPLS tunneling algorithm;hybrid watermarking technique;hybrid wavelet transform;image classification;image compression;image data deduplication;image fusion;image segmentation;imperfect debugging;induction motors;input power quality;iris recognition;irreversible regenerative Brayton cycle;knowledge representation;launch vehicle optimal trajectory generation;lossless data compression;low energy adaptive stable energy efficient protocol;machining parameter optimization;mechanical microdrilling;mechanical structure modal analysis;medical image reconstruction;misalignment fault detection;mobile ad hoc networks;modified LEACH protocol;moving object segmentation;multiband microstrip antenna;multikeyword based sorted querying;offline English character recognition;online movie data classification;parsing;phonetic word identification;power amplifier;power generation;privacy preservation;program test data generation;reconfigurable ring resonator;relay node based heer protocol;rule based derivational urdu stemmer usal;rule based inflectional urdu stemmer usal;secret key watermarking;self-organizing feature map;shadow detection;smart home environment;smartphone storage enhancement;software reliability growth modeling;software testing;software up-gradation model;speech recognition system;stochastic differential equation;switched reluctance motor drive;task scheduling;task set based adaptive round robin scheduling;test case selection;text dependent speaker recognition;text transcription;triple band stacked patch antenna;tumor boundary extraction;two-stage series connected thermoelectric generator;user review data analysis;vertical partitioned medical database;vibration signal based monitoring;vibration signature analysis;video authentication;virtual machine introspection;virtualization;vortex induced vibration;vulnerability discovery model;wind power plants;wireless sensor networks},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6913248,
  Title                    = {Table of contents},
  Booktitle                = {2014 IIAI 3rd International Conference on Advanced Applied Informatics},
  Year                     = {2014},
  Month                    = {Aug},
  Pages                    = {v-xix},

  Abstract                 = {The following topics are dealt with: data mining; Japanese WordNet synonym misplacement detection; social network; recommender system; sentiment analysis; workshop-based instruction; Japanese public libraries; machine learning methods; collaborative Web presentation support system; SMS4 ultracompact hardware implementation; wireless sensor networks; personalized public transportation recommendation system; adaptive user interface; NIS-Apriori algorithm; GetRNIA software tool; rough set-based rule generation; tree-Ga bump hunting; neural network model; weighted citation network analysis; sound proofing ventilation unit; touch interaction; mutually dependent Markov decision processes; ozone treatment; dynamic query optimization; big data; learner activity recognition; IoT-security approach; nutrition-based vegetable production; farm product cultivation; polynomial time mat learning; C-deterministic regular formal graph system; article abstract key expression extraction; English text comprehension; online social games; knowledge creation; knowledge utilization; online stock trading; customer behavior analysis; project-based collaborative learning; in-field mobile game-based learning activities; e-portfolio system design; self-regulated learning ontological model; mobile augmented reality based scaffolding platform; context-aware mobile Japanese conversation learning system; English writing error classification; image processing; outside-class learning; exercise-centric teaching materials; UML modeling; online historical document reading literacy; MMORPG-based learning environment; computer courses; undergraduate education; energy management system; higher education; decentralised auction-based bandwidth allocation; wireless networked control systems; resource scheduling algorithm; embedded cloud computing; Poisson distribution; Japanese seismic activity; suspect vehicle detection; 3D network traffic visualization; Web information retrieval; agent based disaster evacua- ion assist system; electroencephalogram; random number generator; multiagent simulations; multicore environment; CPU scheduler; multithreaded processes; reserve-price biddings; real-time traffic signal control; evolutionary computation; robot-assisted rehabilitation system; hybrid automata; Batik motif classification; color-texture-based feature extraction; backpropagation; multimedia storytelling; e-tourism service; Web mining; search engine; simulation-based e-learning mobile application software; library classification training system; WebQuest learning strategy; context-aware ubiquitous English learning; support vector machine; RFID tag ownership transfer protocol; cognitive linguistics; collaborative software engineering learning; write-access reduction method; NVM-DRAM hybrid memory; garbage collection; parallel indexing scheme; lazy-updating snoop cache protocol; distributed storage system; ITS application; software engineering education; ophthalmic multimodal imaging system; injected bug classification; secure live virtual machine migration; flash memory management; genetic programming; heterogeneous databases; time series similarity search; concurrency control program generation; incremental data migration; multidatabase system; software release time decision making; analytic hierarchy process; interactive genetic algorithm; biometric intelligence; talking robots; archaeological ruin analysis; GIS; optical wireless pedestrian-support systems; visual impairment; extreme programming; Japanese e-commerce Web sites; Chinese sign language animation; hearing-impaired people mammography inspection; geographical maps; electroculogram; XML element retrieval technique; image recognition; reinforcement learning; ECU formal verification; gasoline direct injection engines; earthquake disaster simulation; smart devices for autistic children; RoboCup rescue simulation; inductive logic programming; master-slave asynchronous evolutionary hybrid algorithm; VANET routing opt},
  Doi                      = {10.1109/IIAI-AAI.2014.4},
  Keywords                 = {Big Data;DRAM chips;Internet of Things;Markov processes;Poisson distribution;Unified Modeling Language;XML;agriculture;analytic hierarchy process;archaeology;augmented reality;automata theory;backpropagation;bandwidth allocation;biometrics (access control);cache storage;citation analysis;cloud computing;computational complexity;computer animation;computer games;computer science education;concurrency control;consumer behaviour;data mining;data visualisation;distributed databases;educational courses;electro-oculography;electroencephalography;electronic commerce;emergency management;energy management systems;engines;feature extraction;flash memories;formal verification;further education;genetic algorithms;geographic information systems;groupware;handicapped aids;human computer interaction;humanoid robots;image classification;image colour analysis;image texture;inductive logic programming;intelligent tutoring systems;investment;library automation;linguistics;mammography;medical robotics;mobile computing;multi-agent systems;multi-threading;multimedia computing;multiprocessing systems;natural language processing;networked control systems;neural nets;object detection;ozonation (materials processing);patient rehabilitation;pedestrians;processor scheduling;public transport;query processing;random number generation;recommender systems;rescue robots;resource allocation;rough set theory;search engines;security of data;seismology;social networking (online);software prototyping;software tools;stock markets;storage management;support vector machines;teaching;telecommunication network routing;text analysis;time series;traffic control;traffic engineering computing;travel industry;trees (mathematics);unsupervised learning;user interfaces;vehicular ad hoc networks;ventilation;virtual machines;wireless sensor networks;3D network traffic visualization;Batik motif classification;C-deterministic regular formal graph system;CPU scheduler;Chinese sign language animation;ECU formal verification;English text comprehension;English writing error classification;GIS;GetRNIA software tool;ITS application;IoT-security approach;Japanese WordNet synonym misplacement detection;Japanese e-commerce Web sites;Japanese public libraries;Japanese seismic activity;MMORPG-based learning environment;NIS-Apriori algorithm;NVM-DRAM hybrid memory;Poisson distribution;RFID tag ownership transfer protocol;RoboCup rescue simulation;SMS4 ultracompact hardware implementation;UML modeling;VANET routing optimization;Web image sharing services;Web information retrieval;Web mining;WebQuest learning strategy;XML element retrieval technique;adaptive user interface;agent based disaster evacuation assist system;analytic hierarchy process;archaeological ruin analysis;article abstract key expression extraction;autistic children;backpropagation;big data;biometric intelligence;cognitive linguistics;collaborative Web presentation support system;collaborative software engineering learning;color-texture-based feature extraction;computer courses;concurrency control program generation;context-aware mobile Japanese conversation learning system;context-aware ubiquitous English learning;customer behavior analysis;data mining;decentralised auction-based bandwidth allocation;distributed storage system;dynamic query optimization;e-portfolio system design;e-tourism service;earthquake disaster simulation;electroencephalogram;electrooculogram;embedded cloud computing;energy management system;evolutionary computation;exercise-centric teaching materials;extreme programming;farm product cultivation;flash memory management;garbage collection;gasoline direct injection engines;genetic programming;geographical maps;hearing-impaired people mammography inspection;heterogeneous databases;higher education;hybrid automata;image processing;image recognition;in-field mobile game-based learning activities;incremental data migration;inductive logic programming;injected bug classification;interactive genetic algorithm;knowledge creation;knowledge utilization;lazy-updating snoop cache protocol;learner activity recognition;library classification training system;machine learning methods;master-slave asynchronous evolutionary hybrid algorithm;mobile augmented reality based scaffolding platform;multiagent simulations;multicore environment;multidatabase system;multimedia storytelling;multithreaded processes;mutually dependent Markov decision processes;neural network model;nutrition-based vegetable production;online historical document reading literacy;online social games;online stock trading;ophthalmic multimodal imaging system;optical wireless pedestrian-support systems;outside-class learning;ozone treatment;parallel indexing scheme;personalized public transportation recommendation system;polynomial time mat learning;project-based collaborative learning;random number generator;real-time traffic signal control;recommender system;reinforcement learning;reserve-price biddings;resource scheduling algorithm;robot-assisted rehabilitation system;rough set-based rule generation;search engine;secure live virtual machine migration;self-regulated learning ontological model;sentiment analysis;simulation-based e-learning mobile application software;social network;software engineering education;software release time decision making;sound proofing ventilation unit;support vector machine;suspect vehicle detection;talking robots;time series similarity search;touch interaction;tree-Ga bump hunting;undergraduate education;visual impairment;weighted citation network analysis;wireless networked control systems;wireless sensor networks;workshop-based instruction;write-access reduction method},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6928775,
  Title                    = {Table of contents},
  Booktitle                = {2014 40th EUROMICRO Conference on Software Engineering and Advanced Applications},
  Year                     = {2014},
  Month                    = {Aug},
  Pages                    = {v-xi},

  Abstract                 = {The following topics are dealt with: safety-critical software development; agile process; open source software; model-based software engineering; software measurement; software complexity management; infrastructure as a service clouds; process improvement process models; metamodels; model transformation; model analysis; cyber-physical system validation; software architecture; software design; software specification; requirement management; software estimation; software product lines; software ecosystems; fault modelling; design flaws; software quality assurance; software analysis; cloud plans; cloud service networks; and cloud programming.},
  Doi                      = {10.1109/SEAA.2014.9},
  ISSN                     = {1089-6503},
  Keywords                 = {cloud computing;formal specification;formal verification;program testing;public domain software;safety-critical software;software architecture;software fault tolerance;software metrics;software process improvement;software product lines;software prototyping;software quality;systems analysis;agile process;cloud plans;cloud programming;cloud service networks;cyber-physical system validation;design flaws;fault modelling;infrastructure as a service clouds;metamodels;model analysis;model transformation;model-based software engineering;open source software;process improvement;process models;requirement management;safety-critical software development;software analysis;software architecture;software complexity management;software design;software ecosystems;software estimation;software measurement;software product lines;software quality assurance;software specification},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

@InProceedings{6613061,
  Title                    = {Keynote abstracts},
  Booktitle                = {2013 IEEE 8th International Conference on Global Software Engineering},
  Year                     = {2013},
  Month                    = {Aug},
  Pages                    = {xiv-xvi},

  Abstract                 = {Summary form only given. Cloud is a major paradigm shift for all of us in many ways. Often it is considered that going to Cloud involves only technical aspects relating to Cloud Computing. In the Finnish industrial driven research program Cloud Software the approach has been multifaceted including Cloud Business, Cloud Technologies and Lean&Agile Software Enterprise as major building blocks for the Cloud transformation. Janne Järvinen will explain the Cloud Software approach in his keynote speech and will share related experiences of the Cloud Software consortium and his company, F-Secure.},
  Doi                      = {10.1109/ICGSE.2013.38},
  ISSN                     = {2329-6305},
  Keywords                 = {cloud computing;software prototyping;agile software enterprise;cloud business;cloud computing;cloud software program;cloud technologies},
  Owner                    = {ville},
  Timestamp                = {2017.06.27}
}

