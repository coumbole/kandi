% This file was created with JabRef 2.10.
% Encoding: UTF-8


@Conference{Abaev2016277,
  Title                    = {Analytical model for Software Defined Network delay estimation},
  Author                   = {Abaev, P. and Beschastnyi, V. and Tsarev, A. and Fedorov, S.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {277-281},
  Publisher                = {IEEE Computer Society},
  Volume                   = {2016-December},

  Abstract                 = {Traditional IP networks are becoming more complex to satisfy the demands of modern applications and it draws communication providers to exploit a wide range of specialized hardware. Commissioning of a new network service implies additional room for new equipment, power sources, cooling systems, etc. Besides, there is need for increase of qualified stuff. This results in the escalation of capital and operational expenses that eventually exceeds the revenue growth rates for which these expenses are initially intended. To overcome such a deadlock, it is no more sufficient to introduce new protocols for network enhancement, it is necessary to reconsider the network architecture. Software-Defined Networking (SDN) is a new network paradigm that allows managing network services by separating data and control planes. Herein network planning and traffic management are performed by software what makes installation of new network services, such as routing, resource management and security more simple and agile. Interaction between the two planes can be provided by means of OpenFlow protocol that allows manipulating data plane and collecting various statistics used to form global state of a network. In this paper we present an overview of SDN and OpenFlow, their key features and main concepts. Next, we present a model of SDN-network in the form of a queuing network and propose the approach to mean delay time estimation. © 2016 IEEE.},
  Art_number               = {7765371},
  Author_keywords          = {delay; mean sojourn time; queuing network; SDN},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICUMT.2016.7765371},
  ISBN                     = {9781467388184},
  ISSN                     = {21570221},
  Journal                  = {International Congress on Ultra Modern Telecommunications and Control Systems and Workshops},
  Keywords                 = {Complex networks; Control systems; Cooling systems; Flight control systems; Network architecture; Queueing networks; Software defined networking, Communication providers; delay; Mean sojourn time; Operational expense; Queuing network; Resource management; Software defined networking (SDN); Specialized hardware, Internet protocols},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85006821338&doi=10.1109%2fICUMT.2016.7765371&partnerID=40&md5=ed8794513884835d466e245b747f0965}
}

@Article{Abdullah2014227,
  Title                    = {The development of myGSP: An online resource for teaching mathematics based on geometer’s sketchpad (GSP)},
  Author                   = {Abdullah, A.H. and Surif, J. and Ibrahim, N.H. and Ali, M. and Hamzah, M.H.},
  Journal                  = {Asian Social Science},
  Year                     = {2014},
  Note                     = {cited By 0},
  Number                   = {22},
  Pages                    = {227-240},
  Volume                   = {10},

  Abstract                 = {MyGSP was developed following various constraints faced by teachers to integrate the Geometer’s Sketchpad (GSP) software into mathematics lessons. Based on the Waterfall Design Model, the development of MyGSP started with the analysis of user needs through literature review and simple survey. From the analysis, three main constraints were identified: (1) insufficient time to prepare for GSP-aided lessons; (2) lack of training on GSP integration in lessons; and (3) lack of references for teaching mathematics using GSP. Therefore, taking into account the computer equipment currently available at schools, the researcher developed MyGSP to overcome these constraints. In the design phase, the researcher developed teaching materials for mathematics topics at secondary schools. Teaching strategies adopting higher order of thinking skills were applied in the teaching materials. Apart from this, video tutorials on GSP usage in teaching materials were also developed. In the implementation and unit testing phase, 30 pre-service Mathematics teachers participated by providing feedback on the materials developed. In the integration phase, the modules, i.e., Teaching Material Module, Download Module, Forum Module, and Video Tutorial Module, were combined into one system known as MyGSP. The MyGSP system was also updated and enhanced from time to time in the maintenance phase. It is hoped that MyGSP will be able to fulfill teachers’ needs for integrating GSP into their classrooms. © Canadian Center of Science and Education.},
  Author_keywords          = {Geometer’s sketchpad; GSP-aided lessons; Higher order thinking skills},
  Document_type            = {Article},
  Doi                      = {10.5539/ass.v10n22p227},
  ISSN                     = {19112017},
  Publisher                = {Canadian Center of Science and Education},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84908336037&doi=10.5539%2fass.v10n22p227&partnerID=40&md5=7cb051cc66c78dd440f207db4af30c59}
}

@Conference{Abran201464,
  Title                    = {Software estimation: Transforming dust into pots of gold?},
  Author                   = {Abran, A.},
  Year                     = {2014},
  Editor                   = {Daneva M., Vogelezang F.},
  Note                     = {cited By 0},
  Pages                    = {64-65},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {In the Dark Ages the 'Lords of the country' were expecting that their 'alchemists' - the 'gurus' of their era - would come up with mysterious formula that would transform 'dust' into 'pots of gold! A lot of current software estimation models and practices, including in Agile and COCOMO-like models, share characteristics of craft practices observed in the Dark Ages, when compared to current professional practices from engineering and sciences. © 2014 IEEE.},
  Art_number               = {7000077},
  Author_keywords          = {metrics; productivity models; software estimation},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/IWSM.Mensura.2014.48},
  ISBN                     = {9781479941742},
  Journal                  = {Proceedings - 2014 Joint Conference of the International Workshop on Software Measurement, IWSM 2014 and the International Conference on Software Process and Product Measurement, Mensura 2014},
  Keywords                 = {Dust; Software engineering, metrics; Productivity model; Professional practices; Software estimation, Gold},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84929624763&doi=10.1109%2fIWSM.Mensura.2014.48&partnerID=40&md5=227169dc751076f756e343cdf8f06900}
}

@Article{Adalı2016135,
  Title                    = {Evaluation of agility assessment tools: A multiple case study},
  Author                   = {Adalı, O.E. and Özcan-Top, Ö. and Demirörs, O.},
  Journal                  = {Communications in Computer and Information Science},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {135-149},
  Volume                   = {609},

  Abstract                 = {Agile software development has been one of the most important paradigms of software engineering community. Agile methods that are shaped around Agile Manifesto and principles, provide promising results when applied properly in software organizations. Agile assessment models and tools have potential to indicate agile adoption problems at project level or organization level. In the scope of this study, we identified 37 agility assessment tools. Among those tools, we evaluated 11 agility assessment tools based upon 9 criteria within a multiple case study. The purpose of this study is to evaluate existing agility assessment tools to provide an overview about potential uses, advantages and drawbacks. The results of the case study indicate that none of the 11 tools are eligible to fully achieve the 9 criteria. © Springer International Publishing Switzerland 2016.},
  Author_keywords          = {Agile assessments; Agile software development; Agility assessment tools; Agility assessments; Multiple case study},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-38980-6_11},
  Editor                   = {Dorling A., O'Connor R.V., Clarke P.M., Rout T.},
  ISBN                     = {9783319389790},
  ISSN                     = {18650929},
  Keywords                 = {Circuit simulation; Process engineering; Software design, Agile assessments; Agile software development; Agility assessments; Assessment tool; Multiple-case study, Software engineering},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84993983902&doi=10.1007%2f978-3-319-38980-6_11&partnerID=40&md5=022ba10f90f1f8f033b085879478a380}
}

@Conference{Adami2015101,
  Title                    = {Cloud and network service orchestration in software defined data centers},
  Author                   = {Adami, D. and Martini, B. and Callegari, C. and Donatini, L. and Giordano, S. and Sgambelluri, A. and Gharbaoui, M. and Castoldi, P.},
  Year                     = {2015},
  Editor                   = {Marzo J., Louta M., Saldana J., Mahgoub I., Davoli F., Rodrigues J.},
  Note                     = {cited By 0},
  Number                   = {9},
  Pages                    = {101-106},
  Publisher                = {The Society for Modeling and Simulation International},
  Volume                   = {47},

  Abstract                 = {Cloud Data Centers are becoming a more and more important reality nowadays, as more and more services are being offered in the form of Cloud resources. In order to accommodate as many requests as possible, Data Centers typically deploy oversubscription, which requires a thoughtfully calibrated usage of the computing and network resources of the system. We especially need to re-think the usage of network resources, as the kinds of demands from applications we see today have more stringent network requirements than in the past. The Software-Defined Network paradigm offers new tools to manage the network in agile, flexible ways, according to specific needs. It enables to build new customized functions in order, for example, to monitor the instantaneous load of traffic, slice the network, route each flow according to specific policies that can be modified accordingly with the needs of the system. In this paper we present an orchestrator for Software-Defined Data Center, and the strategies used to allocate Virtual Machines, basing our decisions on the current state of the system. © 2015 Society for Modeling & Simulation International (SCS).},
  Author_keywords          = {Cloud; Data center; SDN},
  Document_type            = {Conference Paper},
  ISSN                     = {07359276},
  Journal                  = {Simulation Series},
  Keywords                 = {Circuit simulation; Clouds; Software engineering, Cloud data centers; Data centers; Network requirements; Network resource; Network services; SDN; Software-defined networks; Virtual machines, Computation theory},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84954131664&partnerID=40&md5=7246ee5d4c16164e6b58d5fc71589951}
}

@Conference{Adami20141344,
  Title                    = {An OpenFlow controller for cloud data centers: Experimental setup and validation},
  Author                   = {Adami, D. and Martini, B. and Sgambelluri, A. and Gharbaoui, M. and Castoldi, P. and Chiaro, A.D. and Donatini, L. and Giordano, S.},
  Year                     = {2014},
  Note                     = {cited By 4},
  Pages                    = {1344-1349},
  Publisher                = {IEEE Computer Society},

  Abstract                 = {Nowadays, Data Centers are the primary infrastructures for Cloud Computing services provisioning. In this challenging scenario, Data Centers have to deal with highly dynamic workloads, thus not only should they adopt advanced software virtualization solutions, but also network control capabilities. Elastic, agile network connectivity control should be integrated with the computing management infrastructure to make it achieve its goals. This paper presents an OF-based controller, called OFVN, that enables novel virtualization-aware networking functions in Cloud DCs. Virtual Machines allocations are performed considering the availability of computational resources on physical server, but also selecting a forwarding path for VMs data flows based on network links utilization. The focus of the paper is on the implementation and assessment of the controller in an experimental testbed. The behaviour of different allocation strategies is also investigated. © 2014 IEEE.},
  Art_number               = {6883508},
  Author_keywords          = {Cloud SDN; OFVN},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICC.2014.6883508},
  ISBN                     = {9781479920037},
  Journal                  = {2014 IEEE International Conference on Communications, ICC 2014},
  Keywords                 = {Virtual reality, Advanced softwares; Allocation strategy; Cloud computing services; Computational resources; Experimental testbed; Management infrastructure; Network connectivity; OFVN, Controllers},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84907000592&doi=10.1109%2fICC.2014.6883508&partnerID=40&md5=eb22c22c686949d1d346932bf994ae01}
}

@Conference{Aggarwal2014476,
  Title                    = {Swift Tack: A new development approach},
  Author                   = {Aggarwal, S. and Dhir, S.},
  Year                     = {2014},
  Note                     = {cited By 2},
  Pages                    = {476-481},
  Publisher                = {IEEE Computer Society},

  Abstract                 = {In this high demanding world when nobody wants to wait for the products and due to the existence of many competitors, it becomes crucial to provide the working product within a given time. This paper defines a new development life cycle, Swift Tack, under Agile methodology. Swift tack is a customer oriented approach in which customers interactively participate to make their software according to the need. It handles all types of organization without being affected by the team size. It also defines simpler steps to adopt a new development method in the organizations. © 2014 IEEE.},
  Art_number               = {6781329},
  Author_keywords          = {Capability Maturity Model (CMM); Documentation; Iteration; Postmortem; Software Development Life Cycle (SDLC)},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICICICT.2014.6781329},
  Journal                  = {Proceedings of the 2014 International Conference on Issues and Challenges in Intelligent Computing Techniques, ICICT 2014},
  Keywords                 = {Intelligent computing; Life cycle; Software engineering; System program documentation, Agile Methodologies; Capability maturity models; Customer-oriented approach; Development approach; Development method; Iteration; Postmortem; Software development life cycle, Iterative methods},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84899108415&doi=10.1109%2fICICICT.2014.6781329&partnerID=40&md5=493ed0151c7e68de43a356be32c3cebd}
}

@Article{Agner20141423,
  Title                    = {Applying black-box testing to model transformations in the model driven architecture context},
  Author                   = {Agner, L.T.W. and Soares, I.W. and Simao, J.M. and Stadzisz, P.C.},
  Journal                  = {Journal of Computer Science},
  Year                     = {2014},
  Note                     = {cited By 0},
  Number                   = {8},
  Pages                    = {1423-1427},
  Volume                   = {10},

  Abstract                 = {Testing model transformations has played a leading role with the dissemination of MDA in software development processes. Software testing based on black-box testing, together with the "category partitioning" method, can be efficiently used in order to conduct the verification of model transformations. This study employs software testing techniques to an ATL model transformation in the MDA context and points out their benefits. The black-box testing method was adapted to the MT-PROAPES model transformation based on profiles and platform models. The platform models define the range of input models of the MT-PROAPES and are used for the creation of the test cases. The test cases were selected so as to meet certain requirements and increase the ability to detect errors in the model transformation. This approach makes the test process more agile and does not require any abstraction of behavioral properties of the transformations. The field of transformation testing and verification still faces significant challenges and requires a lot of research. Although having some limitations, black-box testing conforms to various situations, besides allowing its integration with other test strategies. © 2014 Science Publications.},
  Author_keywords          = {Category partitioning; Functional testing; Model transformation; Transformations testing},
  Document_type            = {Article},
  Doi                      = {10.3844/jcssp.2014.1423.1427},
  ISSN                     = {15493636},
  Publisher                = {Science Publications},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84900433420&doi=10.3844%2fjcssp.2014.1423.1427&partnerID=40&md5=849a034983f71284a9ac32460403320a}
}

@Conference{Agostinho20142400,
  Title                    = {Dynamic adaptors to support model-driven interoperability and enhance sensing enterprise networks},
  Author                   = {Agostinho, C. and Pinto, P. and Jardim-Goncalves, R.},
  Year                     = {2014},
  Editor                   = {Xia X., Boje E.},
  Note                     = {cited By 2},
  Pages                    = {2400-2407},
  Publisher                = {IFAC Secretariat},
  Volume                   = {19},

  Abstract                 = {In an increasingly complex environment, the enterprises of the future should become Sensing Enterprises, evidencing intelligent, dynamic and self-organizing capabilities for understanding and responding to the shifts that impact the networks they belong to. Reconfiguration and reprioritization of industrial processes, information models, and even terminology is now seen as a requirement for survivability, which means that software systems need to become more agile. Hence, software adaptor technologies such as the ATLAS Transformation Language (ATL) are gaining momentum due to the potential to define and regulate peer-to-peer communication among networks of enterprise systems. At present, ATL is the de facto standard for transformations within the framework of model-driven interoperability (MDI), nonetheless it lacks the dynamism required to streamline complex systems, which demand adaptors to be frequently redesigned whenever information models change. This paper presents a novel solution, which aims to reduce the setbacks that arise from this lack of dynamism. © IFAC.},
  Author_keywords          = {ATL; Dynamic networks; Model transformations; Model-driven interoperability; Self-sustainable interoperability; Sensing enterprise},
  Document_type            = {Conference Paper},
  ISBN                     = {9783902823625},
  ISSN                     = {14746670},
  Journal                  = {IFAC Proceedings Volumes (IFAC-PapersOnline)},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84929783274&partnerID=40&md5=14ebcc4d389f8bdcbab6ac93fa486db9}
}

@Conference{Agrawal2015370,
  Title                    = {A study on the growth of Agile methods in India till 2014},
  Author                   = {Agrawal, A. and Singh, S. and Maurya, L.S.},
  Year                     = {2015},
  Note                     = {cited By 1},
  Pages                    = {370-374},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {In the last decades, we had sequential and phased software development models like the Waterfall model, Spiral model, etc., now today we have more iterative and incremental methods in form of Agile methods. The journey of Agile methods has come across a long way in world's software community after their development in the year 2001. These methods have been given a new edge to the software development and new dimensions of software products. Agile methods are now almost at peak because of their use not only in the field of software development, but also in every other field. World's CMM level 5 companies are using Agile methods and some are now coming forward to adopt agile methods and principles. But in India these methods are still a big word for some large as well as small companies. This paper is an attempt to trace out the current status and growth of agile methods in India from 2001 to 2014 and of happenings in social media about Agile methods. © 2015 IEEE.},
  Art_number               = {7164732},
  Author_keywords          = {Agile; Agile Conferences; Agile Growth; Agile People},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICACEA.2015.7164732},
  ISBN                     = {9781467369114},
  Journal                  = {Conference Proceeding - 2015 International Conference on Advances in Computer Engineering and Applications, ICACEA 2015},
  Keywords                 = {Computer software; Iterative methods; Software design, Agile; Agile Conferences; Agile People; Incremental method; Software community; Software development models; Software products; Waterfall model, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84947997784&doi=10.1109%2fICACEA.2015.7164732&partnerID=40&md5=7071a03245a72c616bac39abb4ff6970}
}

@Article{Ahalt201418,
  Title                    = {Water science software institute: Agile and open source scientific software development},
  Author                   = {Ahalt, S. and Band, L. and Christopherson, L. and Idaszak, R. and Lenhardt, C. and Minsker, B. and Palmer, M. and Shelley, M. and Tiemann, M. and Zimmerman, A.},
  Journal                  = {Computing in Science and Engineering},
  Year                     = {2014},
  Note                     = {cited By 3},
  Number                   = {3},
  Pages                    = {18-26},
  Volume                   = {16},

  Abstract                 = {An Open Community Engagement Process (OCEP) applies open source mechanics and software engineering to water science research. To operationalize OCEP, the authors conceptualize a Water Science Software Institute whose mission is to support and accelerate water science by transforming both the software and research cultures of the water science community. This article describes the OCEP open source community amplification principle as well as the authors' experiences, lessons learned, and challenges with operationalizing OCEP. © 1999-2011 IEEE.},
  Art_number               = {6728937},
  Author_keywords          = {Agile; hackathon; open community engagement process; open source; scientific computing; scientific software development; water science},
  Coden                    = {CSENF},
  Document_type            = {Article},
  Doi                      = {10.1109/MCSE.2014.5},
  ISSN                     = {15219615},
  Keywords                 = {Natural sciences computing; Open source software; Software design, Agile; Community engagement; hackathon; Open sources; Scientific software development; Water science, Open systems},
  Publisher                = {IEEE Computer Society},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84903181880&doi=10.1109%2fMCSE.2014.5&partnerID=40&md5=31c77572945d7545308324dacb4c6fe3}
}

@Conference{Ahalt201340,
  Title                    = {Water science software institute: An open source engagement process},
  Author                   = {Ahalt, S. and Minsker, B. and Tiemann, M. and Band, L. and Palmer, M. and Idaszak, R. and Lenhardt, C. and Whitton, M.},
  Year                     = {2013},
  Note                     = {cited By 3},
  Pages                    = {40-47},

  Abstract                 = {We have conceptualized a public/private Water Science Software Institute (WSSI) whose mission is 'to enable and accelerate transformative water science by concurrently transforming both the software culture and the research culture of the water science community'. To achieve our goals, we have applied an Open Community Engagement Process (OCEP), based in large part on the principles and practices of Agile and Open Source software development. This manuscript describes the WSSI and the OCEP model we have developed to operationalize the WSSI. © 2013 IEEE.},
  Art_number               = {6615098},
  Author_keywords          = {Agile software development; Open Source software; Scientific Software Innovation Institute; water science},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/SECSE.2013.6615098},
  ISBN                     = {9781467362610},
  Journal                  = {2013 5th International Workshop on Software Engineering for Computational Science and Engineering, SE-CSE 2013 - Proceedings},
  Keywords                 = {Agile software development; Community engagement; Open Source Software; Open source software development; Principles and practices; Research culture; Scientific softwares; Water science, Computer software; Software design, Open systems},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84886712560&doi=10.1109%2fSECSE.2013.6615098&partnerID=40&md5=22107b8c1739f5947693a2981d39a424}
}

@Conference{Ahmad20165427,
  Title                    = {Transition of software maintenance teams from scrum to Kanban},
  Author                   = {Ahmad, M.O. and Kuvaja, P. and Oivo, M. and Markkula, J.},
  Year                     = {2016},
  Editor                   = {Sprague R.H., Bui T.X.},
  Note                     = {cited By 1},
  Pages                    = {5427-5436},
  Publisher                = {IEEE Computer Society},
  Volume                   = {2016-March},

  Abstract                 = {Software companies are increasingly moving to use Kanban after Scrum since Kanban claimed to offer improved project visibility, software quality, team motivation, communication and collaboration. However, empirical studies are needed to verify these effects and companies' real motivation for the transition. In particular, underlying reasons leading software companies to start using Kanban in software maintenance must be understood. A multiple-case study was conducted to investigate why two experienced Scrum maintenance teams transitioned to Kanban. We conducted 17 semi-structured interviews with two different teams from two large Finnish software companies. Thematic analysis was applied to identify the most common challenges in Scrum and their solutions in Kanban. The results showed that Scrum maintenance teams faced challenges, such as lack of work visibility, task prioritisation, communication and collaboration, over commitment of sprints, work synchronisation and changing people. We discuss how maintenance teams mitigated these challenges with Kanban and present the lessons learned. © 2016 IEEE.},
  Art_number               = {7427858},
  Author_keywords          = {Agile; Kanban; Lean; Scrum; Software maintenance},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/HICSS.2016.670},
  ISBN                     = {9780769556703},
  ISSN                     = {15301605},
  Journal                  = {Proceedings of the Annual Hawaii International Conference on System Sciences},
  Keywords                 = {Computer software selection and evaluation; Maintenance; Motivation; Visibility, Agile; Communication and collaborations; Empirical studies; Kanban; Lean; Multiple-case study; Scrum; Semi structured interviews, Computer software maintenance},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84975518371&doi=10.1109%2fHICSS.2016.670&partnerID=40&md5=bee0a58a38070496485428e9b02d9d72}
}

@Conference{Ahmad20162588,
  Title                    = {Agile movement and its application to software project management},
  Author                   = {Ahmad, S.S. and Anwar, M.A. and Abdelhakim, M.N.A. and Al Shamsi, K.S.S.},
  Year                     = {2016},
  Editor                   = {Soliman K.S.},
  Note                     = {cited By 0},
  Pages                    = {2588-2594},
  Publisher                = {International Business Information Management Association, IBIMA},

  Abstract                 = {The purpose of this study is to define and describe agile movement and its application to software development and other projects. The agile movement has brought about significant evolution in the process of software development. Its methods have increasingly been adopted globally and as a result, they have become one of the main software development approaches that are used today. It has provided businesses with a much faster and nimbler method for developing software. This is especially important for the ever-growing internet software industry and the emergent mobile technology. To achieve this goal, this study will provide a brief background regarding the development of the movement by focusing on its origin and famous agile manifesto. Characterization of the agile software processes is essential in explaining how the process can be used to shorten the lifecycle of projects. This study will also cover various agile methods that have received recognition in project and software management. In line with this, arguments have been put forth concerning agile projects being more successful than other types of projects. This study will clarify this argument. A set of agile principles that are likely to be applied to all types of projects will also be discussed. Copyright © 2016 International Business Information Management Association},
  Author_keywords          = {Agile manifesto; Agile methods; Agile movement; Agile principles; Agile projects; Characterization; Internet; Software development; Software industry},
  Document_type            = {Conference Paper},
  ISBN                     = {9780986041969},
  Journal                  = {Proceedings of the 27th International Business Information Management Association Conference - Innovation Management and Education Excellence Vision 2020: From Regional Development Sustainability to Global Economic Growth, IBIMA 2016},
  Keywords                 = {Application programs; Characterization; Economics; Information management; Innovation; Internet; Project management; Regional planning; Software design; Sustainable development, Agile manifesto; Agile methods; Agile movement; Agile principles; Agile projects; Software industry, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84984612097&partnerID=40&md5=f7f26cf987acd07f70c933d9e03a094d}
}

@Article{Ahmadi2015,
  Title                    = {An Adaptive Software Architecture for Future CMS},
  Author                   = {Ahmadi, R. and Marquardt, O. and Riedlinger, M. and Reichel, R.},
  Journal                  = {SAE International Journal of Aerospace},
  Year                     = {2015},
  Note                     = {cited By 2},
  Number                   = {2},
  Volume                   = {8},

  Abstract                 = {Aircraft cabin systems, especially cabin management systems (CMS) have to cope with frequent cabin changes during their lifecycle. This includes not only layout rearrangements and technological upgrades during the service, but also extensive CMS customizations and product variations before aircraft delivery. Therefore it is inevitable for the CMS to be highly changeable and offer an easy and agile change process. Today's CMS solutions face this challenge with configurable system architectures. Although such architectures offer a vast change domain, they usually come with time consuming and error prone change processes. This paper introduces an adaptive avionics software architecture that enables the CMS to cope with cabin changes highly automatically and with minimal human interactions. The adaptation is performed during an on ground organization phase, in which system changes are detected and evaluated by the CMS itself. Consequently the CMS instantiates and adapts the software within hardware modules and establishes the system overall communication. The concept of adaptive CMS is based on an open service oriented software architecture with built in services, which abstract the communication, redundancy, fault-tolerance and the supervision of the system operation modes during the life-cycle. The software architecture contains also organization services, which enable the CMS to detect the system changes and adapt itself accordingly. Copyright © 2015 SAE International.},
  Document_type            = {Article},
  Doi                      = {10.4271/2015-01-2545},
  ISSN                     = {19463855},
  Keywords                 = {Cabins (aircraft); Computer architecture; Fault tolerance; Fighter aircraft; Life cycle; Software architecture, Aircraft delivery; Change process; Configurable systems; Hardware modules; Human interactions; Management systems; System change; System operation modes, Service oriented architecture (SOA)},
  Publisher                = {SAE International},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84945162144&doi=10.4271%2f2015-01-2545&partnerID=40&md5=ea83d37ae5be1ea05509fa8c9480d6a8}
}

@Conference{Ahmed2016106,
  Title                    = {Orchestration algorithms for network-assisted virtual machine migrations using OpenDayLight Controller},
  Author                   = {Ahmed, S. and Martini, B. and Gharbaoui, M. and Sgambelluri, A. and Shariful Alam, S.K.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {106-111},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {In the last years, prominent advances in software virtualization (e.g., Hypervisor) have enabled the agile deployment of cloud services and, at the same time, server consolidation operations through agile Virtual Machine (VM) operations (e.g., start-up, snapshot, cloning, and migrations) across Data Center (DC) servers. On the other hand, such advances pose new challenges in the overall management of the DC infrastructure since VM operations may occur much more frequently in virtualized than in legacy DCs and produce not only a computational load on the involved servers, but also a network load on all the switches connecting the servers. In this context, the Software-Defined Network (SDN) paradigm opens up new opportunities to design convergent resource management systems which is able to address the provisioning of cloud services while meeting adequate network performance during VM provisioning and migrations. In this paper, a promising advanced monitoring and resource allocation function for SDN-based DC networks has been proposed aiming at reporting possible suitable paths connecting specified servers that can be exploited for VM migrations. In such a way, network-assisted migrations can be triggered that assure adequate VM migration delays according to specified requirements (e.g., minimum delay for live VM migration) while addressing different management targets (e.g., network load balancing, minimization of energy consumption). © 2015 IEEE.},
  Art_number               = {7391931},
  Author_keywords          = {Cloud; Data Centre; OpenFlow; Orchestration; Software-Defined Networking; VM migration},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/EICT.2015.7391931},
  ISBN                     = {9781467392570},
  Journal                  = {2nd International Conference on Electrical Information and Communication Technologies, EICT 2015},
  Keywords                 = {Algorithms; Clouds; Distributed database systems; Energy utilization; Network management; Resource allocation; Software defined networking; Web services, Data centres; Network load balancing; Openflow; Orchestration; Resource management systems; Server consolidation; Virtual machine migrations; Vm migrations, Cloud computing},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84962911433&doi=10.1109%2fEICT.2015.7391931&partnerID=40&md5=a2e4f4213538972ee0be69704d8e0ba7}
}

@Article{Aihara2017,
  Title                    = {A quick software development method for improving competitiveness of services},
  Author                   = {Aihara, S. and Inoue, M. and Jin, A. and Furukawa, Y. and Tanaka, T. and Sekiguchi, N. and Oka, E. and Horikawa, K.},
  Journal                  = {NTT Technical Review},
  Year                     = {2017},
  Note                     = {cited By 1},
  Number                   = {2},
  Volume                   = {15},

  Abstract                 = {Environmental changes surrounding our society are becoming more uncertain, and therefore, the development of services must be more flexible than ever. To adapt to such an environment while continuously receiving feedback from the market and our customers, we urgently need to switch to iterative and incremental software development. This article presents an analysis of problems concerning responses to changes in the environment, with a focus on devising effective methods for developing software. First, as an alternative to conventional software development methods, we introduce BizDevOps - an approach that enables rapid development through unified teams. Then we introduce a framework as an alternative to re-engineering, which takes several years. Specifically, we explain a re-engineering model in which multiple One Team groups simultaneously develop software in an iterative and incremental manner by working together with other teams while each team shares the same concept model.},
  Author_keywords          = {BizDevOps; Early-phase analysis; Lean and agile},
  Document_type            = {Article},
  ISSN                     = {13483447},
  Keywords                 = {Iterative methods; Reengineering, BizDevOps; Concept model; Environmental change; Incremental software development; Lean and agile; Phase analysis; Software development methods, Software design},
  Publisher                = {Nippon Telegraph and Telephone Corp.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85013471695&partnerID=40&md5=b15e4a35fc33a5b146004d72bab57d64}
}

@Article{Airaj2017,
  Title                    = {Enable cloud DevOps approach for industry and higher education},
  Author                   = {Airaj, M.},
  Journal                  = {Concurrency Computation},
  Year                     = {2017},
  Note                     = {cited By 0},
  Number                   = {5},
  Volume                   = {29},

  Abstract                 = {Innovation in both industry and academia increasingly depends on the fast evolution of software and software services. Adoption of agile software development methodologies has reduced time to market and improved success rates; however, deployment obstacles often impede the quick delivery of the new and improved features to end users. This paper deals with DevOps, a new methodology that extends agile processes to include operations. DevOps methodology adopted with cloud computing could immediately benefit current practitioners from various software development parties while a focus on the young will ensure that DevOps ideals and processes will be taken forward into the longer-term future. Moving towards clouds, adopting DevOps culture, and implementing DevOps tools will produce more innovative services at lower cost and with higher quality. Wider adoption of the cloud DevOps will bring cloud DevOps features, and the benefit of agile software development, automation, and elastic resource provisioning. Additionally, teaching cloud DevOps in university will help to overcome the barriers to its adoption and maximize its indirect socioeconomic impact. Copyright © 2016 John Wiley & Sons, Ltd.},
  Art_number               = {e3937},
  Author_keywords          = {cloud computing; DevOps; education; industry},
  Coden                    = {CCPEB},
  Document_type            = {Article},
  Doi                      = {10.1002/cpe.3937},
  ISSN                     = {15320626},
  Keywords                 = {Cloud computing; Education; Industry; Software design, Agile process; Agile software development; DevOps; End users; Higher education; Socio-economic impacts; Software services; Time to market, Software engineering},
  Publisher                = {John Wiley and Sons Ltd},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84994342255&doi=10.1002%2fcpe.3937&partnerID=40&md5=c240bec3c7f856ab09be6a3081480ee9}
}

@Conference{Aitken20144789,
  Title                    = {Dual application model for agile software engineering},
  Author                   = {Aitken, A.},
  Year                     = {2014},
  Note                     = {cited By 1},
  Pages                    = {4789-4798},
  Publisher                = {IEEE Computer Society},

  Abstract                 = {There are problems with Traditional Software Engineering and with Agile Software Development. A new approach called Agile Software Engineering that combines the best of both is proposed and an aspect of this approach described. The Dual Application Model involves the development of a logical software application focused on capturing the functional requirements and a physical software application focused on transforming the logical application to meet the non-functional requirements. It has advantages and disadvantages like any approach to software development but meets two of the principles proposed for Agile Software Engineering. Frameworks and tools are proposed to support the Dual Application Model but are not essential to the approach. The approach provides an almost complete separation of concerns between defining and specifying (in code) the domain solution / software problem for which the domain experts are primarily responsible and designing and implementing the software solution to meet the nonfunctional requirements for which the software developers are primarily responsible. © 2014 IEEE.},
  Art_number               = {6759190},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/HICSS.2014.588},
  ISBN                     = {9781479925049},
  ISSN                     = {15301605},
  Journal                  = {Proceedings of the Annual Hawaii International Conference on System Sciences},
  Keywords                 = {Software design; Systems science, Agile software development; Agile software engineering; Application modeling; Functional requirement; Non-functional requirements; Separation of concerns; Software applications; Software developer, Application programs},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84902273480&doi=10.1109%2fHICSS.2014.588&partnerID=40&md5=1e34ac9c921ce6070a0e1d8f5b9dbd77}
}

@Conference{Aitken20134750,
  Title                    = {Introduction to agile and lean software engineering minitrack},
  Author                   = {Aitken, A.M.},
  Year                     = {2013},
  Note                     = {cited By 0},
  Pages                    = {4750},

  Art_number               = {6480416},
  Document_type            = {Editorial},
  Doi                      = {10.1109/HICSS.2013.290},
  ISBN                     = {9780769548920},
  ISSN                     = {15301605},
  Journal                  = {Proceedings of the Annual Hawaii International Conference on System Sciences},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84875517616&doi=10.1109%2fHICSS.2013.290&partnerID=40&md5=1b4d6afa74309fd18a7d8473aaa8e535}
}

@Conference{Aitken20144759,
  Title                    = {Introduction to agile and lean software engineering minitrack},
  Author                   = {Aitken, A. and Trimble, J.},
  Year                     = {2014},
  Note                     = {cited By 0},
  Pages                    = {4759},
  Publisher                = {IEEE Computer Society},

  Art_number               = {6759186},
  Document_type            = {Editorial},
  Doi                      = {10.1109/HICSS.2014.584},
  ISBN                     = {9781479925049},
  ISSN                     = {15301605},
  Journal                  = {Proceedings of the Annual Hawaii International Conference on System Sciences},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84902255930&doi=10.1109%2fHICSS.2014.584&partnerID=40&md5=662f56819a289359e0089f176524ea22}
}

@Book{Akerele201467,
  Title                    = {Continuous delivery in the cloud: An economic evaluation using system dynamics},
  Author                   = {Akerele, O. and Ramachandran, M.},
  Publisher                = {Nova Science Publishers, Inc.},
  Year                     = {2014},
  Note                     = {cited By 0},

  Abstract                 = {The continuous delivery paradigm has been recently introduced to help facilitate the speedy deployment of working software into production and shifting software delivery exercise from a major event culture to an effortless activity. Recent advancements have made it possible to practice continuous delivery in the cloud. However, many practitioners are still skeptical about the economic profitability of practicing continuous delivery in the cloud. This work investigates the economic profitability of carrying out continuous delivery in the cloud and compares it with on-premise continuous delivery adoption using system dynamics. Results show that the continuous delivery in the cloud environment over a six year period has a Net Present Value (NPV) over twice that of the on-premise continuous delivery. © 2014 Nova Science Publishers, Inc.},
  Author_keywords          = {Agile software development; Cloud services; Continuous delivery; Dynamic continuous delivery},
  Document_type            = {Book Chapter},
  ISBN                     = {9781631171932; 9781631171925},
  Journal                  = {Advances in Cloud Computing Research},
  Pages                    = {67-83},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84960261470&partnerID=40&md5=1757de06a8215ec05f8d36debb0c125b}
}

@Article{Al-Allaf2013131,
  Title                    = {Hybrid web engineering process model for the development of large scale web applications},
  Author                   = {Al-Allaf, O.N.A.},
  Journal                  = {Journal of Theoretical and Applied Information Technology},
  Year                     = {2013},
  Note                     = {cited By 0},
  Number                   = {1},
  Pages                    = {131-140},
  Volume                   = {53},

  Abstract                 = {Many web development models had been proposed in the literature and there are few studies related to proposing models for developing large web applications. It is important to construct a model that lead to large web applications development with minimum likelihood of failure. A Hybrid web engineering process model for large web development enterprises has been proposed in this research. This model focuses on overall development process phases and consists of many activities: division of large web application into many small sub applications; division of large number of developers into many sub teams; identify a management team to control the development process; Stakeholders' and customers' inclusion and feedback during development process; requirement analysis and management; adopting the Spiral model by management team; adopting the Throwaway Prototype, XP agile method, Web Engineering process model by each sub team; conducting CMMI levels key process areas; conducting web engineering practices and SQA activities; and training developers on CMMI and web engineering practices. An evaluation of this model according to CMMI process areas has been conducted in this research. This evaluation has been carried out by many professional developers currently working in many large web-development Jordanian enterprises. The evaluation results shows that the Hybrid model highly satisfied each of CMMI level2 and CMMI level3, medium satisfaction of CMMI level4, and finally low satisfaction of CMMI level5. © 2005 - 2013 JATIT & LLS. All rights reserved.},
  Author_keywords          = {Capability maturity model integration (CMMI); Large web applications; Software process improvement (SPI); Web engineering; Web engineering process model},
  Document_type            = {Article},
  ISSN                     = {19928645},
  Publisher                = {Asian Research Publishing Network (ARPN)},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84880100745&partnerID=40&md5=34c55a20c9455cef8a7d51933614885e}
}

@Conference{Alawairdhi2016100,
  Title                    = {Agile development as a change management approach in software projects: Applied case study},
  Author                   = {Alawairdhi, M.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {100-104},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Although a large amount of research has been carried out so far to study the impacts of agile methods in various phases of software engineering, only very few of these have yielded empirical evidence in the form of products being used in real life environment. Very few of these studies have been dedicated to study change management while adopting agile methods. In this paper, it has been argued that that agile software development, with its practices for user involvement and product visibility, can be used as a change management approach in most small to medium scale projects. As an illustration of the theoretical findings, the application of agile methods in managing change in two projects as Saudi Electronic University has been described. The results and findings clearly corroborate our findings and explain why agile methods should be practiced more often with for projects which need specific emphasis on change management. © 2016 IEEE.},
  Art_number               = {7477541},
  Author_keywords          = {Agile Methods; Change Management; SCRUM; Software Application Development},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/INFOMAN.2016.7477541},
  ISBN                     = {9781509014705},
  Journal                  = {Proceedings of 2016 International Conference on Information Management, ICIM 2016},
  Keywords                 = {Application programs; Information management; Software design, Agile development; Agile methods; Agile software development; Change management; Managing changes; SCRUM; Software applications; User involvement, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84978100590&doi=10.1109%2fINFOMAN.2016.7477541&partnerID=40&md5=fa30f4c58334dbccb1a1ee354eb03431}
}

@Conference{Al-Azawi2014116,
  Title                    = {Multi Agent Software Engineering (MaSE) and agile methodology for game development},
  Author                   = {Al-Azawi, R. and Ayesh, A. and Al-Masruri, K.A. and Kenny, I.},
  Year                     = {2014},
  Note                     = {cited By 3},
  Pages                    = {116-122},
  Publisher                = {EUROSIS},

  Abstract                 = {Agile software development methodologies has become very common in game development methodologies. However, such methodologies must be adapted to different game genres. The purpose of this paper is to investigate the existing game development methodologies and provide a new game development methodology suitable for different game genres. Furthermore, the methodology is based on both predictive and adaptive development models. A critical analysis of Agile game development methodology is presented and we identify the weakness of the current Agile game development. The Agile Agent Game Development Methodology (AAGDM) is introduced as a new hybrid methodology linking the Agent and Agile approach to create a generic game development methodology. © 2014 EUROSIS-ETI.},
  Author_keywords          = {Adaptive development model; Ag- ile agent game development methodology (AAGDM); Agile methodology; Game development methodology; Multi agent software engineering (MaSE); Predictive development model},
  Document_type            = {Conference Paper},
  Journal                  = {14th Middle Eastern Simulation and Modelling Multiconference, MESM 2014 - 4th GAMEON-ARABIA Conference, GAMEON-ARABIA 2014},
  Keywords                 = {Modal analysis, Agile approaches; Agile Methodologies; Agile software development; Critical analysis; Development model; Game development; Hybrid methodologies; Multi-agent softwares, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84899018045&partnerID=40&md5=fb8648ee8cceabcfb4e189f731d604e5}
}

@Conference{Al-Azawi2014,
  Title                    = {Towards Agent-based Agile approach for Game Development Methodology},
  Author                   = {Al-Azawi, R. and Ayesh, A. and Al-Obaidy, M.},
  Year                     = {2014},
  Note                     = {cited By 5},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Game development is very complex and the success of the game is based on the game development methods. The purpose of this paper is to investigate on the existing game development methods and provide an upcoming game development method that is based on predictive and adaptive development models. A critical analysis to Agile method which are mostly used in modern game development methods is presented. We identified the weakness of Agile game development and solve it by creating a cooperation with Agent Oriented Software Engineering (AOSE) to introduce a new hybrid methodology named as Agent Agile Game Development Methodology (AAGDM) that combines both predictive and adaptive models. © 2014 IEEE.},
  Art_number               = {6916626},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/WCCAIS.2014.6916626},
  ISBN                     = {9781479933518},
  Journal                  = {2014 World Congress on Computer Applications and Information Systems, WCCAIS 2014},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84908688831&doi=10.1109%2fWCCAIS.2014.6916626&partnerID=40&md5=9a47bf5e95115c966d2808aa7e3ad97c}
}

@Article{Al-Baik20151861,
  Title                    = {The kanban approach, between agility and leanness: a systematic review},
  Author                   = {Al-Baik, O. and Miller, J.},
  Journal                  = {Empirical Software Engineering},
  Year                     = {2015},
  Note                     = {cited By 1},
  Number                   = {6},
  Pages                    = {1861-1897},
  Volume                   = {20},

  Abstract                 = {The interest in lean product development in general and the Kanban approach in particular has increased over the years. However, practitioners, in the software development field, have significant challenges in implementing the Kanban approach as it lacks a clear definition of its principles, practices, techniques and tools. This study aims to provide insight into the Kanban approach and its elements (concepts, principles, practices, techniques, and tools) that have been empirically reported by scholars and practitioners. This insight is produced by using the systematic review method to analyze the available literature. A total of 37 primary studies were selected from more than 3,000 unique studies. Our findings show that the primary studies have considered and reported 20 different elements as part of the Kanban approach based upon considerations of being an agile approach or a lean principle; these elements have realized great benefits and improvements to the software development teams. These benefits along with the challenges have been reported in this study. Due to the variety of organization types, contexts, and project sizes reported in the primary studies, it is expected that the results in this study would help in establishing knowledge on what are the different elements of the Kanban approach as well as offering a first step towards developing guidelines for practitioners to help in introducing the Kanban approach to software development organizations. © 2014, Springer Science+Business Media New York.},
  Author_keywords          = {Agile; Kanban; Lean; Process improvement; Software development; Software engineering; Systematic review},
  Coden                    = {ESENF},
  Document_type            = {Article},
  Doi                      = {10.1007/s10664-014-9340-x},
  ISSN                     = {13823256},
  Keywords                 = {Product development; Software engineering, Agile; Kanban; Lean; Process Improvement; Systematic Review, Software design},
  Publisher                = {Kluwer Academic Publishers},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84944357875&doi=10.1007%2fs10664-014-9340-x&partnerID=40&md5=39c55391c9911e0298d1f42ba046918a}
}

@Book{Aldewereld2015831,
  Title                    = {Design for values in software development},
  Author                   = {Aldewereld, H. and Dignum, V. and Tan, Y.-H.},
  Publisher                = {Springer Netherlands},
  Year                     = {2015},
  Note                     = {cited By 0},

  Abstract                 = {A rising trend in software development by public and private organizations is the focus on solutions that combine services (potentially provided by others) into value-added systems. ICT systems based on service-oriented and distributed computing principles require profound changes in the way the software is designed, deployed, and managed. The software that organizations develop and/or use needs to comply with all sorts of values, e.g., legal norms (privacy) or societal values (be environmental friendly), yet no software development methodology currently handles values in the design process (explicitly). Existing “waterfall”-like software development falls short in this new multidimensional field, where approaches are required that can integrate values, functionalities, and behaviors in system design. In this chapter, we introduce the Value-Sensitive Software Development (VSSD) framework as a Design for Values approach to the development of ICT systems. VSSD aims to make the relations between the values, the domain, and the software product explicit, thereby improving maintainability of the software. © Springer Science+Business Media Dordrecht 2015. All rights are reserved.},
  Author_keywords          = {Institutions; Norms; Service-oriented architectures; Software development},
  Document_type            = {Book Chapter},
  Doi                      = {10.1007/978-94-007-6970-0_26},
  ISBN                     = {9789400769700; 9789400769694},
  Journal                  = {Handbook of Ethics, Values, and Technological Design: Sources, Theory, Values and Application Domains},
  Pages                    = {831-845},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84943156693&doi=10.1007%2f978-94-007-6970-0_26&partnerID=40&md5=d617cae23c144d48e1786743c044e6ba}
}

@Article{Al-Hawajreh201450,
  Title                    = {Towards agile approach for better user satisfaction},
  Author                   = {Al-Hawajreh, N. and Abualia, A. and Al-Thani, H. and Fouroozesh, Z. and Khalil, K. and Mohammed, K. and Kuwari, M.A. and Zainal, A. and Bouras, A.},
  Journal                  = {Journal of Modern Project Management},
  Year                     = {2014},
  Note                     = {cited By 0},
  Number                   = {1},
  Pages                    = {50-61},
  Volume                   = {2},

  Abstract                 = {User satisfaction is a cornerstone indicator of any successful software project. Software projects are classified as successful only if the users are satisfied with the delivered software project result. Reducing the gap between users' expectations and the actual delivered software is one of the ultimate objectives of software project management. Therefore, it is essential to manage user expectations during the project, which is basically achieved by managing the user opinions related to the final performance of the software. However, this cannot be isolated from the adopted testing methodology, which is the way to guarantee the optimal user satisfaction. Furthermore, the stakeholder occupies a significant position in agile principles aligned with development teams. Flexibility to adapt stakeholders' late changes is also another gain in agility. Agility additionally focuses on the decentralized management approach to exploit any managing skills of the software project individuals. In this paper, we describe how these factors are relevant to the agile project management strategy. Our findings explain the hidden reasons behind the success of the agile strategy in software development projects.},
  Document_type            = {Article},
  ISSN                     = {23173963},
  Publisher                = {Editora Mundos Sociais},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84951765822&partnerID=40&md5=65f124a7cc448d823b2af67376e80cbb}
}

@Article{Al-Hawari2017242,
  Title                    = {The software engineering of a three-tier web-based student information system (MyGJU)},
  Author                   = {Al-Hawari, F. and Alufeishat, A. and Alshawabkeh, M. and Barham, H. and Habahbeh, M.},
  Journal                  = {Computer Applications in Engineering Education},
  Year                     = {2017},
  Note                     = {cited By 0},
  Number                   = {2},
  Pages                    = {242-263},
  Volume                   = {25},

  Abstract                 = {This paper discusses how the software development team at the German Jordanian University (GJU) adopted the project management and software development processes in the ISO/IEC 29110 series to implement a complex Student Information System (SIS). Specifically, it identifies the key points to be taken into consideration in the analysis, design, implementation, testing, and deployment phases during the iterative and incremental SIS development process. The SIS is a distributed three-tier web-based application that enables registrars to perform various tasks such as system setup, admission, registration, grades processing, graduation, and reporting. It was launched in the first 2015/2016 semester and enabled administration to maintain a comfortable learning environment, assess instructor performance, enhance teaching practices, and improve course content. The results of the system measurements and user survey assert that the SIS is feature rich, easy to use, fast, reliable, stable, highly available, and scalable. © 2017 Wiley Periodicals, Inc. Comput Appl Eng Educ 25:242–263, 2017; View this article online at wileyonlinelibrary.com/journal/cae; DOI 10.1002/cae.21794. © 2017 Wiley Periodicals, Inc.},
  Author_keywords          = {ISO/IEC 29110; iterative and incremental software process; registration; software engineering; student information system; waterfall process; web-based applications},
  Coden                    = {CAPEE},
  Document_type            = {Article},
  Doi                      = {10.1002/cae.21794},
  ISSN                     = {10613773},
  Keywords                 = {Application programs; Computer aided instruction; Curricula; Human resource management; Information management; Information systems; Project management; Software engineering; Students; Teaching; Web services; Websites, Development process; ISO/IEC; Learning environments; Registration; Software development process; Software development teams; Software process; Web-based applications, Software design},
  Publisher                = {John Wiley and Sons Inc.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85012055165&doi=10.1002%2fcae.21794&partnerID=40&md5=db9dde1abbb355cde7c389da7b7a6356}
}

@Book{AliBabar20131,
  Title                    = {Making Software Architecture and Agile Approaches Work Together: Foundations and Approaches},
  Author                   = {Ali Babar, M.},
  Publisher                = {Elsevier Inc.},
  Year                     = {2013},
  Note                     = {cited By 1},

  Abstract                 = {Software architecture (SA) is one of the most significant areas of research and practice in software engineering. It has been shown that getting architecture of large-scale complex systems right is not only extremely important but hugely challenging. The increasing popularity and adoption of Agile Software Development (ASD) methods have brought architecture-centric methods and practices into question as agile followers tend to perceive architecture in the context of plan-driven software development. It is widely recognized that SA needs sufficient attention for successful development and evolution of software-intensive systems and services irrespective of the software development paradigm. Given the nature of the discipline, SA methods and approaches tend to be effort-intensive and heavyweight for certain kinds of projects. There is an increasing interest in finding ways to apply architecture-centric principles and practices in an Agile fashion-Agile architecting. A good understanding of architectural principles and approaches is a prerequisite to agile architecting. The aim of this chapter is to briefly describe the fundamental concepts, principles, and practices of architecture-centric approaches. These concepts, principles, and practices are expected to provide a reader with sufficient understanding of different aspects of SA and its related methods to combine them with ASD methods. We start with a brief discussion of the points that make architecture and agile approaches seemingly incompatible. Then we present and discuss some of the key aspects of architecture-centric approaches and techniques that need to be considered for use in ASD projects. We also provide an overview of some of the key practices that have been recommended for successfully integrating architecture-centric approaches in ASD for developing large-scale, software-intensive systems. © 2014 Elsevier Inc. All rights reserved.},
  Author_keywords          = {Agile methods; Architecturally significant requirements; Design patterns; Extreme programming (XP); Personas; Requirements engineering; Scenarios; Scrum; Software architecture; Software engineering},
  Document_type            = {Book Chapter},
  Doi                      = {10.1016/B978-0-12-407772-0.00001-0},
  ISBN                     = {9780124077720},
  Journal                  = {Agile Software Architecture: Aligning Agile Processes and Software Architectures},
  Pages                    = {1-22},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84902426115&doi=10.1016%2fB978-0-12-407772-0.00001-0&partnerID=40&md5=a050f975093fc8b70cabab774e28d996}
}

@Book{AliBabar20131,
  Title                    = {Agile Software Architecture: Aligning Agile Processes and Software Architectures},
  Author                   = {Ali Babar, M. and Brown, A.W. and Mistrik, I.},
  Publisher                = {Elsevier Inc.},
  Year                     = {2013},
  Note                     = {cited By 12},

  Abstract                 = {Agile software development approaches have had significant impact on industrial software development practices. Today, agile software development has penetrated to most IT companies across the globe, with an intention to increase quality, productivity, and profitability. Comprehensive knowledge is needed to understand the architectural challenges involved in adopting and using agile approaches and industrial practices to deal with the development of large, architecturally challenging systems in an agile way. Agile Software Architecture focuses on gaps in the requirements of applying architecture-centric approaches and principles of agile software development and demystifies the agile architecture paradox. Readers will learn how agile and architectural cultures can co-exist and support each other according to the context. Moreover, this book will also provide useful leads for future research in architecture and agile to bridge such gaps by developing appropriate approaches that incorporate architecturally sound practices in agile methods. © 2014 Elsevier Inc. All rights reserved.},
  Document_type            = {Book},
  Doi                      = {10.1016/C2012-0-01208-2},
  ISBN                     = {9780124077720},
  Journal                  = {Agile Software Architecture: Aligning Agile Processes and Software Architectures},
  Pages                    = {1-392},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84902417997&doi=10.1016%2fC2012-0-01208-2&partnerID=40&md5=1bbf45b3bd5443097fa9a1ba56a663d0}
}

@Article{Alkadi201347,
  Title                    = {Are software engineering textbooks a thing of the past?},
  Author                   = {Alkadi, G. and Beaubouef, T.},
  Journal                  = {ACM Inroads},
  Year                     = {2013},
  Note                     = {cited By 0},
  Number                   = {1},
  Pages                    = {47-51},
  Volume                   = {4},

  Abstract                 = {Computer science is a rapidly changing field with new tools and products introduced almost daily. The software developer, whether beginning student or seasoned professional, must not only have a good background on the fundamentals, but must also be able to keep up with the latest trends and techniques through research, education, and practice. This paper addresses this issue in terms of student learning, and discusses the issue of currency as it relates to student learning materials such as textbooks.},
  Author_keywords          = {Agile Development; Code Freeze; Scope Creep; Software engineering; Textbooks},
  Document_type            = {Article},
  Doi                      = {10.1145/2432596.2432614},
  ISSN                     = {21532184},
  Keywords                 = {Agile development; Code Freeze; Software developer; Student learning, Software engineering; Students, Textbooks},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84878500835&doi=10.1145%2f2432596.2432614&partnerID=40&md5=8832755f010b1beca9999d66ce448897}
}

@Article{deAlmeidaMadeiraClemente2013484,
  Title                    = {New Perspectives on Interactivity in Project Management Tools},
  Author                   = {de Almeida Madeira Clemente, M. and Berndt, A. and Leitner, H. and Keck, M. and Gaertner, R. and Groh, R.},
  Journal                  = {Communications in Computer and Information Science},
  Year                     = {2013},
  Note                     = {cited By 0},
  Number                   = {PART II},
  Pages                    = {484-488},
  Volume                   = {374},

  Abstract                 = {Software tools for project management are extremely complex desktop applications. Recently, we observe a shift from traditional project management where one project manager is responsible for creating the project plan and supervising its execution, towards a more agile multi-project management that involves project members early in the planning process. This shift demands the introduction of novel visualization and interaction techniques. This contribution summarizes our analyses of three typical scenarios and shows promising perspectives for the application of new interaction and visualization techniques. Our goal is to promote project management as an interesting and multifarious subject within HCI research. © Springer-Verlag Berlin Heidelberg 2013.},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-642-39476-8_98},
  ISBN                     = {9783642394751},
  ISSN                     = {18650929},
  Keywords                 = {Computer science, Desktop applications; Interaction techniques; Multi-project management; Novel visualizations; Planning process; Project management tools; Project managers; Visualization technique, Project management},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84886262690&doi=10.1007%2f978-3-642-39476-8_98&partnerID=40&md5=adc8175e217fbbdf76c6169698ea2c8a}
}

@Conference{Almog2015196,
  Title                    = {How the repository driven test automation (RDTA) will make test automation more efficient, easier \& maintainable},
  Author                   = {Almog, D. and Tsubery, Y.},
  Year                     = {2015},
  Editor                   = {Ramanathan M.K., Sureka A., Devanbu P.},
  Note                     = {cited By 0},
  Pages                    = {196-197},
  Publisher                = {Association for Computing Machinery},
  Volume                   = {18-20-February-2015},

  Abstract                 = {Many testing organizations find themselves lagging behind the development forces on the agile journey; it is obvious for us to demand an easy integration between all software program elements developed. Do we treat our testing artifacts in the same manner? It is time to make the change. Take this opportunity and prepare a right testing infrastructure that will enable you to reuse and integrate all testing artifacts as basic components for the same puzzle. Make test automation to integrate and operate in similar manner. Mobile emerging world present this issue even harder - the versatile and speedy continues integration required to multiply our demand for reuse and efficiency. Proposing reuse of testing artifacts as a fundamental principle for the creation test automation is what makes RDTA a unique approach to the buildup process of test automation infrastructure. Having your attention aimed to the question; what will be done with your efforts later on and how someone else can benefit from your previous efforts? Drove us to the new concept for forming test automation. The term software repository here refers to a storage location from which software packages or artifacts may be retrieved to be reuse on another system or other software products. This tutorial explores different aspect of software test automation artifacts reuse and elaborate several practical implication and changes implied from the new paradigm to be implemented in a software development organization. Report about an empirical case study of implementation of RDTA in a large organization will conclude this tutorial, presenting the benefits and some of the obstacles facing this approach. RDTA approach is yet to be matures and elaborated, this tutorial will present several new subject needed to be formally theoretically modeled and addressed. Copyright is held by the owner/author(s).},
  Author_keywords          = {Repository driven automation; Software reuse; Test automation; Testing},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2723742.2723762},
  ISBN                     = {9781450334327},
  Journal                  = {ACM International Conference Proceeding Series},
  Keywords                 = {Automation; Computer software reusability; Integration testing; Software design; Software engineering; Testing, Empirical case studies; Fundamental principles; Large organizations; Software development organizations; Software repositories; Software test automation; Test Automation; Testing infrastructure, Software testing},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84955499151&doi=10.1145%2f2723742.2723762&partnerID=40&md5=6da3dc981aecd3d04dbcaf3e184988aa}
}

@Conference{Almudarra20151133,
  Title                    = {Issues in adopting agile development principles for mobile cloud computing applications},
  Author                   = {Almudarra, F. and Qureshi, B.},
  Year                     = {2015},
  Editor                   = {Shakshuki E.},
  Note                     = {cited By 1},
  Number                   = {1},
  Pages                    = {1133-1140},
  Publisher                = {Elsevier},
  Volume                   = {52},

  Abstract                 = {Mobile Cloud Computing has been a recent research and development area. Various framework and middleware have been developed recently providing solutions for utilizing cloud computing resources on resource constrained mobile devices. A very few number of works present sound engineering mechanism for developing such software. This paper discusses issues in developing mobile cloud applications using agile software development methodologies. Sha-Mo-Cloud, a hybrid cloud framework was developed leveraging public cloud services for storing data including images and videos captured from user's mobile devices. Users can upload, access, manage and share personal content using web interface as well as a mobile application. To preserve user privacy and personalized data, part of the framework was developed in a private cloud environment. This work also reports the engineering aspects of development of ShaMoCloud. The software construction team previously developed similar applications using Team Software Process. The work presented here, compares and contrasts the experiences of the ShaMoCloud development team with four similar projects carried out recently. © 2015 The Authors. Published by Elsevier B.V.},
  Author_keywords          = {Agile development methods;; Content management; Mobile cloud computing; Mobile social networks; Privacy},
  Document_type            = {Conference Paper},
  Doi                      = {10.1016/j.procs.2015.05.131},
  ISSN                     = {18770509},
  Journal                  = {Procedia Computer Science},
  Keywords                 = {Application programs; Cloud computing; Data privacy; Distributed computer systems; Middleware; Mobile devices; Social networking (online); Social sciences computing; Software design; Software engineering, Agile development methods; Agile software development; Content management; Engineering aspects; Mobile cloud applications; Mobile social networks; Software construction; Team software process, Mobile cloud computing},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84939203457&doi=10.1016%2fj.procs.2015.05.131&partnerID=40&md5=09c8ec67ede326475ade4199f0fe73d6}
}

@Conference{Alnatheer201483,
  Title                    = {Agile security methods: An empirical investigation},
  Author                   = {Alnatheer, A. and Gravell, A.M. and Argles, D. and Gilbert, L.},
  Year                     = {2014},
  Note                     = {cited By 0},
  Pages                    = {83-92},
  Publisher                = {Acta Press},

  Abstract                 = {This paper provides an in-depth investigation into the various security issues in Agile software development methodologies currently in use. We have as part of our research identified a number of issues from multiple perspectives and points of view throughout the literature and from industrial sources. These shed light into what the most important issues are and what is the best way forward in assessing each proposal and deciding whether to adopt it or not. We have conducted a number of empirical interviews with practitioners from various parts of the world who actively work in high risk projects which puts them in a position to shed light into these topics in a more detailed fashion. We present our findings and analysis in the following paper for the topics of combining security and agility. We assess whether changing Agile methods for the sake of security is really necessary, and present recommendations for future work and conclusions.},
  Author_keywords          = {Empirical study; Security engineering; Software design and development; Software methodologies; Software security},
  Document_type            = {Conference Paper},
  Doi                      = {10.2316/P.2014.810-011},
  Journal                  = {Proceedings of the IASTED International Conference on Software Engineering, SE 2014},
  Keywords                 = {Industrial research, Empirical studies; Security engineering; Software design and development; Software methodologies; Software security, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84898472369&doi=10.2316%2fP.2014.810-011&partnerID=40&md5=714938a3d433bdf3b81178dfc4dada89}
}

@Article{Alqudah2016828,
  Title                    = {A review of scaling agile methods in large software development},
  Author                   = {Alqudah, M. and Razali, R.},
  Journal                  = {International Journal on Advanced Science, Engineering and Information Technology},
  Year                     = {2016},
  Note                     = {cited By 4},
  Number                   = {6},
  Pages                    = {828-837},
  Volume                   = {6},

  Abstract                 = {Agile methods such as Dynamic Systems Development Method (DSDM), Extreme Programming (XP), SCRUM, Agile Modeling (AM) and Crystal Clear enable small teams to execute assigned task at their best. However, larger organizations aim at incorporating more Agile methods owing to the fact that its application is prevalently tailored for small teams. The scope in which large firms are interested will extend the original Agile methods to include larger teams, coordination, communication among teams and customers as well as oversight. Determining particular software method is always challenging for software companies especially when considering start-up, small to medium or large enterprises. Most of large organizations develop large-scale projects by teams of teams or teams of teams of teams. Therefore, most recognized Agile methods or first-generation methods such as XP and SCRUM need to be modified before they are employed in large organizations; which is not an easy task. Accomplishing said task would necessitate large organizations to pick and select from the scaling Agile methods in accommodating a single vision for large and multiple teams. Deciding the right choice requires wholesome understanding of the method including its strengths and weaknesses as well as when and how it makes sense. Therefore, the main aim of this paper is to review the existing literature of the utilized scaling Agile methods by defining, discussing and comparing them. In-depth reviews of the literature were performed to juxtapose the methods in impartial manner. In addition, the content analysis was used to analyse the resultant data. The result indicated that the DAD, LeSS, LeSS huge, SAFe, Spotify, Nexus, and RAGE are the adopted scaling Agile methods at large organizations. They seem to be similar but there are discrepancies among them that take the form of team size, training, and certification, methods and practices adopted, technical practices required and organizational type.},
  Author_keywords          = {Agile method; DAD; LeSS; Nexus; RAGE; SAFe; Scaling Agile methods; Spotify},
  Document_type            = {Article},
  Doi                      = {10.18517/ijaseit.6.6.1374},
  ISSN                     = {20885334},
  Publisher                = {Insight Society},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85010210798&doi=10.18517%2fijaseit.6.6.1374&partnerID=40&md5=090cf8dd5dc0094052ead2c3cc669fd1}
}

@Article{Alsahli2016,
  Title                    = {Toward an Agile Approach to Managing the Effect of Requirements on Software Architecture during Global Software Development},
  Author                   = {Alsahli, A. and Khan, H. and Alyahya, S.},
  Journal                  = {Scientific Programming},
  Year                     = {2016},
  Note                     = {cited By 0},
  Volume                   = {2016},

  Abstract                 = {Requirement change management (RCM) is a critical activity during software development because poor RCM results in occurrence of defects, thereby resulting in software failure. To achieve RCM, efficient impact analysis is mandatory. A common repository is a good approach to maintain changed requirements, reusing and reducing effort. Thus, a better approach is needed to tailor knowledge for better change management of requirements and architecture during global software development (GSD).The objective of this research is to introduce an innovative approach for handling requirements and architecture changes simultaneously during global software development. The approach makes use of Case-Based Reasoning (CBR) and agile practices. Agile practices make our approach iterative, whereas CBR stores requirements and makes them reusable. Twin Peaks is our base model, meaning that requirements and architecture are handled simultaneously. For this research, grounded theory has been applied; similarly, interviews from domain experts were conducted. Interview and literature transcripts formed the basis of data collection in grounded theory. Physical saturation of theory has been achieved through a published case study and developed tool. Expert reviews and statistical analysis have been used for evaluation. The proposed approach resulted in effective change management of requirements and architecture simultaneously during global software development. © 2016 Abdulaziz Alsahli et al.},
  Art_number               = {8198039},
  Coden                    = {SCIPE},
  Document_type            = {Article},
  Doi                      = {10.1155/2016/8198039},
  ISSN                     = {10589244},
  Keywords                 = {Case based reasoning; Research and development management; Software engineering, Agile approaches; Casebased reasonings (CBR); Change management; Critical activities; Global software development; Innovative approaches; Requirement change managements; Software failure, Software design},
  Publisher                = {Hindawi Publishing Corporation},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84985917012&doi=10.1155%2f2016%2f8198039&partnerID=40&md5=08a4647d357a87f0dd0e521693ea62cb}
}

@Conference{Alsaqaf2016,
  Title                    = {Engineering quality requirements in large scale distributed agile environment},
  Author                   = {Alsaqaf, W.},
  Year                     = {2016},
  Editor                   = {Forbrig P., Borg M., Herrmann A., Unterkalmsteiner M., Bjarnason E., Daun M., Franch X., Kirikova M., Palomares C., Espana S., Paech B., Opdahl A.L., Tenbergen B., Dieste O., Felderer M., Gay G., Horkoff J., Seffah A., Morandini M., Petersen K.},
  Note                     = {cited By 0},
  Publisher                = {CEUR-WS},
  Volume                   = {1564},

  Abstract                 = {Agile software development methods have become increasingly popular in the last years. However, agile methods don't specify explicitly how to deal with the quality requirements. Moreover there is little known about how organizations currently deal with this shortcoming. Based on several case studies this research will investigate real-world large-scale distributed agile projects to understand the challenges agile teams face regarding quality requirements and the approach they are currently using to cope with these challenges. After that a set of good practices will be introduced to exp licitly integrate quality requirements in agile processes. Other case studies will be conducted to validate the suggested good practices.},
  Author_keywords          = {Agile requirements engineering; Empirical research method; Nonfunctional requirements; Quality requirements},
  Document_type            = {Conference Paper},
  ISSN                     = {16130073},
  Journal                  = {CEUR Workshop Proceedings},
  Keywords                 = {Computer software selection and evaluation; Requirements engineering; Software design, Agile environment; Agile process; Agile software development; Empirical research method; Engineering quality; Good practices; Non-functional requirements; Quality requirements, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84964683941&partnerID=40&md5=c4ebe5fe03d915baaf4f177e18d1b433}
}

@Article{Alsaqaf2017219,
  Title                    = {Quality requirements in large-scale distributed agile projects - A systematic literature review},
  Author                   = {Alsaqaf, W. and Daneva, M. and Wieringa, R.},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2017},
  Note                     = {cited By 0},
  Pages                    = {219-234},
  Volume                   = {10153 LNCS},

  Abstract                 = {Context and Motivation: Agile development methods have become increasingly popular in the last years. However, these methods hardly pay attention to quality requirements (QRs), which could undermine the profits of fast delivery by introducing high rework efforts later on. This risk is high especially in agile large-scale distributed settings. Question/problem: Although several publications reported on the insufficient attention to quality requirements in agile methods, still little is known about agile requirements engineering practices and their impact on quality requirements in large-scale distributed settings. However, companies increasingly use agile methods in those settings, where the negative impact of ignoring quality requirements is large. Hence, the goal of this study is to identify the challenges in the engineering of quality requirements in large-scale distributed agile projects that have been researched so far, the agile practices that have contributed to the emergence of these challenges, and the proposed solutions. Principle ideas/results: Following an evidence-based research method, we examined 60 papers on quality requirements in agile. We found that, while there are multiple proposals to engineer quality requirements in agile, none of those has been tried out in real-life settings. Evaluating scalability of these proposals, therefore, is a priority for future research. Contribution: This paper identified 12 challenges in agile projects that harm the quality requirements. Besides, we identified and evaluated 13 proposals for dealing with quality requirements in agile projects, along with implications for practice and research. © Springer International Publishing AG 2017.},
  Author_keywords          = {Agile requirements engineering; Large-scale distributed agile projects; Non-functional requirements; Quality requirements; Systematic literature review},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-54045-0_17},
  Editor                   = {Perini A., Grunbacher P.},
  ISBN                     = {9783319540443},
  ISSN                     = {03029743},
  Keywords                 = {Computer software selection and evaluation, Agile development methods; Agile methods; Agile practices; Evidence based researches; Large-scale distributed agile projects; Non-functional requirements; Quality requirements; Systematic literature review, Requirements engineering},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85013949572&doi=10.1007%2f978-3-319-54045-0_17&partnerID=40&md5=5f59b8d18de8a18d49cb3a57d5b72384}
}

@Article{Alshareet2015,
  Title                    = {An empirical study to develop a Decision Support System (DSS) for measuring the impact of quality measurements over agile Software Development (ASD)},
  Author                   = {Alshareet, O.M.},
  Journal                  = {Indian Journal of Science and Technology},
  Year                     = {2015},
  Note                     = {cited By 8},
  Number                   = {15},
  Volume                   = {8},

  Abstract                 = {Background/Objectives: Primarily, this quantitative research aims to study the impact of integrating quality measurements with ASD, quantify it, and develop a DSS for predicting its outcome. Methods/Statistical Analysis: Included within a survey, the population sample is represented by project managers, who were divided into two independent groups: The first one adopts an explicit quality measurement framework while the second group does not apply quality measurements. After that, the researcher tested both groups in an independent samples t-test, and analysed results statistically. After experimenting different machine learning models, the researcher developed a DSS based on Linear Regression. Findings: Only 150 responded out of 200 respondents. The research dataset passed the "independent t-test" validity test with the fulfilment of the six assumptions. After conducting the independent t-test design, the researcher found that the value of Sig. (2-tailed) is less than .05, which means that the differences between the experimented groups are statistically significant. After that, the researcher utilized WEKA experimenter with 10-folds cross validation to test the dataset fitness with four different machine learning algorithms, which are Linear Regression (base), Multilayer Perceptron, KStar, and Decision Stump. The results showed that Linear Regression (base) provides better fitness with the dataset. Moreover, The R Square for it is .836. Based on Linear Regression, the researcher developed web and windows version of the DSS using VB.NET. In summary, research results shows that there is empirical evidence to support the proposition that quality measurements integration with ASD presents a strategic value to organizations. The contribution of these findings is materialized in its empirical nature and the scariness of research in this domain. Application/Improvements: Henceforward, the researcher are planning to expand the population sample, publishing the developed DSS online with integrated feedback, and developing other DSSs for supporting integrating quality measurements with ASD.},
  Art_number               = {70774},
  Author_keywords          = {Agile Software Development (ASD); Decision Support System (DSS); Independent T-test design; Linear regression; Quality measurements; Strategic Alignment (SA); Strategic Information Systems (SIS)},
  Document_type            = {Article},
  Doi                      = {10.17485/ijst/2015/v8i15/70774},
  ISSN                     = {09746846},
  Publisher                = {Indian Society for Education and Environment},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84938723651&doi=10.17485%2fijst%2f2015%2fv8i15%2f70774&partnerID=40&md5=d2780e91416ccefb9a964954188328e3}
}

@Article{Al-Ta'ani2016846,
  Title                    = {A framework for requirements prioritisation process in an agile software development environment: Empirical study},
  Author                   = {Al-Ta'ani, R.H. and Razali, R.},
  Journal                  = {International Journal on Advanced Science, Engineering and Information Technology},
  Year                     = {2016},
  Note                     = {cited By 2},
  Number                   = {6},
  Pages                    = {846-856},
  Volume                   = {6},

  Abstract                 = {User requirements are in high demand due to advancements of technology and business needs. Therefore, it is extremely difficult to achieve user requirements at one single time. Agile methods have been introduced to mitigate such issues by implementing user requirements incrementally and iteratively. The top significant aspect in agile development is selecting a group of prominent requirements to be implemented in iteration. This could be derived from continuous requirements prioritisation (RP). To assign which requirements should be selected by practitioners is considered one of the obstacles faced in the process of implementing the inter-iteration period. This study aimed to identify the RP elements and factors that should be considered through the RP process in agile software development. The elements and factors were identified through a review of previous studies and in-depth interviews involving 18 agile practitioners from different software development organizations in different countries (i.e., Malaysia and Jordan), over a period of 2 years. To get the best result, the data is analyzed by using grounded theory techniques (Open, Axial and Selective coding). The elements and factors from the RP process will guide practitioners to an effective RP process that can produce highquality requirements, which are expected to meet the needs of the intended users.},
  Author_keywords          = {Agile methods; Requirements analysis; Requirements prioritisation},
  Document_type            = {Article},
  Doi                      = {10.18517/ijaseit.6.6.1375},
  ISSN                     = {20885334},
  Publisher                = {Insight Society},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85010199546&doi=10.18517%2fijaseit.6.6.1375&partnerID=40&md5=160ec12952b23bc841300e702de570e8}
}

@Conference{Alvertis2016851,
  Title                    = {Using crowdsourced and anonymized Personas in the requirements elicitation and software development phases of software engineering},
  Author                   = {Alvertis, I. and Papaspyros, D. and Koussouris, S. and Mouzakitis, S. and Askounis, D.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {851-856},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {This paper deals with the process of crowdsourcing requirements elicitation in software engineering and the alignment of the customer needs during the development phase, through the usage of anonymous personas, and the support of the persona builder application that allows the extraction of such information through anonymized data. Having identified the realization of users and customers' needs in the software engineering cycle, despite the adoption of agile methods, the paper suggests the usage of a persona that represents a set of users with similar characteristics, a pool of personas that software teams may share with each other through a collaborative application, and persona builder as a tool to generate such personas through real user profiles and data collected through third party services. At the end, a demo application is presented, realizing the concept of anonymized, crowdsourced personas. © 2016 IEEE.},
  Art_number               = {7784656},
  Author_keywords          = {Anonymized requirements elicitication; Crowdsourced software requirements; Dynamic requirements documentation; Software engineering; User persona},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ARES.2016.71},
  ISBN                     = {9781509009909},
  Journal                  = {Proceedings - 2016 11th International Conference on Availability, Reliability and Security, ARES 2016},
  Keywords                 = {Application programs; Requirements engineering; Software engineering, Anonymized requirements elicitication; Collaborative application; Development phase; Requirements documentations; Requirements elicitation; Software requirements; Third party services; User persona, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85015274932&doi=10.1109%2fARES.2016.71&partnerID=40&md5=81872f4fec89ca077276374751feb6de}
}

@Book{Alzoabi201396,
  Title                    = {Agile software: Body of knowledge},
  Author                   = {Alzoabi, Z.},
  Publisher                = {IGI Global},
  Year                     = {2013},
  Note                     = {cited By 0},
  Volume                   = {1-4},

  Abstract                 = {The term Agile Method of software development was coined in the 2001.This approach is characterized with creativity, flexibility, adaptability, responsiveness, and human-centricity. Researchers have suggested that the complex, uncertain, and ever-changing environment is pushing developers to adopt agile methods rather than traditional software development. Agile methodologist claim that their Agile methods is the answer for the software engineering chaotic situation, in which projects are exceeding their time and budget limits, requirements are not fulfilled, and consequently ending up with unsatisfied customers. In this chapter we will explain agile methodology, its general characteristics, and quick description of the famous agile methods known in the industry and research. © 2014, IGI Global.},
  Document_type            = {Book Chapter},
  Doi                      = {10.4018/978-1-4666-4301-7.ch006},
  ISBN                     = {9781466643024; 1466643013; 9781466643017},
  Journal                  = {Software Design and Development: Concepts, Methodologies, Tools, and Applications},
  Pages                    = {96-116},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84944691097&doi=10.4018%2f978-1-4666-4301-7.ch006&partnerID=40&md5=8af4614d32996c96a6db9b55f43e88d9}
}

@Conference{Alzoubi2014,
  Title                    = {Agile global software development communication challenges: A systematic review},
  Author                   = {Alzoubi, Y.I. and Gill, A.Q.},
  Year                     = {2014},
  Note                     = {cited By 3},
  Publisher                = {Pacific Asia Conference on Information Systems},

  Abstract                 = {Organizations have shown a significant interest in adopting human and communication-oriented agile practices for Global Software Development (GSD). Agile practices originated in the context of small and medium co-located project teams present a number of communication challenges when they are applied to the distributed GSD. There is a need to understand the underlying communication challenges of agile GSD environment. This paper adopts a Systematic Literature Review (SLR) approach and reports communication challenges in the agile GSD context. A customized literature search and selection criteria was first developed and then applied to initially identify a set of 449 papers. Finally, 22 of 449 papers, relevant to this research, were selected for this study. These final 22 papers were reviewed and 7 major categories of communication challenges were identified in the context of agile GSD. The review results of this paper are expected to help researchers and practitioners to understand communication challenges of agile GSD and develop tools, techniques and strategies to deal with these challenges. This paper is limited to the number of reviewed studies from selected databases.},
  Author_keywords          = {Agile approaches; Communication challenges; Global software development; Systematic literature review},
  Document_type            = {Conference Paper},
  Journal                  = {Proceedings - Pacific Asia Conference on Information Systems, PACIS 2014},
  Keywords                 = {Software design, Agile approaches; Agile practices; Global software development; Literature search; Selection criteria; Systematic literature review; Systematic literature review (SLR); Systematic Review, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84928620140&partnerID=40&md5=0d53bb68550fba099d437f1a50a22740}
}

@Article{AlZuhair20138833,
  Title                    = {A comparison of agile RUP with scrum software methods for developing system of systems:C4I system},
  Author                   = {AlZuhair, M. and AlOmair, Y. and Alghamdi, A.},
  Journal                  = {Information (Japan)},
  Year                     = {2013},
  Note                     = {cited By 0},
  Number                   = {12 B},
  Pages                    = {8833-8842},
  Volume                   = {16},

  Abstract                 = {System of systems architecture has been paid a remarkable attention by the Software Engineering community and widely adopted in the field of Software design. One common characteristic of system of systems software development is that the project is often distributed over multiple teams, buildings, or countries. In this paper, we reviewed the necessary literature regarding system of systems and agile methodologies. We explored the difficulties in applying such methodologies within large system of systems. We chose two agile development methods (Agile RUP and Scrum) and performed an objective comparison of them with respect to a number of features of the development process of system of systems. We utilized the characteristics of developing and managing system of systems along with the features and tools offered by the two agile methods and found that Agile RUP is a better method for developing system of systems. © 2013 International Information Institute.},
  Author_keywords          = {Agile methodologies; Agile RUP.; C4I, Scrum; Software development; System of Systems (SoS)},
  Document_type            = {Article},
  ISSN                     = {13434500},
  Publisher                = {International Information Institute Ltd.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84898759815&partnerID=40&md5=fe7e77b64bfb0c9aba1120551ae54d33}
}

@Conference{Aman2017,
  Title                    = {XML-DocTracker: Generating Software Requirements Specification (SRS) from XML Schema},
  Author                   = {Aman, H. and Ibrahim, R.},
  Year                     = {2017},
  Note                     = {cited By 0},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Agile software development methodology is an iterative and incremental method in making interactions more important than process and tools. The method also emphasizes more on developing software rather than making a comprehensive documentation. Therefore, web developers like to adapt agile software development methodology in their web development. The reason is because the methodology delivers web application faster than the traditional software development methodology. As advantages of this method, web application is developed in a short time. Although these make huge benefits, the most important thing in software development life cycle has been ignored. That is, documentation process in capturing requirements and design. Therefore, this paper presents a tool named XML-DocTracker for generating the software requirements specification (SRS) from XML schema as well as addressing the versioning problems during generating the SRS. XML-DocTracker is implemented based on the framework for transformation rules from XML Schema. The framework also addresses the versioning factor using traceability for detecting the document changes. Based on the framework, XML-DocTracker is developed and the tool is able to generate the SRS from the XML schema as well as able to detect document changes in SRS due to traceability factor that is embedded inside the tool. The tool can be used for software community who want to generate the SRS from the source codes if the SRS did not exist for that particular software. This paper contribution is detecting new type of element evolution in SRS when new XML schema version is introduced. © 2016 IEEE.},
  Art_number               = {7885872},
  Author_keywords          = {Reverse Engineering; Software Requirements Specification (SRS); UML Specification; XML Schema},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICISSEC.2016.7885872},
  ISBN                     = {9781509054930},
  Journal                  = {ICISS 2016 - 2016 International Conference on Information Science and Security},
  Keywords                 = {Application programs; Computer software; Formal specification; Iterative methods; Life cycle; Requirements engineering; Reverse engineering; Software engineering; Specifications; XML, Agile software development; Comprehensive documentation; Software development life cycle; Software development methodologies; Software requirements specifications; Transformation rules; UML specifications; XML schemas, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85018251473&doi=10.1109%2fICISSEC.2016.7885872&partnerID=40&md5=ea62a21fcaaa87921b249b9c89240ead}
}

@Conference{Åman2015,
  Title                    = {Novel ICT-enabled collaborative design processes and tools for developing non-road mobile machinery},
  Author                   = {Åman, R. and Handroos, H. and Kärkkäinen, H. and Jussila, J. and Korkealaakso, P.},
  Year                     = {2015},
  Note                     = {cited By 0},
  Publisher                = {American Society of Mechanical Engineers},

  Abstract                 = {The improvement of the energy efficiency is an important topic for non-road mobile machinery developers and manufacturers. These machines normally use fluid power transmission in drivelines and working actuators. New energy efficient technologies, e.g. a hybrid power transmission with an energy recovery feature, have been introduced. Currently most of the manufacturers are still using conventional technologies in their product development process. Human operators have an effect on the overall efficiency of the machines. Taking into account the human effects is difficult and expensive using the conventional design processes and tools. The objective of this study is to provide international machine manufacturers instrumental, yet novel, community and simulation-based (ICT-enabled) tools/methods for the strategic and cost effective development of their product practices and design processes. The development of models and methods will allow for rapid real-time virtual prototyping of complex machines and machine fleets that operate within a number of worksites or geographical conditions. The introduction of this state-of-the art (and going beyond) advancement in real-time virtual technology, simulation, internet based design technologies and software, cyber-physical and big data processing systems, will present a holistic approach to improve the entire product life. Targeted user groups are manufacturers of non-road mobile machinery (i.e. excavators, wheel loaders, etc.). These machines and production systems share the following key features: 1) They are complex mechatronic systems with several interconnections between hydraulic drives; mechanics, electronics, software and 2) they include autonomous, semiautonomous and human driven operated systems. Methods developed will enable machine manufacturers' access to technologies that will lead to a more cost effective consumer ordinated, life cycle optimization process. This paper will introduce the method of developing customized products in a fast, agile and networked way that will lead to significantly reduced life-cycle costs. © Copyright 2015 by ASME.},
  Document_type            = {Conference Paper},
  Doi                      = {10.1115/FPMC2015-9571},
  ISBN                     = {9780791857236},
  Journal                  = {ASME/BATH 2015 Symposium on Fluid Power and Motion Control, FPMC 2015},
  Keywords                 = {Big data; Channel capacity; Computer software; Construction equipment; Cost effectiveness; Costs; Data handling; Design; Digital storage; Energy efficiency; Hydraulic drives; Hydraulic machinery; Internet; Machine design; Machinery; Manufacture; Motion control; Power control; Power transmission; Product design; Real time systems; Roads and streets; Transportation, Collaborative design process; Complex mechatronic system; Conventional design; Data processing systems; Geographical conditions; Internet-based design; Non-road mobile machineries; Product development process, Life cycle},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84964345775&doi=10.1115%2fFPMC2015-9571&partnerID=40&md5=00083cb899aef98e11506e082c34212e}
}

@Article{Ambler20137,
  Title                    = {Disciplined agile delivery: The foundation for scaling agile},
  Author                   = {Ambler, S.W. and Lines, M.},
  Journal                  = {CrossTalk},
  Year                     = {2013},
  Note                     = {cited By 0},
  Number                   = {6},
  Pages                    = {7-11},
  Volume                   = {26},

  Abstract                 = {Many organizations have adopted agile strategies to some extent, often applying simple methods such as Scrum on a few software development projects. Although they have succeeded on a handful of projects-clearly a good start-they now want to scale agile to address enterprise-class solutions. As the old saying goes about success, "What got you here is not going to get you to the next level." This article explores several important issues when it comes to applying agile strategies at scale. First, it explores what it means to scale agile. Our experience is that without this understanding it is incredibly difficult to come to an agreement as to how to tailor agile strategies to meet your needs at scale. Second, we overview the Disciplined Agile Delivery (DAD) process decision framework and show how it provides a solid foundation from which to scale agile. Third, we explore how DAD's (process) goal-driven approach is the key for scaling agile solution delivery. Fourth, we warn you of the dangers of assuming that you just need to adopt a few new practices. Fifth, we review some survey-based evidence that summarizes the experiences of the industry when it comes to applying agile at scale.},
  Document_type            = {Article},
  Keywords                 = {Agile solutions; Goal-driven; Process decisions; SIMPLE method; Software development projects, Crosstalk; Human computer interaction, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84890956276&partnerID=40&md5=3caf3d7daddabf06fa0813e8a0054f1e}
}

@Conference{Anderson2016244,
  Title                    = {Integrating sensor devices in a service oriented framework: A retail environment case study},
  Author                   = {Anderson, M. and Bolton, J.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {244-250},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {This paper presents a case study that explores the impact of a software development project on a Small to Medium Enterprise in the United Kingdom as a means of delivering improved understanding of data in the retail sector. In this paper, the link between the actions undertaken by management in retail and the relationship with the environment provided by IT systems is considered. Many retailers in the United Kingdom make use of sensor devices to understand the behavior of their customers. As retail outlets grow over a period of time, the diversity of sensor devices may change as new devices are installed. Equally, outlets that are operated within retail groups will collect and store data locally. As a consequence, management within the retail sector face a number of challenges to understand the operation of individual outlets and the holistic performance of retail chains. As a result, both the IT systems and also the working practices employed to complete the day to day tasks essential to meet the needs of a retailer's customers rapidly become unfit for purpose. The case study considered in this paper reviews the requisite practices adopted by a service provider in the business intelligence sector, and the positive impact that the company realized through the re-engineering of both IT systems and business workflows. The underlying reasons for this inefficiency were analysed and, through the agile software engineering methodology, a solution was designed to resolve these issues. © 2016 IEEE.},
  Art_number               = {7473032},
  Author_keywords          = {Business workflow re-engineering; Reporting; Visualizing management information; Workflow design},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/SOSE.2016.74},
  ISBN                     = {9781509022533},
  Journal                  = {Proceedings - 2016 IEEE Symposium on Service-Oriented System Engineering, SOSE 2016},
  Keywords                 = {Costs; Reengineering; Software design; Software engineering; Systems engineering, Agile software engineering; Integrating sensors; Management information; Reporting; Service oriented frameworks; Small to medium enterprise; Software development projects; Workflow designs, Sales},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84979071821&doi=10.1109%2fSOSE.2016.74&partnerID=40&md5=448da93ccda35679ca5c2486259f12e9}
}

@Conference{Anderson2015186,
  Title                    = {User Interface Design as a Catalyst for Organisation Change},
  Author                   = {Anderson, M. and Gilbert, M.},
  Year                     = {2015},
  Editor                   = {Li Y., Chao K.-M., Chung J.-Y., Fei X.},
  Note                     = {cited By 0},
  Pages                    = {186-193},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {This paper presents a case study that explores the impact of a re-engineering project on a Small to Medium Enterprise in the United Kingdom as a means of delivering improved employee performance. In this paper, the link between the actions undertaken my teams of co-workers and the relationship with the environment provided by IT systems is considered. As an organization evolves over an extended period of time, both the IT systems and also the working practices employed to complete the day to day tasks essential to meet the needs of an organisation's customers, particularly in the service sector, rapidly become unfit for purpose. This soon becomes an issue both in meeting the needs of customers and also in meeting regulatory requirements. The case study considered in this paper reviews the requisite practices adopted by a service provider in the wet stock management industry, and the positive impact that the company realized through the re-engineering of both IT systems and business workflows. The central driver for the changes implemented was a need identified in the business to implement improved visualization of data relating to working practices in the organization and its clients. Through a regular review process, issues were identified in a key area of the business that impacted upon the time taken to complete essential tasks. The underlying reasons for this inefficiency were analysed and, through the Agile software engineering methodology, a solution was designed to resolve these issues. © 2015 IEEE.},
  Art_number               = {7349965},
  Author_keywords          = {business workflow re-engineering; teamworking practices; User Interface design; visualizing management information},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICEBE.2015.39},
  ISBN                     = {9781467380027},
  Journal                  = {Proceedings - 12th IEEE International Conference on E-Business Engineering, ICEBE 2015},
  Keywords                 = {Data visualization; Electronic commerce; Human resource management; Reengineering; Software engineering, Agile software engineering; Employee performance; Management information; Re-engineering projects; Regulatory requirements; Small to medium enterprise; Teamworking; User interface designs, User interfaces},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84964845188&doi=10.1109%2fICEBE.2015.39&partnerID=40&md5=7db936eedf4bb25d9c6061ff7139478e}
}

@Article{Angelov201778,
  Title                    = {Designing and applying an approach to software architecting in agile projects in education},
  Author                   = {Angelov, S. and de Beer, P.},
  Journal                  = {Journal of Systems and Software},
  Year                     = {2017},
  Note                     = {cited By 0},
  Pages                    = {78-90},
  Volume                   = {127},

  Abstract                 = {Software architecting activities are not discussed in most agile software development methods. That is why, the combination of software architecting and agile methods has been in the focus of numerous publications. However, there is little literature on how to approach software architecting in agile projects in education. In this paper, we present our approach to the introduction of software architecting activities in an agile project course. The approach is based on literature sources and is tailored to fit our educational goals and context. The approach has been applied in two consecutive executions of the course. We observe improved understanding on the value of architecting activities and appreciation among students on the combination of architecting activities and agile development. We applied the approach predominantly in cases with an architecturally savvy Product Owner. Further research is required to understand how the approach performs in scenarios with architecturally unsavvy Product Owners and if it needs to be adapted for these scenarios. We also conclude that more research is needed on the challenges that architects face in agile projects in order to better prepare students for practice. © 2017 Elsevier Inc.},
  Author_keywords          = {Agile; Course; Project; Scrum; Software architecture; Software engineering education; Students; Teaching},
  Coden                    = {JSSOD},
  Document_type            = {Article},
  Doi                      = {10.1016/j.jss.2017.01.029},
  ISSN                     = {01641212},
  Keywords                 = {Curricula; Education; Software architecture; Software engineering; Students; Teaching, Agile; Agile development; Agile software development; Course; Educational goals; Project; Scrum; Software architecting, Software design},
  Publisher                = {Elsevier Inc.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85011930962&doi=10.1016%2fj.jss.2017.01.029&partnerID=40&md5=c21828eb0da2b567c1d68971230b4176}
}

@Conference{Anita20141454,
  Title                    = {A regression test selection technique by optimizing user stories in an Agile environment},
  Author                   = {Anita and Chauhan, N.},
  Year                     = {2014},
  Note                     = {cited By 2},
  Pages                    = {1454-1458},
  Publisher                = {IEEE Computer Society},

  Abstract                 = {An Agile framework of software development has attracted major players of the software industry. This transition of approach has caused significant changes in terms of fast delivery, less documentation, more satisfaction and more interactions. Effective handling of frequent changes during development is one of the important accepting criteria for this framework by software professionals. Frequent changes during the sprint will cause aggregation of test cases in the suite and may effect the time to delivery of product to the customer. To overcome this issue of late delivery, an approach of test case selection is proposed in this paper. This approach takes into consideration weights of the undirected graph of the group of user story in a module and optimal nature of this proposed method removes other risks of the development of the user story. © 2014 IEEE.},
  Art_number               = {6779540},
  Author_keywords          = {Agile; Optimal Connection; Regression Test Selection; Testing; Undirected Graph},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/IAdCC.2014.6779540},
  Journal                  = {Souvenir of the 2014 IEEE International Advance Computing Conference, IACC 2014},
  Keywords                 = {Optimization; Testing, Agile; Agile environment; Optimal Connection; Regression test selection; Software industry; Test case selection; Undirected graph; User stories, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84899084843&doi=10.1109%2fIAdCC.2014.6779540&partnerID=40&md5=e706e1311ecbcca0dc86100db6439999}
}

@Article{Annosi2016515,
  Title                    = {Social Conduct, Learning and Innovation: An Abductive Study of the Dark Side of Agile Software Development},
  Author                   = {Annosi, M.C. and Magnusson, M. and Martini, A. and Appio, F.P.},
  Journal                  = {Creativity and Innovation Management},
  Year                     = {2016},
  Note                     = {cited By 0},
  Number                   = {4},
  Pages                    = {515-535},
  Volume                   = {25},

  Abstract                 = {Agile methodologies have been adopted by an increasing number of organizations to improve their responsiveness. However, few studies have empirically analysed the effect of Agile on long-term organizational goals such as learning and innovation. Using an abductive approach, this study examines the relationships between self-regulated teams' social conduct and their resulting learning and innovation. Results indicate that the time pressure induced by the implementation of Agile impedes team engagement in learning and innovation activities. Time pressure is affected by a set of different control strategies, more specifically concertive, belief, diagnostic and boundary controls, and these need to be adequately addressed in order to minimize the potential dark side of Agile. © 2016 John Wiley & Sons Ltd},
  Document_type            = {Article},
  Doi                      = {10.1111/caim.12172},
  ISSN                     = {09631690},
  Publisher                = {Life Science Publishing Co. Ltd},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84962274187&doi=10.1111%2fcaim.12172&partnerID=40&md5=87cb56d88acddfdee7b49e11dc76d886}
}

@Conference{Antinyan2014154,
  Title                    = {Identifying risky areas of software code in Agile/Lean software development: An industrial experience report},
  Author                   = {Antinyan, V. and Staron, M. and Meding, W. and Österström, P. and Wikström, E. and Wranker, J. and Henriksson, A. and Hansson, J.},
  Year                     = {2014},
  Note                     = {cited By 7},
  Pages                    = {154-163},
  Publisher                = {IEEE Computer Society},

  Abstract                 = {Modern software development relies on incremental delivery to facilitate quick response to customers' requests. In this dynamic environment the continuous modifications of software code can cause risks for software developers; when developing a new feature increment, the added or modified code may contain fault-prone or difficult-to-maintain elements. The outcome of these risks can be defective software or decreased development velocity. This study presents a method to identify the risky areas and assess the risk when developing software code in Lean/Agile environment. We have conducted an action research project in two large companies, Ericsson AB and Volvo Group Truck Technology. During the study we have measured a set of code properties and investigated their influence on risk. The results show that the superposition of two metrics, complexity and revisions of a source code file, can effectively enable identification and assessment of the risk. We also illustrate how this kind of assessment can be successfully used by software developers to manage risks on a weekly basis as well as release-wise. A measurement system for systematic risk assessment has been introduced to two companies. © 2014 IEEE.},
  Art_number               = {6747165},
  Author_keywords          = {agile; correlation; metric risk; software},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/CSMR-WCRE.2014.6747165},
  Journal                  = {2014 Software Evolution Week - IEEE Conference on Software Maintenance, Reengineering, and Reverse Engineering, CSMR-WCRE 2014 - Proceedings},
  Keywords                 = {Computer software; Computer software maintenance; Correlation methods; Industry; Reengineering; Reverse engineering; Software design, agile; Continuous modification; Dynamic environments; Incremental delivery; Industrial experience; Large companies; Measurement system; Software developer, Risk assessment},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84898413196&doi=10.1109%2fCSMR-WCRE.2014.6747165&partnerID=40&md5=ce93fe5adfb24ce1c152321ca7731f86}
}

@Conference{Anwar201660,
  Title                    = {Agile adoption case study, pains, challenges \& benefits},
  Author                   = {Anwar, A. and Kamel, A.A. and Ahmed, E.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {60-65},
  Publisher                = {Association for Computing Machinery},
  Volume                   = {28-29-May-2016},

  Abstract                 = {An organization with an established process, assessed at CMMI maturity Level 3 more than 10 years ago, realized process corrosion symptoms. Over the years, changes in business conditions resulted in more and more process tailoring rules to adhere to the new needs, while maintaining the process maturity level. The increase in tailoring rules has made the process definition hard to understand with inconclusive tailoring results in some cases. This lead to major changes in the organization's process improvement strategy. To build a sound process and avoid previous improvements pitfalls, the process improvement team decided to research the applicability of process agility before adopting it. The question we tried to answer was "Can agile processes improve the organization's performance indicators while maintaining the process maturity level?" We used action research, a practical and widely used research methodology, to answer our question. We selected action research to engage process actors in the improvement and/or refinement process. In this paper, we report on our improvement efforts during the first year of deployment. This paper focuses on issues, pains and challenges we faced during the first cycle of redefining and deploying the processes to achieve the agility goals. Results from the first deployment cycle, were promising. Among other improvements, process agility reduced the rate of rework from 29% to 13%. © 2016 ACM.},
  Art_number               = {2944175},
  Author_keywords          = {Action research; Agile software development; Practical experience},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2944165.2944175},
  ISBN                     = {9781450342933},
  Journal                  = {ACM International Conference Proceeding Series},
  Keywords                 = {Process engineering; Software design, Action research; Agile software development; Business conditions; Performance indicators; Practical experience; Process definition; Process Improvement; Research methodologies, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84985916120&doi=10.1145%2f2944165.2944175&partnerID=40&md5=b95713c12a4a79e9d846e39d69ddfdd6}
}

@Article{Anwar2014265,
  Title                    = {Towards a framework for scrum handover process},
  Author                   = {Anwar, S.A. and Hafeez, Y. and Asghar, S. and Shabbir Hassan, M. and Hamid, B.},
  Journal                  = {Proceedings of the Pakistan Academy of Sciences},
  Year                     = {2014},
  Note                     = {cited By 0},
  Number                   = {4},
  Pages                    = {265-275},
  Volume                   = {51},

  Abstract                 = {In the software industry Agile development methods are in practice at very large scale because of their ability to accommodate the change, yield quick results and provide high level of customer’s satisfaction. Scrum is an agile methodology which is used for project management and software development. But release planning, documentation and scrum ceremonies are major challenges while practicing the scrum. At the completion stage of software systems, it is ready for the handover (transition) process, which is a process of transfer of responsibilities of the software system from developers to the maintainers. It is very crucial phase because smooth handover is required to avoid future problems related to the software system. This area needs to be explored more because the very little work has been done in this area. The main aim of this paper is to highlight the need of the handover process model and to suggest a framework which supports the planning and organization of handover, also provides and smooth handover process for scrum practices. We have opted the action research methodology to explore the knowledge and for developing framework. The proposed framework is evaluated through industrial experimentation and results show that the proposed solution is providing the baseline for the smooth handover of system in scrum. © Pakistan Academy of Sciences.},
  Author_keywords          = {Agile; Handover; Scrum; Transition},
  Document_type            = {Article},
  ISSN                     = {03772969},
  Publisher                = {Pakistan Academy of Sciences},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84919953475&partnerID=40&md5=6e00e94251e7f1eaeeb077113e457ac1}
}

@Conference{Apvrille201415,
  Title                    = {Towards the model-driven engineering of secure yet safe embedded systems},
  Author                   = {Apvrille, L. and Roudier, Y.},
  Year                     = {2014},
  Editor                   = {Kordy B., Pieters W., Mauw S., Pieters W.},
  Note                     = {cited By 0},
  Pages                    = {15-30},
  Publisher                = {Open Publishing Association},
  Volume                   = {148},

  Abstract                 = {We introduce SysML-Sec, a SysML-based Model-Driven Engineering environment aimed at fostering the collaboration between system designers and security experts at all methodological stages of the development of an embedded system. A central issue in the design of an embedded system is the definition of the hardware/software partitioning of the architecture of the system, which should take place as early as possible. SysML-Sec aims to extend the relevance of this analysis through the integration of security requirements and threats. In particular, we propose an agile methodology whose aim is to assess early on the impact of the security requirements and of the security mechanisms designed to satisfy them over the safety of the system. Security concerns are captured in a component-centric manner through existing SysML diagrams with only minimal extensions. After the requirements captured are derived into security and cryptographic mechanisms, security properties can be formally verified over this design. To perform the latter, model transformation techniques are implemented in the SysML-Sec toolchain in order to derive a ProVerif specification from the SysML models. An automotive firmware flashing procedure serves as a guiding example throughout our presentation. © L. Apvrille, Y. Roudier This work is licensed under the Creative Commons Attribution License.},
  Document_type            = {Conference Paper},
  Doi                      = {10.4204/EPTCS.148.2},
  ISSN                     = {20752180},
  Journal                  = {Electronic Proceedings in Theoretical Computer Science, EPTCS},
  Keywords                 = {Firmware; Graphic methods, Agile Methodologies; Hardware/software partitioning; Integration of security; Model transformation technique; Model-driven Engineering; Security mechanism; Security properties; Security requirements, Embedded systems},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84938678794&doi=10.4204%2fEPTCS.148.2&partnerID=40&md5=ec3ae23ccf37d66578fa126e9dafba72}
}

@Article{Arauz20161440,
  Title                    = {Integrating Agile Methods into a Level 5 CMMI-DEV Organization: A Case Study [Integración de Métodos Ágiles a una Empresa de Nivel 5 CMMI-DEV: un Caso de Estudio]},
  Author                   = {Arauz, G. and Morales, M. and Oktaba, H. and Ramírez, E.},
  Journal                  = {IEEE Latin America Transactions},
  Year                     = {2016},
  Note                     = {cited By 0},
  Number                   = {3},
  Pages                    = {1440-1446},
  Volume                   = {14},

  Abstract                 = {Integrating new practices into software development processes requires previous research and planning; thus, the transition becomes easier, the maturity is achieved in a gradual but constant manner, and consequently, the organization fulfills its business objectives. This paper describes the experience of a Mexican software development organization that integrated agile methods into its CMMI-DEV level 5 development processes. This case study identifies and discusses quantitative and qualitative benefits related to the competitive level of the organization, enriched ways of working, optimization of resources and time, and encouraging a motivating working environment. © 2003-2012 IEEE.},
  Art_number               = {7459632},
  Author_keywords          = {agile; CMMI; software development; software process improvement},
  Document_type            = {Article},
  Doi                      = {10.1109/TLA.2016.7459632},
  ISSN                     = {15480992},
  Keywords                 = {Software engineering, agile; Business objectives; CMMI; Development process; Software development organizations; Software development process; Software Process Improvement; Working environment, Software design},
  Publisher                = {IEEE Computer Society},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84968756371&doi=10.1109%2fTLA.2016.7459632&partnerID=40&md5=2f89f214fbe69f01b81e09a43cba357d}
}

@Conference{Asnawi2014205,
  Title                    = {Significant aspects in relation to Agile usage: Malaysian perspective},
  Author                   = {Asnawi, A.L. and Gravell, A.M. and Wills, G.B.},
  Year                     = {2014},
  Note                     = {cited By 0},
  Pages                    = {205-210},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Agile methods are an established process for developing software nowadays. There is, however, less evidence on their usage among software practitioners in Malaysia. While the methods have become mainstream in other regions, that is not the case in this country. This paper investigates important aspects in relation to Agile usage in Malaysia. The study was conducted using a questionnaire with 207 software practitioners from the country. Non parametric analysis (Chi-Square test) was conducted to investigate the relationship of Agile usage with (i) language, (ii) place of education and (iii) organization types. Results showed Agile usage has significant association with the two aspects; (i) language and (ii) organization types. It is suggested that these two aspects must be taken into consideration if one organization plans to adopt the methods. The results also revealed that many of the Agile users are not being exposed to the method before they start using it. We aim to provide knowledge and evidence on the suitability of Agile methods to the people in the country and nearby region. © 2014 IEEE.},
  Art_number               = {6914066},
  Author_keywords          = {adoption; Agile methods; Agile usage; aspects; language; sector},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICoICT.2014.6914066},
  ISBN                     = {9781479935819},
  Journal                  = {2014 2nd International Conference on Information and Communication Technology, ICoICT 2014},
  Keywords                 = {adoption; Agile methods; Agile usage; aspects; language; sector, Statistical tests},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84909952018&doi=10.1109%2fICoICT.2014.6914066&partnerID=40&md5=30b38fc02344d8f2ecc0b89fabc1b2b2}
}

@Conference{Asta201435,
  Title                    = {An investigation on test driven discrete event simulation},
  Author                   = {Asta, S. and Özcan, E. and Siebers, P.-O.},
  Year                     = {2014},
  Editor                   = {van der Zee D.-J., Monks T., Heavey C., Onggo B.S., Tjahjono B.},
  Note                     = {cited By 1},
  Pages                    = {35-45},
  Publisher                = {Operational Research Society},

  Abstract                 = {This paper deals with the application of modern software development tools on simulation development. Recently, Agile Software Development (ASD) methods enjoy an increasing popularity. eXtreme Programming (XP) techniques, one of the techniques which belong to the ASD group of methods is a software development method which improves software quality and responsiveness of software projects through introducing short development cycles and a Test Driven Development (TDD) philosophy throughout the development. In this paper, we particularly pay attention to the application of the TDD by approaching simulation development from a test-first perspective. This study consists of a feasibility study of applying the TDD technique in simulation development in its various levels, say, acceptance and unit testing. Moreover, a simulation case study of a surgical ward has been considered, designed and implemented using the AnyLogic simulation toolkit. Our study differs from the mainstream in many ways. It addresses the feasibility of Test-Driven Simulation Development in Visual Interactive Modelling and Simulation (VIMS) environments as well as providing an insight into how the test-first concept can further help with the choice of components and acceptance testing.},
  Author_keywords          = {Discrete Event Simulation; Extreme Programming; Modelling; Test-Driven Development},
  Document_type            = {Conference Paper},
  Journal                  = {2014 Operational Research Society Simulation Workshop, SW 2014},
  Keywords                 = {Application programs; Computer programming; Computer software; Computer software selection and evaluation; Discrete event simulation; Models; Software design; Software engineering; Software testing, Agile software development; EXtreme Programming; Modelling and simulations; Simulation development; Simulation toolkits; Software development methods; Software development tools; Test driven development, Acceptance tests},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84982318603&partnerID=40&md5=9d94f901b179f135a0c9f7ea42e5ecb0}
}

@Article{Athanasiou20141100,
  Title                    = {Test code quality and its relation to issue handling performance},
  Author                   = {Athanasiou, D. and Nugroho, A. and Visser, J. and Zaidman, A.},
  Journal                  = {IEEE Transactions on Software Engineering},
  Year                     = {2014},
  Note                     = {cited By 10},
  Number                   = {11},
  Pages                    = {1100-1125},
  Volume                   = {40},

  Abstract                 = {Automated testing is a basic principle of agile development. Its benefits include early defect detection, defect causelocalization and removal of fear to apply changes to the code. Therefore, maintaining high quality test code is essential. This study introduces a model that assesses test code quality by combining source code metrics that reflect three main aspects of test codequality: completeness, effectiveness and maintainability. The model is inspired by the Software Quality Model of the SoftwareImprovement Group which aggregates source code metrics into quality ratings based on benchmarking. To validate the model we assess the relation between test code quality, as measured by the model, and issue handling performance. An experiment isconducted in which the test code quality model is applied to 18 open source systems. The test quality ratings are tested for correlation with issue handling indicators, which are obtained by mining issue repositories. In particular, we study the (1) defect resolution speed, (2) throughput and (3) productivity issue handling metrics. The results reveal a significant positive correlation between test code quality and two out of the three issue handling metrics (throughput and productivity), indicating that good test code quality positively influences issue handling performance. © 2014 IEEE.},
  Art_number               = {6862882},
  Author_keywords          = {bugs; defects; measurement; metrics; Testing},
  Coden                    = {IESED},
  Document_type            = {Article},
  Doi                      = {10.1109/TSE.2014.2342227},
  ISSN                     = {00985589},
  Keywords                 = {Codes (symbols); Computer software selection and evaluation; Defects; Measurements; Open source software; Open systems; Productivity; Testing, bugs; Handling performance; Issue repositories; metrics; Open source system; Positive correlations; Software quality modeling; Source code metrics, Benchmarking},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84910632460&doi=10.1109%2fTSE.2014.2342227&partnerID=40&md5=f0f2129ad5faf7b8f06df0898961127a}
}

@Article{Atkinson2015,
  Title                    = {Foundational MDA patterns for service-oriented computing},
  Author                   = {Atkinson, C. and Bostan, P. and Draheim, D.},
  Journal                  = {Journal of Object Technology},
  Year                     = {2015},
  Note                     = {cited By 2},
  Number                   = {1},
  Volume                   = {14},

  Abstract                 = {As the foundation of EDI, B2C and B2B, distributed computing is a key enabler for today's enterprises and will become even more important with the advent of cloud computing on the one hand and an ever more agile work organization on the other hand. Whilst the rapid evolution of distributed computing technologies in the last three decades has delivered a rich set of platforms and paradigms for building robust enterprise systems, it has also left a legacy of unresolved problems including fundamental inconsistencies between the concepts of the two leading distributed computing paradigms, i.e., distributed object computing and service-oriented architecture. Equally important, there is a growing need to lower the complexities and barriers involved in developing client applications, which range from large scale business applications and business processes to laptop programs and small apps on mobile devices. In this article, we present a unified conceptual framework for service-oriented computing based on the proven MDA (Model Driven Architecture) terminology stack. With the conceptual framework we consolidate, and give semantics to, core concepts of service-oriented computing and provide a set of foundational model transformation patterns that map between the presented concepts and further clarify practical service-oriented computing scenarios. Finally, we show how the developed framework perfectly fits to the OSM (Orthographical Software Modeling) approach.},
  Author_keywords          = {Distributed computing; Model-driven development; Service-oriented architectures},
  Document_type            = {Article},
  Doi                      = {10.5381/jot.2015.14.1.a1},
  ISSN                     = {16601769},
  Page_count               = {30},
  Publisher                = {Association Internationale pour les Technologies Objets},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84928681864&doi=10.5381%2fjot.2015.14.1.a1&partnerID=40&md5=3a177ee32f24ec7560edf1c89aba4812}
}

@Article{Autili2016,
  Title                    = {Thematic series on service composition for the future internet},
  Author                   = {Autili, M. and Tivoli, M. and Goldman, A.},
  Journal                  = {Journal of Internet Services and Applications},
  Year                     = {2016},
  Note                     = {cited By 1},
  Number                   = {1},
  Volume                   = {7},

  Abstract                 = {During the last few years, there has been a growing interest around the development of new ideas envisioning the opportunities of combining Internet and Services. The “Future Internet” (FI) concept has been introduced and it is now central to several initiatives. Specifically, with respect to the Internet of Services, many research communities refer to the well-founded Service-Oriented Computing (SOC) as the reference paradigm for FI computing. SOC promotes the idea of assembling application services into a network of services that can be loosely coupled to create flexible, dynamic business processes and agile software systems, which span organizations and computing platforms. Service composition approaches will certainly have an important role in shaping the SOC within the vision of FI. Despite the great interest in Service Composition, no common foundations and principles have been established yet for the FI of Services. Developing FI applications encompasses a variety of aspects, ranging from modeling and analysis issues in the early phases of their development, to issues related to their implementation and run-time management. This thematic series brings together innovative contributions to the research and development of novel service composition approaches to assist the design, development, validation and execution of service-oriented applications for the FI. © 2016, Autili et al.},
  Art_number               = {3},
  Document_type            = {Editorial},
  Doi                      = {10.1186/s13174-016-0045-9},
  ISSN                     = {18674828},
  Publisher                = {Springer-Verlag London Ltd},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84964194298&doi=10.1186%2fs13174-016-0045-9&partnerID=40&md5=f148259a0c8d5f7b6503874d0644f7c2}
}

@Conference{Ayed201371,
  Title                    = {AM-QuICk : A measurement-based framework for Agile methods customisation},
  Author                   = {Ayed, H. and Habra, N. and Vanderose, B.},
  Year                     = {2013},
  Note                     = {cited By 2},
  Pages                    = {71-80},
  Publisher                = {IEEE Computer Society},

  Abstract                 = {Software development practitioners are increasingly interested in adopting agile methods and generally recommend customisation so that the adopted method can fit the organisational reality. Many studies from the literature report agile adoption and customisation experiences but most of them are hardly generalisable and few are metric-based. They therefore cannot provide quantitative evidence of the suitability of the customised agile method, neither assess the organisation readability to adopt it, nor help in decision-making concerning the organisation transformation strategy. In this paper, we first describe the Agile Methods Quality-Integrated Customisation framework (AM-QuICk) that relies on measurements and aims to continuously assist agile methodologists throughout the agile adoption and customisation process, i.e., during the initial organisation adoption, the method design and throughout the working development process. Then, we present a case study using AM-QuICk within an organisation. With this study, we aim to analyse the current development process and its level of agility and identify the initial risk factors. The data were collected using preliminary interviews with the different team members and two questionnaires. The results reveal that though most respondents are enthusiastic towards agile principles, a progressive transformation strategy would be beneficial. © 2013 IEEE.},
  Art_number               = {6693225},
  Author_keywords          = {Agile process assessment; Agile software development; Quality assessment modelling; Situational method engineering(SME); Software process improvement (SPI)},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/IWSM-Mensura.2013.21},
  ISBN                     = {9780769550787},
  Journal                  = {Proceedings - Joint Conference of the 23rd International Workshop on Software Measurement and the 8th International Conference on Software Process and Product Measurement, IWSM-MENSURA 2013},
  Keywords                 = {Surveys, Agile process; Agile software development; Quality assessment; Situational Method Engineering; Software process improvements, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893634744&doi=10.1109%2fIWSM-Mensura.2013.21&partnerID=40&md5=eaa8f2b9524a04acba6b0d8e9b8a4c53}
}

@Conference{Ayed201436,
  Title                    = {Supported approach for agile methods adaptation: An adoption study},
  Author                   = {Ayed, H. and Vanderose, B. and Habra, N.},
  Year                     = {2014},
  Note                     = {cited By 3},
  Pages                    = {36-41},
  Publisher                = {Association for Computing Machinery, Inc},

  Abstract                 = {Adopting agile software development methods is a wide and complex organisational change that usually impacts several aspects of the organisation (e.g., its structure, culture, management practices, produced artefacts, technologies in use, etc). In order to successfully handle the several key challenges, it's crucial to understand the organisation context and carefully study the transformation strategies. This paper presents an agile transformation experience that has been undertaken in a public organisation in Belgium and during which Scrum was applied in two pilot projects. The first project retrospective shows that the change cannot be accomplished only at the team-level without taking into account the overall structure of the organisation and that we must carefully evolve toward a context-specific adapted method. In the second pilot project, we defined structured and repeatable steps to assist the adoption of agile practices. The experience shows the usefulness of such an approach but suggests that automation efforts should be addressed. The last section of the paper summarizes the issues en- countered and presents the AM-QuICK framework [4] which aims at providing a supported approach to guide the agile adoption, adaptation and assessment.},
  Author_keywords          = {Agile Adoption; Agile Methods; Agile Process Assessment; Agile Software Development; Software Methods Customisation/Adaptation; Software Process Improvement},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2593812.2593820},
  ISBN                     = {9781450328562},
  Journal                  = {1st International Workshop on Rapid Continuous Software Engineering, RCoSE 2014 - Proceedings},
  Keywords                 = {Software design, Agile adoptions; Agile methods; Agile process; Agile software development; Customisation; Software Process Improvement, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84940682377&doi=10.1145%2f2593812.2593820&partnerID=40&md5=a02d15aba8cc93dc326b91dee82a32cf}
}

@Article{Azanha2017121,
  Title                    = {Agile project management with Scrum: A case study of a Brazilian pharmaceutical company IT project},
  Author                   = {Azanha, A. and Argoud, A.R.T.T. and de Camargo Junior, J.B. and Antoniolli, P.D.},
  Journal                  = {International Journal of Managing Projects in Business},
  Year                     = {2017},
  Note                     = {cited By 0},
  Number                   = {1},
  Pages                    = {121-142},
  Volume                   = {10},

  Abstract                 = {Purpose: The purpose of this paper is to analyze the benefits of the agile project management (APM) framework compared to the traditional waterfall model, and understand how it can help companies add value and gain competitive advantage. Design/methodology/approach: The methodology used was the exploratory qualitative research through a case study of a software project, developed with the support and application of the Scrum framework, in a pharmaceutical industry information technology project. Findings: There were benefits found in the utilization of the agile framework, such as increased motivation and staff satisfaction, better control of requirements and especially higher quality of the delivered system, generating added value to the organization. Additionally, the project allowed the use of features from the first month of the application deployed, enabling a 75 percent reduction in development time, compared to traditional methods. The software development time was four months, 30 percent of what would be the total if the traditional methodology was adopted. Based on the results, the agile framework, especially the Scrum, proved to be a viable option as a project management approach. Research limitations/implications: Since this research is an exploratory case study, its results cannot be generalized. Practical implications: The paper provides relevant practical information and experiences to managers interested in implementing APM, as well as those interested in improving the management of projects. Originality/value: This paper provides a case study with practical implications of using APM, and APM’s benefits and advantages are compared with the traditional waterfall approach. Companies can use this case study to better understand about the advantages and strengths of APM over the traditional approach. © 2017, © Emerald Publishing Limited.},
  Author_keywords          = {Agile project management; Best practices; Pharmaceutical industry; Project management; Scrum},
  Document_type            = {Article},
  Doi                      = {10.1108/IJMPB-06-2016-0054},
  ISSN                     = {17538378},
  Publisher                = {Emerald Group Publishing Ltd.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85013116308&doi=10.1108%2fIJMPB-06-2016-0054&partnerID=40&md5=d7a9c4196c2adcb95e5e8947bf2095a2}
}

@Book{Balakrishnan2016127,
  Title                    = {Design of a framework to implement agility at organizational level},
  Author                   = {Balakrishnan, J.},
  Publisher                = {IGI Global},
  Year                     = {2016},
  Note                     = {cited By 0},

  Abstract                 = {While many existing Agile product development methodologies like SCRUM, Extreme Programming (XP), Dynamic Systems Development Method (DSDM), Feature Driven Development (FDD) etc. cover aspects related to developing & delivering a product solution, they are not meant to provide an end to end framework for an organization to transition / embrace and adopt agile way of software development. For an organization's agile journey to be successful we should consider several organizational elements like how to do a business case for agile, how to build agile leadership qualities for staff at all levels (especially Managers), how to setup & govern an agile organization, how to assess an agile organization etc. © 2016 by IGI Global. All rights reserved.},
  Document_type            = {Book Chapter},
  Doi                      = {10.4018/978-1-4666-9858-1.ch007},
  ISBN                     = {9781466698598; 1466698586; 9781466698581},
  Journal                  = {Emerging Innovations in Agile Software Development},
  Pages                    = {127-140},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84981555043&doi=10.4018%2f978-1-4666-9858-1.ch007&partnerID=40&md5=b7bb6bd279c41ab203cd52f3d616f187}
}

@Conference{Basri2016380,
  Title                    = {Predicting effort for requirement changes during software development},
  Author                   = {Basri, S. and Kama, N. and Haneem, F. and Ismail, S.A.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {380-387},
  Publisher                = {Association for Computing Machinery},
  Volume                   = {08-09-December-2016},

  Abstract                 = {In any software development life cycle, requirement and software changes are inevitable. One of the factors that influences the effectiveness of the change acceptance decision is the accuracy of the effort prediction for requirement changes. There are two current models that have been widely used to predict rework effort for requirement changes which are algorithmic and nonalgorithmic models. The algorithmic model is known for its formal and structural way of prediction and best suited for Traditional software development methodology. While nonalgorithmic model is widely adopted for Agile software development methodology of software projects due to its easiness and requires less work in term of effort predictability. Nevertheless, none of the existing effort prediction models for requirement changes are proven to suit both, Traditional and Agile software development methodology. Thus, this paper proposes an algorithmic-based effort prediction model for requirement changes that uses change impact analysis method which is applicable for both Traditional and Agile software development methodologies. The proposed model uses a current selected change impact analysis method for software development phase. The proposed model is evaluated through an extensive experimental validation using case study of six real Traditional and Agile methodologies software projects. The evaluation results confirmed a significance accuracy improvement of the proposed model over the existing approaches for both Traditional and Agile methodologies. © 2016 ACM.},
  Author_keywords          = {Change Effort Estimation; Change Impact Analysis; Effort Estimation; Impact Analysis},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/3011077.3011096},
  ISBN                     = {9781450348157},
  Journal                  = {ACM International Conference Proceeding Series},
  Keywords                 = {Computer software; Forecasting; Formal methods; Life cycle; Object oriented programming; Software engineering, Agile software development; Change efforts; Change impact analysis; Effort Estimation; Experimental validations; Impact analysis; Software development life cycle; Software development methodologies, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85007560310&doi=10.1145%2f3011077.3011096&partnerID=40&md5=71a31a4c59af54efaed1d54ef4f932a8}
}

@Conference{Basri2017177,
  Title                    = {An Algorithmic-Based Change Effort Estimation Model for Software Development},
  Author                   = {Basri, S. and Kama, N. and Sarkan, H.M. and Adli, S. and Haneem, F.},
  Year                     = {2017},
  Editor                   = {Murphy G.C., Reeves S., Potanin A., Dietrich J.},
  Note                     = {cited By 0},
  Pages                    = {177-184},
  Publisher                = {IEEE Computer Society},

  Abstract                 = {Software development mostly adopts two kinds of methodologies; Traditional and Agile. In both methodologies, software changes are inevitable due to the dynamic nature of the software development project itself. One of the factors that influences the effectiveness of the change acceptance decision is the accuracy of the change effort estimation. There are two current models that have been widely used to estimate change effort which are algorithmic and non-algorithmic models. The algorithmic model is known for its formal and structural way of estimation and best suited for Traditional methodology. While non-algorithmic model is widely adopted for Agile methodology of software projects due to its easiness and requires less work in term of effort predictability. Nevertheless, none of the existing change effort estimation models are proven to suit both, Traditional and Agile methodology. Thus, this paper proposes an algorithmic-based change effort estimation model that uses change impact analysis method which is applicable for both Traditional and Agile methodologies. The proposed model uses a current selected change impact analysis method for software development phase which is the SDP-CIAF (Software Development Phase-Change Impact Analysis Framework). The proposed model is evaluated through an extensive experimental validation using case scenarios of six real Traditional and Agile methodologies software projects. The evaluation results confirmed the applicability for both Traditional and Agile methodologies. © 2016 IEEE.},
  Art_number               = {7890586},
  Author_keywords          = {Algorithmic change effort estimation; Change management; Effort estimation},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/APSEC.2016.034},
  ISBN                     = {9781509055753},
  ISSN                     = {15301362},
  Journal                  = {Proceedings - Asia-Pacific Software Engineering Conference, APSEC},
  Keywords                 = {Object oriented programming; Software engineering, Agile Methodologies; Change efforts; Change impact analysis; Change management; Effort Estimation; Evaluation results; Experimental validations; Software development projects, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85018520154&doi=10.1109%2fAPSEC.2016.034&partnerID=40&md5=76fca52a0deb850c1dcc743922bcdabb}
}

@Article{Bass20161,
  Title                    = {Artefacts and agile method tailoring in large-scale offshore software development programmes},
  Author                   = {Bass, J.M.},
  Journal                  = {Information and Software Technology},
  Year                     = {2016},
  Note                     = {cited By 5},
  Pages                    = {1-16},
  Volume                   = {75},

  Abstract                 = {Large-scale offshore software development programmes are complex, with challenging deadlines and a high risk of failure. Agile methods are being adopted, despite the challenges of coordinating multiple development teams. Agile processes are tailored to support team coordination. Artefacts are tangible products of the software development process, intended to ensure consistency in the approach of teams on the same development programme. Objective: This study aims to increase understanding of how development processes are tailored to meet the needs of large-scale offshore software development programmes, by focusing on artefact inventories used in the development process. Method: A grounded theory approach using 46 practitioner interviews, supplemented with documentary sources and observations, in nine international companies was adopted. The grounded theory concepts of open coding, memoing, constant comparison and saturation were used in data analysis. Results: The study has identified 25 artefacts, organised into five categories: Feature, sprint, release, product and corporate governance. It was discovered that conventional agile artefacts are enriched with artefacts associated with plan-based methods in order to provide governance. The empirical evidence collected in the study has been used to identify a primary owner of each artefact and map each artefact to specific activities within each of the agile roles. Conclusion: The development programmes in this study create agile and plan-based artefacts to improve compliance with enterprise quality standards and technology strategies, whilst also mitigating risk of failure. Management of these additional artefacts is currently improvised because agile development processes lack corresponding ceremonies. © 2016 Elsevier B.V. All rights reserved.},
  Author_keywords          = {Agile software development; Enterprise; Grounded theory; Large-scale; Offshore; Outsourced; Process tailoring; Scrum; Software development artefacts},
  Coden                    = {ISOTE},
  Document_type            = {Article},
  Doi                      = {10.1016/j.infsof.2016.03.001},
  ISSN                     = {09505849},
  Keywords                 = {Human resource management; Industry; Regulatory compliance; Software engineering, Agile software development; Grounded theory; Large-scale; Offshore; Outsourced; Process tailoring; Scrum, Software design},
  Publisher                = {Elsevier},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84961801757&doi=10.1016%2fj.infsof.2016.03.001&partnerID=40&md5=8aa75391276624e0c84bc6b4121cced5}
}

@Article{Batra20161,
  Title                    = {Agility Facilitators for Contemporary Software Development},
  Author                   = {Batra, D. and Xia, W. and Rathor, S.},
  Journal                  = {Journal of Database Management},
  Year                     = {2016},
  Note                     = {cited By 2},
  Number                   = {1},
  Pages                    = {1-28},
  Volume                   = {27},

  Abstract                 = {Agile software development generally refers to popular practices that are supposed to adhere to the Agile Manifesto with its values and principles. Empirical studies on agile software development have mainly focused on organizational adoption and impacts of agile practices. Furthermore, the literature on agile software development has mostly centered on small, co-located projects. However, agility is needed for software development projects of varied sizes in different organizations across industries. The general nature of agile values and principles and the procedure-driven nature of specific agile methods make it difficult for organizations to determine what they can do to effectively facilitate agility in their software development process. To bridge that literature gap and based on an evolved groundedtheory approach, this study identifies nine agility facilitators and their corresponding dimensions that extend beyond small, co-located projects to software projects of any size and distribution. These agility facilitators are further grouped into two categories: organizational foundation and project processes. In addition, the authors identify four dimensions of agility. The authors propose a framework that describes the organizational mechanisms through which the nine categories of facilitators lead to software development agility. © 2016, IGI Global.},
  Author_keywords          = {Agile manifesto; Agile principles; Agile values; Agility facilitators; Software development agility},
  Document_type            = {Article},
  Doi                      = {10.4018/JDM.2016010101},
  ISSN                     = {10638016},
  Keywords                 = {Software engineering, Agile manifesto; Agile principles; Agile values; Agility facilitators; Software development agility, Software design},
  Publisher                = {IGI Global},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84980047881&doi=10.4018%2fJDM.2016010101&partnerID=40&md5=edfc1830460639d9adefb9741a8f0c13}
}

@Conference{Behroozi2016102,
  Title                    = {Waste elimination of agile methodologies in web engineering},
  Author                   = {Behroozi, N. and Kamandi, A.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {102-107},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Agile and lean methodologies have been used for software development since the 1990s, and inspired web development, web applications and web engineering. Waste elimination is a concern because of the growth of software and web development and the budget is spent on this industry. This paper first reviews agile methodologies for web, then makes a comparison between the common methods used in web by AHP process in Expert Choice with waste approach based on a questionnaire to show the leaner methodology. Then introduces the solutions, patterns, techniques which methodologies use to affect and eliminate waste. © 2016 IEEE.},
  Art_number               = {7498453},
  Author_keywords          = {Agile; Lean; Waste; web development; web engineering},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICWR.2016.7498453},
  ISBN                     = {9781509021666},
  Journal                  = {2016 2nd International Conference on Web Research, ICWR 2016},
  Keywords                 = {Application programs; Budget control; Software design; Software engineering; Wastes, Agile; Agile Methodologies; Lean; Waste eliminations; WEB application; Web development; Web engineering, World Wide Web},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84981303147&doi=10.1109%2fICWR.2016.7498453&partnerID=40&md5=8b81716f3b1e2b353747f4528d8b07c6}
}

@Conference{Bellomo20138,
  Title                    = {Elaboration on an integrated architecture and requirement practice: Prototyping with quality attribute focus},
  Author                   = {Bellomo, S. and Nord, R.L. and Ozkaya, I.},
  Year                     = {2013},
  Note                     = {cited By 3},
  Pages                    = {8-13},

  Abstract                 = {This experience report builds on an earlier study in which we interviewed eight project teams that were using iterative incremental lifecycles. In the study, we captured the practices the teams felt contributed to rapid delivery. We identified a mix of Agile and architecture practices that teams apply to rapidly field software and minimize disruption and delay. In this paper, we elaborate one practice from the study, prototyping with quality attribute focus. We compared two experiences in prototyping focused on quality attribute considerations applied on Scrum projects. We observe through interviews that feature development and prototyping practice spans multiple levels: feature development/sprint, release planning, and portfolio planning. We also observe other factors including rapid trade-off analysis, flexible architecture, and adoption of a set of enabling prototyping guidelines. The analysis of the observations sheds light on several aspects of the practice that enable the team to respond quickly and efficiently when prototype feedback suggests architectural change. © 2013 IEEE.},
  Art_number               = {6614717},
  Author_keywords          = {agile software development; architecture; architecture trade-off; prototyping; quality attribute; release planning; requirements; software development practices},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/TwinPeaks.2013.6614717},
  ISBN                     = {9781467364393},
  Journal                  = {2013 2nd International Workshop on the Twin Peaks of Requirements and Architecture, TwinPeaks 2013 - Proceedings},
  Keywords                 = {Agile software development; Quality attributes; Release planning; requirements; Software development practices, Architecture; Software prototyping, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84886655313&doi=10.1109%2fTwinPeaks.2013.6614717&partnerID=40&md5=2f3879ac068c4de1feab0c9cc4570c30}
}

@Article{Belsis2014213,
  Title                    = {PBURC: A patterns-based, unsupervised requirements clustering framework for distributed agile software development},
  Author                   = {Belsis, P. and Koutoumanos, A. and Sgouropoulou, C.},
  Journal                  = {Requirements Engineering},
  Year                     = {2014},
  Note                     = {cited By 1},
  Number                   = {2},
  Pages                    = {213-225},
  Volume                   = {19},

  Abstract                 = {Agile software development methodologies are increasingly adopted by organizations because they focus on the client's needs, thus safeguarding business value for the final product. At the same time, as the economy and society move toward globalization, more organizations shift to distributed development of software projects. From this perspective, while adopting agile techniques seems beneficial, there are still a number of challenges that need to be addressed; among these notable is the effective cooperation between the stakeholders and the geographically distributed development team. In addition, data collection and validation for requirements engineering demands efficient processing techniques in order to handle the volume of data as well as to manage different inconsistencies, when the data are collected using online tools. In this paper, we present "PBURC," a patterns-based, unsupervised requirements clustering framework, which makes use of machine-learning methods for requirements validation, being able to overcome data inconsistencies and effectively determine appropriate requirements clusters for optimal definition of software development sprints. © 2013 Springer-Verlag London.},
  Author_keywords          = {Agile software process; Distributed software development; Requirements clustering; Requirements engineering},
  Document_type            = {Article},
  Doi                      = {10.1007/s00766-013-0172-9},
  ISSN                     = {09473602},
  Keywords                 = {Learning systems; Requirements engineering, Agile software development; Agile software process; Data inconsistencies; Distributed development; Distributed development teams; Distributed software development; Requirements clustering; Requirements validation, Software design},
  Publisher                = {Springer-Verlag London Ltd},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84900838986&doi=10.1007%2fs00766-013-0172-9&partnerID=40&md5=29a984ff182d5ef29c3451b9be8e4e30}
}

@Article{Benedicenti2016113,
  Title                    = {Supplementing agile practices with decision support methods for military software development},
  Author                   = {Benedicenti, L.},
  Journal                  = {Communications in Computer and Information Science},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {113-121},
  Volume                   = {422},

  Abstract                 = {The literature shows that under certain conditions, traditional software development processes benefit from the adoption of structured decision support methods. Agile methods usually eschew this approach in favor of a collaborative decision-making structure. In the domain of defense software, however, a hierarchical structure is inherently present. Thus, the introduction of a more structured decision support method in agile development should lead to a higher level of comfort with the products built this way. This paper provides the foundation to adopting decision support methods as derived from past experiences at the University of Regina and grounds it in the defense software domain. The paper contains findings on insertion points for decision support methods and the methodology followed to evaluate which of these methods are the most appropriate. It also summarizes the lessons learned during the work conducted at the University of Regina and in selected industrial settings. © Springer International Publishing Switzerland 2016.},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-27896-4_10},
  Editor                   = {Sillitti A., Ciancarini P., Succi G., Messina A.},
  ISBN                     = {9783319278940},
  ISSN                     = {18650929},
  Keywords                 = {Application programs; Decision making; Decision support systems; Software design, Agile development; Agile practices; Collaborative decision making; Decision supports; Hierarchical structures; Industrial settings; Software development process; Software domains, Software engineering},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958241120&doi=10.1007%2f978-3-319-27896-4_10&partnerID=40&md5=6c2458a7a5f8719359f9ab4f8cfa7b29}
}

@Conference{Bernabé2015687,
  Title                    = {Faat - Freelance as a Team},
  Author                   = {Bernabé, R.B. and Navia, Á. and García-Peñalvo, J.},
  Year                     = {2015},
  Editor                   = {Felgueiras M.C., Alves G.R.},
  Note                     = {cited By 0},
  Pages                    = {687-694},
  Publisher                = {Association for Computing Machinery},

  Abstract                 = {Agile methodologies are reliable engineering and management practices, capable of helping in the development of quality and successful software in business environments. However, most of these methodologies are centered on a development team and its internal communication. Moreover, for simplicity, a single product development is taken into account with its successive releases. There is another scenario: That of a single programmer working alone and often in much smaller projects and in several at the same time. Also in this scenario the client proximity is not as described by the agile environment ideal. In that case, the priorities and needs change, communication takes on another meaning and working mechanisms are not always comparable to that of a team. This paper introduces Faat (Freelance as a Team), a methodology specifically designed for those professionals. Integrating existing practices to the needs and possibilities of an individual programmer. However, it has been frequently considered the possible application of this methodology to small teams and/or other more general scenarios. This methodology has been tested in the web-based learning applications.},
  Author_keywords          = {Agile Methodology; Development Process; Personal Software Process},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2808580.2808685},
  ISBN                     = {9781450334426},
  Journal                  = {ACM International Conference Proceeding Series},
  Keywords                 = {E-learning; Ecology; Ecosystems, Agile Methodologies; Business environments; Development process; Internal communications; Management practices; Personal Software Process; Web based learning; Working mechanisms, Computer aided instruction},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85014762017&doi=10.1145%2f2808580.2808685&partnerID=40&md5=d86e11fa1e013682f8a14442409b1606}
}

@Article{Bider2014143,
  Title                    = {Analysis of agile software development from the knowledge transformation perspective},
  Author                   = {Bider, I.},
  Journal                  = {Lecture Notes in Business Information Processing},
  Year                     = {2014},
  Note                     = {cited By 4},
  Pages                    = {143-157},
  Volume                   = {194},

  Abstract                 = {While the Agile Software Development (ASD) has been successfully promoted in the last 15 years, there is no agreement on how to determine whether a particular project is agile or not. Some practitioners consider agility as strict usage of a specific methodology, e.g. SCRUM, others consider agility as adhering to Agile Manifesto. The lack of common view on ASD prevents creating common guidelines on when the usage of ASD is appropriate. This paper presents a model of ASD that helps to differentiate it from the traditional, phase-based development, and more strictly defines the area of its applicability. The model has been built based on the knowledge transformation perspective, as the author considers it to be the most differentiating perspective when comparing ASD to traditional software development. For building the model, the ideas from SECI model of Nonaka have been exploited. The results, in the form of requirements to be fulfilled for successful employment of ASD, are demonstrated through analysis of completed ASD projects. © Springer International Publishing Switzerland 2014.},
  Author_keywords          = {Agile; Knowledge transformation; SECI model; Software Engineering; Software project; System},
  Document_type            = {Conference Paper},
  Editor                   = {Johansson B., Andersson B., Holmberg N.},
  ISBN                     = {9783319113692},
  ISSN                     = {18651348},
  Keywords                 = {Information science; Software engineering, Agile; Knowledge transformation; SECI model; Software project; System, Software design},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84919627082&partnerID=40&md5=cb4bef74c3387a4449c6a08c4b47f1e1}
}

@Conference{Bider201370,
  Title                    = {Building a high-level process model for soliciting requirements on software tools to support software development: Experience report},
  Author                   = {Bider, I. and Karapantelakis, A. and Khadka, N.},
  Year                     = {2013},
  Editor                   = {Stirna J., Kirikova M., Zdravkovic J., Grabis J.},
  Note                     = {cited By 4},
  Pages                    = {70-82},
  Publisher                = {CEUR-WS},
  Volume                   = {1023},

  Abstract                 = {Use of software tools to support business processes is both a possibility and necessity for both large and small enterprises of today. Given the variety of tools on the market, the question of how to choose the right tools for the process in question or analyze the suitability of the tools already employed arises. The paper presents an experience report of using a high-level business process model for analyzing software tools suitability at a large ICT organization that recently transitioned to scrum-based project methodology of software development. The paper gives overview of the modeling method used, describes the organizational context, presents a model built, and discusses preliminary findings based on the analysis of the model.},
  Author_keywords          = {Business process; Business process modeling; Project management; Requirements elicitation; Scrum; Software development; Tool support},
  Document_type            = {Conference Paper},
  ISSN                     = {16130073},
  Journal                  = {CEUR Workshop Proceedings},
  Keywords                 = {Computer software; Management science; Project management; Software engineering; Systems engineering, Business Process; Business process model; Requirements elicitation; Scrum; Tool support, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84919684588&partnerID=40&md5=dab34bd1bd184a94883f8bf30d509da9}
}

@Article{Birkinshaw2014,
  Title                    = {Beware the next big thing.},
  Author                   = {Birkinshaw, J.},
  Journal                  = {Harvard business review},
  Year                     = {2014},
  Note                     = {cited By 1},
  Number                   = {5},
  Pages                    = {50-57, 134},
  Volume                   = {92},

  Abstract                 = {Innovative management ideas that bubble up in other companies pose a perennial quandary for leaders: Should you attempt to borrow new ideas, and if so, which ones and how? Even the most promising practices can be disastrous if they're transplanted into the wrong company, writes Julian Birkinshaw of London Business School. Broadly speaking, there are two ways to borrow from innovative companies, he argues. The first, observe and apply, is the most commonly used approach for adopting new management ideas. It can and does work well, but only under Limited sets of circumstances: when the observed practice easily stands alone or involves just a small constellation of supporting behaviors (think of GE's well-regarded succession-planning process) and when a company's management model or way of thinking is very similar to the originator's (think of two software firms that both use the Agile development approach). The second method is to extract a management practice's essential principle-its underlying logic-and ask a series of questions to determine if it is right for your firm, including: How is your company different from the originating firm? Are the goals of the practice important to your organization? Many management innovations are launched with great fanfare, only to fade in popularity. With careful analysis, you can avoid falling prey to this hype cycle. And even if it turns out that a borrowed idea isn't right for you, the analysis will help you better understand your own management models and sharpen your practices.},
  Document_type            = {Article},
  ISSN                     = {00178012},
  Keywords                 = {article; hospital management; human; mass communication; methodology; United States, Diffusion of Innovation; Health Facility Administration; Humans; United States},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904862463&partnerID=40&md5=fc390afac5c48584fe70d9cfb7d62162}
}

@Article{Bishop201612,
  Title                    = {On Understanding preference for agile methods among software developers},
  Author                   = {Bishop, D. and Deokar, A.V. and Sarnikar, S.},
  Journal                  = {Information Resources Management Journal},
  Year                     = {2016},
  Note                     = {cited By 0},
  Number                   = {3},
  Pages                    = {12-36},
  Volume                   = {29},

  Abstract                 = {Agile methods are gaining widespread use in industry. Although management is keen on adopting agile, not all developers exhibit preference for agile methods. The literature is sparse in regard to why developers may show preference for agile. Understanding the factors informing the preference for agile can lead to more effective formation of teams, better training approaches, and optimizing software development efforts by focusing on key desirable components of agile. This study, using a grounded theory methodology, finds a variety of categories of factors that influence software developer preference for agile methods including self-efficacy, affective response, interpersonal response, external contingencies, and personality contingencies. Each of these categories contains multiple dimensions. Preference rationalization for agile methods is the core category that emerges from the data. It informs that while the very essence of agile methods overwhelmingly and positively resonates with software developers, the preference is contingent on external and personality factors as well. Copyright © 2016, IGI Global.},
  Author_keywords          = {Agile; Grounded theory; Preference; Software developer; Software development methodology},
  Document_type            = {Article},
  Doi                      = {10.4018/IRMJ.2016070102},
  ISSN                     = {10401628},
  Keywords                 = {Software design, Agile; Grounded theory; Preference; Software developer; Software development methodologies, Software engineering},
  Publisher                = {IGI Global},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84984685512&doi=10.4018%2fIRMJ.2016070102&partnerID=40&md5=27943d822f6ee5abe0495fac7e56b817}
}

@Book{Bishop2015115,
  Title                    = {Learning organisation approach to software project management: Promoting knowledge transformation and interprofessionalism through crowd-funded agile development},
  Author                   = {Bishop, J.},
  Publisher                = {IGI Global},
  Year                     = {2015},
  Note                     = {cited By 0},

  Abstract                 = {This chapter explores how a learning organisation differs from a teaching organisation, such as that each person holds responsibility for their own learning, yet are supported and guided by those who wish to help them further their personal development. This chapter aims to develop a software project management methodology, based on existing approaches, which can accommodate all people, regardless of ability. The model developed, called the C2-Tech-S2 approach, is specifically designed for projects that use crowd-funding and agile development, particularly in environments based around the Cloud. A pilot study is carried out to demonstrate the 'technology' stage of this model for assessment using the 'support' stage. This finds that all stages of the model need to be applied in a project, because on their own the stages may not produce the most effective outcomes in terms of increased participation. © 2015, IGI Global. All rights reserved.},
  Document_type            = {Book Chapter},
  Doi                      = {10.4018/978-1-4666-8510-9.ch006},
  ISBN                     = {9781466685116; 1466685107; 9781466685109},
  Journal                  = {Achieving Enterprise Agility through Innovative Software Development},
  Pages                    = {115-140},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84957622008&doi=10.4018%2f978-1-4666-8510-9.ch006&partnerID=40&md5=766acf9babad4ab811defcd91d4954c4}
}

@Article{Bluemke201587,
  Title                    = {Experiences with DCI pattern},
  Author                   = {Bluemke, I. and Stepień, A.},
  Journal                  = {Advances in Intelligent Systems and Computing},
  Year                     = {2015},
  Note                     = {cited By 0},
  Pages                    = {87-96},
  Volume                   = {349},

  Abstract                 = {The DCI architectural pattern for software, introduced by Reenskaug, contains three parts: Data, Context and Interaction. Data represent domain knowledge while Context and Interaction represent the business logic by implementing communication between objects. Context dynamically injects roles into objects. This design pattern is especially appropriate for agile software development. The goal of our paper is to present some practical experiences with the DCI design pattern. We used the DCI pattern in an exemplary application. We proposed and described the association and cooperation between the DCI and MVC (Model View Controller) pattern. Some remarks on the usage of the DCI design pattern in the software development are also given. © Springer International Publishing Switzerland 2015.},
  Author_keywords          = {DCI; Design patterns; MVC},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-18473-9_9},
  Editor                   = {Silhavy R., Senkerik R., Oplatkova Z.K., Prokopova Z., Silhavy P.},
  ISBN                     = {9783319184722},
  ISSN                     = {21945357},
  Keywords                 = {Computer software; Design; Intelligent systems; Software architecture; Software engineering, Agile software development; Architectural pattern; DCI; Design Patterns; Domain knowledge; Model view controller; MVC; Practical experience, Software design},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84942766001&doi=10.1007%2f978-3-319-18473-9_9&partnerID=40&md5=8068668e7f968af76f3199593ab56573}
}

@Book{Book20161,
  Title                    = {Tamed agility: Pragmatic contracting and collaboration in agile software projects},
  Author                   = {Book, M. and Gruhn, V. and Striemer, R.},
  Publisher                = {Springer International Publishing},
  Year                     = {2016},
  Note                     = {cited By 0},

  Abstract                 = {This book describes pragmatic instruments and methods that enable business experts and software engineers to develop a common understanding of the software to be created, to determine their key requirements, and to manage the project in a way that fosters trust, encourages innovation and distributes risk fairly between clients and contractors. After an introduction to the fundamentals of agile software development in Part I, Part II describes the Interaction Room, an actual room where digitalization and mobilization strategies are developed, where technology potentials are evaluated, where software projects are planned and managed, and where business and technical stakeholders can communicate face to face, visualize complex relationships intuitively, and highlight value, effort and risk drivers that are keys to the project’s success. After addressing these constructive aspects, the book focuses on the commercial aspects of software development: The adVANTAGE contract model described in Part III ensures that the insight-driven innovation process of software development does not just function, but is allowed to flourish in a trusted client-contractor relationship. Even though software contracting and construction may be grounded in two different academic disciplines, they are inseparable in practice, and how they interact is illustrated in the case study of developing a private health insurance benefit system in Part IV. Ultimately though, the success of every software project depends on the skills of the stakeholders. Part V therefore describes the qualification profile that software engineers and domain experts have to satisfy today. This book is aimed at CIOs, project managers and software engineers in industrial software development practice who want to learn how to effectively deal with the inevitable uncertainty of complex projects, who want to achieve higher levels of understanding and cooperation in their relationships with clients and contractors, and who want to run lower-risk software projects despite their inherent uncertainties. © Springer International Publishing Switzerland 2016.},
  Document_type            = {Book},
  Doi                      = {10.1007/978-3-319-41478-2},
  ISBN                     = {9783319414782; 9783319414768},
  Journal                  = {Tamed Agility: Pragmatic Contracting and Collaboration in Agile Software Projects},
  Pages                    = {1-334},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85017089395&doi=10.1007%2f978-3-319-41478-2&partnerID=40&md5=e422fd0151d98070165ee1582268e4bb}
}

@Article{Borio2015,
  Title                    = {Robust spectrum sensing demonstration using a low-cost front-end receiver},
  Author                   = {Borio, D. and Angiuli, E. and Giuliani, R. and Baldini, G.},
  Journal                  = {International Journal of Antennas and Propagation},
  Year                     = {2015},
  Note                     = {cited By 0},
  Volume                   = {2015},

  Abstract                 = {Spectrum Sensing (SS) is an important function in Cognitive Radio (CR) to detect primary users. The design of SS algorithms is one of the most challenging tasks in CR and requires innovative hardware and software solutions to enhance detection probability and minimize low false alarm probability. Although several SS algorithms have been developed in the specialized literature, limited work has been done to practically demonstrate the feasibility of this function on platforms with significant computational and hardware constraints. In this paper, SS is demonstrated using a low cost TV tuner as agile front-end for sensing a large portion of the Ultra-High Frequency (UHF) spectrum. The problems encountered and the limitations imposed by the front-end are analysed along with the solutions adopted. Finally, the spectrum sensor developed is implemented on an Android device and SS implementation is demonstrated using a smartphone. © 2015 Daniele Borio et al.},
  Art_number               = {464982},
  Document_type            = {Article},
  Doi                      = {10.1155/2015/464982},
  ISSN                     = {16875869},
  Keywords                 = {Balloons; Hardware, Detection probabilities; False alarm probability; Front-end receiver; Hardware and software; Hardware constraints; Robust spectrum sensing; Spectrum sensing; Ultra-high frequency, Cognitive radio},
  Publisher                = {Hindawi Publishing Corporation},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84939863863&doi=10.1155%2f2015%2f464982&partnerID=40&md5=69f5ded6f05ff803f7f3bdc236aa1711}
}

@Conference{Borrego201669,
  Title                    = {Condensing architectural knowledge from unstructured textual media in agile GSD teams},
  Author                   = {Borrego, G.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {69-72},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Agile Global Software Development (AGSD) is a reality, since nowadays software products are required to get into the market with more speed than before. This situation has pushed Global Software Development (GSD) companies to adopt lighter ways to develop software (Agile Software Development - ASD) to satisfy market demands. However, AGSD companies have encountered increased technical debt and architectural knowledge (AK) vaporization, mainly because the inherent differences between ASD and GSD, especially in documentation handling. This paper describes a research project in which it is proposed to exploit the AK that is recorded in unstructured textual electronic media (UTEM) generally used in AGSD, in order to decrease the problems of software evolution and maintenance, caused by a lack of adequate AK. Until now, the preliminary results of this research show that this approach could be feasible in AGSD environments. © 2016 IEEE.},
  Art_number               = {7579489},
  Author_keywords          = {Agile global software development; Architectural knowledge; Architectural knowledge vaporization; Technical debt, architectural knowledge condensation; Unstructured textual media},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICGSEW.2016.16},
  ISBN                     = {9781509036257},
  Journal                  = {Proceedings - 11th IEEE International Conference on Global Software Engineering Companion Proceedings, ICGSEW 2016},
  Keywords                 = {Commerce; Software architecture; Software engineering; Vaporization, Agile software development; Architectural knowledge; Electronic media; Global software development; Software evolution and maintenances; Software products; Technical debts; Unstructured textual media, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84994680397&doi=10.1109%2fICGSEW.2016.16&partnerID=40&md5=31ffa537184747406cd512c03eaad665}
}

@Book{Bosch20141,
  Title                    = {Continuous software engineering},
  Author                   = {Bosch, J.},
  Publisher                = {Springer International Publishing},
  Year                     = {2014},
  Note                     = {cited By 14},

  Abstract                 = {This book provides essential insights on the adoption of modern software engineering practices at large companies producing software-intensive systems, where hundreds or even thousands of engineers collaborate to deliver on new systems and new versions of already deployed ones. It is based on the findings collected and lessons learned at the Software Center (SC), a unique collaboration between research and industry, with Chalmers University of Technology, Gothenburg University and Malmö University as academic partners and Ericsson, AB Volvo, Volvo Car Corporation, Saab Electronic Defense Systems, Grundfos, Axis Communications, Jeppesen (Boeing) and Sony Mobile as industrial partners. The 17 chapters present the "Stairway to Heaven" model, which represents the typical evolution path companies move through as they develop and mature their software engineering capabilities. The chapters describe theoretical frameworks, conceptual models and, most importantly, the industrial experiences gained by the partner companies in applying novel software engineering techniques. The book's structure consists of six parts. Part I describes the model in detail and presents an overview of lessons learned in the collaboration between industry and academia. Part II deals with the first step of the Stairway to Heaven, in which R&D adopts agile work practices. Part III of the book combines the next two phases, i.e., continuous integration (CI) and continuous delivery (CD), as they are closely intertwined. Part IV is concerned with the highest level, referred to as "R&D as an innovation system," while Part V addresses a topic that is separate from the Stairway to Heaven and yet critically important in large organizations: organizational performance metrics that capture data, and visualizations of the status of software assets, defects and teams. Lastly, Part VI presents the perspectives of two of the SC partner companies. The book is intended for practitioners and professionals in the software-intensive systems industry, providing concrete models, frameworks and case studies that show the specific challenges that the partner companies encountered, their approaches to overcoming them, and the results. Researchers will gain valuable insights on the problems faced by large software companies, and on how to effectively tackle them in the context of successful cooperation projects. © 2014 Springer International Publishing Switzerland. All rights reserved.},
  Document_type            = {Book},
  Doi                      = {10.1007/978-3-319-11283-1},
  ISBN                     = {9783319112831; 3319112821; 9783319112824},
  Journal                  = {Continuous software engineering},
  Pages                    = {1-226},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84930742728&doi=10.1007%2f978-3-319-11283-1&partnerID=40&md5=986acdb5dd42bb1cf9a4bf7e3de24141}
}

@Conference{Bosníc2015,
  Title                    = {Introducing SCRUM into a distributed software development course},
  Author                   = {Bosníc, I. and Ciccozzi, F. and Čavrak, I. and Di Nitto, E. and Feljan, J. and Mirandola, R.},
  Year                     = {2015},
  Note                     = {cited By 0},
  Publisher                = {Association for Computing Machinery},
  Volume                   = {07-11-September-2015},

  Abstract                 = {The growing enactment of Global Software Engineering in industry has triggered educational institutions to perceive the importance of preparing students for distributed software development. During the last twelve years we have disclosed advantages and pitfalls of GSE to our students through our Distributed Software Development course. After running the projects according to the iterative process model for eleven years, we decided to shift to an agile development model, SCRUM. This decision was due to the growing industrial adoption of agile methods, but more importantly to increase proactiveness, sense of responsibility, and to balance the workload among the project team members. In this paper we describe the process and outcomes of our first attempt at introducing SCRUM in our distributed course. © 2015 ACM.},
  Art_number               = {a34},
  Author_keywords          = {Agile methods; Distributed software development; Education; Global Software Engineering; SCRUM},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2797433.2797469},
  ISBN                     = {9781450333931},
  Journal                  = {ACM International Conference Proceeding Series},
  Keywords                 = {Curricula; Education; Education computing; Iterative methods; Software architecture; Software engineering; Students, Advantages and pitfalls; Agile methods; Distributed software development; Educational institutions; Global software engineering; Industrial adoption; Iterative process model; SCRUM, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958536298&doi=10.1145%2f2797433.2797469&partnerID=40&md5=f16e1053c23e863077b5890cddf758dd}
}

@Conference{Bougroun2015174,
  Title                    = {The projection of the specific practices of the third level of CMMI model in agile methods: Scrum, XP and Kanban},
  Author                   = {Bougroun, Z. and Zeaaraoui, A. and Bouchentouf, T.},
  Year                     = {2015},
  Editor                   = {Chahhou M., El Mohajir M., Al Achhab M.},
  Note                     = {cited By 3},
  Number                   = {January},
  Pages                    = {174-179},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},
  Volume                   = {2015-January},

  Abstract                 = {Most large companies have adopted CMMI in order to improve software quality, reduce the budget, and have customer satisfaction. But since the advent of agile methods, companies are looking to integrate these methods for software development. To adopt these methods in the project we need to know if they cover a part of CMMI. In this paper we present the CMMI model and Scrum XP and Kanban methods, than we make the mapping between these methods and CMMI level 3. The merge of the three methods covers 58% of process quality of the CMMI model level three. © 2014 IEEE.},
  Art_number               = {7016614},
  Author_keywords          = {agile methods; CMMI; Kanban; Scrum; XP},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/CIST.2014.7016614},
  ISSN                     = {2327185X},
  Journal                  = {Colloquium in Information Science and Technology, CIST},
  Keywords                 = {Budget control; Computer software selection and evaluation; Customer satisfaction; Information science; Software design, Agile methods; CMMI; Kanban; Scrum; XP, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84938076471&doi=10.1109%2fCIST.2014.7016614&partnerID=40&md5=29a56db36cb78d51f7d865aa4587ea73}
}

@Book{Brambilla20141,
  Title                    = {Interaction Flow Modeling Language: Model-Driven UI Engineering of Web and Mobile Apps with IFML},
  Author                   = {Brambilla, M. and Fraternali, P.},
  Publisher                = {Elsevier Inc.},
  Year                     = {2014},
  Note                     = {cited By 13},

  Abstract                 = {Interaction Flow Modeling Language describes how to apply model-driven techniques to the problem of designing the front end of software applications, i.e., the user interaction. The book introduces the reader to the novel OMG standard Interaction Flow Modeling Language (IFML). Authors Marco Brambilla and Piero Fraternali are authors of the IFML standard and wrote this book to explain the main concepts of the language. They effectively illustrate how IFML can be applied in practice to the specification and implementation of complex web and mobile applications, featuring rich interactive interfaces, both browser based and native, client side components and widgets, and connections to data sources, business logic components and services. Interaction Flow Modeling Language provides you with unique insight into the benefits of engineering web and mobile applications with an agile model driven approach. Concepts are explained through intuitive examples, drawn from real-world applications. The authors accompany you in the voyage from visual specifications of requirements to design and code production. The book distills more than twenty years of practice and provides a mix of methodological principles and concrete and immediately applicable techniques. • Learn OMG's new IFML standard from the authors of the standard with this approachable reference • Introduces IFML concepts step-by-step, with many practical examples and an end-to-end case example • Shows how to integrate IFML with other OMG standards including UML, BPMN, CWM, SoaML and SysML • Discusses how to map models into code for a variety of web and mobile platforms and includes many useful interface modeling patterns and best practices. © 2015 Elsevier Inc. All rights reserved.},
  Document_type            = {Book},
  Doi                      = {10.1016/C2013-0-15398-6},
  ISBN                     = {9780128005323; 9780128001080},
  Journal                  = {Interaction Flow Modeling Language: Model-Driven UI Engineering of Web and Mobile Apps with IFML},
  Pages                    = {1-408},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84910605779&doi=10.1016%2fC2013-0-15398-6&partnerID=40&md5=ca441a8148635a3961d0daf7d0e18ca9}
}

@Article{Brandtner201597,
  Title                    = {SQA-Mashup: A mashup framework for continuous integration},
  Author                   = {Brandtner, M. and Giger, E. and Gall, H.},
  Journal                  = {Information and Software Technology},
  Year                     = {2015},
  Note                     = {cited By 2},
  Pages                    = {97-113},
  Volume                   = {65},

  Abstract                 = {Context Continuous Integration (CI) has become an established best practice of modern software development. Its philosophy of regularly integrating the changes of individual developers with the master code base saves the entire development team from descending into Integration Hell, a term coined in the field of extreme programming. In practice, CI is supported by automated tools to cope with this repeated integration of source code through automated builds and testing. One of the main problems, however, is that relevant information about the quality and health of a software system is both scattered across those tools and across multiple views. Objective This paper introduces a quality awareness framework for CI-data and its conceptional model used for the data integration and visualization. The framework called SQA-Mashup makes use of the service-based mashup paradigm and integrates information from the entire CI-toolchain into a single service. Method The research approach followed in our work consists out of (i) a conceptional model for data integration and visualization, (ii) a prototypical framework implementation based on tool requirements derived from literature, and (iii) a controlled user study to evaluate its usefulness. Results The results of the controlled user study showed that SQA-Mashup's single point of access allows users to answer questions regarding the state of a system more quickly (57%) and accurately (21.6%) than with standalone CI-tools. Conclusions The SQA-Mashup framework can serve as one-stop shop for software quality data monitoring in a software development project. It enables easy access to CI-data which otherwise is not integrated but scattered across multiple CI-tools. Our dynamic visualization approach allows for a tailoring of integrated CI-data according to information needs of different stakeholders such as developers or testers. © 2014 Elsevier B.V. All rights reserved.},
  Author_keywords          = {Continuous integration; Controlled user study; Information needs; Software quality; Tool integration},
  Coden                    = {ISOTE},
  Document_type            = {Article},
  Doi                      = {10.1016/j.infsof.2014.10.004},
  ISSN                     = {09505849},
  Keywords                 = {Computer software selection and evaluation; Data visualization; Information science; Integration testing; Quality control; Software design; Software engineering; Visualization, Continuous integrations; Information needs; Software Quality; Tool integration; User study, Data integration},
  Publisher                = {Elsevier},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84929515444&doi=10.1016%2fj.infsof.2014.10.004&partnerID=40&md5=fa4b0c2a468887ef9d54166414aad955}
}

@Conference{Branham2015,
  Title                    = {My reviewers: Participatory design \& crowd-sourced usability processes},
  Author                   = {Branham, C. and Moxley, J. and Ross, V.},
  Year                     = {2015},
  Note                     = {cited By 1},
  Publisher                = {Association for Computing Machinery, Inc},

  Abstract                 = {This paper explores the benefits and consequences of employing crowd-sourced development and usability processes during the early stages of a software-development project. Our context is My Reviewers, a suite of web-based tools designed to facilitate document markup, team projects, peer review, e-portfolio review, and writing-program assessment. Since 2009, WPAs (Writing Program Administrators) at USF (University of South Florida) have been collaborating with instructors at USF as well as with WPAs and instructors at other colleges and universities to develop My Reviewers. To illustrate our development and usability processes and to highlight the benefits of working with diverse institutions, we provide a case study of a USF and University of Pennsylvania collaboration to develop e-portfolio tools. We conclude by noting ways our usability processes have matured along with the tool, including adoption of more traditional SCRUM methods and Microsoft Team Foundation Server. © 2015 ACM.},
  Art_number               = {26},
  Author_keywords          = {Digital writing tools; Project management; Usability; User experience},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2775441.2775482},
  ISBN                     = {9781450336482},
  Journal                  = {SIGDOC 2015 - Proceedings of the 33rd Annual International Conference on the Design of Communication},
  Keywords                 = {Project management; Societies and institutions; Software engineering; Usability engineering; Windows operating system, Colleges and universities; Participatory design; Program assessment; Software development projects; Usability; User experience; Web-based tools; Writing tools, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84961718024&doi=10.1145%2f2775441.2775482&partnerID=40&md5=7b1645609992ec4b6770b7efec7665a4}
}

@Article{Bridge2014159,
  Title                    = {The development and evaluation of a medical imaging training immersive environment},
  Author                   = {Bridge, P. and Gunn, T. and Kastanis, L. and Pack, D. and Rowntree, P. and Starkey, D. and Mahoney, G. and Berry, C. and Braithwaite, V. and Wilson-Stewart, K.},
  Journal                  = {Journal of Medical Radiation Sciences},
  Year                     = {2014},
  Note                     = {cited By 2},
  Number                   = {3},
  Pages                    = {159-165},
  Volume                   = {61},

  Abstract                 = {Introduction: A novel realistic 3D virtual reality (VR) application has been developed to allow medical imaging students at Queensland University of Technology to practice radiographic techniques independently outside the usual radiography laboratory. Methods: A flexible agile development methodology was used to create the software rapidly and effectively. A 3D gaming environment and realistic models were used to engender presence in the software while tutor-determined gold standards enabled students to compare their performance and learn in a problem-based learning pedagogy. Results: Students reported high levels of satisfaction and perceived value and the software enabled up to 40 concurrent users to prepare for clinical practice. Student feedback also indicated that they found 3D to be of limited value in the desktop version compared to the usual 2D approach. A randomised comparison between groups receiving software-based and traditional practice measured performance in a formative role play with real equipment. The results of this work indicated superior performance with the equipment for the VR trained students (P = 0.0366) and confirmed the value of VR for enhancing 3D equipment-based problem-solving skills. Conclusions: Students practising projection techniques virtually performed better at role play assessments than students practising in a traditional radiography laboratory only. The application particularly helped with 3D equipment configuration, suggesting that teaching 3D problem solving is an ideal use of such medical equipment simulators. Ongoing development work aims to establish the role of VR software in preparing students for clinical practice with a range of medical imaging equipment. © 2014 The Authors.},
  Author_keywords          = {Evaluation; Medical imaging; Simulation; Virtual reality},
  Document_type            = {Article},
  Doi                      = {10.1002/jmrs.60},
  ISSN                     = {20513895},
  Keywords                 = {article; clinical practice; computer program; computer simulation; conceptual framework; diagnostic imaging; evaluation study; human; pedagogics; performance; priority journal; quantitative analysis; student satisfaction; training; virtual reality},
  Publisher                = {John Wiley and Sons Ltd},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84942077220&doi=10.1002%2fjmrs.60&partnerID=40&md5=1f7db2d6e0df34e9c75d2e59383f5e53}
}

@Book{Brown2013,
  Title                    = {Agile User Experience Design},
  Author                   = {Brown, D.},
  Publisher                = {Elsevier Inc.},
  Year                     = {2013},
  Note                     = {cited By 2},

  Abstract                 = {Being able to fit design into the Agile software development processes is an important skill in today's market. There are many ways for a UX team to succeed (and fail) at being Agile. This book provides you with the tools you need to determine what Agile UX means for you. It includes practical examples and case studies, as well as real-life factors to consider while navigating the Agile UX waters. You'll learn about what contributes to your team's success, and which factors to consider when determining the best path for getting there. After reading this book, you'll have the knowledge to improve your software and product development with Agile processes quickly and easily. Includes hands on, real-world examples to illustrate the successes and common pitfalls of Agile UX Introduces practical techniques that can be used on your next project Details how to incorporate user experience design into your company's agile software/product process. © 2013 Elsevier Inc. All rights reserved.},
  Document_type            = {Book},
  Doi                      = {10.1016/C2011-0-06229-4},
  ISBN                     = {9780124159532},
  Journal                  = {Agile User Experience Design},
  Page_count               = {176},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85013704569&doi=10.1016%2fC2011-0-06229-4&partnerID=40&md5=1fef8abe9300c52a0eb509faa0e276d3}
}

@Conference{Brucker201491,
  Title                    = {Deploying static application security testing on a large scale},
  Author                   = {Brucker, A.D. and Sodan, U.},
  Year                     = {2014},
  Editor                   = {Katzenbeisser S., Lotz V., Weippl E.},
  Note                     = {cited By 3},
  Pages                    = {91-101},
  Publisher                = {Gesellschaft fur Informatik (GI)},
  Volume                   = {P-228},

  Abstract                 = {Static Code Analysis (SCA), if used for finding vulnerabilities also called Static Application Security Testing (SAST), is an important technique for detecting software vulnerabilities already at an early stage in the software development lifecycle. As such, SCA is adopted by an increasing number of software vendors. The wide-spread introduction of SCA at a large software vendor, such as SAP, creates both technical as well as non-technical challenges. Technical challenges include high false positive and false negative rates. Examples of non-technical challenges are the insufficient security awareness among the developers and managers or the integration of SCA into a software development life-cycle that facilitates agile development. Moreover, software is not developed following a greenfield approach: SAP's security standards need to be passed to suppliers and partners in the same manner as SAP's customers begin to pass their security standards to SAP. In this paper, we briefly present how the SAP's Central Code Analysis Team introduced SCA at SAP and discuss open problems in using SCA both inside SAP as well as across the complete software production line, i. e., including suppliers and partners.},
  Document_type            = {Conference Paper},
  ISBN                     = {9783885796220},
  ISSN                     = {16175468},
  Journal                  = {Lecture Notes in Informatics (LNI), Proceedings - Series of the Gesellschaft fur Informatik (GI)},
  Keywords                 = {Application programs; Computer software; Life cycle; Software engineering; Software testing; Supply chains, Application security; False positive and false negatives; Security awareness; Software development life cycle; Software production; Software vulnerabilities; Static code analysis; Technical challenges, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84922335833&partnerID=40&md5=54e6e84316c247b343eff0fee39e547f}
}

@Article{Bruegge2015,
  Title                    = {Software engineering project courses with industrial clients},
  Author                   = {Bruegge, B. and Krusche, S. and Alperowitz, L.},
  Journal                  = {ACM Transactions on Computinig Education},
  Year                     = {2015},
  Note                     = {cited By 12},
  Number                   = {4},
  Volume                   = {15},

  Abstract                 = {There is an acknowledged need for teaching realistic software development in project courses. The design space for such courses is wide, ranging from single-semester to two-semester courses, from single-client to multicustomer courses, from local to globally distributed courses, and from toy projects to projects with real clients. The challenge for a nontrivial project course is how to make the project complex enough to enrich students' software engineering experience, yet realistic enough to have a teaching environment that does not unduly burden students or the instructor. We describe a methodology for project courses that is realizable for instructors, improves students' skills, and leads to viable results for industry partners. In particular, recent advances in release management and collaboration workflows reduce the effort of students and instructors during delivery and increase the quality of the deliverables. To enable release and feedback management, we introduce Rugby, an agile process model based on Scrum that allows reacting to changing requirements. To improve early communication, we use Tornado, a scenario-based design approach that emphasizes the use of informalmodels for the interaction between clients and students. The combination of Rugby and Tornado allows students to deal with changing requirements, produce multiple releases, and obtain client feedback through the duration of the course. We describe our experience with more than 300 students working on 40 projects with external clients over a 4-year period. In the latest instance of our course, the students have produced more than 7000 builds with 600 releases for eleven clients. In an evaluation of the courses, we found that the introduction of Rugby and Tornado significantly increased students' technical skills, especially with respect to software engineering, usability engineering, and configuration management, as well as their nontechnical skills such as communication with the client, teamwork, presentation, and demo management. Finally, we discuss how other instructors can adapt the course concept. Copyright © 2015 ACM.},
  Art_number               = {17},
  Author_keywords          = {Agile methods; Communication models; Continuous delivery; Continuous integration; Executable prototypes; Feedback; Informal modeling; Prototyping; Release management; Scenario-based design; Scrum; Unified Process; User involvement; Version control system},
  Document_type            = {Article},
  Doi                      = {10.1145/2732155},
  ISSN                     = {19466226},
  Keywords                 = {Curricula; Education; Feedback; Human resource management; Software design; Software engineering; Software prototyping; Students; Tornadoes; Usability engineering, Agile methods; Communication models; Continuous delivery; Continuous integrations; Executable prototypes; Release management; Scenario-based design; Scrum; Unified process; User involvement; Version control system, Teaching},
  Publisher                = {Association for Computing Machinery},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84954327014&doi=10.1145%2f2732155&partnerID=40&md5=e07b2b904f5eb7dda3da6a5eadc4e851}
}

@Conference{Bruneo2014,
  Title                    = {CloudWave: Where adaptive cloud management meets DevOps},
  Author                   = {Bruneo, D. and Fritz, T. and Keidar-Barner, S. and Leitner, P. and Longo, F. and Marquezan, C. and Metzger, A. and Pohl, K. and Puliafito, A. and Raz, D. and Roth, A. and Salant, E. and Segall, I. and Villari, M. and Wolfsthal, Y. and Woods, C.},
  Year                     = {2014},
  Note                     = {cited By 13},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},
  Volume                   = {Workshops},

  Abstract                 = {The transition to cloud computing offers a large number of benefits, such as lower capital costs and a highly agile environment. Yet, the development of software engineering practices has not kept pace with this change. Moreover, the design and runtime behavior of cloud based services and the underlying cloud infrastructure are largely decoupled from one another.This paper describes the innovative concepts being developed by CloudWave to utilize the principles of DevOps to create an execution analytics cloud infrastructure where, through the use of programmable monitoring and online data abstraction, much more relevant information for the optimization of the ecosystem is obtained. Required optimizations are subsequently negotiated between the applications and the cloud infrastructure to obtain coordinated adaption of the ecosystem. Additionally, the project is developing the technology for a Feedback Driven Development Standard Development Kit which will utilize the data gathered through execution analytics to supply developers with a powerful mechanism to shorten application development cycles. © 2014 IEEE.},
  Art_number               = {6912638},
  Author_keywords          = {Cloud Computing; Coordinated Adaptation; DevOps; Feedback Driven Development},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ISCC.2014.6912638},
  ISBN                     = {9781479942770},
  ISSN                     = {15301346},
  Journal                  = {Proceedings - International Symposium on Computers and Communications},
  Keywords                 = {Cloud managements; Coordinated Adaptation; DevOps, Cloud computing},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84908149098&doi=10.1109%2fISCC.2014.6912638&partnerID=40&md5=ab47a4d28e308f6cb7ff507d118eb7eb}
}

@Article{Buchan2014165,
  Title                    = {An Empirical Cognitive Model of the Development of Shared Understanding of Requirements},
  Author                   = {Buchan, J.},
  Journal                  = {Communications in Computer and Information Science},
  Year                     = {2014},
  Note                     = {cited By 0},
  Pages                    = {165-179},
  Volume                   = {432 CCIS},

  Abstract                 = {It is well documented that customers and software development teams need to share and refine understanding of the requirements throughout the software development lifecycle. The development of this shared understanding is complex and error-prone however. Techniques and tools to support the development of a shared understanding of requirements (SUR) should be based on a clear conceptualization of the phenomenon, with a basis on relevant theory and analysis of observed practice. This study contributes to this with a detailed conceptualization of SUR development as sequence of group-level state transitions based on specializing the Team Mental Model construct. Furthermore it proposes a novel group-level cognitive model as the main result of an analysis of data collected from the observation of an Agile software development team over a period of several months. The initial high-level application of the model shows it has promise for providing new insights into supporting SUR development. © Springer-Verlag Berlin Heidelberg 2014.},
  Author_keywords          = {Distributed cognition; Requirements understanding; shared cognition; Team Mental Model},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-662-43610-3_13},
  ISBN                     = {9783662436097},
  ISSN                     = {18650929},
  Keywords                 = {Requirements engineering, Agile software development; Distributed cognition; High level applications; Requirements understanding; Shared cognition; Software development life cycle; Software development teams; Team mental models, Software design},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904716926&doi=10.1007%2f978-3-662-43610-3_13&partnerID=40&md5=bf9c1c951db3f39ee74e7b8438e5275a}
}

@Conference{Buglione201349,
  Title                    = {Improving the user story Agile technique using the INVEST criteria},
  Author                   = {Buglione, L. and Abran, A.},
  Year                     = {2013},
  Note                     = {cited By 6},
  Pages                    = {49-53},
  Publisher                = {IEEE Computer Society},

  Abstract                 = {Although the Agile Software Development (ADS) approach has been around for the last 15 years, it is only recently that attention has moved towards Agile Software Management (ASM) for tackling some of the managementrelated weaknesses, such as estimating on the basis of User Story points. This paper presents an application of the INVEST criteria (Independent - Negotiable - Valuable - Estimable - Small - Testable) for improving the measurement technique of User Stories, introducing sizing units and a technique to negotiate requirements. It includes a discussion on an approach to balancing the six criteria used to evaluate a set of User Stories in a Sprint. © 2013 IEEE.},
  Art_number               = {6693222},
  Author_keywords          = {Agile; Estimation; INVEST; Requirements; Story points; User story},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/IWSM-Mensura.2013.18},
  ISBN                     = {9780769550787},
  Journal                  = {Proceedings - Joint Conference of the 23rd International Workshop on Software Measurement and the 8th International Conference on Software Process and Product Measurement, IWSM-MENSURA 2013},
  Keywords                 = {Estimation; Measurements, Agile; INVEST; Requirements; Story points; User stories, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893625938&doi=10.1109%2fIWSM-Mensura.2013.18&partnerID=40&md5=c6ce954291736eaf9db1188c4f2235cf}
}

@Conference{Burden2014,
  Title                    = {Comparing and contrasting model-driven engineering at three large companies},
  Author                   = {Burden, H. and Heldal, R. and Whittle, J.},
  Year                     = {2014},
  Note                     = {cited By 9},
  Publisher                = {IEEE Computer Society},

  Abstract                 = {Context: Hutchinson et al. conducted an interview-based study of how model-driven engineering, MDE, is practiced in 17 companies. Their results include that successful MDE companies develop domain-specific languages; are motivated by a clear business case; and are committed at all levels of the organization. Goal: Whilst the results are useful, the study is a very broad one, with one or two interviewees per company. This paper supplements Hutchinson's study by focusing on three large companies that are applying MDE and undergoing a parallel transition to agile methods. Method: Formal data collection strategies - 25 semi-structured interviews, observations and progress meetings - were combined with informal interaction. The data was analysed both inductively for new insights and deductively for comparison with the results of Hutchinson et al. Results: Our findings show how MDE can include domain experts in software development and how agile development and MDE can coexist. In general our results validate the findings of Hutchinson et al. There are two areas where our results differ - the engineers' sense of control and the appropriateness of their skills and training. Conclusions: Using a combination of data collection strategies and analysis techniques our study casts new light on earlier research as well as contributes with novel insights regarding the adoption of MDE. © 2014 ACM.},
  Art_number               = {a14},
  Author_keywords          = {agile practices; case study; inductive and deductive analysis},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2652524.2652527},
  ISBN                     = {9781450327749},
  ISSN                     = {19493770},
  Journal                  = {International Symposium on Empirical Software Engineering and Measurement},
  Keywords                 = {Agile practices; inductive and deductive analysis; Large companies; Model-driven Engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84907855195&doi=10.1145%2f2652524.2652527&partnerID=40&md5=58b5e8550cef44b12e91ee4468bd8cb9}
}

@Conference{Busetta2017,
  Title                    = {Addressing team awareness by means of a requirement prioritization tool},
  Author                   = {Busetta, P.},
  Year                     = {2017},
  Editor                   = {Ameller D., Dieste O., Knauss E., Susi A., Dalpiaz F., Kifetew F.M., Tenbergen B., Palomares C., Seffah A., Forbrig P., Berry D.M., Daneva M., Knauss A., Siena A., Daun M., Herrmann A., Kirikova M., Groen E.C., Horkoff J., Maeder P., Massacci F., Ralyte J.},
  Note                     = {cited By 0},
  Publisher                = {CEUR-WS},
  Volume                   = {1796},

  Abstract                 = {The progress of PRESTO, a R&D project by Delta Informatica that ran between 2013 and 2016, was often hampered by misalignments of perceived project's goals between management and development team as well as disagreements on the importance of features, in turn often caused by different opinions on stakeholders. To improve this situation, Delta Informatica decided to experiment the introduction of an agile but structured development process, which included the adoption of a software tool for requirement prioritization created by the SUPERSEDE EU project, on a specific sub-project. In this short report we focus on the social and collaborative experience, leaving scientific conclusions out. We remark that the mere utilization of a tool, by forcing the complete and clear formulation of available options and an appreciation of how they would affect different users, improved awareness and reduced the level of disagreement, so its effects on the group went beyond a purely mathematical exercise. By contrast, it is harder to provide a comparably unequivocal feedback on the tool's impact on the engineering process and on the quality of its results. Copyright 2017 for this paper by its authors.},
  Author_keywords          = {Conflict negotiation; Team awareness; User centred design},
  Document_type            = {Conference Paper},
  ISSN                     = {16130073},
  Journal                  = {CEUR Workshop Proceedings},
  Keywords                 = {Computer software selection and evaluation; Data visualization; Requirements engineering; User centered design, Conflict negotiation; Development process; Development teams; Engineering process; Eu projects; Prioritization; Team awareness, Human resource management},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85016221578&partnerID=40&md5=a0076aa977deb22e825b669310e9d470}
}

@Article{Bustard2013191,
  Title                    = {Towards optimal software engineering: Learning from agile practice},
  Author                   = {Bustard, D. and Wilkie, G. and Greer, D.},
  Journal                  = {Innovations in Systems and Software Engineering},
  Year                     = {2013},
  Note                     = {cited By 6},
  Number                   = {3},
  Pages                    = {191-200},
  Volume                   = {9},

  Abstract                 = {In essence, optimal software engineering means creating the right product, through the right process, to the overall satisfaction of everyone involved. Adopting the agile approach to software development appears to have helped many companies make substantial progress towards that goal. The purpose of this paper is to clarify that contribution from comparative survey information gathered in 2010 and 2012. The surveys were undertaken in software development companies across Northern Ireland. The paper describes the design of the surveys and discusses optimality in relation to the results obtained. Both surveys aimed to achieve comprehensive coverage of a single region rather than rely on a voluntary sample. The main outcome from the work is a collection of insights into the nature and advantages of agile development, suggesting how further progress towards optimality might be achieved. © 2013 Springer-Verlag London.},
  Author_keywords          = {Agile software development; Industry surveys; Software engineering; Software process improvement},
  Document_type            = {Article},
  Doi                      = {10.1007/s11334-013-0216-9},
  ISSN                     = {16145046},
  Keywords                 = {Agile approaches; Agile development; Agile practices; Agile software development; Industry surveys; Northern Ireland; Optimality; Software Process Improvement, Industry; Optimization; Software engineering; Surveys, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84881543973&doi=10.1007%2fs11334-013-0216-9&partnerID=40&md5=58d7b5cf8432f367993859a7e50c7c32}
}

@Conference{Butt2014,
  Title                    = {Handling tradeoffs between agile and usability methods},
  Author                   = {Butt, S.M. and Ahmad, W.F.W. and Rahim, L.},
  Year                     = {2014},
  Note                     = {cited By 2},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {In the past few years, many organizations have tried to improve their software development methodology. Different development approaches had been introduced but only a few are still functioning in the software industry. Agile software development is one approach, which is currently successful in software industry. For the development of interactive and usable software, this agile approach needs to integrate with usability approaches. But this integration is not clear as both agile and usability follows iterative approach of development while agile approach is more toward on writing code and development of a running system; whereas, usability focused on the user interface to make the software more usable and increase its usability by following UCD process. This paper provides an extensive related work on the integration of agile methods with usability that highlights critical issues in agile methods and shows the importance of usability in agile methods. In the end, the proposed model is discussed to handle tradeoff between usability and agile methods under one model. © 2014 IEEE.},
  Art_number               = {6868450},
  Author_keywords          = {Agile development; Software engineering; Usability; User interface design},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICCOINS.2014.6868450},
  ISBN                     = {9781479943913},
  Journal                  = {2014 International Conference on Computer and Information Sciences, ICCOINS 2014 - A Conference of World Engineering, Science and Technology Congress, ESTCON 2014 - Proceedings},
  Keywords                 = {Computer software; Information science; Iterative methods; Software engineering; Usability engineering; User interfaces, Agile development; Agile software development; Development approach; Iterative approach; Software development methodologies; Software industry; Usability; User interface designs, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84938796022&doi=10.1109%2fICCOINS.2014.6868450&partnerID=40&md5=69b499ccba4a0b8112ef48c9664ec569}
}

@Article{Caballero20161175,
  Title                    = {How Agile Developers Integrate User-Centered Design into Their Processes: A Literature Review},
  Author                   = {Caballero, L. and Moreno, A.M. and Seffah, A.},
  Journal                  = {International Journal of Software Engineering and Knowledge Engineering},
  Year                     = {2016},
  Note                     = {cited By 0},
  Number                   = {8},
  Pages                    = {1175-1201},
  Volume                   = {26},

  Abstract                 = {The lack of user engagement, the absence of user feedback, incomplete and continuously changing user requirements are among the critical concerns that cause projects to fail. User-centered design (UCD) and agile software development are two iterative approaches that have been proposed to overcome such concerns. UCD is a design process focusing on user research, user interface design and usability evaluation. Introduced by software engineering practitioners, agile refers to a number of iterative and incremental software development practices that emphasize people's needs, communication between developers and stakeholders and the ability to adapt to change. In both the agile and UCD communities, however, a full understanding of user requirements is often seen as incompatible with early and quick development iterations. We performed a literature review aiming to identify how agile teams have integrated UCD tools into their agile software development process to a better understanding of the user requirements without losing sight of the agile values and principles. UCD tools adaptations and minimal-up-front design applied in agile development are among the approaches discovered in this study. The findings could lead to a comprehensive user-centric software engineering that will overcome inherent problems faced by agile teams to understand user needs, priorities and goals. © 2016 World Scientific Publishing Company.},
  Author_keywords          = {agile methods; agile usability; User centered design},
  Coden                    = {ISEKE},
  Document_type            = {Review},
  Doi                      = {10.1142/S0218194016500418},
  ISSN                     = {02181940},
  Keywords                 = {Human computer interaction; Iterative methods; Software engineering; User centered design; User interfaces, Agile methods; Agile software development; Agile software development process; agile usability; Engineering practitioners; Incremental software development; User Centered Design(UCD); User interface designs, Software design},
  Publisher                = {World Scientific Publishing Co. Pte Ltd},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84993985680&doi=10.1142%2fS0218194016500418&partnerID=40&md5=447273c6238f95b2a3d9fd5a6eb081c5}
}

@Article{Caballero2014283,
  Title                    = {Persona as a Tool to Involving Human in Agile Methods: Contributions from HCI and Marketing},
  Author                   = {Caballero, L. and Moreno, A.M. and Seffah, A.},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2014},
  Note                     = {cited By 3},
  Pages                    = {283-290},
  Volume                   = {8742},

  Abstract                 = {Human centricity refers to the active involvement in the overall product lifecycle of different human actors including end-users, stakeholders and providers. Persona is one of the different tools that exist for human centricity. While marketing is the original domain in which persona was introduced, this technique has also been widely used in user-centered design (UCD) design. In these two perceptions, persona has demonstrated its potential as an efficient tool for grouping the users or customers and focusing on user or customer needs, goals and behavior. A segmentation technique is generally used with persona in order to group individual users according to their common features, identifying within these groups those that represent a pattern of human behavior. This paper investigates how persona has been used to improve the usability in the agile development domain, while studying which contributions from marketing and HCI have enriched persona in this agile context. © IFIP International Federation for Information Processing 2014.},
  Author_keywords          = {Agile Usability; HCI methods in software engineering; Persona},
  Document_type            = {Article},
  ISSN                     = {03029743},
  Keywords                 = {Behavioral research; Commerce; Human computer interaction; Life cycle; Marketing; Software engineering, Agile development; Agile Usability; HCI methods; Human centricities; Persona; Product-life-cycle; Segmentation techniques; User Centered Design(UCD), User centered design},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84921514406&partnerID=40&md5=5a0f52f8c6620ec0bb879ed70a703a8c}
}

@Article{Cachia20132,
  Title                    = {Towards incremental mutation testing},
  Author                   = {Cachia, M.A. and Micallef, M. and Colombo, C.},
  Journal                  = {Electronic Notes in Theoretical Computer Science},
  Year                     = {2013},
  Note                     = {cited By 1},
  Pages                    = {2-11},
  Volume                   = {294},

  Abstract                 = {Proponents of Agile development processes claim that adhering to Agile principles leads to the delivery of high quality code in evolutionary increments. Confidence in resulting systems is mostly gained through the use of unit test suites, entrusted to catch regressions as soon as they occur. Consequently, the system can only be as trustworthy as its tests, meaning that measurements of the testsE quality is crucial. Whilst mutation testing has been proposed as a means of uncovering test suite defects, it has not been widely adopted in the industry; mainly due to its computational expense and manual effort required by developers investigating unkilled mutants. To make mutation testing affordable, we propose incremental mutation testing - a variation of mutation testing which leverages the iterative nature of agile development by limiting the scope of mutant generation to sections of code which have changed since the last mutation run. Preliminary results show that the number of mutants generated is drastically reduced along with the time required to generate mutants and execute tests against them. © 2013 Elsevier B.V. All rights reserved.},
  Author_keywords          = {Mutation Testing Agile Development Processes Incremental Mutation Testing},
  Document_type            = {Conference Paper},
  Doi                      = {10.1016/j.entcs.2013.02.012},
  ISSN                     = {15710661},
  Keywords                 = {Agile development; Computational expense; High quality; Measurements of; Mutation testing; Unit tests, Computer science, Software testing},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84875169679&doi=10.1016%2fj.entcs.2013.02.012&partnerID=40&md5=ca1e08254b05604db7d04f95679161b1}
}

@Conference{Cain201367,
  Title                    = {Examining student progress in portfolio assessed introductory programming},
  Author                   = {Cain, A. and Woodward, C.J. and Pace, S.},
  Year                     = {2013},
  Note                     = {cited By 3},
  Pages                    = {67-72},

  Abstract                 = {Constructive alignment has gained wide acceptance as a pedagogical approach that promotes deep learning, and portfolio assessment offers a natural means of achieving this. This work examines student's progress in an introductory programming unit that used portfolio assessment to implement constructive alignment. Charts visually showing student progress provided material for a thematic analysis. This paper categorizes these charts into several classes, and discusses insight this gives into the teaching and learning approach used. These results can be used to inform the development of constructively aligned units using this approach. © 2013 IEEE.},
  Art_number               = {6654401},
  Author_keywords          = {agile software development; constructive alignment; introductory programming; portfolio assessment},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/TALE.2013.6654401},
  ISBN                     = {9781467363556},
  Journal                  = {Proceedings of 2013 IEEE International Conference on Teaching, Assessment and Learning for Engineering, TALE 2013},
  Keywords                 = {Agile software development; Constructive alignments; Introductory programming; Pedagogical approach; Portfolio assessment; Student progress; Teaching and learning; Thematic analysis, Alignment; Software engineering; Students, Engineering education},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84892662686&doi=10.1109%2fTALE.2013.6654401&partnerID=40&md5=f91a739c9482a03df8accff02520db49}
}

@Article{Campanelli201585,
  Title                    = {Agile methods tailoring - A systematic literature review},
  Author                   = {Campanelli, A.S. and Parreiras, F.S.},
  Journal                  = {Journal of Systems and Software},
  Year                     = {2015},
  Note                     = {cited By 12},
  Pages                    = {85-100},
  Volume                   = {110},

  Abstract                 = {Background: The software development industry has been adopting agile methods instead of traditional software development methods because they are more flexible and can bring benefits such as handling requirements changes, productivity gains and business alignment. Objective: This study seeks to evaluate, synthesize, and present aspects of research on agile methods tailoring including the method tailoring approaches adopted and the criteria used for agile practice selection. Method: The method adopted was a Systematic Literature Review (SLR) on studies published from 2002 to 2014. Results: 56 out of 783 papers have been identified as describing agile method tailoring approaches. These studies have been identified as case studies regarding the empirical research, as solution proposals regarding the research type, and as evaluation studies regarding the research validation type. Most of the papers used method engineering to implement tailoring and were not specific to any agile method on their scope. Conclusion: Most of agile methods tailoring research papers proposed or improved a technique, were implemented as case studies analyzing one case in details and validated their findings using evaluation. Method engineering was the base for tailoring, the approaches are independent of agile method and the main criteria used are internal environment and objectives variables. © 2015 Elsevier Inc. All rights reserved.},
  Author_keywords          = {Agile method tailoring; Agile practice selection; Software method tailoring},
  Coden                    = {JSSOD},
  Document_type            = {Article},
  Doi                      = {10.1016/j.jss.2015.08.035},
  ISSN                     = {01641212},
  Keywords                 = {Productivity; Software design, Agile methods; Agile practices; Requirements change; Research validation; Software development methods; Software methods; Systematic literature review; Systematic literature review (SLR), Software engineering},
  Publisher                = {Elsevier Inc.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84944066455&doi=10.1016%2fj.jss.2015.08.035&partnerID=40&md5=27cbc99ac08dc39c656944f5d95c28ab}
}

@Article{Campbell20151995,
  Title                    = {Using Model Based Engineering to Own the Technical Baseline},
  Author                   = {Campbell, D. and Wampole, G. and Wheeler, T.},
  Journal                  = {Procedia Manufacturing},
  Year                     = {2015},
  Note                     = {cited By 0},
  Pages                    = {1995-2002},
  Volume                   = {3},

  Abstract                 = {The current U.S. Air Force's 30-year plan (America's Air Force: A Call to the Future, July 2014) identifies Capability Development as a key area where existing practices fall short and need to be transformed in order to keep pace with new threats and the evolving operational environment. The strategy recognizes that traditional DoD methods of requirements development, acquisition oversight, and especially systems engineering are inadequate to produce results in the desired timeframe, in a manner that is receptive to more frequent decision points and opportunities to change direction. In order for these types of systems to evolve and support the type of distributed participation and flexibility that the strategy envisions, they must be designed and (more importantly) specified to expose the necessary interfaces and exhibit sufficient modularity to allow for future growth. This adoption of an open-systems architecture approach represents a potentially significant engineering investment that must be accounted for in acquisition processes, and be made a first-class citizen in planning and scheduling activities. We believe that in order for the U.S. Air Force (and the defense community in general) to truly realize the benefits that come with implementation of agile Capability Development as outlined in the strategy, program offices must: 1) Strive to gain deep, technical knowledge of the system modularity; 2) Specify the critical interfaces to a level of detail to allow capability developers to implement functionality in software; 3) Be able to act as a system integrator to verify and validate that potential component implementations can interoperate successfully within the overall system to accomplish the desired mission. In this paper, we outline a systems engineering approach using a dynamic, executable Model-Based Engineering methodology that we believe can help the government create the systems engineering environment required to implement agile capability development and finally reap its benefits. © 2015 The Authors},
  Author_keywords          = {Executable architecture; Model based engineering; Systems engineering},
  Document_type            = {Article},
  Doi                      = {10.1016/j.promfg.2015.07.246},
  ISSN                     = {23519789},
  Publisher                = {Elsevier B.V.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85010002556&doi=10.1016%2fj.promfg.2015.07.246&partnerID=40&md5=990907379712fb0bf20160bf3a33d310}
}

@Conference{Campbell2016319,
  Title                    = {Scrum and agile methods in software engineering courses},
  Author                   = {Campbell, J. and Kurkovsky, S. and Tafliovich, A. and Liew, C.W.},
  Year                     = {2016},
  Note                     = {cited By 3},
  Pages                    = {319-320},
  Publisher                = {Association for Computing Machinery, Inc},

  Abstract                 = {Agile software development has been formally introduced in 2001 in the "agile manifesto" [4]. Agile methods are best described as an amalgamation of four core principles describing lightweight iterative software processes: Individuals and interactions over processes and tools; Working software over comprehensive documentation; Customer collaboration over contract negotiation; Responding to change over following a plan. Over the years, a number of agile frameworks, such as Extreme Programming and Scrum, have evolved and matured. The underlying philosophy of Scrum recognizes that the customers often change their mind about the product they want and that the development challenges are unpredictable by their nature. Consequently, Scrum embraces the fact that the problem being solved cannot be fully understood or described from the start. Instead, Scrum focuses on maximizing the ability of the development team to quickly deliver in response to emerging requirements. The aim of this panel is to present the experiences and challenges of practicing Scrum and agile methods at a variety of computer science programs.},
  Author_keywords          = {Agile software development; Scrum; Software engineering},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2839509.2844664},
  ISBN                     = {9781450338561},
  Journal                  = {SIGCSE 2016 - Proceedings of the 47th ACM Technical Symposium on Computing Science Education},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84968645164&doi=10.1145%2f2839509.2844664&partnerID=40&md5=b87ed38ce3ce2a6d65d5c3f98a13f1b4}
}

@Conference{Campbell2015506,
  Title                    = {An experience report: Using mobile development to teach software design},
  Author                   = {Campbell, J. and Tafliovich, A.},
  Year                     = {2015},
  Editor                   = {Alphonce C., Decker A., Eiselt K., Tims J.},
  Note                     = {cited By 2},
  Pages                    = {506-511},
  Publisher                = {Association for Computing Machinery, Inc},

  Abstract                 = {We report on our experience with incorporating Android software development in a second-year software design course. Our primary course goals are twofold: (1) teach principles of object-oriented design, and provide students with an opportunity to apply these principles in designing and developing Java programs, and (2) introduce students to the basics of software engineering with a team project that follows a Scrum-like software development process. In this report, we describe a team-based Android application development project that achieves our teaching goals, helps motivate student learning, and increases student satisfaction with the course. We provide an overview of our approach, outcomes, and student feedback. We also describe lessons learnt by the instructors and identify promising directions for improvements. Copyright © 2015 ACM.},
  Author_keywords          = {Mobile computing; Motivating students; Object-oriented software design},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2676723.2677307},
  ISBN                     = {9781450329668},
  Journal                  = {SIGCSE 2015 - Proceedings of the 46th ACM Technical Symposium on Computer Science Education},
  Keywords                 = {Android (operating system); Computer software; Curricula; Education; Education computing; Engineering education; Java programming language; Mobile computing; Object oriented programming; Software engineering; Students; Teaching, Android applications; Experience report; Object oriented design; Object-oriented software designs; Software development process; Student feedback; Student learning; Student satisfaction, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84942474922&doi=10.1145%2f2676723.2677307&partnerID=40&md5=84c889eb889fc9487d3c24df40d4575d}
}

@Conference{Campfield2013,
  Title                    = {The XSEDE ticket system: From concept to implementation},
  Author                   = {Campfield, M. and McNally, S.T. and Packard, M.A. and Pingleton, M. and Samuel, T.K. and Maiden, T.},
  Year                     = {2013},
  Note                     = {cited By 0},

  Abstract                 = {In this paper we examine the process of designing and deploying a replacement for the old XSEDE ticket system. We look at each step, from initial concept to final deployment. The impact of XSEDE and service provider-specific policies and needs is outlined along with the final implemented global policies. We review the software and technologies under consideration along with a detailed analysis of the chosen solution. Deployed in May, 2013, the new ticket system is based on Request Tracker by Best Practical. We utilized distributed configuration management to speed deployment and arrange for rapid failover transitions providing increased uptime and ease of management between the National Institute for Computational Sciences and the Texas Advanced Computing Center. Novel high availability practices will deliver a near 100% uptime for the deployed sys- tem. We discuss future plans to deploy a federated interface that will allow the various Service Providers to update the central XSEDE ticket system directly from their local ticket systems. This federated interface will provide added functionality and will allow the XSEDE ticket system to tie into existing workflows at each Service Provider thus making it both a critical and agile service. Finally, we examine future directions the project can take in order to provide for the changing needs of the wider XSEDE community. © 2013 by the Association for Computing Machinery, Inc.},
  Art_number               = {44},
  Author_keywords          = {Configuration management; Puppet; Request tracker; RT; Streaming replication; Ticketing system; XSEDE},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2484762.2484792},
  ISBN                     = {9781450321709},
  Journal                  = {ACM International Conference Proceeding Series},
  Keywords                 = {Configuration management; Puppet; Request tracker; RT; Ticketing systems; XSEDE, Computer applications, Telecommunication networks},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84882382675&doi=10.1145%2f2484762.2484792&partnerID=40&md5=7ac9ce5351a63e475c2f2253c6ea2eb8}
}

@Article{Cantor201454,
  Title                    = {Economic governance of software delivery},
  Author                   = {Cantor, M. and Royce, W.},
  Journal                  = {IEEE Software},
  Year                     = {2014},
  Note                     = {cited By 4},
  Number                   = {1},
  Pages                    = {54-61},
  Volume                   = {31},

  Abstract                 = {Agility without objective governance cannot scale, and governance without agility cannot compete. Agile methods are mainstream, and software enterprises are adopting these practices in diverse delivery contexts and at enterprise scale. IBM's broad industry experience with agile transformations and deep internal know-how point to two key principles to deliver sustained improvements in software business outcomes with higher confidence: measure and streamline change costs, and steer with economic governance and Bayesian analytics. Applying these two principles in context is the crux of measured improvement in continuous delivery of smarter software-intensive systems. This article describes more meaningful measurement and prediction foundations for economic governance. The Web extra at http://youtu.be/ghAM8ifyeVI is a video in which Walker Royce, author, IEEE Software editorial board member, and IBM Chief Software Economist, describes how to reason about software delivery governance with lean principles. © 1984-2012 IEEE.},
  Art_number               = {6581776},
  Author_keywords          = {Bayesian analytics; economic governance; measuring agility; steering leadership},
  Coden                    = {IESOE},
  Document_type            = {Review},
  Doi                      = {10.1109/MS.2013.102},
  ISSN                     = {07407459},
  Keywords                 = {Technology transfer, Agile transformations; Bayesian; Editorial board; Industry experience; measuring agility; Software business; Software enterprise; Software intensive systems, Industry},
  Publisher                = {IEEE Computer Society},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84896279386&doi=10.1109%2fMS.2013.102&partnerID=40&md5=118ed9d9a237e516d1e576f0da310c5c}
}

@Article{Cao2013191,
  Title                    = {Adapting funding processes for agile IT projects: An empirical investigation},
  Author                   = {Cao, L. and Mohan, K. and Ramesh, B. and Sarkar, S.},
  Journal                  = {European Journal of Information Systems},
  Year                     = {2013},
  Note                     = {cited By 10},
  Number                   = {2},
  Pages                    = {191-205},
  Volume                   = {22},

  Abstract                 = {Agile software development that provides software development organizations, the ability to respond to changes in turbulent business environments, has been gaining wide adoption. Agile software development projects are characterized by 'just enough' planning and lack of upfront commitment to scope, cost, and schedule. These characteristics pose conflicting demands on managers responsible for making funding decisions, because traditional approaches to funding IT projects are often based on well-defined scope, cost, and schedule. These conflicts demand the adaptation of traditional funding processes to suit to agile projects. We draw from Adaptive Structuration Theory to understand the nature of conflicts between traditional IT project funding processes and the dynamic nature of agile projects, and how these conflicts are addressed by practices that are appropriated in the process of social interaction between funding decision makers and development teams. On the basis of a multisite case study, we present a framework that explains how organizations adapt traditional IT funding approaches to accommodate the unique characteristics of agile IT projects. © 2013 Operational Research Society Ltd.},
  Author_keywords          = {adaptive structuration theory; agile development; IT funding},
  Document_type            = {Article},
  Doi                      = {10.1057/ejis.2012.9},
  ISSN                     = {0960085X},
  Keywords                 = {Adaptive structuration theory; Agile development; Agile software development; Agile software development projects; Business environments; Decision makers; Development teams; Dynamic nature; Empirical investigation; IT funding; IT project; Multi-site; Social interactions; Software development organizations; Traditional approaches, Information technology; Software design, Finance},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84874606072&doi=10.1057%2fejis.2012.9&partnerID=40&md5=c9b15a3306baa7a39693d556872f6de4}
}

@Article{Capilla2016191,
  Title                    = {10 years of software architecture knowledge management: Practice and future},
  Author                   = {Capilla, R. and Jansen, A. and Tang, A. and Avgeriou, P. and Babar, M.A.},
  Journal                  = {Journal of Systems and Software},
  Year                     = {2016},
  Note                     = {cited By 3},
  Pages                    = {191-205},
  Volume                   = {116},

  Abstract                 = {The importance of architectural knowledge (AK) management for software development has been highlighted over the past ten years, where a significant amount of research has been done. Since the first systems using design rationale in the seventies and eighties to the more modern approaches using AK for designing software architectures, a variety of models, approaches, and research tools have leveraged the interests of researchers and practitioners in AK management (AKM). Capturing, sharing, and using AK has many benefits for software designers and maintainers, but the cost to capture this relevant knowledge hampers a widespread use by software companies. However, as the improvements made over the last decade didn't boost a wider adoption of AKM approaches, there is a need to identify the successes and shortcomings of current AK approaches and know what industry needs from AK. Therefore, as researchers and promoters of many of the AK research tools in the early stages where AK became relevant for the software architecture community, and based on our experience and observations, we provide in this research an informal retrospective analysis of what has been done and the challenges and trends for a future research agenda to promote AK use in modern software development practices. © 2015 Elsevier Inc. All rights reserved.},
  Author_keywords          = {Agile development; Architectural design decisions; Architectural knowledge management},
  Coden                    = {JSSOD},
  Document_type            = {Article},
  Doi                      = {10.1016/j.jss.2015.08.054},
  ISSN                     = {01641212},
  Keywords                 = {Knowledge management; Research and development management; Software architecture; Software engineering, Agile development; Architectural design decisions; Architectural knowledge; Architecture community; Retrospective analysis; Software architecture knowledge managements; Software designers; Software development practices, Software design},
  Publisher                = {Elsevier Inc.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84945923743&doi=10.1016%2fj.jss.2015.08.054&partnerID=40&md5=40b36f608da91c11134e3809c1574c6c}
}

@Article{Capobianco2016231,
  Title                    = {Shu-ha-ri: How to break the rules and still be agile},
  Author                   = {Capobianco, D.A.},
  Journal                  = {Communications in Computer and Information Science},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {231-238},
  Volume                   = {422},

  Abstract                 = {Fata Informatica is a software house that produces a commercial system widely used by Defence Organizations. Our first approach to software development was standard waterfall, but during the years, our team adopted an agile-driven approach. The agile adoption was a long sweaty path that lead us through the Shu-ha-ri Aikido stages and let us implement our own agile framework. In this contribution will be shown as Fata Informatica’s team defines the product increments that add the more value to the customers, how they develop and deliver them into the market. A description of our value and cost evaluation and the way we choose which increments add to a specific delivery, Fata Informatica’s agile approach to the stakeholder engagement and how the static roadmap concept is outdated by a more agile roadmap definition approach will also be shown in order to meet the increasingly needs of our stakeholder. © Springer International Publishing Switzerland 2016.},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-27896-4_19},
  Editor                   = {Sillitti A., Ciancarini P., Succi G., Messina A.},
  ISBN                     = {9783319278940},
  ISSN                     = {18650929},
  Keywords                 = {Application programs; Software design, Agile adoptions; Agile approaches; Commercial systems; Cost evaluations; Roadmap; Software house; Stakeholder engagement, Software engineering},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958247961&doi=10.1007%2f978-3-319-27896-4_19&partnerID=40&md5=55e05e0a71984d018b1322f00630211a}
}

@Article{Capodieci2014119,
  Title                    = {A case study to enable and monitor real IT companies migrating from waterfall to agile},
  Author                   = {Capodieci, A. and Mainetti, L. and Manco, L.},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2014},
  Note                     = {cited By 0},
  Number                   = {PART 5},
  Pages                    = {119-134},
  Volume                   = {8583 LNCS},

  Abstract                 = {Agile development methods are becoming increasingly important to face continuously changing requirements. Nevertheless, the adoption of such methods in industrial environments still needs to be fostered. Companies call for tools to keep under control both agility and coordination of IT teams. In this paper, we report on an empirical case study aiming at enabling real companies migrating from Waterfall to Agile. Our research effort has been spent in introducing 11 different IT small and medium-sized enterprises to Agile, and to observe them executing projects. To have a common evaluation framework, we selected a set of 61 metrics, with the purpose of measuring the evolution towards Agile. We provide readers with empirical data on two categories of companies' feedbacks: (i) the metrics they considered to be useful beyond the theoretical definitions; (ii) the tools they integrated with existing development environments to collect data from metrics, and evaluate quantitative improvements of Agile. © 2014 Springer International Publishing.},
  Author_keywords          = {Agile; Migration towards Agile; Software Engineering; Software Metrics; Waterfall},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-09156-3_9},
  ISBN                     = {9783319091556},
  ISSN                     = {03029743},
  Keywords                 = {Software engineering, Agile; Agile development methods; Development environment; Industrial environments; Migration towards Agile; Small and medium-sized enterprise; Software metrics; Waterfall, Human resource management},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904871455&doi=10.1007%2f978-3-319-09156-3_9&partnerID=40&md5=a920b0e2307772a83ad32139e83a1e9d}
}

@Conference{Carlson2013469,
  Title                    = {Review of agile case studies for applicability to aircraft systems integration},
  Author                   = {Carlson, R. and Turner, R.},
  Year                     = {2013},
  Note                     = {cited By 2},
  Pages                    = {469-474},
  Volume                   = {16},

  Abstract                 = {The current state of the art of aircraft systems integration is similar to the traditional serial software engineering waterfall method. Agile methods transformed software engineering with a focus on incremental iterative value added design. This paper reviews selected non software agile case studies for lessons that are applicable to implementing agile methods to transform the aircraft systems integration process. © 2013 The authors. Published by Elsevier B.V.},
  Author_keywords          = {Agile methods; Systems integration},
  Document_type            = {Conference Paper},
  Doi                      = {10.1016/j.procs.2013.01.049},
  ISSN                     = {18770509},
  Journal                  = {Procedia Computer Science},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84898726682&doi=10.1016%2fj.procs.2013.01.049&partnerID=40&md5=c9fae4731f4d35baa64e6690d6fa26e8}
}

@Conference{Cartaxo2013129,
  Title                    = {The impact of scrum on customer satisfaction: An empirical study},
  Author                   = {Cartaxo, B. and Araújo, A. and Barreto, A.S. and Soares, S.},
  Year                     = {2013},
  Note                     = {cited By 3},
  Pages                    = {129-136},
  Publisher                = {IEEE Computer Society},

  Abstract                 = {In the beginning of the last decade, agile methodologies emerged as a response to software development processes that were based on rigid approaches. In fact, the flexible characteristics of agile methods are expected to be suitable to the less-defined and uncertain nature of software development. However, many studies in this area lack empirical evaluation in order to provide more confident evidences about which contexts the claims are true. This paper reports an empirical study performed to analyze the impact of Scrum adoption on customer satisfaction as an external success perspective for software development projects in a software intensive organization. The study uses data from real-life projects executed in a major software intensive organization located in a nation wide software ecosystem. The empirical method applied was a cross-sectional survey using a sample of 19 real-life software development projects involving 156 developers. The survey aimed to determine whether there is any impact on customer satisfaction caused by the Scrum adoption. However, considering that sample, our results indicate that it was not possible to establish any evidence that using Scrum may help to achieve customer satisfaction and, consequently, increase the success rates in software projects, in contrary to general claims made by Scrum's advocates. © 2013 IEEE.},
  Art_number               = {6800189},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/SBES.2013.10},
  Journal                  = {Proceedings - 2013 27th Brazilian Symposium on Software Engineering, SBES 2013},
  Keywords                 = {Software design; Surveys, Agile Methodologies; Cross-sectional surveys; Empirical evaluations; Empirical studies; Flexible characteristics; Software development process; Software development projects; Software ecosystems, Customer satisfaction},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84900321093&doi=10.1109%2fSBES.2013.10&partnerID=40&md5=5fc008dd17891f97f430f2e537fdae7b}
}

@Conference{Carter2016249,
  Title                    = {BHive: Towards behaviour-driven development supported by b-method},
  Author                   = {Carter, J. and Gardner, W.B.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {249-256},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Behaviour-Driven Development (BDD) is an "outside-in" approach to software development built upon semi-formal mediums for specifying the behaviour of a system as it would be observed externally. Through the representation of a system as a collection of user stories and scenarios using BDD's notation, practitioners automate acceptance tests using examples of desired behaviour for the envisioned system. A formal model created in concert with BDD tests would provide valuable insight into test validity and enhance the visibility of the problem domain. This work called BHive builds upon the formal underpinnings of BDD scenarios by mapping their "Given," "When," and "Then" statements to "Precondition," "Command," and "Postcondition" constructs as introduced by Floyd-Hoare logic. We posit that this mapping allows for a BMethod representation to be created and that such a model is useful for exploring system behaviour and exposing gaps in requirements. We also outline extensions to BDD tooling required for the described integration and present benefits of the BHive approach to integrating formalism within a BDD project. © 2016 IEEE.},
  Author_keywords          = {Agile; B-Method; BDD; Behaviour-Driven Development},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/IRI.2016.39},
  ISBN                     = {9781509032075},
  Journal                  = {Proceedings - 2016 IEEE 17th International Conference on Information Reuse and Integration, IRI 2016},
  Keywords                 = {Acceptance tests; Boolean functions; Information use; Integration; Mapping; Software design, Agile; B method; Behaviour-Driven Development; Floyd-hoare logic; Formal model; Problem domain; Test validity; User stories, Formal methods},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84991243017&doi=10.1109%2fIRI.2016.39&partnerID=40&md5=321bc2691b533c3d817416f0a3ac0ce8}
}

@Conference{Carvalho2015567,
  Title                    = {Workshop on Recent Advances in the DependabIlity AssessmeNt of Complex systEms (RADIANCE)},
  Author                   = {Carvalho, A.M.B.R. and Antunes, N. and Ceccarelli, A. and Zentai, A.},
  Year                     = {2015},
  Note                     = {cited By 0},
  Pages                    = {567-568},
  Publisher                = {IEEE Computer Society},
  Volume                   = {2015-September},

  Abstract                 = {The workshop on Recent Advances in the DependabIlity AssessmeNt of Complex systEms (RADIANCE), in its first edition, aims to discuss novel dependability assessment approaches for complex systems and to promote their adoption in real-world settings through industrial and academic research. The main objective is to promote and foster discussion on novel ideas, constituting a forum where researchers can share both real problems and innovative solutions for the assessment of complex systems. The workshop focuses on assessing complex evolving systems, where increasing complexity and changes are due to the introduction of new components and sensors, and to the extensive usage of software OTS components or black box components in general. In this macro area, the workshop welcomed a broad list of applications ranging from agile development in critical systems to model-driven assessment approaches as well as new needs for verification, validation and certification of dynamic and evolving systems, which also includes solutions for automating the verification and validation processes. Finally, the workshop was interested in. © 2015 IEEE.},
  Art_number               = {7266885},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/DSN.2015.68},
  ISBN                     = {9781479986293},
  Journal                  = {Proceedings of the International Conference on Dependable Systems and Networks},
  Keywords                 = {Industrial research; Macros, Academic research; Agile development; Assessment approaches; Black-box components; Dependability assessments; Innovative solutions; Real world setting; Verification-and-validation, Complex networks},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84950159842&doi=10.1109%2fDSN.2015.68&partnerID=40&md5=ae1bc4d0b2a2f9ac9b775d40693ec279}
}

@Article{deCarvalho2016586,
  Title                    = {Agile and UCD integration based on pre-development usability evaluations: An experience report},
  Author                   = {de Carvalho, J.M.I. and da Silva, T.S. and Silveira, M.S.},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {586-597},
  Volume                   = {9731},

  Abstract                 = {Agile Methods and User-Centered Design have radically transformed the way people develop software, mostly by taking more focus on people than on processes. This study is focused on understanding the integration of Agile and User-Centered Design through usability evaluations before the development cycles. Based on a pilot study carried out in a Scrum web-based software development team, we observed great results regarding to rework decrease as well as the usability improvement of the developed system throughout its development cycle. In the context of this study, we concluded that, besides reducing rework and improving usability, pre-development usability evaluations resulted in a mindset change, affecting both the development team and stakeholders, helping them to understand the importance of this early integration of Agile and User-Centered Design. © Springer International Publishing Switzerland 2016.},
  Author_keywords          = {Agile; Evaluation; Predevelopment; User-centered design},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-39510-4_54},
  Editor                   = {Kurosu M.},
  ISBN                     = {9783319395098},
  ISSN                     = {03029743},
  Keywords                 = {Design; Integration; Software design; Usability engineering; User centered design; World Wide Web, Agile; Development cycle; Development teams; Evaluation; Experience report; Pre-development; Usability evaluation; Web-based software development, Human computer interaction},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84978842611&doi=10.1007%2f978-3-319-39510-4_54&partnerID=40&md5=939b64ab547c09e130b45f0570d307ad}
}

@Article{Carver20146,
  Title                    = {Software engineering for computational science and engineering},
  Author                   = {Carver, J.C. and Epperly, T.},
  Journal                  = {Computing in Science and Engineering},
  Year                     = {2014},
  Note                     = {cited By 3},
  Number                   = {3},
  Pages                    = {6-9},
  Volume                   = {16},

  Abstract                 = {This special issue contains extensions of the best papers from the 2013 International Workshop on Software Engineering for Computational Science and Engineering. In addition to summaries of the included articles, this introduction also contains a summary of the workshop discussion. © 2014 IEEE.},
  Art_number               = {6834709},
  Author_keywords          = {Agile programming; best practices; computational science and engineering; CSE; debugging; scientific computing; verification and validation},
  Coden                    = {CSENF},
  Document_type            = {Editorial},
  Doi                      = {10.1109/MCSE.2014.72},
  ISSN                     = {15219615},
  Publisher                = {IEEE Computer Society},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84903142727&doi=10.1109%2fMCSE.2014.72&partnerID=40&md5=9a2d2428b731fffdd20ec99ae88163fc}
}

@Conference{Castillo201447,
  Title                    = {The use of SCRUM for laboratory sessions monitoring and evaluation in a university course enforcing transverse competencies},
  Author                   = {Castillo, L.},
  Year                     = {2014},
  Editor                   = {Sierra-Rodriguez J.-L., Dodero-Beardo J.-M., Burgos D.},
  Note                     = {cited By 0},
  Pages                    = {47-52},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {This paper introduces a pilot experience on the use of SCRUM methodology, borrowed from software project development and management, in group laboratory sessions during a university course of agent-based programming (fourth year of the Degree on Computer Science in the University of Granada). It aims to foster a higher awareness of students and to enforce a series of transverse competencies like real, structured and self-organized teamwork, better planning of time during the laboratory sessions. As a side effect, it empowers leadership amongst the members of the team as well as it enables a high quality evaluation of students. © 2014 IEEE.},
  Art_number               = {7017703},
  Author_keywords          = {European Higher Education Area; Laboratory Sessions; SCRUM; Transverse Competences},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/SIIE.2014.7017703},
  ISBN                     = {9781479944286},
  Journal                  = {2014 International Symposium on Computers in Education, SIIE 2014},
  Keywords                 = {Computer programming; Curricula; Education; Laboratories; Software agents; Students, European Higher Education Area; Laboratory sessions; Monitoring and evaluations; SCRUM; Scrum methodologies; Software project; Transverse Competences; University course, Quality control},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84946686387&doi=10.1109%2fSIIE.2014.7017703&partnerID=40&md5=32083e8ff3b4f9471de64bb52e60eeb3}
}

@Article{Ceballos2016469,
  Title                    = {Minddomain: An interoperability tool to generate domain models through mind maps},
  Author                   = {Ceballos, A. and Wanderley, F. and Souza, E. and Cysneiros, G.},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {469-479},
  Volume                   = {9789},

  Abstract                 = {Requirements engineering establishes that requirements definition process must be applied to obtain, validate and maintain one or more requirement documents. This process handles different stakeholders expectations and viewpoints, among them, the software designer whose responsibility is to create software models from information provided by domain experts and business specialist. However, due to knowledge differences between stakeholder’s technical dialects, communication problems are constant, generating inconsistencies between the conceptual model and the problem to be solved. To help solving these issues an agile and cognitive modeling based approach supported by MDA based tools is proposed promoting better consistency between requirements and the conceptual models, guaranteed by specifying a mind map that serves as the basis for translating requirements to domain models, represented by the UML class diagrams and feature models. Thus, the main contribution of this work is to provide an interoperability tool to generate software models (e.g.: class diagrams and feature models) from mind maps. This tool provides the capability of transformation between different industrial mind map tools (including cloud tools - SaaS) to different domain modelling tools, both class diagrams and for feature models. Finally, a case study was applied to verify this feasibility and check this interoperability assessment. The main contribution is Mind Domain can be used in small projects for agile requirements modeling solutions. © Springer International Publishing Switzerland 2016.},
  Author_keywords          = {Agile requirements modelling; Class diagram; Domain model; Mind map; Model-driven engineering},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-42089-9_33},
  Editor                   = {Gervasi O., Apduhan B.O., Taniar D., Torre C.M., Wang S., Misra S., Murgante B., Stankova E., Rocha A.M.A.C.},
  ISBN                     = {9783319420882},
  ISSN                     = {03029743},
  Keywords                 = {Encoding (symbols); Query languages; Schematic diagrams; Software architecture; Software design, Agile requirements; Class diagrams; Domain model; Mind maps; Model-driven Engineering, Interoperability},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84978235848&doi=10.1007%2f978-3-319-42089-9_33&partnerID=40&md5=ffbf57ce7af892e115de83cb136b883e}
}

@Conference{Čelar20151134,
  Title                    = {Method for personal capability abebment in agile teams using personal points},
  Author                   = {Čelar, S. and Turić, M. and Vicković, L.},
  Year                     = {2015},
  Note                     = {cited By 0},
  Pages                    = {1134-1137},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {The problem of effort estimates in software development projects is important ibue in small and medium-sized development companies and agile teams. In this paper, we propose a method for personal capability abebment of each individual team member. In abebing the ability of the project team members 18 parameters were defined with appropriate criteria, values and weight factors for abebing personal capability. For individual personal capability a metrics called personal point was introduced. The method was validated in the small agile software development start-up company Venio Indicium Ltd. © 2014 IEEE.},
  Art_number               = {7034607},
  Author_keywords          = {agile development; Effort estimation; Personal capability; personal point; small and medium-sized development company; software estimation},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/TELFOR.2014.7034607},
  ISBN                     = {9781479961900},
  Journal                  = {2014 22nd Telecommunications Forum, TELFOR 2014 - Proceedings of Papers},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84962209234&doi=10.1109%2fTELFOR.2014.7034607&partnerID=40&md5=acb1d96f14d1dc8bb88d028aa2a2fe8b}
}

@Article{Chagas2014177,
  Title                    = {Systematic literature review on the characteristics of agile project management in the context of maturity models},
  Author                   = {Chagas, L.F. and de Carvalho, D.D. and Lima, A.M. and Reis, C.A.L.},
  Journal                  = {Communications in Computer and Information Science},
  Year                     = {2014},
  Note                     = {cited By 3},
  Pages                    = {177-189},
  Volume                   = {477},

  Abstract                 = {Popularity of Agile Methods is growing up and along with this popularity is also growing the interest in adopting these methods in conjunction with maturity models, like CMMI. Dozens of reports about this topic can be found with different results. Therefore, a Systematic Literature Review was conducted with the goal of identifying characteristics of agile project management in organizations using agile methods and maturity models. We accepted 34 primary studies published from 2001 to 2013. The results show that the area still lacks details on how to perform the software development activities, what techniques can be used to meet issues not directly addressed by agile methods without losing the desired agility and what tools can be used to facilitate the combination of approaches. © Springer International Publishing Switzerland 2014.},
  Author_keywords          = {Agile Management; CMMI; Maturity Model; Process Improvement; Scrum; Systematic Literature Review; XP},
  Document_type            = {Review},
  Editor                   = {Mitasiunas A., Rout Z., O'Connor R.V., O'Connor R.V., Dorling A., Dorling A., Rout Z.},
  ISBN                     = {9783319130354},
  ISSN                     = {18650929},
  Keywords                 = {Process engineering; Software design, CMMI; Maturity model; Process Improvement; Scrum; Systematic literature review; XP, Project management},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84908500376&partnerID=40&md5=91de43c49f47c011cbda1f0fea3c82eb}
}

@Article{Chang201613,
  Title                    = {How agile development can transform defense it acquisition},
  Author                   = {Chang, S.J. and Messina, A. and Modigliani, P.},
  Journal                  = {Communications in Computer and Information Science},
  Year                     = {2016},
  Note                     = {cited By 1},
  Pages                    = {13-26},
  Volume                   = {422},

  Abstract                 = {Traditional defense acquisition frameworks are often too large, complex, and slow to acquire information technology (IT) capabilities effectively. Defense acquisition organizations for years have been concerned about the lengthy IT development timelines and given the pace of change in operations and technology, it is critical to look for new strategies to acquire IT for defense systems. Over the last decade, agile software development emerged as a leading model across industry with growing adoption and success. Agile is centered on small development Teams delivering small, frequent releases of capabilities, with active user involvement. From a planning and execution viewpoint, agile emphasizes an iterative approach with each iteration informing the next. The focus is less on extensive upfront planning for entire programs and more on responsiveness to internal and external changes, such as operations, technology, and budgets. Based on US and Italian experiences, this paper discusses some of the common challenges in implementing agile practices and recommended solutions to overcome these barriers. © Springer International Publishing Switzerland 2016.},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-27896-4_2},
  Editor                   = {Sillitti A., Ciancarini P., Succi G., Messina A.},
  ISBN                     = {9783319278940},
  ISSN                     = {18650929},
  Keywords                 = {Application programs; Budget control; Mergers and acquisitions; Software design, Agile development; Agile practices; Agile software development; Defense acquisitions; Development teams; Iterative approach; Planning and execution; User involvement, Software engineering},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958255895&doi=10.1007%2f978-3-319-27896-4_2&partnerID=40&md5=7402a5b5e9149555ea029103755b52db}
}

@Article{Chang20153621,
  Title                    = {AgiRPG: An agile-based role-playing game design system},
  Author                   = {Chang, W.-C. and Chang, T.-W. and Hung, C.-W.},
  Journal                  = {Advanced Science Letters},
  Year                     = {2015},
  Note                     = {cited By 0},
  Number                   = {12},
  Pages                    = {3621-3626},
  Volume                   = {21},

  Abstract                 = {This paper proposes a game-design supporting system that allows map-based role-playing game (RPG) designer can easily design the game, and give the RPG a visual design environment instead of traditional programming interface. Additionally, the agile software development concept has adapted into RPG’s development Process, and let game developmental data can be easier managed and reduce redundant information appeared. The design of data and objects are introduced by a modular production and can be portable to different platform. Using an object-oriented approach to perform various elements of RPG in the modular design, providing designers to compose the basic components together and simultaneously increasing the game’s expansibility and a more convenient environment for updating. © 2015 American Scientific Publishers All rights reserved.},
  Author_keywords          = {Agile framework; Game; Game maker; Role-playing game},
  Document_type            = {Article},
  Doi                      = {10.1166/asl.2015.6566},
  ISSN                     = {19366612},
  Publisher                = {American Scientific Publishers},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84961252676&doi=10.1166%2fasl.2015.6566&partnerID=40&md5=cefb9d021076540d0334f0b136f1a2b3}
}

@Article{Chen201772,
  Title                    = {Continuous Delivery: Overcoming adoption challenges},
  Author                   = {Chen, L.},
  Journal                  = {Journal of Systems and Software},
  Year                     = {2017},
  Note                     = {cited By 0},
  Pages                    = {72-86},
  Volume                   = {128},

  Abstract                 = {Continuous Delivery (CD) is a relatively new software development approach. Companies that have adopted CD have reported significant benefits. Motivated by these benefits, many companies would like to adopt CD. However, adopting CD can be very challenging for a number of reasons, such as obtaining buy-in from a wide range of stakeholders whose goals may seemingly be different from—or even conflict with—our own; gaining sustained support in a dynamic complex enterprise environment; maintaining an application development team's momentum when their application's migration to CD requires an additional strenuous effort over a long period of time; and so on. To help overcome the adoption challenges, I present six strategies: (1) selling CD as a painkiller; (2) establishing a dedicated team with multi-disciplinary members; (3) continuous delivery of continuous delivery; (4) starting with the easy but important applications; (5) visual CD pipeline skeleton; (6) expert drop. These strategies were derived from four years of experience in implementing CD at a multi-billion-euro company. Additionally, our experience led to the identification of eight further challenges for research. The information contributes toward building a body of knowledge for CD adoption. © 2017 The Author},
  Author_keywords          = {Adoption; Agile Software Development; Continuous Delivery; Continuous Deployment; Continuous Software Engineering; DevOps},
  Coden                    = {JSSOD},
  Document_type            = {Article},
  Doi                      = {10.1016/j.jss.2017.02.013},
  ISSN                     = {01641212},
  Keywords                 = {Software engineering, Adoption; Agile software development; Continuous Delivery; Continuous Deployment; Continuous software engineerings; DevOps, Software design},
  Publisher                = {Elsevier Inc.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85016081845&doi=10.1016%2fj.jss.2017.02.013&partnerID=40&md5=43909814037b8d34d55efc68c6dec662}
}

@Conference{Chen201684,
  Title                    = {Continuous delivery: Overcoming adoption obstacles},
  Author                   = {Chen, L.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {84},
  Publisher                = {Association for Computing Machinery, Inc},

  Abstract                 = {Continuous Delivery (CD) can bring huge benefits, but implementing CD is challenging. For some challenges, one can only see them when he/she travels on the journey far enough. Paddy Power has been implementing CD for more than three years. In this talk, I will present the major obstacles we encountered and how we addressed them. These obstacles cover various areas, including organizational, cultural, process, and technical. I will also discuss the areas where I see researchers can help. Copyright is held by the owner/author(s).},
  Art_number               = {2896956},
  Author_keywords          = {Agile software development; Continuous delivery; Continuous deployment; Continuous software engineering},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2896941.2896956},
  ISBN                     = {9781450341578},
  Journal                  = {Proceedings - International Workshop on Continuous Software Evolution and Delivery, CSED 2016},
  Keywords                 = {Software engineering, Agile software development; Continuous delivery; Continuous deployment; Continuous software engineerings, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84984661244&doi=10.1145%2f2896941.2896956&partnerID=40&md5=b70840d679003e2cc5787e4272ad54fe}
}

@Conference{Chen20152,
  Title                    = {Research opportunities in continuous delivery: Reflections from two years' experiences in a large bookmaking company},
  Author                   = {Chen, L.},
  Year                     = {2015},
  Note                     = {cited By 0},
  Pages                    = {2},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {We have been implementing continuous delivery in Paddy Power, a large organization in the bookmaking industry, for more than two years. In this talk, I will reflect on our journey to continuous delivery and discuss the research opportunities I see. © 2015 IEEE.},
  Art_number               = {7169441},
  Author_keywords          = {Agile software development; Continuous delivery; Continuous deployment; Continuous software engineering; Devops; Release engineering},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/RELENG.2015.9},
  ISBN                     = {9781479919345},
  Journal                  = {Proceedings - 3rd International Workshop on Release Engineering, RELENG 2015},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84962223133&doi=10.1109%2fRELENG.2015.9&partnerID=40&md5=933043f5864a13a091bc5a2f3184398a}
}

@Article{Chen20162753,
  Title                    = {Onboard: A data-driven agile software development collaboration tool},
  Author                   = {Chen, L. and Ye, W. and Zhang, S.},
  Journal                  = {Jisuanji Yanjiu yu Fazhan/Computer Research and Development},
  Year                     = {2016},
  Note                     = {cited By 0},
  Number                   = {12},
  Pages                    = {2753-2767},
  Volume                   = {53},

  Abstract                 = {Scrum is an agile software development process with a balance between schedule and flexibility, which empowers software development teams with the ability to work efficiently and respond to changes quickly at the same time. Each step in the software development process can generate tons of data, which can further facilitate team and project management and improve development efficiency if these data are captured, analyzed, displayed and fed back. However, these data are commonly scattered and under-utilized because project management and source code management are separated in existing software development management toolbox. To promote data-driven agile software development process with Scrum at its core, we create Onboard, an agile software development collaboration tool based on cloud service, which, by associating Git commits with tasks, creatively incorporates agile process management, source code management and project management into one integrated service for software development teams. Onboard supports end-to-end management of the whole software life cycle, thus it can collect all the data generated throughout the development process and extract valuable information. This paper first introduces the design principle and structure of Onboard, and then gives a comprehensive survey of data visualization and analysis applied in Onboard. In the survey, we propose solutions to a series of related problems on two topics: how to fully utilize the data generated to improve agile development process and how to evaluate the contribution of a team member. In the final analysis, the paper provides topics that need further research. © 2016, Science Press. All right reserved.},
  Author_keywords          = {Affected lines of code (ALOC); Agile software development; Associating commit with task; Contribution evaluation; Data visualization; Data-driven; Scrum; Software life cycle},
  Coden                    = {JYYFE},
  Document_type            = {Article},
  Doi                      = {10.7544/issn1000-1239.2016.20160625},
  ISSN                     = {10001239},
  Keywords                 = {Codes (symbols); Computer software; Data visualization; Human resource management; Life cycle; Project management; Quality of service; Software engineering; Surveys; Visualization, Agile software development; Associating commit with task; Contribution evaluation; Data driven; Lines of code; Scrum; Software life cycles, Software design},
  Publisher                = {Science Press},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85006493456&doi=10.7544%2fissn1000-1239.2016.20160625&partnerID=40&md5=d3b0486f12cd821a332b3ea0acb6fb3e}
}

@Conference{Chen2017532,
  Title                    = {A scalable integrated SDN and OpenStack management system},
  Author                   = {Chen, S.-C. and Hwang, R.-H.},
  Year                     = {2017},
  Note                     = {cited By 0},
  Pages                    = {532-537},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Due to the need to agilely cope with more complex and virtualized applications, integrating Software-Defined Networking (SDN) switches and OpenStack software platform into the data center has becomes an important enabling technology. However, the SDN controller and OpenStack have their own management interface, such as Horizon, which may not be able to meet the user's requirement on managing both platforms in one data center. For example, although the deployment of switches of a data center usually follows a layering hierarchy, the Graphical User Interface (GUI) of management system of the SDN controller, such as Ryu, shows the topology of switches in a random and messy manner. Furthermore, tightly integration of SDN and OpenStack is required for agile and real-time management. Thus, in this paper, we design and implement a management system which tightly integrates SDN and OpenStack. In the proposed management system, the topology displays SDN switches, Open vSwitches (OVS), as well as virtual machines in hierarchy of multi-rooted trees. In order to display millions of virtual machines and thousands of switches, the GUI of the proposed management system provides a scalable view for users to zoom in or zoom out the topology. The proposed management system adopts modular design and provides web-based user interface and RESTful API for interoperability. The prototype of the proposed management system is shown to demonstrate the usability and scalability of the proposed system. © 2016 IEEE.},
  Art_number               = {7876383},
  Author_keywords          = {Integration; Management system; OpenStack; Scalability; SDN},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/CIT.2016.27},
  ISBN                     = {9781509043149},
  Journal                  = {Proceedings - 2016 16th IEEE International Conference on Computer and Information Technology, CIT 2016, 2016 6th International Symposium on Cloud and Service Computing, IEEE SC2 2016 and 2016 International Symposium on Security and Privacy in Social Networks and Big Data, SocialSec 2016},
  Keywords                 = {Application programming interfaces (API); Application programs; Big data; Computer privacy; Distributed computer systems; Graphical user interfaces; Integration; Interoperability; Network security; Platform as a Service (PaaS); Scalability; Social sciences computing; Topology; User interfaces; Virtual machine, Design and implements; Enabling technologies; Graphical user interfaces (GUI); Management interfaces; Management systems; OpenStack; Software defined networking (SDN); Tightly integrations, Information management},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85017371170&doi=10.1109%2fCIT.2016.27&partnerID=40&md5=5b290a87f9f52447a1e225f012db9546}
}

@Conference{Chimalakonda201317,
  Title                    = {What makes it hard to apply software product lines to educational technologies?},
  Author                   = {Chimalakonda, S. and Nori, K.V.},
  Year                     = {2013},
  Note                     = {cited By 1},
  Pages                    = {17-20},

  Abstract                 = {In this paper, we present our experience of mining a software product line (SPL) from 9 existing eLearning systems developed at 9 different locations by 9 different teams following 9 varied development processes over a decade. The goal of this family of eLearning systems is to address 287 million adult illiterates in India spread across 22 Indian languages. This presents a unique and challenging situation as the SPL arises from a societal context rather than a business context as in traditional SPL. We explain the context of this domain and present the key challenges of mining an SPL from these eLearning systems. The main intent of this paper is to present our journey of applying SPL to these legacy eLearning systems in the last six years. Finally, we briefly discuss the ideas of Lean Software Product Lines and Global Software Product Lines as two potential future research directions for the SPL community. © 2013 IEEE.},
  Art_number               = {6608657},
  Author_keywords          = {agile; educational technologies; eLearning systems; global software development; lean; Software product lines},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/PLEASE.2013.6608657},
  ISBN                     = {9781467364492},
  Journal                  = {2013 4th International Workshop on Product LinE Approaches in Software Engineering, PLEASE 2013 - Proceedings},
  Keywords                 = {agile; E-learning systems; Global software development; lean; Software Product Line, Computer software; Educational technology; Legacy systems, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84886073928&doi=10.1109%2fPLEASE.2013.6608657&partnerID=40&md5=2e7c92776a04305ae63d662530fa5bf4}
}

@Article{Choi2015252,
  Title                    = {IRIS-CoMan: Scalable and Reliable Control and Management Architecture for SDN-Enabled Large-Scale Networks},
  Author                   = {Choi, T. and Lee, B. and Kang, S. and Song, S. and Park, H. and Yoon, S. and Yang, S.},
  Journal                  = {Journal of Network and Systems Management},
  Year                     = {2015},
  Note                     = {cited By 2},
  Number                   = {2},
  Pages                    = {252-279},
  Volume                   = {23},

  Abstract                 = {A software-defined network (SDN) enables agile network control and configuration as well as shortens the network function deployment time. Despite the projected benefits of an SDN, the abstractions toward the remote and centralized control tend to impose excessive control traffic overhead in order for the controller to acquire global network visibility as well as extend the legacy network’s inaccurate and unreliable management problems into the control plane. In addition, many recent SDNs facilitate multiple management pillars (such as customized interfaces and protocols) so that user applications can directly communicate to the data plane to measure and monitor specific information. Not only logical control centralization, but also virtualization of the underlying computing and network resources add demands of more flexible and programmable monitoring functions per the virtual domain. A complex combination of multiple and heterogeneous management channels introduces the significant scalability, control tuning, and reliability problems in SDN. In this paper, to address the above control and management problems, we propose a highly scalable and reliable SDN control and management architecture, called IRIS Control and Management (IRIS-CoMan). It builds an intelligent agent based hybrid SDN architecture by providing a control and management abstraction and filtering layer. It serves an essential component for the reliable, scalable, and secure SDN deployment. We present design, implementation, deployment, and feasibility evaluation results of IRIS-CoMan. © 2015, Springer Science+Business Media New York.},
  Author_keywords          = {Middlebox; Reliability; Scalability; SDN controller; SDN management; Software-defined network (SDN)},
  Coden                    = {JNSME},
  Document_type            = {Article},
  Doi                      = {10.1007/s10922-015-9341-0},
  ISSN                     = {10647570},
  Keywords                 = {Abstracting; Complex networks; Network architecture; Reliability; Scalability; Software reliability; Virtual reality, Agent-based hybrids; Control and management; Large-scale network; Middleboxes; Monitoring functions; Reliability problems; Software-defined networks; Specific information, Controllers},
  Publisher                = {Springer New York LLC},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84924040497&doi=10.1007%2fs10922-015-9341-0&partnerID=40&md5=abf779948fee9f6ee0d2da59b88ebdc2}
}

@Article{Choma2015163,
  Title                    = {Communication of design decisions and usability issues: A protocol based on personas and nielsen’s heuristics},
  Author                   = {Choma, J. and Zaina, L.A.M. and Beraldo, D.},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2015},
  Note                     = {cited By 2},
  Pages                    = {163-174},
  Volume                   = {9169},

  Abstract                 = {Although both agile developers and UX designers have a common concern regarding to build software with quality, they usually have different viewpoint of the user experience and usability. We have proposed a protocol in which personas and Nielsen’s heuristics were used as a common vocabulary between designers and developers (SCRUM team) for the communication of recommendations and/or design solutions. We have adopted action research to conduct our research, performing a workshop and interviews to study the feasibility of the proposal; and later two case studies to compare and evaluate the use and non-use the protocol. In the final, adding to the case study comparison, we interviewed the SCRUM team who revealed that the protocol improved the understanding of recommendations and the Nielsen’s heuristics contributed to objectively communicate the main problems of interaction. © Springer International Publishing Switzerland 2015.},
  Author_keywords          = {Action research; ERP; Interaction design; SCRUM; User experience},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-20901-2_15},
  Editor                   = {Kurosu M.},
  ISBN                     = {9783319209005},
  ISSN                     = {03029743},
  Keywords                 = {Design; Enterprise resource planning; User interfaces, Action research; Case-studies; Design decisions; Design solutions; Interaction design; SCRUM; Study comparisons; User experience, Human computer interaction},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84947231259&doi=10.1007%2f978-3-319-20901-2_15&partnerID=40&md5=43e126fb72f273c042dbfa597be9169e}
}

@Book{Chung20131764,
  Title                    = {Analyses of evolving legacy software into secure service-oriented software using scrum and a visual model},
  Author                   = {Chung, S. and Endicott-Popovsky, B. and Crompton, C. and Baeg, S.-H. and Bai, Y. and Park, S.},
  Publisher                = {IGI Global},
  Year                     = {2013},
  Note                     = {cited By 0},
  Volume                   = {4-4},

  Abstract                 = {This chapter explores using service-oriented computing to reengineer non-secure legacy software applications to create new secure target applications. Two objectives of this chapter are: (1) to analyze the architectural changes required in order to adopt new web technologies and cope with resultant vulnerabilities in source code; and (2) to measure the level of effort required to modernize software by adopting new web technologies and adding security countermeasures. To meet these objectives, a modeldriven Scrum for Service-Oriented Software Reengineering (mScrum4SOSR) methodology was chosen and applied to a reengineering project. Scrum is employed to manage the reengineering project, as well as to measure implementation effort related to the modernization process. Further, a re-documentation technique called 5W1H Re-Doc is used to re-document the non-secure software application at a high level of abstraction in order to help project participants comprehend what is needed to identify candidate services for service-oriented reengineering. Case studies with and without security features are created for different types of applications-a desktop graphical user interface, a web application, a web services application, a restful web services application, and an enterprise service bus application. © 2014, IGI Global.},
  Document_type            = {Book Chapter},
  Doi                      = {10.4018/978-1-4666-4301-7.ch084},
  ISBN                     = {9781466643024; 1466643013; 9781466643017},
  Journal                  = {Software Design and Development: Concepts, Methodologies, Tools, and Applications},
  Pages                    = {1764-1786},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84944683219&doi=10.4018%2f978-1-4666-4301-7.ch084&partnerID=40&md5=82fa6b6fd81ec7d49d57e7e99354cb85}
}

@Conference{Cicchetti20168,
  Title                    = {Software evolution management: Industrial practices},
  Author                   = {Cicchetti, A. and Ciccozzi, F. and Carlson, J.},
  Year                     = {2016},
  Editor                   = {Mayerhofer T., Pierantonio A., Tamzalit D., Schatz B., Pierantonio A.},
  Note                     = {cited By 0},
  Pages                    = {8-13},
  Publisher                = {CEUR-WS},
  Volume                   = {1706},

  Abstract                 = {The complexity of modern software systems and the global competition make the adoption of model-based techniques unavoidable. A higher level of abstraction not only allows to mitigate the intricacy of the development, e.g., through separation of concerns, but it is also expected to permit shorter round-Trip cycles to add new system functionalities, fix bugs, and refine existing features. This paper reports practical experiences in the management of industrial software evolution collected by means of semi-structured interviews with software development experts. All the interviewed companies develop embedded real-Time safety-critical systems and aim at reaching more agile processes. Interestingly, while model-based methodologies appear to be widely accepted, shortening round-Trip cycles due to changes appears still to be a major issue towards a more effcient development process.},
  Author_keywords          = {Industrial software systems; Model-driven engineering; Modelbased development; Round-Trip engineering; System evolution},
  Document_type            = {Conference Paper},
  ISSN                     = {16130073},
  Journal                  = {CEUR Workshop Proceedings},
  Keywords                 = {Computer software; Embedded systems; Program debugging; Real time systems; Safety engineering; Systems analysis, Industrial software; Model based development; Model-driven Engineering; Round trip; System evolution, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84996757897&partnerID=40&md5=1c361f0184a5aceb186501e09ebc14b7}
}

@Article{Claps201521,
  Title                    = {On the journey to continuous deployment: Technical and social challenges along the way},
  Author                   = {Claps, G.G. and Berntsson Svensson, R. and Aurum, A.},
  Journal                  = {Information and Software Technology},
  Year                     = {2015},
  Note                     = {cited By 26},
  Number                   = {1},
  Pages                    = {21-31},
  Volume                   = {57},

  Abstract                 = {Context: Continuous Deployment (CD) is an emerging software development process with organisations such as Facebook, Microsoft, and IBM successfully implementing and using the process. The CD process aims to immediately deploy software to customers as soon as new code is developed, and can result in a number of benefits for organisations, such as: new business opportunities, reduced risk for each release, and prevent development of wasted software. There is little academic literature on the challenges organisations face when adopting the CD process, however there are many anecdotal challenges that organisations have voiced on their online blogs. Objective: The aim of this research is to examine the challenges faced by organisations when adopting CD as well as the strategies to mitigate these challenges. Method: An explorative case study technique that involves in-depth interviews with software practitioners in an organisation that has adopted CD was conducted to identify these challenges. Results: This study found a total of 20 technical and social adoption challenges that organisations may face when adopting the CD process. The results are discussed to gain a deeper understanding of the strategies employed by organisations to mitigate the impacts of these challenges. Conclusion: While a number of individual technical and social adoption challenges were uncovered by the case study in this research, most challenges were not faced in isolation. The severity of these challenges were reduced by a number of mitigation strategies employed by the case study organisation. It is concluded that organisations need to be well prepared to handle technical and social adoption challenges with their existing expertise, processes and tools before adopting the CD process. For practitioners, knowing how to address the challenges an organisation may face when adopting the CD process provides a level of awareness that they previously may not have had. © 2014 Elsevier B.V. All rights reserved.},
  Author_keywords          = {Agile software development; Challenges and mitigation strategies; Continuous deployment; Lean software development},
  Coden                    = {ISOTE},
  Document_type            = {Conference Paper},
  Doi                      = {10.1016/j.infsof.2014.07.009},
  ISSN                     = {09505849},
  Keywords                 = {Social networking (online); Societies and institutions; Software engineering, Academic literature; Agile software development; Business opportunities; Continuous deployment; Lean software development; Mitigation strategy; Software development process; Software practitioners, Software design},
  Publisher                = {Elsevier},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84922515690&doi=10.1016%2fj.infsof.2014.07.009&partnerID=40&md5=ba344aa560f783ed720a9aaf8ddc5701}
}

@Article{Clarke2016351,
  Title                    = {An investigation of software development process terminology},
  Author                   = {Clarke, P. and Mesquida, A.-L. and Ekert, D. and Ekstrom, J.J. and Gornostaja, T. and Jovanovic, M. and Johansen, J. and Mas, A. and Messnarz, R. and Villar, B.N. and O’Connor, A. and O’Connor, R.V. and Reiner, M. and Sauberer, G. and Schmitz, K.-D. and Yilmaz, M.},
  Journal                  = {Communications in Computer and Information Science},
  Year                     = {2016},
  Note                     = {cited By 1},
  Pages                    = {351-361},
  Volume                   = {609},

  Abstract                 = {The practice of software development has evolved considerably in recent decades, with new programming technologies, the affordability of hardware, pervasive internet access and mobile computing all contributing to the emergence of new software development processes. The newer process initiatives, which include those which are sometimes referred to as agile or lean methods, have brought with them new terms, which sometimes reflect the introduction of novel concepts. Other times, new terms correspond to long established concepts that have been repackaged. The net position is that we have a proliferation of language and term usage in the software development process domain, a problem which has implications for assessors and assessment frameworks, and for the broader community. In this paper, we explore this problem, finding that it is worthy of further research. Plus, we identify a technique suited to addressing this concern: the establishment of a canonical software process ontological model. © Springer International Publishing Switzerland 2016.},
  Author_keywords          = {Ontology; Software development process; Software development roles; Software engineering; Specialised communication; Terminology},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-38980-6_25},
  Editor                   = {Dorling A., O'Connor R.V., Clarke P.M., Rout T.},
  ISBN                     = {9783319389790},
  ISSN                     = {18650929},
  Keywords                 = {Circuit simulation; Ontology; Process engineering; Software engineering; Terminology, Internet access; Lean methods; New terms; Novel concept; Ontological modeling; Programming technology; Software development process; Software process, Software design},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84994005738&doi=10.1007%2f978-3-319-38980-6_25&partnerID=40&md5=bc0464fe6d7478a66eaeb5e80d965984}
}

@Conference{Clerigo2014,
  Title                    = {A simulated journey to mercury: The challenges of the bepicolombo simulator development for the flight control team},
  Author                   = {Clerigo, I. and Montagnon, E. and Segneri, D.},
  Year                     = {2014},
  Note                     = {cited By 1},
  Publisher                = {American Institute of Aeronautics and Astronautics Inc.},

  Abstract                 = {BepiColombo is a mission to Mercury of the European Space Agency, in collaboration with the Japanese Space Agency, due to launch in July 2016. A spacecraft simulator is being developed by the European space industry for the European Space Operations Centre (ESOC) to support the operations. An Agile software methodology, based on iterative and incremental reviews and frequent prototype versions called sprints, has been applied for the first time in the development of a simulator at ESOC. This paper analyses the benefits and the impact of such dynamic process from the Flight Control Team perspective. It also presents the key innovations introduced in the BepiColombo simulator and in particular the use of a generic payload model that can be customized directly by the Flight Control Team to simulate the behaviour of the spacecraft's payloads. How this generic approach to payload modelling can help to reduce the simulator development cost while providing more flexibility to the operations team is also the subject of this paper.},
  Document_type            = {Conference Paper},
  Journal                  = {13th International Conference on Space Operations, SpaceOps 2014},
  Keywords                 = {Iterative methods; Mercury (metal); Simulators; Space flight; Space simulators, Development costs; European Space Agency; European space industry; European space operations centres; Generic approach; Japanese space agency; Prototype versions; Spacecraft simulators, Computer software},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84901284821&partnerID=40&md5=358a2fa5bbeed44ca4b02607c47ea8ab}
}

@Book{Cochrane2015291,
  Title                    = {Design-based research with AGILE sprints to produce MUVES in vocational education},
  Author                   = {Cochrane, T. and Davis, N.E. and Mackey, J.},
  Publisher                = {IGI Global},
  Year                     = {2015},
  Note                     = {cited By 0},

  Abstract                 = {An innovative approach to effective design, development and testing of Multi-User Virtual Environments (MUVE) in vocational education is provided. It blends Agile software development with design based research (DBR), seeded with educational frameworks and theories relevant to vocational education. Legitimate peripheral participation was used as a filter to inform design thinking for authentic vocational contexts because moving towards being work ready increases the student's legitimate practices particular to a vocation. Technological Pedagogical Content Knowledge TPACK (Mishra & Koehler 2006) provided a framework to link content and pedagogy with the MUVE technology. Software development techniques for MUVEs are shown to have characteristics compatible with design based research. A design based methodological process that introduces software development within phases is described. The approach is illustrated in the design of two MUVE to simulate (1) the hazardous situation of temporary traffic management and (2) communication on a maritime ship's bridge. © 2016, IGI Global. All rights reserved.},
  Document_type            = {Book Chapter},
  Doi                      = {10.4018/978-1-4666-8847-6.ch013},
  ISBN                     = {9781466688483; 1466688475; 9781466688476},
  Journal                  = {Utilizing Virtual and Personal Learning Environments for Optimal Learning},
  Pages                    = {291-313},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84957990726&doi=10.4018%2f978-1-4666-8847-6.ch013&partnerID=40&md5=90a4d478a33250d66571243ddb0231b2}
}

@Article{Colavita2016203,
  Title                    = {Devops movement of enterprise agile breakdown silos, create collaboration, increase quality, and application speed},
  Author                   = {Colavita, F.},
  Journal                  = {Communications in Computer and Information Science},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {203-213},
  Volume                   = {422},

  Abstract                 = {The DevOps movement is gaining traction in organizations around the world because it is the best way to address many of the competitive challenges that enterprises are facing. It extends the most valuable aspects of agile development throughout the application life cycle, removing the bottlenecks that slow down application development and delivery, reducing enterprises costs, and improving satisfaction, results, and reputation. The best way to start this journey is based on an holistic approach that extends agile principles to the full enterprise; this model can help private and public companies to speed up the transformation and: • Eliminate silos across the organization. • Enable cross-team collaboration. • Automate build, test, and deployment processes. • Accelerate release cycles. • Shift left in the development process and test in production. © Springer International Publishing Switzerland 2016.},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-27896-4_17},
  Editor                   = {Sillitti A., Ciancarini P., Succi G., Messina A.},
  ISBN                     = {9783319278940},
  ISSN                     = {18650929},
  Keywords                 = {Life cycle; Software engineering, Agile development; Application development; Application life cycles; Deployment process; Development process; Holistic approach; Public company; Team collaboration, Application programs},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958248989&doi=10.1007%2f978-3-319-27896-4_17&partnerID=40&md5=425cd91d88c9537ed1f0f563b918d0e1}
}

@Conference{Colombo2015,
  Title                    = {Software defined networking: Proof of concept demonstration over a DWDM optical ring},
  Author                   = {Colombo, C. and Benaglia, O.},
  Year                     = {2015},
  Note                     = {cited By 0},
  Number                   = {CP667},
  Publisher                = {Institution of Engineering and Technology},
  Volume                   = {2015},

  Abstract                 = {This paper gives an overview on how Software Defined Networking (SDN) principles can be applied to existing optical networks, considering the requirements introduced by the last technology's improvement. A description of a proof of concept activity will be proposed. The demonstration shows how extending SDN to the metro area and wide area network (Transport SDN) can fully exploit the dynamism of an Agile Optical Network, with multi-tenant service management, virtual slicing of network resources for advanced services such as Encrypted and Secure Data Center connection, or Dynamic Bandwidth Allocation and even GMPLS restoration that are under Transport SDN control.},
  Author_keywords          = {DWDM; NSP; Optical network; SDN},
  Document_type            = {Conference Paper},
  Doi                      = {10.1049/cp.2015.0107},
  Journal                  = {IET Conference Publications},
  Keywords                 = {Dense wavelength division multiplexing; Fiber optic networks; Frequency allocation; Information management; Network security; Photonics, Agile optical networks; Dynamic bandwidth allocation; NSP; Proof of concept; SDN; Service management; Software defined networking (SDN); Software-defined networkings, Wide area networks},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84946098674&doi=10.1049%2fcp.2015.0107&partnerID=40&md5=29919831d8a35d65c27a2199fd346281}
}

@Article{Colonese201659,
  Title                    = {Agile: The human factors as the weakest link in the chain},
  Author                   = {Colonese, E.},
  Journal                  = {Communications in Computer and Information Science},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {59-73},
  Volume                   = {422},

  Abstract                 = {Despite the excellent results achieved by the agile methodologies, software projects continue to fail. Organizations are struggling to adopt such methods. Resistance to change is strong. The reasons, related to the culture and people, are many. The human factor is the weakest link in the organizational chain. Many inhibitors prevent the adoption of good practices. C.G. Jung stated in 1921 “how difficult it was for people to accept a point of view other than their own.” Based on his mental process, two American researchers, mother and daughter, have created the homonymous model Myers–Briggs Type Indicator (MBTI). The tool helps us to better understanding others and ourselves: how to gather information from the outside, how to elaborate information and make decisions, and how to act afterward. MBTI supports Agile in creating successful teams: better communication, share of leadership, effective problem solving, stress management, etc. Psychological Types at Work, 2013 provides a guide to these items. © Springer International Publishing Switzerland 2016.},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-27896-4_6},
  Editor                   = {Sillitti A., Ciancarini P., Succi G., Messina A.},
  ISBN                     = {9783319278940},
  ISSN                     = {18650929},
  Keywords                 = {Application programs; Chains; Human engineering; Human resource management; Problem solving, Agile Methodologies; Good practices; Mental process; Resistance to change; Software project; Stress management; Weakest links, Software engineering},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958240871&doi=10.1007%2f978-3-319-27896-4_6&partnerID=40&md5=042c8d686e75921ca15472aba3e18aa2}
}

@Article{Conboy2015168,
  Title                    = {Agile design science research},
  Author                   = {Conboy, K. and Gleasure, R. and Cullina, E.},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2015},
  Note                     = {cited By 2},
  Pages                    = {168-180},
  Volume                   = {9073},

  Abstract                 = {As design science has matured, prescriptive frameworks and best practices have been advanced to assist researchers and lay out the academic standards for the paradigm. We argue that the problem-solving model underlying much of this progress has limited the ability of researchers to produce creative artefacts. To address this, we propose an amended Agile Design Science Research Methodology (ADSRM). ADSRM draws upon breakthroughs made in industry by those adopting ‘agile’ perspectives on IT development. This agile perspective balances procedural rigour with the need to consider empiricallydriven problem/solution coevolution, allowing development to hone in on the most meaningful and unanticipated of problems. ADSRM proposes amendments to several existing DSR best practices, as well as two entirely new components to be modelled in the design process, namely a problem backlog and a hardening sprint. The value of these additions is illustrated in two exemplar cases. © Springer International Publishing Switzerland 2015.},
  Author_keywords          = {Agile; Design science; Software development},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-18714-3_11},
  Editor                   = {Donnellan B., VanderMeer D., Kenneally J., Winter R., Rothenberger M., Helfert M.},
  ISBN                     = {9783319187136},
  ISSN                     = {03029743},
  Keywords                 = {Problem solving; Product design; Software design; Software engineering, Academic standards; Agile; Best practices; Co-evolution; Design process; Design science; It development; New components, Design},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84937485455&doi=10.1007%2f978-3-319-18714-3_11&partnerID=40&md5=eaf34bbcc0cfda629d5424b1688f51a6}
}

@Article{Conforto201421,
  Title                    = {Can agile project management be adopted by industries other than software development?},
  Author                   = {Conforto, E.C. and Salum, F. and Amaral, D.C. and Da Silva, S.L. and De Almeida, L.F.M.},
  Journal                  = {Project Management Journal},
  Year                     = {2014},
  Note                     = {cited By 23},
  Number                   = {3},
  Pages                    = {21-34},
  Volume                   = {45},

  Abstract                 = {This research paper presents evidence from an exploratory survey on the use of agile project management (APM) practices and the presence of APM enablers in 19 medium- and large-sized companies from different industry sectors considering innovative projects. The results show that these companies are possibly struggling to use their current management practices in the face of different project challenges. Additionally, the presence of some APM enablers indicates opportunities to adapt the APM theory for different companies other than those in software development. Future research should explore the correlation between APM practices and enablers in order to develop "hybrid" management models for different industries. © 2014 by the Project Management Institute.},
  Author_keywords          = {agile project management; APM enablers; APM practices; project management},
  Document_type            = {Article},
  Doi                      = {10.1002/pmj.21410},
  ISSN                     = {87569728},
  Publisher                = {Wiley-Blackwell},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84901848359&doi=10.1002%2fpmj.21410&partnerID=40&md5=a0ba8f9d9b1922310133849f05b4a309}
}

@Article{Corona20131,
  Title                    = {A review of Lean-Kanban approaches in the software development},
  Author                   = {Corona, E. and Pani, F.E.},
  Journal                  = {WSEAS Transactions on Information Science and Applications},
  Year                     = {2013},
  Note                     = {cited By 3},
  Number                   = {1},
  Pages                    = {1-13},
  Volume                   = {10},

  Abstract                 = {We present a review on the state-of-the-art of the adoption of a specific Agile Methodology (AM), the Lean-Kanban, in different software development contexts. Such approach requires to break down the software development process into smaller steps, which are implemented with the aid of a Kanban board. We study 14 different Kanban boards and we also examined how features are represented in the boards and compared 22 software tools for implementing virtual Kanban boards, analyzing also resources available on the web. We analyzed the main features of the Kanban boards actually used, the main activities defining the software development process, the content of the cards representing work units, and also the automation tools available for Kanban board management. Our survey shows that nor standard definitions of Kanban practices exist for the software development, neither specific practices for the Kanban board management have been rigorously defined, and thus Lean development standardization and improvement is still an unaccomplished task for software development.},
  Author_keywords          = {Agile methodologies; Kanban; Lean; Software development},
  Document_type            = {Review},
  ISSN                     = {17900832},
  Keywords                 = {Agile Methodologies; Agile methodology; Automation tools; Kanban; Lean; Lean development; Software development process; Standard definitions, Software engineering; Standardization, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84877753673&partnerID=40&md5=b9de6cb37a0e91c013495f75c7c8a45e}
}

@Article{Corral201390,
  Title                    = {Agile software development processes for mobile systems: Accomplishment, evidence and evolution},
  Author                   = {Corral, L. and Sillitti, A. and Succi, G.},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2013},
  Note                     = {cited By 5},
  Pages                    = {90-106},
  Volume                   = {8093 LNCS},

  Abstract                 = {Mobile software applications have to cope with a particular execution environment that includes limited resources, high autonomy requirements, market regulations, and many other constraints. To provide a software development process that responds to these challenges, several methodologies proposed the adoption of Agile practices; however, it is not clear how a software development process would help to solve all the issues present in the mobile domain. Moreover, the rapid evolution of the mobile environment questions several of the premises upon which the proposed methodologies were designed. In this paper, we present a review on Agile software development processes for mobile applications and their implementations, with the objective of knowing the contribution of Agile methods to address the needs of the mobile software in a real production environment. In addition, we aim to put up to date the discussion about what are the best practices that facilitate the creation of high quality software products in the current mobile domain. © 2013 Springer-Verlag.},
  Author_keywords          = {Agile; Development; Mobile; Process; Quality},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-642-40276-0_8},
  ISBN                     = {9783642402753},
  ISSN                     = {03029743},
  Keywords                 = {Agile; Agile software development process; Development; Execution environments; Mobile; Mobile software applications; Production environments; Software development process, Application programs; Image quality; Processing; World Wide Web, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84883179648&doi=10.1007%2f978-3-642-40276-0_8&partnerID=40&md5=9284fc095a8cbbc6203a3a628ada65c3}
}

@Article{Cotugno20161,
  Title                    = {Managing increasing user needs complexity within the ita army agile framework},
  Author                   = {Cotugno, F.R.},
  Journal                  = {Communications in Computer and Information Science},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {1-11},
  Volume                   = {422},

  Abstract                 = {The innovations introduced in the Italian Army in Software (SW) Development Methodologies in the context of the “ITA ARMY AGILE” (IAA) initiative require attentive and tailored governance with regard to the growth of the enterprise complexity and the future requirements related to the development of Command and Control systems. Starting from a limited approach centered on a single Integrated Development Team (IDT), an unprecedented growth of the product is being experienced due essentially to the fact that the customer has been “educated” and is now capable of stating its needs. Consequently, in the positive environment created and witnessed by the change of mentality, a brief description of the issues, chiefly but not solely linked to the scarcity of resources, time management, and procedures complexity, will be provided in order to take the whole Land Command and Control Evolution (LC2EVO) under the expected control. © Springer International Publishing Switzerland 2016.},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-27896-4_1},
  Editor                   = {Sillitti A., Ciancarini P., Succi G., Messina A.},
  ISBN                     = {9783319278940},
  ISSN                     = {18650929},
  Keywords                 = {Application programs; Software engineering, Command and control; Development methodology; Integrated development; Italian Army; Time management; User need, Command and control systems},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958260970&doi=10.1007%2f978-3-319-27896-4_1&partnerID=40&md5=4cff0ab47b5a94c72f956a081b70d6f4}
}

@Article{Crawford2015131,
  Title                    = {Creativity in agile software development methods},
  Author                   = {Crawford, B. and Crawford, K. and Soto, R. and de la Barra, C.L.},
  Journal                  = {Communications in Computer and Information Science},
  Year                     = {2015},
  Note                     = {cited By 0},
  Pages                    = {131-135},
  Volume                   = {529},

  Abstract                 = {Creativity is an inherent aspect to the development of new products, therefore a critical capacity for software development. Indicators to measure creativity are grouped into two main areas: (1) those related to the creative result itself and its quality (including novelty and usefulness) and (2) those related to the creative team itself (considering indicators such as individual and group satisfaction, development of cognitive skills, group interaction,…). From this perspective, the aim of this work is to introduce some ideas for assesing the creativity of software products. © Springer International Publishing Switzerland 2015.},
  Author_keywords          = {Creativity; Measures of creativity; Software engineering},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-21383-5_22},
  Editor                   = {Stephanidis C.},
  ISBN                     = {9783319213828},
  ISSN                     = {18650929},
  Keywords                 = {Human computer interaction; Software engineering, Agile software development; Cognitive skill; Creativity; Group interaction; Measures of creativities; Software products, Software design},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84945925142&doi=10.1007%2f978-3-319-21383-5_22&partnerID=40&md5=f6e64677bef2de3cc3c4e6d1b013e752}
}

@Article{Cumps201535,
  Title                    = {KBC mobile banking},
  Author                   = {Cumps, B. and Viaene, S.},
  Journal                  = {Journal of Information Technology Teaching Cases},
  Year                     = {2015},
  Note                     = {cited By 0},
  Number                   = {1},
  Pages                    = {35-44},
  Volume                   = {5},

  Abstract                 = {When KBC Bank introduced their mobile banking application in 2011 they delivered much more than a piece of software. Mobile banking was a way to focus on their customers and rebuild trust. Yet, this case is not so much about what they delivered but how they delivered it. Agile development brought along both challenges and opportunities for KBC. The case explores how agile compares to traditional ways of ICT development. Can banks, given the new digital challenges, really build their future ICT portfolios on agile development?. © 2015 JITTC Palgrave Macmillan.},
  Author_keywords          = {Agile; Banking; ICT development; Mobile},
  Document_type            = {Article},
  Doi                      = {10.1057/jittc.2015.6},
  ISSN                     = {20438869},
  Publisher                = {Palgrave Macmillan Ltd.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84959492771&doi=10.1057%2fjittc.2015.6&partnerID=40&md5=f2a32f7d96d6f24cad7953e870bee16f}
}

@Article{DaSilvaEstácio20151,
  Title                    = {Distributed pair programming: A systematic literature review},
  Author                   = {Da Silva Estácio, B.J. and Prikladnicki, R.},
  Journal                  = {Information and Software Technology},
  Year                     = {2015},
  Note                     = {cited By 2},
  Pages                    = {1-10},
  Volume                   = {63},

  Abstract                 = {Context Geographically distributed teams have adopted agile practices as a work strategy. One of these practices is Distributed Pair Programming (DPP). DPP consists in two developers working remotely on the same design, algorithm or code. Objective In this paper we sought to identify and synthesize papers that describe and analyze DPP both from teaching and practice perspectives. Method We conducted a Systematic Literature Review to search for empirical evidence in eight digital libraries. Results Most of the 34 DPP primary studies identified explore DPP from a teaching perspective. We found that DPP requires a specific infrastructure, but the existing studies do not explore the impact of the distribution in the details. There are many tools proposed that support DPP practice, but few of them are evaluated within a software development team. Conclusion We need more studies that explore the effects of Pair Programming in the context of Distributed Software Development, such as coordination and communication. Most of the studies do not empirically evaluate DPP in industry. There is also a need to propose guidelines to use DPP in industry and as a teaching strategy. © 2015 Elsevier B.V.},
  Author_keywords          = {Distributed Pair Programming; Distributed Software Development; Extreme Programming; Pair Programming},
  Coden                    = {ISOTE},
  Document_type            = {Review},
  Doi                      = {10.1016/j.infsof.2015.02.011},
  ISSN                     = {09505849},
  Keywords                 = {Digital libraries; Software design; Software engineering, Distributed software development; EXtreme Programming; Geographically distributed teams; Pair-programming; Practice perspectives; Software development teams; Systematic literature review; Teaching strategy, Distributed computer systems},
  Publisher                = {Elsevier},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84928154536&doi=10.1016%2fj.infsof.2015.02.011&partnerID=40&md5=671981219c7bc8621366eca6b25551a7}
}

@Conference{DaSilvaEstácio2014331,
  Title                    = {A set of practices for distributed pair programming},
  Author                   = {Da Silva Estácio, B.J. and Prikladnicki, R.},
  Year                     = {2014},
  Note                     = {cited By 0},
  Pages                    = {331-338},
  Publisher                = {SciTePress},
  Volume                   = {2},

  Abstract                 = {Geographically distributed teams have adopted agile practices as a work strategy. One of these practices is Distributed Pair Programming (DPP) that consists in two developers working remotely on the same design, algorithm, or code. In this paper, we describe a set of practices for DPP. In our research we seek to understand how distributed teams can use and adopt DPP in a more effective way. Based on a systematic literature review and a field study, we suggest twelve practices that can help both professionals and software organizations in the practice of DPP. Copyright © 2014 SCITEPRESS - Science and Technology Publications.},
  Author_keywords          = {Distributed Pair Programming; Distributed Software Development; Extreme Programming},
  Document_type            = {Conference Paper},
  ISBN                     = {9789897580284},
  Journal                  = {ICEIS 2014 - Proceedings of the 16th International Conference on Enterprise Information Systems},
  Keywords                 = {Computer applications, Agile practices; Distributed software development; Distributed teams; EXtreme Programming; Geographically distributed teams; Pair-programming; Software organization; Systematic literature review, Information systems},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84902340987&partnerID=40&md5=1268b5b6145f0b4602ec4e11e95b8492}
}

@Conference{DaSilva2017107,
  Title                    = {Agility and quality attributes in open source software projects release practices},
  Author                   = {Da Silva, A.C.B.G. and De Figueiredo Carneiro, G. and De Paula, A.C.M. and Monteiro, M.P. and Brito E Abreu, F.},
  Year                     = {2017},
  Editor                   = {Paulk M., Brito M.A., Amaral V., Machado R.J., Goulao M.},
  Note                     = {cited By 0},
  Pages                    = {107-112},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Context: The need to accelerate software delivery, supporting faster time-to-market and frequent community developers/ users feedback are issues that have lead to relevant changes in software development practices. Many Open Source Software (OSS) projects have engaged to achieve this through the adoption of agile practices in software release practices. Problem: There is no secondary study in the literature discussing evidences of the influence of agile approaches in OSS projects release practices. Goal: Identify published reports in the literature that characterize to which extent agility has influenced release approaches in OSS projects. Method: The characterization of studies followed a fivephase process to present a panoramic view of software releases practices in the context of OSS projects. Results: The overall data collected from 14 studies published from January 2006 to January 2016 depicted the following scenario: nine issues that characterize the advantages/influence of agility in OSS release approaches; four challenge issues in this approach; three possibilities of implementation and two main motivations towards the adoption of software release approaches through agility; and finally three main strategies to implement it. Conclusion: This study provides an up-to-date and structured understanding of the influence of agility on OSS projects release approaches based on findings systematically collected from a list of relevant references in the last decade. © 2016 IEEE.},
  Art_number               = {7814526},
  Author_keywords          = {Agile Methods; Frequent Releases; Open Source Software Projects; Rapid Releases},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/QUATIC.2016.029},
  ISBN                     = {9781509035816},
  Journal                  = {Proceedings - 2016 10th International Conference on the Quality of Information and Communications Technology, QUATIC 2016},
  Keywords                 = {Computer software; Open systems; Software design; Software engineering, Agile approaches; Agile methods; Frequent Releases; Open source software projects; Quality attributes; Rapid release; Software development practices; Software release, Open source software},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85013821776&doi=10.1109%2fQUATIC.2016.029&partnerID=40&md5=49570f8bb5c38de7b06b2a51971f32d7}
}

@Article{DaSilva2013199,
  Title                    = {Evaluating maintainability of MDA software process models},
  Author                   = {Da Silva, B.C. and Maciel, R.S.P. and Ramalho, F.},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2013},
  Note                     = {cited By 1},
  Pages                    = {199-213},
  Volume                   = {7983 LNCS},

  Abstract                 = {The description of a software process is called a process model. As well as traditional software processes/methods (e.g. RUP, XP, OSDP, etc.) an MDA software process requires the selection of metamodels and mapping rules for the generation of the transformation chain that produces models and application code. Before software process enactment, process models should be evaluated in order to improve some quality attributes and maintainability is one of the main factors for software process reuse and improvement. This paper presents a conceptual framework including a metrics suite to evaluate maintainability of MDA process models. We also describe an empirical assessment involving three case studies where the metrics suite was applied to over five MDA process models. We compared the results indicated by the measurements with software engineer opinions surveyed by an online questionnaire. We found that the results from the metrics-based conceptual framework application match software engineers' perceptions. © 2013 Springer-Verlag.},
  Author_keywords          = {MDA; MDA processes; process maintainability; process reuse},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-642-39259-7_17},
  ISBN                     = {9783642392580},
  ISSN                     = {03029743},
  Keywords                 = {Application codes; Conceptual frameworks; Empirical assessment; MDA; Online questionnaire; Process reuse; Quality attributes; Transformation chains, Application programs; Quality control; Software architecture; Surveys, Maintainability},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84884946253&doi=10.1007%2f978-3-642-39259-7_17&partnerID=40&md5=4b055f3bc8dadf65e1856d08731aab15}
}

@Article{DaSilva2014189,
  Title                    = {Software product line scoping and requirements engineering in a small and medium-sized enterprise: An industrial case study},
  Author                   = {Da Silva, I.F. and Da Mota Silveira Neto, P.A. and O'Leary, P. and De Almeida, E.S. and Meira, S.R.D.L.},
  Journal                  = {Journal of Systems and Software},
  Year                     = {2014},
  Note                     = {cited By 4},
  Number                   = {1},
  Pages                    = {189-206},
  Volume                   = {88},

  Abstract                 = {Software product line (SPL) engineering has been applied in several domains, especially in large-scale software development. Given the benefits experienced and reported, SPL engineering has increasingly garnered interest from small to medium-sized companies. It is possible to find a wide range of studies reporting on the challenges of running a SPL project in large companies. However, very little reports exist that consider the situation for small to medium-sized enterprises and these studies try develop universal truths for SPL without lessons learned from empirical evidence need to be contextualized. This study is a step towards bridging this gap in contextual evidence by characterizing the weaknesses discovered in the scoping (SC) and requirements (RE) disciplines of SPL. Moreover, in this study we conducted a case study in a small to medium sized enterprises (SMEs) to justify the use of agile methods when introducing the SPL SC and RE disciplines through the characterization of their bottlenecks. The results of the characterization indicated that ineffective communication and collaboration, long iteration cycles, and the absence of adaptability and flexibility can increase the effort and reduce motivation during project development. These issues can be mitigated by agile methods. © 2013 Elsevier Inc. All rights reserved.},
  Author_keywords          = {Agile methods; Requirements engineering; Software product line scoping},
  Coden                    = {JSSOD},
  Document_type            = {Article},
  Doi                      = {10.1016/j.jss.2013.10.040},
  ISSN                     = {01641212},
  Keywords                 = {Agile methods; Communication and collaborations; Scoping; Small and medium-sized enterprise; Small to medium-sized enterprise; Small- to medium-sized companies; Software Product Line; Software product lines, Computer software; Industrial applications; Iterative methods; Requirements engineering; Software design, Industry},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84891625335&doi=10.1016%2fj.jss.2013.10.040&partnerID=40&md5=dd69d4becd8b94d2bc063e89827148e2}
}

@Conference{Dahl-Olsen20142847,
  Title                    = {Tackling risk in energy-optimized sensor networks for safety critical applications},
  Author                   = {Dahl-Olsen, H. and Østdahl, A. and Williamsen, A.},
  Year                     = {2014},
  Note                     = {cited By 0},
  Pages                    = {2847-2853},
  Publisher                = {shers},

  Abstract                 = {Wireless technologies are increasingly being used and developed for control system applications. When applied to sensor networks there are challenging risk factors that need to be managed to ensure sufficient reliability of the overall systems. When the target system is a safety instrumented system reliability requirements become critical and care must be taken to ensure development practices are not in conflict with requirements for systems that need to conform to IEC 61508 for programmable and electronic safety systems. This paper compares elements from the project management frameworks PRINCE2 and SCRUM with safety integrity level requirements from IEC 61508 and recommends practices to be adopted in development of application layer software for complex environment such as large intelligent sensor networks as none of the mentioned project management frameworks are found to be well-suited to development of highly complex projects with strict a priori requirements. © 2014 Taylor & Francis Group, London.},
  Document_type            = {Conference Paper},
  Journal                  = {Safety, Reliability and Risk Analysis: Beyond the Horizon - Proceedings of the European Safety and Reliability Conference, ESREL 2013},
  Keywords                 = {Application programs; Control system applications; Project management; Reliability; Sensor networks; Wireless telecommunication systems, Development practices; Electronic safety systems; Intelligent sensor networks; Project management frameworks; Safety critical applications; Safety instrumented systems; Safety integrity levels; Wireless technologies, Safety engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84900027873&partnerID=40&md5=cee1ba551fd80f066ca05efcc5779a08}
}

@Article{Dantas2016,
  Title                    = {Assessing the effectiveness of automated service composition},
  Author                   = {Dantas, R. and Kamienski, C. and Fernandes, S. and Sadok, D.},
  Journal                  = {Journal of the Brazilian Computer Society},
  Year                     = {2016},
  Note                     = {cited By 0},
  Number                   = {1},
  Volume                   = {22},

  Abstract                 = {Background: Service Composition is an important feature of Service Oriented Computing, yet it remains mostly a manual process. Given the dynamic and decentralized nature of services, manual composition is a complex undertaking. Proposals to automate this process exist, but suffer from practical problems that hinder their implementation. Methods: In this paper, we introduce a pragmatic approach where we reverse engineer a service composition repository to obtain the necessary information for automated solutions to work. We then evaluate the quality of the automated compositions based on their similarity to the ones written manually. A classic planning algorithm was adapted in order to generate solutions closer to those expected by developers. Results: The use of classical planning tools is too time-consuming for agile development scenarios. A simplified, tailored implementation can be orders of magnitude faster than a generic planner, which suggests that expressive power may need to be sacrificed in favor of usability. Our evaluation showed that ensuring the adherence of the solution to the initial specification by enforcing the use of all input parameters was capable of significantly increasing the quality of the solutions. Conclusions: It is possible to increase the quality of automated composition by applying planning algorithms specially crafted for the service composition task. Comparisons with automated planning tools highlight the effectiveness of our proposal. © 2016, The Author(s).},
  Art_number               = {6},
  Author_keywords          = {AI planning; Automated service composition; Performance evaluation; Web services composition},
  Document_type            = {Article},
  Doi                      = {10.1186/s13173-016-0047-2},
  ISSN                     = {01046500},
  Keywords                 = {Automation; Distributed computer systems; Quality control; Quality of service; Software agents, AI planning; Automated composition; Automated service composition; Orders of magnitude; Performance evaluation; Service compositions; Service oriented computing; Web services composition, Web services},
  Publisher                = {Springer-Verlag London Ltd},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84991401476&doi=10.1186%2fs13173-016-0047-2&partnerID=40&md5=76c3e79a1d03686543b6712e783bd0fe}
}

@Article{Davies201488,
  Title                    = {Model-driven engineering of information systems: 10 years and 1000 versions},
  Author                   = {Davies, J. and Gibbons, J. and Welch, J. and Crichton, E.},
  Journal                  = {Science of Computer Programming},
  Year                     = {2014},
  Note                     = {cited By 9},
  Number                   = {PART B},
  Pages                    = {88-104},
  Volume                   = {89},

  Abstract                 = {This paper reports upon ten years of experience in the development and application of model-driven technology. The technology in question was inspired by work on formal methods: in particular, by the B toolkit. It was used in the development of a number of information systems, all of which were successfully deployed in real world situations. The paper reports upon three systems: one that informed the design of the technology, one that was used by an internal customer, and one that is currently in use outside the development organisation. It records a number of lessons regarding the application of model-driven techniques. © 2013 Elsevier B.V. All rights reserved.},
  Author_keywords          = {Agile; Data migration; Databases; Evolution; Formal methods; Model-driven},
  Coden                    = {SCPGD},
  Document_type            = {Article},
  Doi                      = {10.1016/j.scico.2013.02.002},
  ISSN                     = {01676423},
  Keywords                 = {Computer programming; Database systems; Formal methods; Software engineering, Agile; Data migration; Development and applications; Evolution; Model-driven; Model-driven Engineering; Model-driven techniques; Real world situations, Information systems},
  Publisher                = {Elsevier},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84900501506&doi=10.1016%2fj.scico.2013.02.002&partnerID=40&md5=6a752b4d577e05258dc5aa3662e5cba4}
}

@Conference{DeAlmeidaNeto2015337,
  Title                    = {Evaluating a maturity model for agile governance in information and communication technology with survey based on expert opinion},
  Author                   = {De Almeida Neto, H.R. and De Magalhães, E.M.C. and De Moura, H.P. and De Almeida Teixeira Filho, J.G. and Cappelli, C. and Martins, L.M.F.},
  Year                     = {2015},
  Editor                   = {Matalonga S., Pimentel E., Brito I.S., Araujo J., Miranda J.J., Espana S., Cuadros-Vargas E., Bencomo N., Pastor O., Goulao M., Oliveira T., Condori-Fernandez N., de la Vara J.L., Kalinowski M., Olsina L., Antonelli L., Guizzardi R.},
  Note                     = {cited By 0},
  Pages                    = {337-350},
  Publisher                = {Ibero-American Conference on Software Engineering},

  Abstract                 = {Agile governance in Information and Communication Technology (ICT) is based on the application of principles and values of the Manifesto for agile software development to the ICT governance context. This approach to governance has been suggested as an innovative proposal, but the adoption of agile governance in ICT is still considered a challenge. Agile governance in ICT is multidisciplinary and is still regarded as a recent area. This paper aims to present a proposal for a maturity model to systematic and gradual adoption of agile governance in ICT called MAnGve Maturity Model (M3). The proposed maturity model was structured in five levels of maturity, constructed from a set of meta principles identified in an extensive bibliographical study of the area. For the elaboration of the model, a qualitative approach was used, with inductive method and comparative and structuralism procedures. Finally, this article assesses the feasibility of the proposed model, as regards the criteria associated with the feasibility of agile governance in from the point of view of 61 experts. Copyright © 2015 by the authors.},
  Author_keywords          = {Agile governance; Agility in software development; Governance; Information and communication technology governance; Maturity models},
  Document_type            = {Conference Paper},
  ISBN                     = {9789972825804},
  Journal                  = {CIBSE 2015 - XVIII Ibero-American Conference on Software Engineering},
  Keywords                 = {Application programs; Software design, Agile governance; Agile software development; Expert opinion; Governance; Inductive method; Information and Communication Technologies; Maturity model; Qualitative approach, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84936113754&partnerID=40&md5=ddc0aae7d36d43598d66361e483e68cb}
}

@Article{DeAmescua20162260,
  Title                    = {An agile framework definition for creating an engineering massive open online course from scratch: A case study},
  Author                   = {De Amescua, A. and Alvarez-Rodríguez, J.M. and Sanchez-Segura, M.-I. and Medina-Domínguez, F.},
  Journal                  = {International Journal of Engineering Education},
  Year                     = {2016},
  Note                     = {cited By 0},
  Number                   = {5},
  Pages                    = {2260-2273},
  Volume                   = {32},

  Abstract                 = {Massive Open Online Courses (MOOCs) have emerged as disruptors to higher education bringing the possibility to access learning contents to thousands of students from all over the world. MOOCs are a new way to design and deliver online learning. Learners become part of an on-line community where they can participate as reviewers, collaborate with each other and are engaged in watching videos and other multimedia resources. However, MOOCs are also generating a huge debate around three different aspects: the learning process including evaluation and certification criteria, the lack of skills among instructors to design and plan MOOCs and the technicaland security issues of MOOC platforms. More specifically, institutions are currently making a great effort to become part of main facilitators' platforms. They are creating a good number of methodologies, guidelines and best practices to equip instructors with the necessary skills to produce high-quality learning resources that can encourage learners' participation and decrease the dropout rate. On the other hand, engineering education is one of the main a reas of interest in MOOC courses. In the software and computer engineering area it is possible to find a huge number of MOOC sinparticular topics ranging from an introductory to a master level. How ever, just a few courses address a holistic view of a domain such as software engineering due to the intrinsic difficulty of summarizingin a few weeks the main concepts of anengineering discipline. That is why, in this paper, authors introduce an Agile MOOC Development Lifecycle (AMDL) to address the challenge of designing a MOOC from scratch. Afterwards, the framework is applied to create aMOOC course about software engineering for a non-technical audience and developed by a large and multidisciplinary team of 18 instructors. This experience is also reported as a case study to validate the proposed development lifecycle. Finally, some discussion, lessons learned and future research lines are also outlined. © 2016 TEMPUS Publications.},
  Author_keywords          = {Agile; E-learning; MOOC; On-line education; Software engineering},
  Document_type            = {Article},
  ISSN                     = {0949149X},
  Keywords                 = {Education; Engineering education; Learning systems; Life cycle; Multimedia systems; Software engineering, Agile; Computer engineering; Massive open online course; MOOC; Multi-disciplinary teams; Multimedia resources; On-line communities; On-line education, E-learning},
  Publisher                = {Tempus Publications},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84992648146&partnerID=40&md5=7192395ff34883400649ae8b941a1b48}
}

@Article{DeAngelis2016243,
  Title                    = {Agile methodology in progesi MDA model (Meta–dynamic–agile)},
  Author                   = {De Angelis, M. and Bizzoni, R.},
  Journal                  = {Communications in Computer and Information Science},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {243-260},
  Volume                   = {422},

  Abstract                 = {Contrary to popular belief, CMMI and Agile cannot only coexist forcibly in a company, but also live peacefully together which benefits from their integration. This paper reports the experience of Progesi, a company in the market of defense and public administration that has adopted the method dev CMMI level 3 and uses daily methodology in Agile projects. Examples of integration are available in the literature, and our analysis starts from some well-known case study: In fact, many have had the need to find a meeting point between the two philosophies. The key to integration is an approach that we called “Meta–Dynamic–Agile” model, which is based on “competence centers.”. © Springer International Publishing Switzerland 2016.},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-27896-4_21},
  Editor                   = {Sillitti A., Ciancarini P., Succi G., Messina A.},
  ISBN                     = {9783319278940},
  ISSN                     = {18650929},
  Keywords                 = {Application programs; Philosophical aspects; Public administration, Agile Methodologies, Software engineering},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958243507&doi=10.1007%2f978-3-319-27896-4_21&partnerID=40&md5=58e85980bdd711c74c33214d1f1d0f81}
}

@Conference{DeSouza2015,
  Title                    = {Evaluating capstone project through flexible and collaborative use of Scrum framework},
  Author                   = {De Souza, R.T. and Zorzo, S.D. and Da Silva, D.A.},
  Year                     = {2015},
  Note                     = {cited By 1},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},
  Volume                   = {2014},

  Abstract                 = {Scrum framework disseminates principles that guarantee a dynamic and adaptable Software development process. Supporting the software engineering teaching using agile methodologies and Scrum framework with some proper adaptations is the challenge of Federal University of São Carlos in the Software Engineering specialization course for graduated students. The article presents an evaluation of Scrum adaptations performed to evaluate the capstone project. In this case study, the adoption of Scrum to manage the capstone project represents a direct and objective approach in order to have an environment similar to the real one. Moreover, the inexperience of the teams, the partial dedication in the projects and the distributed teams showed the necessity of self-management of the teams among other lessons learned to teach Software Engineering in this setting. Finally, evaluating a capstone project using Scrum framework in a flexible and collaborative way made it possible to realize the difficulties faced by the teams and the need for technical improvements, thanks to Scrum framework functions. © 2015 IEEE.},
  Art_number               = {7344249},
  Author_keywords          = {agile methodologies; higher education; SCRUM; software engineering},
  Coden                    = {PFECD},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/FIE.2015.7344249},
  ISBN                     = {9781479984534},
  ISSN                     = {15394565},
  Journal                  = {Proceedings - Frontiers in Education Conference, FIE},
  Keywords                 = {Distributed computer systems; Education; Human resource management; Software design; Software engineering; Teaching, Adaptable software; Agile Methodologies; Capstone projects; Distributed teams; Higher education; Objective approaches; SCRUM; Technical improvement, Engineering education},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84960378424&doi=10.1109%2fFIE.2015.7344249&partnerID=40&md5=499e84c785884483bd190ee7fd80a409}
}

@Article{Deak20141,
  Title                    = {A comparative study of testers’ motivation in traditional and agile software development},
  Author                   = {Deak, A.},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2014},
  Note                     = {cited By 2},
  Pages                    = {1-16},
  Volume                   = {8892},

  Abstract                 = {The future software engineers looking for positions in the software industry tend to lean towards software development/coding rather than software testing. Our study investigates what factors cause software testing professionals working both in agile and traditional methodologies, to choose and remain in this career path. Using a qualitative survey among software development companies we retrieve information about the difference between the traditional and agile testers. In addition we identify information about the motivating and de-motivating factors in current testing practices. The results could help the companies in their recruiting processes, in the transition from traditional to agile within a company and in motivating their testers, which will lead to better job satisfaction and productivity. © Springer International Publishing Switzerland 2014.},
  Author_keywords          = {Agile; Human factors; Motivation; Software testing; Testers; Waterfall},
  Document_type            = {Article},
  ISSN                     = {03029743},
  Keywords                 = {Human engineering; Job satisfaction; Motivation; Software testing, Agile; Agile software development; Comparative studies; Current testing; Qualitative surveys; Software industry; Testers; Waterfall, Software design},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84911881777&partnerID=40&md5=739f09b05ba08213eeace69b75032372}
}

@Article{Debbiche201417,
  Title                    = {Challenges when adopting continuous integration: A case study},
  Author                   = {Debbiche, A. and Dienér, M. and Svensson, R.B.},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2014},
  Note                     = {cited By 8},
  Pages                    = {17-32},
  Volume                   = {8892},

  Abstract                 = {The complexity of software development has increased over the last few years. Customers today demand higher quality and more stable software with shorter delivery time. Software companies strive to improve their processes in order to meet theses challenges. Agile practices have been widely praised for the focus they put on customer collaboration and shorter feedback loops. Companies that have well established agile practices have been trying to improve their processes further by adopting continuous integration - the concept where teams integrate their code several times a day. However, adopting continuous integration is not a trivial task. This paper presents a case study in which we, based on interviews at a major Swedish telecommunication services and equipment provider, assess the challenges of continuous integration. The study found 23 adoption challenges that organisations may face when adopting the continuous integration process. © Springer International Publishing Switzerland 2014.},
  Author_keywords          = {Challenges; Continuous integration; Software},
  Document_type            = {Article},
  ISSN                     = {03029743},
  Keywords                 = {Computer software; Software design; Telecommunication services, Agile practices; Challenges; Continuous integrations; Customer collaboration; Delivery time; Feed-back loop; Software company; Swedishs, Integration},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84911913476&partnerID=40&md5=3812c3a2fa76744b975f2751c7de8f81}
}

@Article{Dębiec201517,
  Title                    = {Information technology networked system for student mobility support},
  Author                   = {Dębiec, P. and Materka, A.},
  Journal                  = {International Journal of Information and Learning Technology},
  Year                     = {2015},
  Note                     = {cited By 0},
  Number                   = {1},
  Pages                    = {17-31},
  Volume                   = {32},

  Abstract                 = {Purpose – This paper presents an IT system – Student Connectivity Module (SCM) – designed to support administration of student exchange between universities in different countries, developed under the EU seventh Framework Program. The purpose of this paper is to share the acquired knowledge on existing difficulties in mobility management, propose solutions to those problems, and present results of system validation using its prototype deployed at two universities. Design/methodology/approach – Prior to the system design, the needs, plans and expectations concerning the academic IT services were surveyed among 100 universities. On this basis, in close with prospective system users, an original peer-to-peer system was developed using top-down model-driven and agile software development techniques. Findings – The barriers to effective interoperation of academic information systems (AIS) were revealed: first, diversity and heterogeneity of campus IT solutions; second, differences in patterns of international student mobility flow; third, diversity in national personal data protection policies; and fourth, lack of standards for e-data exchange. The SCM system overcomes these problems by adopting platform-independent IT solutions, web-services, a network of trusted authority servers, and a novel “quasi-standard” solution for e-data exchange, with the use of home university campus cards to access facilities at host institutions. Originality/value – The management of foreign student exchange is a complicated process. It involves students, faculty, administrative staff and external institutions. To the authors knowledge, there is no other comprehensive networked IT system available to facilitate administration of student mobility, make it better controlled, less laborious and faster, in a secure way. The IT solution contributes to overcoming the current barriers to academic mobility within Europe and elsewhere. © Emerald Group Publishing Limited.},
  Author_keywords          = {Campus smart card; Information systems; International student exchange; Personal data security},
  Document_type            = {Article},
  Doi                      = {10.1108/IJILT-06-2014-0014},
  ISSN                     = {20564880},
  Publisher                = {Emerald Group Publishing Ltd.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84934959622&doi=10.1108%2fIJILT-06-2014-0014&partnerID=40&md5=478686a682a3150a97bc7491ee784f40}
}

@Conference{Delaet2016120,
  Title                    = {Seamless SDN route updates},
  Author                   = {Delaet, S. and Dolev, S. and Khankin, D. and Tzur-David, S. and Godinger, T.},
  Year                     = {2016},
  Editor                   = {Avresky D.R., Avresky D.R., Busnel Y.},
  Note                     = {cited By 1},
  Pages                    = {120-125},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Software-Defined Networking (SDN) decouples the control and data planes, enabling limitless possibilities for implementing services and applications on top of the network abstraction layer. The centralized controller provides a real-time view of the entire underlying network infrastructure and therefore, management of the agile network becomes more simplified. This flexibility requires online routing updates, but during these updates, consistency has to be preserved, i.e., No packet losses or unrecognized duplications should occur. Moreover, routing updates should be done on the fly in an application-seamless fashion. Where no significant irregular delays or "communication hiccups" in packet arrivals are introduced due to the (frequent) updates. In this paper we present the first seamless consistency during on-the-fly routing updates, allowing the sender to send packets in an unchanged rate during the entire process, rate that is identical to the rate prior and after the update. The main idea is to use multicast on portions of the route, i.e., To send a packet both in the old and the new routes and only when the controller verifies the establishment and operation of the specific portion of the new route, it can remove the corresponding portion from the old route. © 2015 IEEE.},
  Art_number               = {7371713},
  Author_keywords          = {Seamless route updates; Software-defined networking},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/NCA.2015.24},
  ISBN                     = {0769556817; 9781509018499},
  Journal                  = {Proceedings - 2015 IEEE 14th International Symposium on Network Computing and Applications, NCA 2015},
  Keywords                 = {Abstracting; Application programs; Software defined networking; Telecommunication services, Centralized controllers; Network abstraction layers; Online routing; Packet arrivals; Route updates; Services and applications; Software defined networking (SDN); Underlying networks, Network layers},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84963623338&doi=10.1109%2fNCA.2015.24&partnerID=40&md5=a344bf8a4688f5da740d9bd418c87fdc}
}

@Article{Delen2013359,
  Title                    = {Data, information and analytics as services},
  Author                   = {Delen, D. and Demirkan, H.},
  Journal                  = {Decision Support Systems},
  Year                     = {2013},
  Note                     = {cited By 51},
  Number                   = {1},
  Pages                    = {359-363},
  Volume                   = {55},

  Abstract                 = {While organizations are trying to become more agile to better respond to market changes in the midst of rapidly globalizing competition by adopting service orientation - commoditization of business processes, architectures, software, infrastructures and platforms - they are also facing new challenges. In this article, we provide a conceptual framework for service oriented managerial decision making process, and briefly explain the potential impact of service oriented architecture (SOA) and cloud computing on data, information and analytics. Today, SOA, cloud computing, Web 2.0 and Web 3.0 are converging, and transforming the information technology ecosystem for the better while imposing new complexities. With this convergence, a large amount of structured and unstructured data is being created and shared over disparate networks and virtual communities. To cope and/or to take advantage of these changes, we are in need of finding new and more efficient ways to collect, store, transform, share, utilize and dispose data, information and analytics. © 2012 Elsevier B.V. All rights reserved.},
  Author_keywords          = {Agile analytics; Analytics-as-a-service; Business analytics; Cloud computing; Data-as-a-service; Information-as-a- service; Service-orientation},
  Coden                    = {DSSYD},
  Document_type            = {Article},
  Doi                      = {10.1016/j.dss.2012.05.044},
  ISSN                     = {01679236},
  Keywords                 = {Agile analytics; Analytics-as-a-service; Business analytics; Data-as-a-service; Information-as-a- service; Service orientation, Information services; Information technology; Service oriented architecture (SOA); Virtual reality; Web services, Cloud computing},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84877730780&doi=10.1016%2fj.dss.2012.05.044&partnerID=40&md5=e700b71bd2288ca62f5cf9169754a3c8}
}

@Conference{Deneckere2016,
  Title                    = {Progressive integration of method components: A case of agile is development methods},
  Author                   = {Deneckere, R. and Kornyshova, E. and Iacovelli, A.},
  Year                     = {2016},
  Editor                   = {Ralyte J., Espana S., Souveyet C.},
  Note                     = {cited By 0},
  Publisher                = {IEEE Computer Society},
  Volume                   = {2016-August},

  Abstract                 = {Situational Method Engineering aims at constructing methods adapted to a given situation, either by a construction from a set of predefined method components or by a customization of an existing method using different techniques: configuration, extension, reduction, and so on. However, these techniques are still limited in practice, as considered complicated and heavy to implement. In this paper, we describe a practitioner experience of a gradual integration of different method components (issued from agile methods of software development). In a real case of a development company, we have practiced and observed the progressive introduction of agile method components instead of the construction or customization of methods in one go. We discuss the lessons learned from this experience and define different research perspectives. © 2016 IEEE.},
  Art_number               = {7549347},
  Author_keywords          = {Agile Method; Experience Report; Method Component; Progressive Integration; Situational Method Engineering},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/RCIS.2016.7549347},
  ISBN                     = {9781479987092},
  ISSN                     = {21511349},
  Journal                  = {Proceedings - International Conference on Research Challenges in Information Science},
  Keywords                 = {Information science; Integration; Software engineering, Agile methods; Experience report; IS development; Method components; Real case; Situational Method Engineering, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84987642294&doi=10.1109%2fRCIS.2016.7549347&partnerID=40&md5=97fb489b92e83e0d64f7cc3c31c0c0b8}
}

@Conference{Deneckère2016211,
  Title                    = {Progressive integration of method components: A case of agile IS development methods [Intégration progressive de composants de méthodes : Application pratique avec des méthodes de développement agiles]},
  Author                   = {Deneckère, R. and Kornyshova, E. and Iacovelli, A.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {211-213},
  Publisher                = {INFORSID},

  Abstract                 = {Situational Method Engineering aims at constructing methods adapted to a given situation, either by a construction from a set of predefined method components or by a customization of an existing method using different techniques: configuration, extension, reduction, and so on. However, these techniques are still limited in practice, as considered complicated and heavy to implement. In this paper, we describe a practitioner experience of a gradual integration of different method components (issued from agile methods of software development). In a real case of a development company, we have practiced and observed the progressive introduction of agile method components instead of the construction or customization of methods in one go. We discuss the lessons learned from this experience and define different research perspectives.},
  Author_keywords          = {Agile method; Experience report; Method component; Progressive integration; Situational method engineering},
  Document_type            = {Conference Paper},
  Journal                  = {INFORSID 2016 - Actes du 8e Forum Jeunes Chercheurs du Congres INFORSID},
  Keywords                 = {Integration; Software engineering, Agile methods; Experience report; IS development; Method components; Real case; Situational Method Engineering, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84979663436&partnerID=40&md5=3c536746e5fc7c1852778d24f7c788a2}
}

@Conference{Dennehy2016,
  Title                    = {Early adoption of flow artefacts in ISD: An activity theory perspective},
  Author                   = {Dennehy, D. and Conboy, K.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Publisher                = {Association for Information Systems},

  Abstract                 = {Anecdotal evidence suggests flow techniques in information systems development (ISD) are highly effective and rapidly growing in popularity. Despite this, empirical research on ISD flow and particularly on the negative aspects of these methods is sparse. This research applies Activity Theory (AT) to examine the early adoption of flow techniques in two companies. AT is particularly pertinent in the context of this study as rather than view contradictions, which can manifest as tensions and breakdown in communications as a threat to flow techniques, it shows how contradictions and congruencies can be used to identify new ways of enacting flow. This study makes three contributions, namely (i) the AT framework is applied to fit ISD; (ii) an illustration of how AT is used to surface pre-existing contradictions in early adoption of flow artefacts, and (iii) an increased understanding of the interactions between flow artefacts and their social context.},
  Author_keywords          = {Activity theory; Agile software development; Flow; Information systems development},
  Document_type            = {Conference Paper},
  ISBN                     = {9780996683135},
  Journal                  = {2016 International Conference on Information Systems, ICIS 2016},
  Keywords                 = {Activity coefficients; Information systems; Management information systems; Software engineering, Activity Theory; Agile software development; Anecdotal evidences; Empirical research; Flow; Flow techniques; Information systems development; Social context, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85019484706&partnerID=40&md5=fff553d6d5e1bc3f7f9f136d8f5576ce}
}

@Conference{Dewi2014255,
  Title                    = {The agility of agile methodology for teaching and learning activities},
  Author                   = {Dewi, D.A. and Muniandy, M.},
  Year                     = {2014},
  Editor                   = {Jawawi D.N.A., Sulaiman S., Mohamad R., Sa'Adon N.A.},
  Note                     = {cited By 0},
  Pages                    = {255-259},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {This paper presents the review of literatures that shows the contribution of the agile methodology towards teaching and learning environment at university level. Teaching and learning at university has since migrated from traditional learning to active learning methodology where students are expected to learn by doing rather than listening passively to lectures alone. The agile methodology naturally has promoted the active participation of team members during system development phases. The nature of agile development methodology has been identified as abundantly compatible and supportive towards active academic learning. Some literature have proposed ways of adopting agile into active learning to improve teaching and learning processes and have highlighted this method as a great success. With the review presented in this paper, we would like to highlight how efficient the agile concept is in tackling several situations in academic learning as shown by an interesting mapping of agile principles to the classroom environment. With that, we hope to bring more options to improve active teaching and learning delivery by adopting agile methodology. On the other hand, few papers have used the academic environment to measure the agile principles. By highlighting this, we offer options for the agile evaluation framework to consider academic environment as a tool to obtain the agile performance feedback. © 2014 IEEE.},
  Art_number               = {6986024},
  Author_keywords          = {active learning; Agile; agile e-learning; agile education; teaching and learning},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/MySec.2014.6986024},
  ISBN                     = {9781479954391},
  Journal                  = {2014 8th Malaysian Software Engineering Conference, MySEC 2014},
  Keywords                 = {Artificial intelligence; Computer aided instruction; E-learning; Education; Software engineering, Active Learning; Agile; Agile development methodologies; Classroom environment; Evaluation framework; Teaching and learning; Teaching and learning environments; Traditional learning, Teaching},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84929340524&doi=10.1109%2fMySec.2014.6986024&partnerID=40&md5=11d075d14b4b0e89a70760c23d5625a2}
}

@Conference{Dharmapal20161088,
  Title                    = {Big data analytics using agile model},
  Author                   = {Dharmapal, S.R. and Sikamani, K.T.},
  Year                     = {2016},
  Note                     = {cited By 2},
  Pages                    = {1088-1091},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {This journal introduces the reader the background of Big Data Analytics and how efficiently Agile methodology can be applied to achieve the business goal. The journal focus on giving background of Big Data and how using Agile practices such as iterative, incremental, and evolutionary style of development can be applied for Big Data Analytics. This methodology brings in the advantage of involving business community during development and continuous delivery of working user features. © 2016 IEEE.},
  Art_number               = {7754854},
  Author_keywords          = {Agile; Analytics; Big Data; Data Analyst; Development Methodology; Predictive Tool; Project Management; Software Engineering},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICEEOT.2016.7754854},
  ISBN                     = {9781467399395},
  Journal                  = {International Conference on Electrical, Electronics, and Optimization Techniques, ICEEOT 2016},
  Keywords                 = {Iterative methods; Project management; Software engineering, Agile; Analytics; Data analysts; Development methodology; Predictive tools, Big data},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85006833214&doi=10.1109%2fICEEOT.2016.7754854&partnerID=40&md5=ec9b01390deb49ebdef03f88ff5d87fd}
}

@Article{Dhir20153554,
  Title                    = {Agile software development in defiance of customary software development process: A valuation of prevalence’s and challenges},
  Author                   = {Dhir, S. and Kumar, D.},
  Journal                  = {Advanced Science Letters},
  Year                     = {2015},
  Note                     = {cited By 2},
  Number                   = {11},
  Pages                    = {3554-3558},
  Volume                   = {21},

  Abstract                 = {There are a lot of pressure and stress to deliver the high quality of product on time with frequent changes. This research paper outlines post era and the current era of software development with the analysis of software development process. A survey is conducted for analyzing the utility of adapting and classical development processes; 82 respondents filled this survey and the results are executed through the one way ANOVA. Numerous factors are considered for the success of high quality delivery on time along with the statistical results and significant values are find out. Finally it is observed; now agile methodologies are mostly adopted by organizations for the quick delivery of high quality product. Also, a comparison between traditional and agile development process is provided to represent that how agile approach is better than traditional. © 2015, American Scientific Publishers. All rights reserved.},
  Author_keywords          = {Agile development; Software engineering; Statistical package for the social sciences (SPSS); Survey},
  Document_type            = {Article},
  Doi                      = {10.1166/asl.2015.6590},
  ISSN                     = {19366612},
  Publisher                = {American Scientific Publishers},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84960416535&doi=10.1166%2fasl.2015.6590&partnerID=40&md5=0334eb3b403143990ec5657214eca3df}
}

@Conference{DiIorio2013375,
  Title                    = {Promoting best practice sharing within organizations},
  Author                   = {Di Iorio, A. and Rossi, D.},
  Year                     = {2013},
  Note                     = {cited By 1},
  Pages                    = {375-380},

  Abstract                 = {In recent years we are witnessing the wide adoption of Web 2.0's social software tools (blogs, microblogs, wiki, forums, shared calendars, etc.) within organizations complementing (or even replacing) existing enterprise applications. This trend is justified by the improved immediacy with which information can flow among the members of the organization and by a better support of agile, emergent cooperation models that re-shape the practices and the processes within organizations, allowing their continuous refinement and alignment with the organizations' missions and evolving know-how. One of the problems that arise in this new scenario is that as more and more practices and processes include interactions with several tools, often not controlled by the organization itself, it becomes more difficult to manage the knowledge they embody. In this paper we present an approach to mitigate this problem that plays nicely with the enhanced participation mechanisms triggered by social software. Our proposal revolves around the use of semantic wiki technologies as knowledge management tools; specifically we focus on dealing with practice and process-related knowledge, emerging from users interactions with Web 2.0 applications, and how this knowledge can effectively be represented, shared and made persistent. Copyright © 2013 SCITEPRESS.},
  Author_keywords          = {Organizational best practices; Semantic wikis; Web automation},
  Document_type            = {Conference Paper},
  ISBN                     = {9789898565549},
  Journal                  = {WEBIST 2013 - Proceedings of the 9th International Conference on Web Information Systems and Technologies},
  Keywords                 = {Best practices; Cooperation model; Enterprise applications; Knowledge management tool; Semantic Wikis; Social software; Web 2.0 applications; Web automation, Knowledge management; Semantics; Societies and institutions; Technology transfer; Tools; Web services, Semantic Web},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84887088771&partnerID=40&md5=9114647cd6a7fb9481b70f689c95b594}
}

@Conference{DiasDeCarvalho2014,
  Title                    = {Definition of software process lines for integration of Scrum and CMMI},
  Author                   = {Dias De Carvalho, D. and Chagas, L.F. and Reis, C.A.L.},
  Year                     = {2014},
  Editor                   = {Ezzatti P., Delgado A.},
  Note                     = {cited By 2},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {The adoption of Agile Methods, like Scrum, in conjunction with maturity models, like Capability Maturity Model Integration (CMMI), often leads to variation of process. Process definition is a complex and difficult task, requiring a lot of effort and experience. Software Process Line (SPrL) has been considered a suitable paradigm for software process tailoring and reuse; and there is a lack of approaches that use SPrL concepts for modeling these approaches in conjunction. This paper presents the definition of a SPrL considering Project Planning and Project Monitoring and Control process areas in processes using Scrum agile methodology together with CMMI maturity model. It is expected the presented SPrL assists software organizations to tailor processes that meet both approaches. © 2014 IEEE.},
  Art_number               = {6965156},
  Author_keywords          = {Agile Methods; Capability Maturity Model Integration; CMMI; Features Model; Project Management; Project Monitoring and Control; Project Planning; Scrum; Software Process Line},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/CLEI.2014.6965156},
  ISBN                     = {9781479961306},
  Journal                  = {Proceedings of the 2014 Latin American Computing Conference, CLEI 2014},
  Keywords                 = {Computer software reusability; Integration; Project management; Software engineering, Agile methods; Capability maturity model integration; CMMI; Features modeling; Project monitoring and control; Project planning; Scrum; Software process, Process control},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84919431330&doi=10.1109%2fCLEI.2014.6965156&partnerID=40&md5=20a47e614bfb488989b7371990034de9}
}

@Article{Díaz2014727,
  Title                    = {Agile product-line architecting in practice: A case study in smart grids},
  Author                   = {Díaz, J. and Pérez, J. and Garbajosa, J.},
  Journal                  = {Information and Software Technology},
  Year                     = {2014},
  Note                     = {cited By 9},
  Number                   = {7},
  Pages                    = {727-748},
  Volume                   = {56},

  Abstract                 = {Context Software Product Line Engineering implies the upfront design of a Product-Line Architecture (PLA) from which individual product applications can be engineered. The big upfront design associated with PLAs is in conflict with the current need of "being open to change". To make the development of product-lines more flexible and adaptable to changes, several companies are adopting Agile Product Line Engineering. However, to put Agile Product Line Engineering into practice it is still necessary to make mechanisms available to assist and guide the agile construction and evolution of PLAs. Objective This paper presents the validation of a process for "the agile construction and evolution of product-line architectures", called Agile Product-Line Architecting (APLA). The contribution of the APLA process is the integration of a set of models for describing, documenting, and tracing PLAs, as well as an algorithm for guiding the change decision-making process of PLAs. The APLA process is assessed to prove that assists Agile Product Line Engineering practitioners in the construction and evolution of PLAs. Method Validation is performed through a case study by using both quantitative and qualitative analysis. Quantitative analysis was performed using statistics, whereas qualitative analysis was performed through interviews using constant comparison, triangulation, and supporting tools. This case study was conducted according to the guidelines of Runeson and Höst in a software factory where three projects in the domain of Smart Grids were involved. Results APLA is deployed through the Flexible-PLA modeling framework. This framework supported the successful development and evolution of the PLA of a family of power metering management applications for Smart Grids. Conclusions APLA is a well-supported solution for the agile construction and evolution of PLAs. This case study illustrates that the proposed solution for the agile construction of PLAs is viable in an industry project on Smart Grids. © 2014 Elsevier B.V. All rights reserved.},
  Author_keywords          = {Agile product-line architecting; Agile product-line engineering; Case study; Change impact analysis; Product-line architectural knowledge},
  Coden                    = {ISOTE},
  Document_type            = {Article},
  Doi                      = {10.1016/j.infsof.2014.01.014},
  ISSN                     = {09505849},
  Keywords                 = {Production engineering; Research; Smart power grids; Software architecture, Agile product-line architecting; Architectural knowledge; Change impact analysis; Decision making process; Product line architecture; Product line engineering; Quantitative and qualitative analysis; Software product line engineerings, Product design},
  Publisher                = {Elsevier},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84898810060&doi=10.1016%2fj.infsof.2014.01.014&partnerID=40&md5=79cd1ad172a29071b1a41d63ef7c884c}
}

@Conference{Diebold2014,
  Title                    = {Agile practices in practice - A mapping study},
  Author                   = {Diebold, P. and Dahlem, M.},
  Year                     = {2014},
  Note                     = {cited By 2},
  Publisher                = {Association for Computing Machinery},

  Abstract                 = {Background: Agile software development has been increasingly adopted during the last two decades. Nonetheless, many studies show that using agile methods as defined in the literature does not work very well. Thus, companies adapt these methods by just using parts of them (called agile practices). Objective: The goal of the literature study was to understand which agile practices are used in industry under different circumstances, such as different project types, domains, or processes. Method: We conducted a mapping study of empirical studies using agile practices in industry. The search strategy identified 1110 studies, of which 24 studies including 68 projects were analyzed. Results: The results of this study show that there are practices that are used more often and that the domain and the process also influence the application of different practices. Additionally, the findings confirm the assumption of Ken Schwaber that in most cases, agile methods are not used "completely" but that rather certain practices are adopted. Conclusions: Our results can be used by researchers to get a better idea of where and how to follow up research as well as by practitioners to get a better idea of which practices fit their needs and which are used by others. Therefore, our contribution increases the body of knowledge in agile practices usage. Copyright 2014 ACM.},
  Art_number               = {a30},
  Author_keywords          = {Agile methods; Agile practices; Agile software development; Empirical SE; Industrial usage; Mapping study; Systematic review},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2601248.2601254},
  ISBN                     = {9781450324762},
  Journal                  = {ACM International Conference Proceeding Series},
  Keywords                 = {Software design, Agile methods; Agile practices; Agile software development; Industrial usage; Mapping studies; Systematic Review, Mapping},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84905457984&doi=10.1145%2f2601248.2601254&partnerID=40&md5=6f24e25d6398a5bd73faf82dbee52659}
}

@Conference{Diepenbeck201382,
  Title                    = {Towards automatic scenario generation from coverage information},
  Author                   = {Diepenbeck, M. and Soeken, M. and Grobe, D. and Drechsler, R.},
  Year                     = {2013},
  Note                     = {cited By 1},
  Pages                    = {82-88},

  Abstract                 = {Nowadays, the design of software systems is pushed towards agile development practices. One of its most fundamental approaches is Test Driven Development (TDD). This procedure is based on test cases which are incrementally written prior to the implementation. Recently, Behavior Driven Development (BDD) has been introduced as an extension of TDD, in which natural language scenarios are the starting point for the test cases. This description offers a ubiquitous communication mean for both the software developers and stakeholders. Following the BDD methodology thoroughly, one would expect 100 % code coverage, since code is only written to make the test cases pass. However, as we show in an empirical study this expectation is not valid in practice. It becomes even worse in the process of development, i.e. the coverage decreases over time. To close the coverage gap, we sketch an algorithm that generates BDD-style scenarios based on uncovered code. © 2013 IEEE.},
  Art_number               = {6595796},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/IWAST.2013.6595796},
  ISBN                     = {9781467361613},
  Journal                  = {2013 8th International Workshop on Automation of Software Test, AST 2013 - Proceedings},
  Keywords                 = {Agile development; Design of softwares; Empirical studies; Natural languages; Scenario generation; Software developer; Test driven development; Ubiquitous communication, Computer programming; Testing, Software testing},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84885007510&doi=10.1109%2fIWAST.2013.6595796&partnerID=40&md5=4ed3edc931af0c6af7857a378d6524f3}
}

@Article{Dikert201687,
  Title                    = {Challenges and success factors for large-scale agile transformations: A systematic literature review},
  Author                   = {Dikert, K. and Paasivaara, M. and Lassenius, C.},
  Journal                  = {Journal of Systems and Software},
  Year                     = {2016},
  Note                     = {cited By 6},
  Pages                    = {87-108},
  Volume                   = {119},

  Abstract                 = {Agile methods have become an appealing alternative for companies striving to improve their performance, but the methods were originally designed for small and individual teams. This creates unique challenges when introducing agile at scale, when development teams must synchronize their activities, and there might be a need to interface with other organizational units. In this paper we present a systematic literature review on how agile methods and lean software development has been adopted at scale, focusing on reported challenges and success factors in the transformation. We conducted a systematic literature review of industrial large-scale agile transformations. Our keyword search found 1875 papers. We included 52 publications describing 42 industrial cases presenting the process of taking large-scale agile development into use. Almost 90% of the included papers were experience reports, indicating a lack of sound academic research on the topic. We identified 35 reported challenges grouped into nine categories, and 29 success factors, grouped into eleven categories. The most salient success factor categories were management support, choosing and customizing the agile model, training and coaching, and mindset and alignment. © 2016 The Authors. Published by Elsevier Inc. This is an open access article under the CC BY license.},
  Author_keywords          = {Adopting agile software development; Agile software development; Challenges; Large-scale agile; Organizational transformation; Success factors; Systematic literature review},
  Coden                    = {JSSOD},
  Document_type            = {Article},
  Doi                      = {10.1016/j.jss.2016.06.013},
  ISSN                     = {01641212},
  Keywords                 = {Search engines; Software design, Agile software development; Challenges; Large-scale agile; Organizational transformation; Success factors; Systematic literature review, Software engineering},
  Publisher                = {Elsevier Inc.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84975144622&doi=10.1016%2fj.jss.2016.06.013&partnerID=40&md5=4a44356788c2006d60d69246e0527ae4}
}

@Article{Dingsøyr2016,
  Title                    = {Emerging themes in agile software development: Introduction to the special section on continuous value delivery},
  Author                   = {Dingsøyr, T. and Lassenius, C.},
  Journal                  = {Information and Software Technology},
  Year                     = {2016},
  Note                     = {cited By 2; Article in Press},

  Abstract                 = {The relationship between customers and suppliers remains a challenge in agile software development. Two trends seek to improve this relationship, the increased focus on value and the move towards continuous deployment. In this special section on continuous value delivery, we describe these emerging research themes and show the increasing interest in these topics over time. Further, we discuss implications for future research. © 2016 The Authors.},
  Author_keywords          = {Agile software development; Continuous deployment; Extreme programming; Lean startup; Requirements engineering; Scrum; Software process improvement; Value-based software engineering},
  Coden                    = {ISOTE},
  Document_type            = {Article in Press},
  Doi                      = {10.1016/j.infsof.2016.04.018},
  ISSN                     = {09505849},
  Publisher                = {Elsevier},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84967334624&doi=10.1016%2fj.infsof.2016.04.018&partnerID=40&md5=ab8357c21c1fefe9e1be988994cfaa83}
}

@Article{Dingsøyr20141,
  Title                    = {Towards principles of large-scale agile development: A summary of the workshop at XP2014 and a revised research Agenda},
  Author                   = {Dingsøyr, T. and Moe, N.B.},
  Journal                  = {Lecture Notes in Business Information Processing},
  Year                     = {2014},
  Note                     = {cited By 7},
  Pages                    = {1-8},
  Volume                   = {199},

  Abstract                 = {Large projects are increasingly adopting agile development practices, and this raises new challenges for research. The workshop on principles of large-scale agile development focused on central topics in large-scale: the role of architecture, inter-team coordination, portfolio management and scaling agile practices. We propose eight principles for large-scale agile development, and present a revised research agenda. © Springer International Publishing Switzerland 2014.},
  Author_keywords          = {Architecture; Inter-team coordination; Large-scale agile software development; Portfolio management; Project management; Scaling; Software engineering},
  Document_type            = {Article},
  ISSN                     = {18651348},
  Keywords                 = {Architecture; Financial data processing; Human resource management; Investments; Project management; Software engineering, Agile development; Agile practices; Agile software development; Inter-team coordinations; Large project; Portfolio managements; Research agenda; Scaling, Software design},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84917741781&partnerID=40&md5=bf0712c7999f1cafa7ce092bd02428f2}
}

@Article{Doležel2017105,
  Title                    = {Images of enterprise test organizations: Factory, center of excellence, or community?},
  Author                   = {Doležel, M.},
  Journal                  = {Lecture Notes in Business Information Processing},
  Year                     = {2017},
  Note                     = {cited By 0},
  Pages                    = {105-116},
  Volume                   = {269},

  Abstract                 = {The organization of the testing process is an important part of any enterprise software quality management effort. However, little consensus exists how enterprise test organizations should be built up and structured, especially in connection with continuing penetration of recent trends such as enterprise agile development. This position paper is built upon our industry experience. During our transformation efforts connected with changing a test organization’s sourcing arrangement and management approach in a large multinational firm, we noticed that people tend to prefer one distinct perspective to make sense of enterprise test organizations. But such a one-sided approach makes it difficult for them to talk to each other about the test organization. To illustrate this, we use Gareth Morgan’s Images of Organization as an analytical lens to discuss three distinct images of test organizations we claim people typically carry in their minds. Our work increases understanding of design and transformation efforts related to management of enterprise software testing. © Springer International Publishing AG 2017.},
  Author_keywords          = {Agile testing; Community of practice; Organization design; TCoE; Test factory; Test organization; Testing center of excellence; Transformation},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-49421-0_8},
  Editor                   = {Bergsmann J., Winkler D., Biffl S.},
  ISBN                     = {9783319494203},
  ISSN                     = {18651348},
  Keywords                 = {Computer software selection and evaluation; Enterprise software; Quality management; Research laboratories; Societies and institutions; Software engineering; Testing, Agile testing; Community of practice; Organization design; TCoE; Test factories; Testing center; Transformation, Software testing},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85010222432&doi=10.1007%2f978-3-319-49421-0_8&partnerID=40&md5=9bafa5f9c3995fa2d81a649ab8efdf64}
}

@Article{Dóra201484,
  Title                    = {Simultaneously improving quality and time-to-market in agile development},
  Author                   = {Dóra, P.M. and Oliveira, A.C. and Moura, J.A.B.},
  Journal                  = {Communications in Computer and Information Science},
  Year                     = {2014},
  Note                     = {cited By 1},
  Pages                    = {84-98},
  Volume                   = {457},

  Abstract                 = {More recently, “post-agile” techniques seem to favor releasing early over quality. Pressure for low cost, rapid development and to code for new features leads to the allocation of resources to software development tasks preferably rather than to quality control. Such practices may put the responsibilities for development and test on the same team and even facilitate sloppy testing. Here, we present our experience in organizing an agile team that is divided into two independent cells, each one playing a different role: (i) software development, and (ii) testing exclusively. Results obtained by using a grid computing backup system as a case study point out to higher test efficiency and, surprisingly, possible shorter time-to-market simultaneously when the agile team is split into those two cells, and some complementary practices are adopted as well. These results may contribute to the on-going discussion on the role and impact of testing in agile development. © Springer-Verlag Berlin Heidelberg 2014.},
  Author_keywords          = {Agile process improvement; Independent testing; Software quality},
  Document_type            = {Article},
  Doi                      = {10.1007/978-3-662-44920-2_6},
  Editor                   = {Cordeiro J., van Sinderen M.},
  ISBN                     = {9783662449196},
  ISSN                     = {18650929},
  Keywords                 = {Commerce; Computer software selection and evaluation; Concurrent engineering; Grid computing; Software testing, Agile development; Agile process; Agile teams; Back-up systems; Low costs; Software Quality; Test efficiency; Time-to-market, Software design},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84908518408&doi=10.1007%2f978-3-662-44920-2_6&partnerID=40&md5=025ea0c3f76f7a650439a7185a258ff8}
}

@Conference{Dóra2013411,
  Title                    = {Improving quality in agile development processes},
  Author                   = {Dóra, P.M. and Oliveira, A.C. and Moura, J.A.B.},
  Year                     = {2013},
  Note                     = {cited By 1},
  Pages                    = {411-416},

  Abstract                 = {Software quality control in agile software development is based on two main principles: pair programming and test-driven development. More recently, "post-agile" techniques seem to favor releasing early over quality. Pressure for low cost, rapid development and to code for new features leads to the allocation of resources to software development tasks preferably rather than to quality control. Such practices may put the responsibilities for development and test on the same team and even facilitate sloppy testing. Albeit in prototyping this may be acceptable and even make business sense that is not the case of scenarios that include system software (e.g., a general purpose mobile operating system) or critical applications for airspace, military, banking or healthcare purposes. In this article, we present our experience in organizing an agile team which is divided into two cells with different responsibilities: software development per se and testing exclusively. Preliminary results for the case of a grid computing backup system indicate higher test efficiency and surprisingly, possible shorter time-to-market of the two-cell organization given complimentary practices are also adopted. These results may contribute for the on-going discussion on the role and impact of testing in agile development. Copyright © 2013 SCITEPRESS.},
  Author_keywords          = {Agile process improvement; Independent testers; Software quality},
  Document_type            = {Conference Paper},
  ISBN                     = {9789898565686},
  Journal                  = {ICSOFT 2013 - Proceedings of the 8th International Joint Conference on Software Technologies},
  Keywords                 = {Agile process; Agile software development; Critical applications; Independent testers; Mobile operating systems; Software Quality; Software quality control; Test driven development, Computer software selection and evaluation; Grid computing; Military applications; Quality control, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84887051868&partnerID=40&md5=d0c9b4111d9fdee27fbe83595f9b9ecd}
}

@Conference{Dorr2013504,
  Title                    = {FACTS: Factors, analogies, CERs \& tools/studies for government acquisitions},
  Author                   = {Dorr, R. and Harper, D.J.},
  Year                     = {2013},
  Note                     = {cited By 0},
  Pages                    = {504-513},
  Volume                   = {1},

  Abstract                 = {Government agencies are attempting to maximize the use of their increasingly limited funds. Accurate and credible cost and schedule estimates have always been a challenge, yet they are becoming more important than ever given our country's debt crisis and current political environment. In addition to needing credible cost and schedule estimates, federal agencies have experienced a growing demand for rapid turnaround of these estimates. This need is increasing as the pressure to rapidly deploy systems mounts. The push for agile software development compounds this problem. A critical component in cost estimating is the data collection of costs for the various elements within the estimate. FACTS is a project to establish a knowledge management environment in order to assemble various useful Factors, Analogies, CER's (Cost Estimating Relationships) & Tools/Studies-"facts" that exist not just within one agency or organizations, but across the cost community. The goal is not just for one or two people to collect data and create a database, but to instantiate a culture of sharing and collaboration within the cost community at large.},
  Coden                    = {AACTA},
  Document_type            = {Conference Paper},
  ISBN                     = {9781627488570},
  ISSN                     = {15287106},
  Journal                  = {AACE International Transactions},
  Keywords                 = {Agile software development; Cost and schedule; Cost estimating relationships; Critical component; Culture of sharing; Data collection; Government agencies; Management environments, Cost engineering; Cost estimating; Estimation; Knowledge management; Software engineering, Cost benefit analysis},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84888093857&partnerID=40&md5=f168b9cb323ab24774d8e9e77565a22b}
}

@Book{Douglass2013731,
  Title                    = {Agile Development for Embedded Systems},
  Author                   = {Douglass, B.},
  Publisher                = {Elsevier Inc.},
  Year                     = {2013},
  Note                     = {cited By 0},

  Abstract                 = {Agile software development is a set of software development techniques based on iterative development. Requirements and software systems evolve through collaboration between self-organizing, cross-functional teams. Agile development supports adaptive planning, evolutionary development and delivery, and a time-boxed iterative approach. The goal of agile is rapid and flexible response to change. Agile is a conceptual framework which promotes interactions throughout the development cycle. Applying agile to embedded software projects introduces some unique challenges, such as more difficulty effectively testing evolving software features, because the corresponding hardware may not be available in time, less freedom to make changes, due to the fact that the corresponding hardware change may have an unacceptably high cost, and less ability for "learn as you go" approaches, considering the hardware construction may demand a more upfront style of planning and design. This chapter will introduce agile software development and show how to apply these techniques to an embedded system. © 2013 Copyright © 2013 Elsevier Inc. All rights reserved.},
  Author_keywords          = {Adaptive planning; Agile development; Evolutionary development and delivery; Project governance; Project planning; Time-boxed iterative approach; User stories},
  Document_type            = {Book Chapter},
  Doi                      = {10.1016/B978-0-12-415917-4.00021-9},
  ISBN                     = {9780124159174},
  Journal                  = {Software Engineering for Embedded Systems},
  Pages                    = {731-766},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84882877000&doi=10.1016%2fB978-0-12-415917-4.00021-9&partnerID=40&md5=1b4b27f62b3d585bd96056ed8c20bd1e}
}

@Article{Dowling2014468,
  Title                    = {Successfully transitioning a research project to a commercial spin-out using an agile software process},
  Author                   = {Dowling, P.},
  Journal                  = {Journal of software: Evolution and Process},
  Year                     = {2014},
  Note                     = {cited By 2},
  Number                   = {5},
  Pages                    = {468-475},
  Volume                   = {26},

  Abstract                 = {The ultimate success of any research activity is to see it bears fruit in terms of real life use and commercial success. A key element in driving a good concept or idea through the various research and development stages and into full commercial use is the software process that supports it. In the early days of its evolvement, the product will require less in terms of unit test coverage and automated test packages and more in the way of room to research and discover the innovation that will make the product unique and of high value. However, as the project progresses and a horizon appears with capital investors and large customer bases, the supporting software process needs to adapt fluidly to these evolving requirements. Efficient use of resources, shorter release cycles and better levels of quality coverage are a necessity to meet stakeholder demands for new features, better features and all to be delivered more quickly. This paper examines the successful transition of a research project to a fully fledged commercial entity with an emphasis on the software process and quality methodologies used. Copyright © 2013 John Wiley & Sons, Ltd.},
  Author_keywords          = {agile; automated testing; commercialisation; release cycle; software process; verification and validation},
  Document_type            = {Article},
  Doi                      = {10.1002/smr.1611},
  ISSN                     = {20477481},
  Keywords                 = {Computer software, agile; Automated testing; Commercialisation; Release cycles; Software process, Research},
  Publisher                = {John Wiley and Sons Ltd},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84901008013&doi=10.1002%2fsmr.1611&partnerID=40&md5=3c44ca0df7e465243726a46189b0d608}
}

@Article{Dressler2016588,
  Title                    = {Investigating and implementing an extensible, adaptable game plan for digital initiatives at a large state university},
  Author                   = {Dressler, V.A.},
  Journal                  = {Electronic Library},
  Year                     = {2016},
  Note                     = {cited By 0},
  Number                   = {4},
  Pages                    = {588-596},
  Volume                   = {34},

  Abstract                 = {Purpose - The purpose of this paper is to explore the process of assessing the needs of a digital repository. The study's institution - Kent State University, a large state university - is currently re-envisioning their digital library services to accommodate emerging technologies with an agile framework and platform. This paper includes discussion on the process of creating a sustainable digital initiatives program, a plan of action for migration, platform decision rationale and an overview of planning for future projects that is both flexible and extensible in nature. Design/methodology/approach - The article's approach is to examine the process of review and selection of the digital repository at Kent State University through the needs and requirements checklist the team devised according to the institution's specifications. Literature published in the past five years is reviewed and applied to the selection process. The author maps out a plan that can be adaptable for growth and sustainability for a content management system. Findings - Using models identified in the article, the team mapped a solution that can enhance the use and interaction by patrons to digital collections as well as provide a method to ensure the longevity of digital assets. Originality/value - The article addresses issues that are inherent to digital content management systems of all shapes and sizes, and strives to provide a solution that would be relevant and applicable to many types of institutions in regard to digital repositories. © Emerald Group Publishing Limited.},
  Author_keywords          = {Digital collections management; Digital libraries; Digital repositories; Digital workflow; Open source software; Systems design},
  Coden                    = {ELLID},
  Document_type            = {Article},
  Doi                      = {10.1108/EL-02-2015-0034},
  ISSN                     = {02640473},
  Keywords                 = {checklist; computer program; library; longevity; model; workflow},
  Publisher                = {Emerald Group Publishing Ltd.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84982903006&doi=10.1108%2fEL-02-2015-0034&partnerID=40&md5=7817ea023017cc2e55b5b92cbcf9db6c}
}

@Conference{Duka2013426,
  Title                    = {Adoption of agile methodology in software development},
  Author                   = {Duka, D.},
  Year                     = {2013},
  Note                     = {cited By 5},
  Pages                    = {426-430},

  Abstract                 = {As adopting Agile software development becomes a trend, there is a need for a more structured definition of what is Agile and what is a high-level of Agile maturity. Traditional development methodologies rely on documents to record and pass on knowledge from one specialist to the next. Feedback cycles are, in many cases, too long or even nonexistent. Agile principles emphasize building working software that people can get hands on quickly, versus spending a lot of time writing specifications up front. Agile development focuses on cross-functional teams empowered to make decisions, versus big hierarchies and splitting by function. It also focuses on rapid iteration, with continuous customer input along the way. This paper deals with Agile methodology and scaling. The special highlight is put on people investigating their contribution in Agile approach success. Some reflections after using Agile in our own organization are also presented. © 2013 MIPRO.},
  Art_number               = {6596295},
  Document_type            = {Conference Paper},
  ISBN                     = {9789532330762},
  Journal                  = {2013 36th International Convention on Information and Communication Technology, Electronics and Microelectronics, MIPRO 2013 - Proceedings},
  Keywords                 = {Agile approaches; Agile development; Agile Methodologies; Agile software development; Cross-functional teams; Customer input; Development methodology; Writing specifications, Communication systems; Information technology; Microelectronics; Software design, Iterative methods},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84886872889&partnerID=40&md5=d2d335b57d9fba422943d1aa649477bd}
}

@Article{Duke2014170,
  Title                    = {Regenstrief Institute's Medical Gopher: A next-generation homegrown electronic medical record system},
  Author                   = {Duke, J.D. and Morea, J. and Mamlin, B. and Martin, D.K. and Simonaitis, L. and Takesue, B.Y. and Dixon, B.E. and Dexter, P.R.},
  Journal                  = {International Journal of Medical Informatics},
  Year                     = {2014},
  Note                     = {cited By 8},
  Number                   = {3},
  Pages                    = {170-179},
  Volume                   = {83},

  Abstract                 = {Objective: Regenstrief Institute developed one of the seminal computerized order entry systems, the Medical Gopher, for implementation at Wishard Hospital nearly three decades ago. Wishard Hospital and Regenstrief remain committed to homegrown software development, and over the past 4 years we have fully rebuilt Gopher with an emphasis on usability, safety, leveraging open source technologies, and the advancement of biomedical informatics research. Our objective in this paper is to summarize the functionality of this new system and highlight its novel features. Materials and methods: Applying a user-centered design process, the new Gopher was built upon a rich-internet application framework using an agile development process. The system incorporates order entry, clinical documentation, result viewing, decision support, and clinical workflow. We have customized its use for the outpatient, inpatient, and emergency department settings. Results: The new Gopher is now in use by over 1100 users a day, including an average of 433 physicians caring for over 3600 patients daily. The system includes a wizard-like clinical workflow, dynamic multimedia alerts, and a familiar 'e-commerce'-based interface for order entry. Clinical documentation is enhanced by real-time natural language processing and data review is supported by a rapid chart search feature. Discussion: As one of the few remaining academically developed order entry systems, the Gopher has been designed both to improve patient care and to support next-generation informatics research. It has achieved rapid adoption within our health system and suggests continued viability for homegrown systems in settings of close collaboration between developers and providers. © 2013 Elsevier Ireland Ltd.},
  Author_keywords          = {Clinical decision support systems; Computerized physician order entry system; Electronic health record; Health information technology},
  Coden                    = {IJMIF},
  Document_type            = {Article},
  Doi                      = {10.1016/j.ijmedinf.2013.11.004},
  ISSN                     = {13865056},
  Keywords                 = {Clinical decision support systems; Computerized order entries; Computerized physician order entry systems; Electronic health record; Electronic medical record system; Health information technologies; NAtural language processing; User-centered design process, Artificial intelligence; Decision support systems; Hospitals; Information technology; Medical computing; Natural language processing systems, Internet protocols, allergy; article; clinical decision making; commercial phenomena; computer interface; computerized provider order entry; conceptual framework; decision support system; electronic medical record; emergency ward; hospital patient; Internet; medical assessment; medical documentation; medical information system; multimedia; natural language processing; outpatient; patient care; physician; priority journal; treatment planning; workflow, Clinical decision support systems; Computerized physician order entry system; Electronic health record; Health information technology, Automatic Data Processing; Documentation; Hospitals, University; Humans; Information Storage and Retrieval; Medical Records Systems, Computerized; Patient Care; Software; User-Computer Interface},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84892488437&doi=10.1016%2fj.ijmedinf.2013.11.004&partnerID=40&md5=ac056e2cfd2097d6993afad74d6409f2}
}

@Conference{Dumas-Monette2014222,
  Title                    = {Requirements engineering quality revealed through functional size measurement: An empirical study in an agile context},
  Author                   = {Dumas-Monette, J.-F. and Trudel, S.},
  Year                     = {2014},
  Editor                   = {Daneva M., Vogelezang F.},
  Note                     = {cited By 1},
  Pages                    = {222-232},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Software development organizations applying continuous process improvement, when faced with the limits of qualitative approaches, are looking into quantitative approaches to support decision making, namely for improvement of the software project estimation process. Quantitative approaches include sizing functional requirements with standards such as ISO 19761, known as the COSMIC method. But defects in the requirements may have an impact on the accuracy of the resulting functional size, as well as an impact on the project relative effort sometimes known as the 'productivity rate' and the measurement relative effort. Our research program is investigating the relationship between the attributes of requirements engineering (RE) outputs, the software process relative effort, and the measurement process relative effort. RE outputs studied are requirements and specifications documents and data models. As functional sizing is applied, thorough examination of RE outputs is done, which is likely to lead to identifying quality attributes and related findings. As a case study, this paper reports preliminary results related to the quality of requirements artefacts from a software development organization that is applying the Agile approach to its software development process. The functional size of the software developed through five projects was measured and compared with development effort and measurement effort, taking into account the quality rating of requirements. The results led to recommendations of improvement on the RE process that the organization could deploy in its current and next software projects. This paper also presents a list of functional sizing challenges that the measurer has faced, leading to proposed recommendations for planning any software measurement project. © 2014 IEEE.},
  Art_number               = {7000106},
  Author_keywords          = {COSMIC; Defects; FSM; Functional size; Measure; Quality; Requirements engineering},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/IWSM.Mensura.2014.43},
  ISBN                     = {9781479941742},
  Journal                  = {Proceedings - 2014 Joint Conference of the International Workshop on Software Measurement, IWSM 2014 and the International Conference on Software Process and Product Measurement, Mensura 2014},
  Keywords                 = {Decision making; Defects; Image quality; Professional aspects; Requirements engineering; Software engineering, Continuous process improvement; COSMIC; FSM; Functional size; Functional Size Measurements; Measure; Software development organizations; Software development process, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84929614339&doi=10.1109%2fIWSM.Mensura.2014.43&partnerID=40&md5=5a4540acb3d29bc9a767d2aa185b5c13}
}

@Conference{Dumke20145,
  Title                    = {Empirical-based extension of the COSMIC FP method},
  Author                   = {Dumke, R. and Neumann, R. and Schmietendorf, A. and Wille, C.},
  Year                     = {2014},
  Editor                   = {Daneva M., Vogelezang F.},
  Note                     = {cited By 0},
  Pages                    = {5-10},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {This paper discusses the extensions of the COSMIC Function Point method using empirical aspects in order to support the broader application of this method for effort estimation and other software system und processes characterization. The method extensions are based on our experience in different COSMIC applications for embedded systems, agile development, SOA implementations, cloud computing and apps implementation in the last ten years. After a short introduction about this well-known COSMIC method, empirical aspects of software products and processes are described and applications of effort estimation based on sizing the quality, technology and methodology are discussed. © 2014 IEEE.},
  Art_number               = {7000067},
  Author_keywords          = {COSMIC method; cost and effort estimation; empirical aspects; functional size measurement},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/IWSM.Mensura.2014.20},
  ISBN                     = {9781479941742},
  Journal                  = {Proceedings - 2014 Joint Conference of the International Workshop on Software Measurement, IWSM 2014 and the International Conference on Software Process and Product Measurement, Mensura 2014},
  Keywords                 = {Cosmology; Distributed computer systems; Embedded systems; Software engineering, Agile development; Cosmic function points; COSMIC method; Cost and effort estimations; empirical aspects; Functional Size Measurements; SOA implementations; Software products, Application programs},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84929648739&doi=10.1109%2fIWSM.Mensura.2014.20&partnerID=40&md5=018cc2cdd0d893c18bbe8b12aaa73bc9}
}

@Conference{Dzakovic2017582,
  Title                    = {Industrial application of automated regression testing in test-driven ETL development},
  Author                   = {Dzakovic, M.},
  Year                     = {2017},
  Note                     = {cited By 0},
  Pages                    = {582-585},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {While there are many commercial Extraction, Transformation and Loading (ETL) platforms that facilitate fast and easy development of ETL applications, ETL testing is largely a manual process. In order to allow frequent releases of reliable ETL applications, an automated regression testing approach is needed. This paper presents 1TH, one such test harness tool and a methodology for agile ETL development. 1TH builds on the existing techniques in testing and database research areas. It addresses practical challenges with nondeterministic values and, to a limited extent, test dependence. 1TH is applied in an industrial ETL development, and evaluated in a case study involving production releases once every couple of weeks for more than three years. 1TH introduced minimal delays in the development process and caught numerous regressions before they escaped to production. © 2016 IEEE.},
  Art_number               = {7816512},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICSME.2016.53},
  ISBN                     = {9781509038060},
  Journal                  = {Proceedings - 2016 IEEE International Conference on Software Maintenance and Evolution, ICSME 2016},
  Keywords                 = {Regression analysis; Software testing, Automated regression testing; Database research; Development process; Manual process; Test harness tools, Computer software maintenance},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85013080720&doi=10.1109%2fICSME.2016.53&partnerID=40&md5=3cd5f265a580b094fe0cdf61e8cca7c7}
}

@Book{Eeles2013315,
  Title                    = {Building a Platform for Innovation: Architecture and Agile as Key Enablers},
  Author                   = {Eeles, P.},
  Publisher                = {Elsevier Inc.},
  Year                     = {2013},
  Note                     = {cited By 0},

  Abstract                 = {Organizations must adapt to survive, and their ability to change and innovate is driven by two key enablers - architecture and agile. Based on practical experiences of working with several clients adopting both architecture and agile practices, the author sheds light on those factors that resulted in successful transformations and the creation of a platform for innovation. The author concludes that architecture and agile practices are complementary and that their successful introduction within an organization is not just technical in nature, but also requires a focus on people and appropriate techniques for managing organizational change. © 2014 Elsevier Inc. All rights reserved.},
  Author_keywords          = {Agile adoption; Agile architecture; Software architecture},
  Document_type            = {Book Chapter},
  Doi                      = {10.1016/B978-0-12-407772-0.00012-5},
  ISBN                     = {9780124077720},
  Journal                  = {Agile Software Architecture: Aligning Agile Processes and Software Architectures},
  Pages                    = {315-333},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84902423211&doi=10.1016%2fB978-0-12-407772-0.00012-5&partnerID=40&md5=ca2b353a6e3b714848de8d3c68f40536}
}

@Conference{Ehlers201438,
  Title                    = {Finding race conditions in real-time code by using formal software verification},
  Author                   = {Ehlers, T. and Nowotka, D. and Sieweck, P.},
  Year                     = {2014},
  Editor                   = {Tarnai G., Schnieder E.},
  Note                     = {cited By 0},
  Pages                    = {38-47},
  Publisher                = {Technical University of Braunschweig},

  Abstract                 = {The introduction of multicore hardware to the field of embedded and safety-critical systems implies great safety challenges. An important issue in this context is the migration of legacy code to multicore systems. In this paper, we present approaches to support the migration process in the domain of safety-critical, embedded systems. Given a program and concurrency configuration, we show how our tool Gropius can compute a superset of possible race conditions efficiently. Using Bounded Model Checking, falsepositive results can be removed from this set. Based on these techniques, we present a verification process which is inspired by the waterfall model. Especially, backtracking is considered carefully. This work is part of the ARAMiS1 project.},
  Document_type            = {Conference Paper},
  ISBN                     = {9783981688665},
  Journal                  = {FORMS/FORMAT 2014 - 10th Symposium on Formal Methods for Automation and Safety in Railway and Automotive Systems},
  Keywords                 = {Embedded systems; Formal methods; Formal verification; Hazards and race conditions; Legacy systems; Multicore programming; Safety engineering; Verification, Bounded model checking; Formal software verifications; Migration process; Multi-core systems; Real-time codes; Safety critical systems; Verification process; Waterfall model, Model checking},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84922331500&partnerID=40&md5=fa1995dface8d700439e4a418000ead9}
}

@Conference{Ehlers2014137,
  Title                    = {Formal software verification for the migration of embedded code from single - To multicore systems},
  Author                   = {Ehlers, T. and Nowotka, D. and Sieweck, P. and Traub, J.},
  Year                     = {2014},
  Editor                   = {Hasselbring W., Ehmke N.C.},
  Note                     = {cited By 0},
  Pages                    = {137-142},
  Publisher                = {Gesellschaft fur Informatik (GI)},
  Volume                   = {P227},

  Abstract                 = {The introduction of multicore hardware to the field of embedded and safety-critical systems implies great challenges. An important issue in this context is the migration of legacy code to multicore systems. Starting from the field of formal verification, we aim to improve the usability of our methods for software engineers. In this paper, we present approaches to support the migration process, mainly in the domain of safety-critical, embedded systems. The main contribution is a verification process which is inspired by the waterfall model. Especially, backtracking is considered carefully. © Gessellschaft für Informatik, Bonn 2014.},
  Document_type            = {Conference Paper},
  ISBN                     = {9783885796213},
  ISSN                     = {16175468},
  Journal                  = {Lecture Notes in Informatics (LNI), Proceedings - Series of the Gesellschaft fur Informatik (GI)},
  Keywords                 = {Formal software verifications; Multi-core systems},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84907891904&partnerID=40&md5=affd961cc07c5e82489e991d3682ae4f}
}

@Conference{Elallaoui201765,
  Title                    = {Automatic generation of TestNG tests cases from UML sequence diagrams in Scrum process},
  Author                   = {Elallaoui, M. and Nafil, K. and Touahni, R.},
  Year                     = {2017},
  Editor                   = {El Mohajir M., El Mohajir B.E., Chahhou M., Al Achhab M.},
  Note                     = {cited By 0},
  Pages                    = {65-70},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Software testing is an important step in the life cycle of agile development, it represents an efficient way to ensure the good functioning of the product. In previous work, we implemented an algorithm that takes as input user stories, and automatically generate UML sequence diagrams. In this work, these UML sequence diagrams are automatically transformed using model to model transformation then model to text transformation. This transformation, which can be applied to obtain test cases, is implemented with AndroMDA, an open source MDA Framework. © 2016 IEEE.},
  Art_number               = {7804972},
  Author_keywords          = {MDA; Model-Driven Testing; U2TP; UML 2},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/CIST.2016.7804972},
  ISBN                     = {9781509007516},
  ISSN                     = {2327185X},
  Journal                  = {Colloquium in Information Science and Technology, CIST},
  Keywords                 = {Codes (symbols); Information science; Life cycle; Open source software; Software architecture, Agile development; Automatic Generation; Model to model transformation; Model to text transformations; Model-driven testing; U2TP; UML 2; UML sequence diagrams, Software testing},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85010219869&doi=10.1109%2fCIST.2016.7804972&partnerID=40&md5=83f1f55f7dfdd5e37edb716775c3f738}
}

@Article{Elbanna201672,
  Title                    = {The Risks of Agile Software Development: Learning from Adopters},
  Author                   = {Elbanna, A. and Sarker, S.},
  Journal                  = {IEEE Software},
  Year                     = {2016},
  Note                     = {cited By 0},
  Number                   = {5},
  Pages                    = {72-79},
  Volume                   = {33},

  Abstract                 = {Agile software development (ASD) resulted from widespread professional discontent with traditional approaches; development projects' high failure rates; and, most important, the need for speedy, responsive delivery of software for Internet businesses. Many practitioners have embraced ASD, which commentators often extol as a faster, better, and cheaper development approach. However, a recent high-profile failure of an ASD project and the discontinued use of ASD in a software company have drawn attention to ASD's possible risks. Before we can manage such risks, we must identify them and understand why they arise. Researchers conducted interviews with 112 people in 28 organizations and with 25 ASD contractors and consultants. The interviews revealed key ASD risks that require careful management to achieve the desired project outcomes. © 2016 IEEE.},
  Art_number               = {7325176},
  Author_keywords          = {agile risks; agile software development; software development; software development risks; Software engineering; software risk management},
  Coden                    = {IESOE},
  Document_type            = {Article},
  Doi                      = {10.1109/MS.2015.150},
  ISSN                     = {07407459},
  Keywords                 = {Failure analysis; Project management; Risk management; Risks; Software engineering, Agile software development; Careful management; Development approach; Development project; Project outcomes; Software company; Software risk management; Traditional approaches, Software design},
  Publisher                = {IEEE Computer Society},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84984683775&doi=10.1109%2fMS.2015.150&partnerID=40&md5=96c599e9d40d9b3dd03c5fa3c35805de}
}

@Article{Elberzhager201733,
  Title                    = {From agile development to devops: Going towards faster releases at high quality - Experiences from an industrial context},
  Author                   = {Elberzhager, F. and Arif, T. and Naab, M. and Süß, I. and Koban, S.},
  Journal                  = {Lecture Notes in Business Information Processing},
  Year                     = {2017},
  Note                     = {cited By 0},
  Pages                    = {33-44},
  Volume                   = {269},

  Abstract                 = {DevOps promises advantages, such as faster time-to-market or higher quality. A company transforming itself towards DevOps needs guidance in order to ask and answer relevant questions and not waste time and effort. We state four key issues that companies should discuss before they start introducing DevOps concepts. Furthermore, we report on a project conducted by Fujitsu Enabling Software Technology GmbH (Fujitsu EST) and Fraunhofer IESE where the introduction of DevOps for one product was accompanied for roughly one year. We present the concrete goals, the procedure, first results, as well as observations and lessons learned. To the best of our knowledge, this is one of the first contributions that describe practical experiences in introducing DevOps, without concealing that a lot of thinking, tailoring, and learning is still required to further improve DevOps in the environment. © Springer International Publishing AG 2017.},
  Author_keywords          = {Continuous delivery; Continuous integration; Deployment pipeline; DevOps; DevOps culture; DevOps introduction; Industrial experience; Software architecture},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-49421-0_3},
  Editor                   = {Bergsmann J., Winkler D., Biffl S.},
  ISBN                     = {9783319494203},
  ISSN                     = {18651348},
  Keywords                 = {Computer software selection and evaluation; Software architecture, Continuous delivery; Continuous integrations; DevOps; DevOps introduction; Industrial experience, Software engineering},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85010212566&doi=10.1007%2f978-3-319-49421-0_3&partnerID=40&md5=f49de9ef61712156e26853d519a42751}
}

@Conference{Elghariani2016507,
  Title                    = {Review on Agile requirements engineering challenges},
  Author                   = {Elghariani, K. and Kama, N.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {507-512},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {The popularity of agile methodology has been increased since agile offers further collaboration. Requirements engineering (RE) is one of the software development process in agile approaches. The features of face to face communication is one of agile way which unlike to other traditional software methods. Software developers are using the definition agile way to improve the agile way of activities. Besides, the challenge of dealing with RE practices is not much is known in agile way or model. However, many literature works have been done in RE in agile approaches and challenges faced by teamwork. The aim of this paper is to fill the gap by presenting RE practices in agile methodology also the challenges of RE activities which are faced by agile team members. 80 systematic literature reviews are conducted and 22 research papers are identified. Moreover, the reviews discuss RE in agile methodology approaches. This paper has adopted a systematic literature review and has applied a certain inclusion and exclusion criteria to detect the research studies related to RE in agile methodology to achieve the aim of this research. This research determined most of agile requirements engineering activities, also challenges of requirements engineering in agile methodology. Therefore, the research findings can be a reference to all researchers who are interested in this research area because the paper's findings clarify that RE in agile methodology need to have further attention by researchers and more practical results are needed to gain understandable information about RE practices in Agile methodology. © 2016 IEEE.},
  Art_number               = {7783267},
  Author_keywords          = {Agile methodology; Agile requirements engineering; Collaboration; Systematic review; Traditional requirements engineering},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICCOINS.2016.7783267},
  ISBN                     = {9781509051342},
  Journal                  = {2016 3rd International Conference on Computer and Information Sciences, ICCOINS 2016 - Proceedings},
  Keywords                 = {Computer software; Information science; Requirements engineering; Software design, Agile Methodologies; Collaboration; Face-to-face communications; Inclusion and exclusions; Software developer; Software development process; Systematic literature review; Systematic Review, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85010303460&doi=10.1109%2fICCOINS.2016.7783267&partnerID=40&md5=1f191a927f4984168309263adbd2a936}
}

@Conference{Eliasson2015372,
  Title                    = {The need of complementing plan-driven requirements engineering with emerging communication: Experiences from Volvo Car Group},
  Author                   = {Eliasson, U. and Heldal, R. and Knauss, E. and Pelliccione, P.},
  Year                     = {2015},
  Note                     = {cited By 1},
  Pages                    = {372-381},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {The automotive industry is currently going through an enormous change, transitioning from being pure hardware and mechanical companies to becoming more software focused. Currently, software development is embedded into a V-Model process that defines how software requirements are extracted from system requirements. In recent years, OEMs have come to recognize the importance and opportunities offered by software, which include better management and shorter time-to-market of distinguishing features. Strategies to better utilize software include in-house software development and new ways to collaborate with suppliers. However, in their effort to take advantage of these opportunities, engineers struggle with the formal process imposed on software development. In this paper, we investigate the impact of this struggle on the flow of requirements, including challenges and practices. We found that new ways of working with requirements had emerged that are partly not supported, partly hindered by the old tooling and processes for requirements engineering. Requirements flow both vertical and horizontal in the organization and across the supply-chain. Support for the new way of working should allow us to refine requirements iteratively throughout their life-cycle, handle the discussion of rationales, and to manage assumptions. We found strategies of achieving this to differ not only between OEMs, but also between different divisions inside the OEMs. © 2015 IEEE.},
  Art_number               = {7320454},
  Author_keywords          = {automotive requirements engineering; beyond plan-driven requirements engineering; emerging communication},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/RE.2015.7320454},
  ISBN                     = {9781467369053},
  Journal                  = {2015 IEEE 23rd International Requirements Engineering Conference, RE 2015 - Proceedings},
  Keywords                 = {Automotive industry; Formal methods; Life cycle; Requirements engineering; Supply chains, In-house software development; Software requirements; System requirements; Time to market; V-model, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84962377317&doi=10.1109%2fRE.2015.7320454&partnerID=40&md5=a031178d23f8e25c94db8895bd90769e}
}

@Article{El-Najar2016113,
  Title                    = {Client communication: A major issue in agile development},
  Author                   = {El-Najar, T. and Ahmad, A. and Alkandari, M.},
  Journal                  = {International Journal of Software Engineering and its Applications},
  Year                     = {2016},
  Note                     = {cited By 0},
  Number                   = {12},
  Pages                    = {113-130},
  Volume                   = {10},

  Abstract                 = {Agile development model solved a lot of its predecessor the waterfall model problems like time, cost, resources and high risk of failure due to incomplete or inaccurate requirements. However, agile model introduced the client communication problem; due to the structure and nature of agile methodologies, it depends heavily on communicating with client. With four layers of communication that get repeated in almost every agile iteration, failing to handle client communication is one of the main reasons behind failure of agile based projects. In this paper, we survey the existing methods of communication which are classified into two main categories: physical meetings/workshops and software communication tools. Each category is assessed and compared based on certain attributes such as availability, productivity, cost, reliability, trust and project coverage. In addition, the available solutions to address the communication problem, which include enhanced physical meetings/workshops and software tools like requirement engineering tools, agile management tools and social media sites and applications, are analyzed and assessed based on attributes such as usability, formality and project coverage. The study revealed that the available solutions did not address all the aspects of the communication problem. Therefore, it is desirable to develop an integrated solution which utilized communication software tool using social media frameworks as its backbone and physical meetings to benefit from human interaction and relationships to solve the communication problem in agile environment. © 2016 SERSC.},
  Author_keywords          = {Agile; Client communication; Communication problem; Requirement engineering; Software development; Waterfall},
  Document_type            = {Article},
  Doi                      = {10.14257/ijseia.2016.10.12.10},
  ISSN                     = {17389984},
  Publisher                = {Science and Engineering Research Support Society},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85009274865&doi=10.14257%2fijseia.2016.10.12.10&partnerID=40&md5=945b4236323406bb2630952e62d963a3}
}

@Book{Eloranta2013189,
  Title                    = {Lightweight Architecture Knowledge Management for Agile Software Development},
  Author                   = {Eloranta, V.-P. and Koskimies, K.},
  Publisher                = {Elsevier Inc.},
  Year                     = {2013},
  Note                     = {cited By 5},

  Abstract                 = {Architecture knowledge management (AKM) aims to codify and maintain the architectural knowledge of a software system in a form that can be easily accessed by different stakeholders. Integrating AKM with an agile project management paradigm is a challenge because the agile philosophy downplays both plan-driven development and documentation. Yet, by integrating lightweight AKM practices with the process, agile software development could avoid maintenance and communication problems arising from scarce documentation. In this chapter, we introduce existing technologies that could be used as elements of lightweight AKM for agile software development and present possible models to integrate AKM with Scrum, which is the most popular agile approach in use today. In particular, we advocate the exploitation of architectural evaluations to collect architecturally significant information semiautomatically and the use of automated document generation to expose the contents of an architectural information repository in an easily accessible form. The proposed models are based on observed architecting work practices in industry and on interviews carried out in industry to identify the architectural information flow in real-life agile projects. © 2014 Elsevier Inc. All rights reserved.},
  Author_keywords          = {Agile software development; Architecture knowledge management; Scrum; Software architecture; Software architecture documentation},
  Document_type            = {Book Chapter},
  Doi                      = {10.1016/B978-0-12-407772-0.00007-1},
  ISBN                     = {9780124077720},
  Journal                  = {Agile Software Architecture: Aligning Agile Processes and Software Architectures},
  Pages                    = {189-213},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84902422733&doi=10.1016%2fB978-0-12-407772-0.00007-1&partnerID=40&md5=64b58a40419cab72cab1393ce790677a}
}

@Article{Eloranta2016194,
  Title                    = {Exploring ScrumBut - An empirical study of Scrum anti-patterns},
  Author                   = {Eloranta, V.-P. and Koskimies, K. and Mikkonen, T.},
  Journal                  = {Information and Software Technology},
  Year                     = {2016},
  Note                     = {cited By 2},
  Pages                    = {194-203},
  Volume                   = {74},

  Abstract                 = {The wide-spread adoption of the agile movement has rapidly changed the landscape of software industry. In particular, Scrum is an agile process framework that has become extremely popular in industry. However, the practical implementation of Scrum in companies rarely follows the text book ideals, as companies often deviate from the proposed Scrum practices for various reasons. While some deviations may be well motivated and reasonable, companies can also be tempted to adjust Scrum for the company without clearly understanding the consequences of the deviations. In this paper our aim is to identify ways of potentially harmful mishandling of Scrum in industry based on empirical data collected in semi-structured interviews involving 18 teams in 11 companies. The (mal)practices that were identified at least in three different teams are presented in a semi-formal manner as anti-patterns. The study resulted in 14 anti-patterns that express the context of the deviation, the deviation itself, the broken core principles of Scrum, and the possible consequences of the deviation. In addition, where available, we have included company recommendations regarding the deviations. Furthermore, we identify potential risk areas in Scrum based on an analysis of the relationships between anti-patterns and Scrum concepts. © 2015 Elsevier B.V. All rights reserved.},
  Author_keywords          = {Anti-patterns; Empirical study; Scrum; Software development},
  Coden                    = {ISOTE},
  Document_type            = {Article},
  Doi                      = {10.1016/j.infsof.2015.12.003},
  ISSN                     = {09505849},
  Keywords                 = {Risk assessment; Software design, Agile movement; Anti-patterns; Empirical data; Empirical studies; Potential risks; Scrum; Semi structured interviews; Software industry, Software engineering},
  Publisher                = {Elsevier B.V.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84962311767&doi=10.1016%2fj.infsof.2015.12.003&partnerID=40&md5=252f5b467c57c4fe7c98b1d66bf46e41}
}

@Conference{Eloranta2013503,
  Title                    = {Scrum ANTI-patterns - An empirical study},
  Author                   = {Eloranta, V.-P. and Koskimies, K. and Mikkonen, T. and Vuorinen, J.},
  Year                     = {2013},
  Editor                   = {Muenchaisri P., Rothermel G.},
  Note                     = {cited By 7},
  Pages                    = {503-510},
  Publisher                = {IEEE Computer Society},
  Volume                   = {1},

  Abstract                 = {Wide-spread adoption of the agile movement has rapidly changed the landscape of software industry. In particular, Scrum is an agile process framework that has become extremely popular in industry. However, the practical implementation of Scrum in companies rarely follows the text book ideals. Typically, companies deviate from the proposed Scrum practices for different reasons. While some deviations may be well motivated and reasonable, companies are often tempted to adjust Scrum for the company without clearly understanding the consequences of the deviations. In this paper our aim is to identify ways of potentially harmful mishandling of Scrum in industry based on empirical data collected in a survey. The identified (mal)practices are presented in a semi-formal manner as anti-patterns. The study resulted in 10 anti-patterns that express the context of the deviation, the deviation itself, the broken core principles of Scrum, and the possible consequences of the deviation. © 2013 IEEE.},
  Art_number               = {6805443},
  Author_keywords          = {Agile software development; Antipatterns; Scrum; Scrum problem areas},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/APSEC.2013.72},
  ISBN                     = {9781479921430; 9780769549224},
  ISSN                     = {15301362},
  Journal                  = {Proceedings - Asia-Pacific Software Engineering Conference, APSEC},
  Keywords                 = {Software design, Agile software development; Anti-patterns; Empirical data; Empirical studies; Industry based; Problem areas; Scrum; Software industry, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904541286&doi=10.1109%2fAPSEC.2013.72&partnerID=40&md5=66c305ad744b1ace14c5316ae0a227a8}
}

@Article{Enríquez20151453,
  Title                    = {A model for improving training of software developers in small companies},
  Author                   = {Enríquez, C. and Gómez, P.},
  Journal                  = {IEEE Latin America Transactions},
  Year                     = {2015},
  Note                     = {cited By 0},
  Number                   = {5},
  Pages                    = {1453-1461},
  Volume                   = {13},

  Abstract                 = {Staff training is fundamental for small software organizations; their daily management depends upon its software engineers quickly dominate state-of-the-art methodologies. In this paper, we fully explain a recently introduced model for improving the capability and maturity of training processes in software methodologies. This model, known as CAAM (acronym in Spanish for: "Training Model of Agile Environments under Moprosoft"), is particularly suited for small companies that are willing to or have been verified in level 1 of the Mexican standard NMX-1-059/02-NYCE-2005. Such standard regulates software development companies and it is based on Moprosoft, a capability-maturity model specially developed for Mexico. CAAM focuses on areas related to planning activities for agile development environments, communications with customers and the use of agile testing tools. © 2015 IEEE.},
  Art_number               = {7112002},
  Author_keywords          = {CAAM; capability maturity models; Moprosoft; Scrum; TDD; training models},
  Document_type            = {Article},
  Doi                      = {10.1109/TLA.2015.7112002},
  ISSN                     = {15480992},
  Keywords                 = {Human resource management; Personnel training; Software engineering, CAAM; Capability maturity models; MoProSoft; Scrum; TDD; Training model, Software design},
  Publisher                = {IEEE Computer Society},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84930621575&doi=10.1109%2fTLA.2015.7112002&partnerID=40&md5=39a13283f7e49e20df1b000731fd3696}
}

@Conference{Fang201640,
  Title                    = {Test Selection with Equivalence Clab Partitioning},
  Author                   = {Fang, L. and Li, G.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {40-49},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Software maintenance activities account for as much as two-thirds of the overall costs on an average. A way to select a subset from a test suite is thus extremely ebential to save cost and provide confidence that the program modifications are correct. Though substantial research results on test selection techniques have been reported in the literature, very few software industries deploy systematic test selection strategies or automation support. The expert judgment is the most often used in the industry for identification of relevant cases for re-testing that is usually difficult and inefficient. This paper introduces an agile strategy that divides a test suite with Equivalence Clabification Partition (ECP) into sub-domains. The subset selected from the sub-domains provides a complete and comprehensive coverage of test criteria. The ECP is exprebed with Clabification Tree Method (CTM) and easy to be adjusted for different goals flexibly, e.g., re-test for modified function, delivery deadline or human resource limit. Our method is implemented as a tool and evaluated on two projects experimentally. The results demonstrated that this method can improve the efficiency and effectiveneb of re-testing greatly. © 2015 IEEE.},
  Art_number               = {7434468},
  Author_keywords          = {Clabification Tree Method; Equivalence Clabification Partition; Test selection},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/DCIT.2015.14},
  ISBN                     = {9781509002900},
  Journal                  = {Proceedings - 2015 2nd International Symposium on Dependable Computing and Internet of Things, DCIT 2015},
  Keywords                 = {Forestry; Internet; Internet of things; Testing, Delivery deadlines; Modified function; Program modifications; Research results; Software industry; Software maintenance activity; Test selection; Tree method, Software testing},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84966526493&doi=10.1109%2fDCIT.2015.14&partnerID=40&md5=18ee761e4191825060d7709700f57a27}
}

@Conference{Fazio2016264,
  Title                    = {Exploiting the FIWARE cloud platform to develop a remote patient monitoring system},
  Author                   = {Fazio, M. and Celesti, A. and Marquez, F.G. and Glikson, A. and Villari, M.},
  Year                     = {2016},
  Note                     = {cited By 5},
  Pages                    = {264-270},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},
  Volume                   = {2016-February},

  Abstract                 = {FIWARE represents a new European Cloud platform that aims to land on the international ICT market bringing prominent novel advantages for societies. In fact, it provides new compelling and novel software components, available through APIs, able to give developers new valuable Cloud platform functionalities. The main contribution of this work consists in providing software architects an useful experience regarding the adoption of FIWARE for the design of a Cloud and Internet of Things (IoT) architecture. More specifically, we describe how can be possible to use the FIWARE Cloud platform to speed up the design of a real e-health Remote Patient Monitoring (RPM) architecture with an agile software development methodology. Our architecture aims to allow care givers to improve remote assistance to patients at home, optimizing the management of the workflow of doctors, physicians, medical assistants, and other involved hospital operators. In this paper, we specifically describe the main FIWARE components that we have adopted to design our architecture and how they have been integrated. © 2015 IEEE.},
  Art_number               = {7405526},
  Author_keywords          = {Cloud Computing; e-health; FIWARE; Generic Enabler; monitoring; RPM},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ISCC.2015.7405526},
  ISBN                     = {9781467371940},
  ISSN                     = {15301346},
  Journal                  = {Proceedings - IEEE Symposium on Computers and Communications},
  Keywords                 = {Cloud computing; Computer software; Monitoring; Patient monitoring; Remote patient monitoring; Software architecture; Software design; Software engineering, Agile software development; E health; FIWARE; Generic enablers; Internet of Things (IOT); Remote patient monitoring systems; Software architects; Software component, Computer architecture},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84961967567&doi=10.1109%2fISCC.2015.7405526&partnerID=40&md5=90d1713b21a2c2e4e1fb8f49c022255e}
}

@Article{Fernandes2015,
  Title                    = {Offering global collaboration services beyond CERN and HEP},
  Author                   = {Fernandes, J. and Ferreira, P. and Baron, T.},
  Journal                  = {Journal of Physics: Conference Series},
  Year                     = {2015},
  Note                     = {cited By 0},
  Number                   = {5},
  Volume                   = {664},

  Abstract                 = {The CERN IT department has built over the years a performant and integrated ecosystem of collaboration tools, from videoconference and webcast services to event management software. These services have been designed and evolved in very close collaboration with the various communities surrounding the laboratory and have been massively adopted by CERN users. To cope with this very heavy usage, global infrastructures have been deployed which take full advantage of CERN's international and global nature. If these services and tools are instrumental in enabling the worldwide collaboration which generates major HEP breakthroughs, they would certainly also benefit other sectors of science in which globalization has already taken place. Some of these services are driven by commercial software (Vidyo or Wowza for example), some others have been developed internally and have already been made available to the world as Open Source Software in line with CERN's spirit and mission. Indico for example is now installed in 100+ institutes worldwide. But providing the software is often not enough and institutes, collaborations and project teams do not always possess the expertise, or human or material resources that are needed to set up and maintain such services. Regional and national institutions have to answer needs, which are growingly global and often contradict their operational capabilities or organizational mandate and so are looking at existing worldwide service offers such as CERN's. We believe that the accumulated experience obtained through the operation of a large scale worldwide collaboration service combined with CERN's global network and its recently- deployed Agile Infrastructure would allow the Organization to set up and operate collaborative services, such as Indico and Vidyo, at a much larger scale and on behalf of worldwide research and education institutions and thus answer these pressing demands while optimizing resources at a global level. Such services would be built over a robust and massively scalable Indico server to which the concept of communities would be added, and which would then serve as a hub for accessing other collaboration services such as Vidyo, on the same simple and successful model currently in place for CERN users. This talk will describe this vision, its benefits and the steps that have already been taken to make it come to life.},
  Art_number               = {052010},
  Document_type            = {Conference Paper},
  Doi                      = {10.1088/1742-6596/664/5/052010},
  Editor                   = {Bonacorsi D., Sakamoto H., Lyon A., Ueda I.},
  ISSN                     = {17426588},
  Keywords                 = {Computer supported cooperative work; High energy physics; Open systems; Software engineering, Collaboration services; Collaborative services; Commercial software; Education institutions; Global collaboration; Global infrastructure; National institutions; Operational capabilities, Open source software},
  Publisher                = {Institute of Physics Publishing},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84961891968&doi=10.1088%2f1742-6596%2f664%2f5%2f052010&partnerID=40&md5=848ad384af0ffdf1149307a5b14858db}
}

@Conference{Ferreira2014419,
  Title                    = {Proving that the release management process can enhance throughput in software development projects},
  Author                   = {Ferreira, N.N.V. and Langerman, J.J.},
  Year                     = {2014},
  Note                     = {cited By 0},
  Pages                    = {419-424},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {The process that involves creating and altering software systems can be defined as the software development lifecycle. People often use methodologies and methods in order to develop these systems with success factors such as people, processes and technology. The underlying issue in such a Iifecycle is that project defects are identified late within the lifecycle and therefore, the process of rectifying these problems becomes costly. Ultimately, an ideal product is one with minimal or zero defects, which can be achieved with a software project that prevents or detects defects earlier within the cycle. Release management can be described as the process involving decision-making regarding the implementation and release of a software product. A conceptual framework exists, which stipulates the stages involved in the development process of a software application. Several models exist that describe the software development Iifecycle (SDLC) in different approaches. The purpose of the research presented in this paper is to incorporate findings where large companies with global IT projects can adopt the Agile conceptual framework and to testify whether all types of IT projects will benefit from a frequent release approach to the delivery of the project. Three different projects across a large South African financial institution that specialises in corporate organisation banking and core-banking functionality will be studied and presented as case studies. Release management will also be studied from an organisational perspective with one of South Africa's banking institution in context. Data will be retrieved by carrying out interviews and surveys with appropriate stakeholders, and therefore, analysed to generate a valid conclusion. © 2014 IEEE.},
  Art_number               = {6926496},
  Author_keywords          = {frequent releases; release management; Software development lifecycle},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICCSE.2014.6926496},
  ISBN                     = {9781479929511},
  Journal                  = {Proceedings of the 9th International Conference on Computer Science and Education, ICCCSE 2014},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84911923586&doi=10.1109%2fICCSE.2014.6926496&partnerID=40&md5=51ee4dee2273d1fdb49119bb965e8954}
}

@Conference{Ferrus2017,
  Title                    = {On the virtualization and dynamic orchestration of satellite communication services},
  Author                   = {Ferrus, R. and Koumaras, H. and Sallent, O. and Rasheed, T. and Duros, E. and Riggio, R. and Kuhn, N. and Gélard, P. and Ahmed, T.},
  Year                     = {2017},
  Note                     = {cited By 0},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Key features of satellite communications such as wide-scale coverage, broadcast/multicast support and high availability, together with significant amounts of new satellite capacity coming online, anticipate new opportunities for satellite communications services as an integral part within upcoming 5G systems. To materialize these opportunities, satellite communications services have to be provisioned and operated in a more flexible, agile and cost-effective manner than done today. In this context, this paper describes a solution for the virtualization and dynamic orchestration of satellite communication services that builds on the introduction of Software Defined Networking (SDN) and Network Function Virtualization (NFV) technologies within the satellite ground segment systems. Along with the description of the main system architecture traits, the flowchart of a general procedure for the dynamic instantiation of virtualized satellite networks on top of a SDN/NFV-enabled satellite ground segment system is provided. The paper also presents experimental results for the dynamic customization of satellite network services through the implementation of a set of virtualized satellite network functions that can be orchestrated over general purpose open virtual platforms. © 2016 IEEE.},
  Art_number               = {7881129},
  Author_keywords          = {Combined satellite-terrestrial networks; Network Function Virtualization; Satellite gateway virtualization; Satellite network; Service orchestration; Software-defined networking},
  Coden                    = {IVTCD},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/VTCFall.2016.7881129},
  ISBN                     = {9781509017010},
  ISSN                     = {15502252},
  Journal                  = {IEEE Vehicular Technology Conference},
  Keywords                 = {Cost effectiveness; Gateways (computer networks); Online systems; Satellite communication systems; Satellites; Software defined networking; Transfer functions; Virtual reality; Virtualization, Satellite communication services; Satellite communications; Satellite gateways; Satellite network; Satellite-terrestrial network; Service orchestration; Software defined networking (SDN); System architectures, Network function virtualization},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85016939656&doi=10.1109%2fVTCFall.2016.7881129&partnerID=40&md5=ccf472538a363c42edff6ee68338f305}
}

@Article{Filho2015243,
  Title                    = {Task allocation approaches in distributed agile software development: A quasi-systematic review},
  Author                   = {Filho, M.S. and Pinheiro, P.R. and Albuquerque, A.B.},
  Journal                  = {Advances in Intelligent Systems and Computing},
  Year                     = {2015},
  Note                     = {cited By 5},
  Pages                    = {243-252},
  Volume                   = {349},

  Abstract                 = {Increasingly, software organizations are investing in distributed software development. However, this new scenario introduces a number of new challenges and risks. Organizations have sought alternatives to the traditional software development models by applying agile software development practices to distributed development. The key point in a distributed scenario is related to task allocation. This paper conducts a quasi-systematic review of studies of task allocation in distributed software development projects that incorporate agile practices, trying to establish issues for additional research. The study allows us to conclude that there are few works on task classification and prioritization what suggests a fertile area for work. © Springer International Publishing Switzerland 2015.},
  Author_keywords          = {Agile Methods; Distributed Software Development; Task Allocation},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-18473-9_24},
  Editor                   = {Silhavy R., Senkerik R., Oplatkova Z.K., Prokopova Z., Silhavy P.},
  ISBN                     = {9783319184722},
  ISSN                     = {21945357},
  Keywords                 = {Computer software; Intelligent systems; Risk perception; Software engineering, Agile methods; Agile software development; Distributed development; Distributed software development; Software development models; Software organization; Task allocation; Task classification, Software design},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84942808430&doi=10.1007%2f978-3-319-18473-9_24&partnerID=40&md5=9b298b1487a5419d75a5cb7cddd2489e}
}

@Article{Filipsky2015773,
  Title                    = {Creating smart tests from recorded automated test cases},
  Author                   = {Filipsky, M. and Bures, M. and Jelinek, I.},
  Journal                  = {Advances in Intelligent Systems and Computing},
  Year                     = {2015},
  Note                     = {cited By 1},
  Pages                    = {773-780},
  Volume                   = {353},

  Abstract                 = {In order to shorten time to market many software development teams have adopted continuous integration and automated testing. Although user interface test automation is a suitable solution for Agile development, the resulting frequently changing application gives rise to challenging task, especially from the point-of-view of maintenance. In this paper, we present an approach bypassing those drawbacks through test recording enhanced by postprocessing that creates smart tests that are easy to maintain. We have analyzed recorded tests and created step signatures that we then use to find a sequence of common steps. Based on this, we identify reusable parts which we consequently optimize using algorithms that are introduced in this paper to remove inefficient duplications in tests. © Springer International Publishing Switzerland 2015.},
  Author_keywords          = {Automated Testing; Common Sequences; Reusable Objects; Test Recording; Test Set Optimization},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-16486-1_76},
  Editor                   = {Rocha A., Rocha A., Correia A.M., Costanzo S., Reis L.P.},
  ISBN                     = {9783319164854},
  ISSN                     = {21945357},
  Keywords                 = {Automation; Computer software reusability; Information systems; Integration testing; Software design; Testing; User interfaces, Agile development; Automated testing; Common Sequences; Continuous integrations; Reusable Objects; Software development teams; Suitable solutions; Test sets, Software testing},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84926300337&doi=10.1007%2f978-3-319-16486-1_76&partnerID=40&md5=da935837cfd0537c88d44cd5b95b1adc}
}

@Article{Fitsilis2015375,
  Title                    = {Software project team selection based on enterprise social networks},
  Author                   = {Fitsilis, P. and Gerogiannis, V. and Anthopoulos, L.},
  Journal                  = {Lecture Notes in Electrical Engineering},
  Year                     = {2015},
  Note                     = {cited By 0},
  Pages                    = {375-384},
  Volume                   = {349},

  Abstract                 = {Project management is a well understood management method, widely adopted today, in order to give predictable results to complex problems. It is based on the assumption that unique undertakings require flexible organizational structures and different skill sets, in order to be implemented successfully. It is evident that matching the required, by each project, skills with the skills offered from the available human capital, is not a trivial process. This need of building high performing, effective teams with the appropriate skill set, is quite important since it is a prerequisite for successful project completion. Furthermore the recent shift to agile project management, together with the fact that projects today do not only require technical skills but also behavioral and contextual skills increases the importance of project team selection. In this paper, we present the ONSOCIAL system, a system that attempts to capitalize knowledge accumulated over social networks and to support the project team selection process. For achieving this objective, the ONSOCIAL system is using information stored in social network systems, analyses the stored profiles and offers recommendations for candidate team members. © Springer-Verlag Berlin Heidelberg 2015.},
  Author_keywords          = {Expert location; Project management; Project team selection; Social networks},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-662-47200-2_40},
  Editor                   = {Kim K.J., Gen M., Hiroshi Y., Huang X.},
  ISBN                     = {9783662471999},
  ISSN                     = {18761100},
  Keywords                 = {Complex networks; Management science; Project management; Social networking (online); Social sciences computing, Agile project management; Complex problems; Management method; Organizational structures; Project completion; Project team; Social network systems; Software project, Human resource management},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84946026525&doi=10.1007%2f978-3-662-47200-2_40&partnerID=40&md5=ee69a0e4ca1248481756acb80c10a2ff}
}

@Conference{Fleischmann20159,
  Title                    = {Requirements specification as executable software design - A behavior perspective},
  Author                   = {Fleischmann, A. and Schmidt, W. and Stary, C.},
  Year                     = {2015},
  Editor                   = {Herrmann A., Wieringa R., Perini A., Weyer T., Kalenborn A., Paech B., Hoffmann A., Lenz A., Daun M., Doerr J., Trapp M., Pietsch W., Palomares C., Ramirez I.M., Tenbergen B., Herzwurm G., Knauss E., Matulevicius R., Daneva M., Schockert S., Forbrig P.},
  Note                     = {cited By 2},
  Pages                    = {9-18},
  Publisher                = {CEUR-WS},
  Volume                   = {1342},

  Abstract                 = {Today's application development requires agile project structures and active involvement of concerned stakeholders. Transforming of representations from requirements specification to executable design models hinders seamless roundtrip engineering and dynamic adaptation. Subject-oriented software processes allow fine-grained modeling and subsequent execution of mutually adjusted stakeholder behaviors representing the business logic of an organization. They enable continuous requirements engineering in the sense of non-disruptive articulation and specification of process knowledge that represents executable software elements. In this contribution we reveal these capabilities of Subjectoriented Business Process Management according to several scenarios of requirements management: (i) development of some business logic starting from scratch, and (ii) extensions and adaptation of behaviors. Each scenario is illustrated by respective business cases. © 2015 by the authors.},
  Author_keywords          = {Adaptability; Automated execution; Process modeling; Seamless development; Specification},
  Document_type            = {Conference Paper},
  ISSN                     = {16130073},
  Journal                  = {CEUR Workshop Proceedings},
  Keywords                 = {Administrative data processing; Behavioral research; Computer software selection and evaluation; Enterprise resource management; Requirements engineering; Specifications, Adaptability; Application development; Automated execution; Business process management; Process Modeling; Requirements management; Requirements specifications; Seamless development, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84925943375&partnerID=40&md5=0d40d886599427c7be8bb27d3afcb77b}
}

@Article{Fletcher2013299,
  Title                    = {Implementing vertex dynamics models of cell populations in biology within a consistent computational framework},
  Author                   = {Fletcher, A.G. and Osborne, J.M. and Maini, P.K. and Gavaghan, D.J.},
  Journal                  = {Progress in Biophysics and Molecular Biology},
  Year                     = {2013},
  Note                     = {cited By 18},
  Number                   = {2},
  Pages                    = {299-326},
  Volume                   = {113},

  Abstract                 = {The dynamic behaviour of epithelial cell sheets plays a central role during development, growth, disease and wound healing. These processes occur as a result of cell adhesion, migration, division, differentiation and death, and involve multiple processes acting at the cellular and molecular level. Computational models offer a useful means by which to investigate and test hypotheses about these processes, and have played a key role in the study of cell-cell interactions. However, the necessarily complex nature of such models means that it is difficult to make accurate comparison between different models, since it is often impossible to distinguish between differences in behaviour that are due to the underlying model assumptions, and those due to differences in the in silico implementation of the model. In this work, an approach is described for the implementation of vertex dynamics models, a discrete approach that represents each cell by a polygon (or polyhedron) whose vertices may move in response to forces. The implementation is undertaken in a consistent manner within a single open source computational framework, Chaste, which comprises fully tested, industrial-grade software that has been developed using an agile approach. This framework allows one to easily change assumptions regarding force generation and cell rearrangement processes within these models. The versatility and generality of this framework is illustrated using a number of biological examples. In each case we provide full details of all technical aspects of our model implementations, and in some cases provide extensions to make the models more generally applicable. © 2013 Elsevier Ltd.},
  Author_keywords          = {Cell-based models; Chaste; Epithelial monolayers; Model comparison; Off-lattice},
  Coden                    = {PBIMA},
  Document_type            = {Review},
  Doi                      = {10.1016/j.pbiomolbio.2013.09.003},
  ISSN                     = {00796107},
  Keywords                 = {algorithm; animal; biological model; cell aggregation; cell communication; Cell-based models; Chaste; computer simulation; cytology; Epithelial monolayers; epithelium cell; human; mechanical stress; mechanotransduction; Model comparison; Off-lattice; physiology; review, Cell-based models; Chaste; Epithelial monolayers; Model comparison; Off-lattice, Algorithms; Animals; Cell Aggregation; Cell Communication; Computer Simulation; Epithelial Cells; Humans; Mechanotransduction, Cellular; Models, Biological; Stress, Mechanical},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84887617952&doi=10.1016%2fj.pbiomolbio.2013.09.003&partnerID=40&md5=3d10be237623e3602c9f3b884e13d891}
}

@Article{Fontana201520,
  Title                    = {Agile Compass: A Tool for Identifying Maturity in Agile Software-Development Teams},
  Author                   = {Fontana, R.M. and Reinehr, S. and Malucelli, A.},
  Journal                  = {IEEE Software},
  Year                     = {2015},
  Note                     = {cited By 0},
  Number                   = {6},
  Pages                    = {20-23},
  Volume                   = {32},

  Abstract                 = {Researchers investigated how agile software development teams evolve. They analyzed nine teams' evolution of practices and found that the process was idiosyncratic. Each team adopted practices on the basis of its circumstances and improved the practices on the basis of the challenges it faced. Using this research, the researchers designed the Agile Compass, a questionnaire based on a set of guidelines for agile-development improvement, supported by real teams' values and principles. The article has three Web extras. The first shows the Agile Compass questionnaire (https://s3.amazonaws.com/ieeecs.cdn.csdl.public/mags/so/2015/06/extras/mso201506-AnAgile-s1.pdf), which can help development teams identify which outcomes they have accomplished. The second describes the Agile Compass research approach (https://s3.amazonaws.com/ieeecs.cdn.csdl.public/mags/so/2015/06/extras/mso201506-AnAgile-s2.png). The third is the Map of Evidence (https://s3.amazonaws.com/ieeecs.cdn.csdl.public/mags/so/2015/06/extras/mso201506-AnAgile-s3.png), showing the information supporting each type of project outcome that the authors gathered during interviews with development teams. © 1984-2012 IEEE.},
  Art_number               = {7311000},
  Author_keywords          = {Companies; Compass; Context modeling; Encoding; Programming; Software; Software engineering},
  Coden                    = {IESOE},
  Document_type            = {Article},
  Doi                      = {10.1109/MS.2015.135},
  ISSN                     = {07407459},
  Keywords                 = {Compasses (magnetic); Computer software; Encoding (symbols); HTTP; Industry; Mathematical programming; Project management; Software design; Surveys, Agile development; Agile software development; Context modeling; Development teams; Project outcomes; Research approach, Software engineering},
  Publisher                = {IEEE Computer Society},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84946238453&doi=10.1109%2fMS.2015.135&partnerID=40&md5=e031a915d563b4358c7aa4df966eb589}
}

@Conference{Forbrig2016,
  Title                    = {Continuous requirements engineering and human-centered agile software development},
  Author                   = {Forbrig, P.},
  Year                     = {2016},
  Editor                   = {Forbrig P., Borg M., Herrmann A., Unterkalmsteiner M., Bjarnason E., Daun M., Franch X., Kirikova M., Palomares C., Espana S., Paech B., Opdahl A.L., Tenbergen B., Dieste O., Felderer M., Gay G., Horkoff J., Seffah A., Morandini M., Petersen K.},
  Note                     = {cited By 0},
  Publisher                = {CEUR-WS},
  Volume                   = {1564},

  Abstract                 = {The idea of Continuous Requirements Engineering in relation to a Human-Centered Agile Development Process is discussed. First, it is argued that Continuous Requirements Engineering has to cover design-time and runtime aspects. In this way maintenance is covered as well. Second, arguments are provided for integrating aspects of usability and user experience into requirements specifications. This has to be done continuously. Therefore, the term Continuous Human-Centered Development is introduced and discussed. Based on a process model for SCRUM some aspects of integrating HCD into the development process are discussed.},
  Author_keywords          = {Agile development; Continuous human-centered design; Process modeling; Requirements engineering; Requirements models; SCRUM; Specification},
  Document_type            = {Conference Paper},
  ISSN                     = {16130073},
  Journal                  = {CEUR Workshop Proceedings},
  Keywords                 = {Computer software selection and evaluation; Requirements engineering; Software engineering; Specifications, Agile development; Human-centered designs; Process Modeling; Requirements Models; SCRUM, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84964620234&partnerID=40&md5=800a1f0334d9ba26102a3cabebb8a033}
}

@Article{Fox2016232,
  Title                    = {The true cost},
  Author                   = {Fox, R.},
  Journal                  = {Digital Library Perspectives},
  Year                     = {2016},
  Note                     = {cited By 0},
  Number                   = {4},
  Pages                    = {232-238},
  Volume                   = {32},

  Abstract                 = {Purpose: This column takes a critical look at how technology projects are valued according to various cost factors. Those factors are examined, and a proposal is made regarding the use of agile scrum to overcome the limitations of standard cost analysis. Standard cost analysis based on time and financial burden limit the ability of library leadership to make innovative and visionary decisions concerning library strategy vis-à-vis technology. Design/methodology/approach: This is a regular column. The material was written based on experience and familiarity with current issues as well as a literature review. Findings: As this is a regular column that is exploratory and speculative in nature, there are no formal findings. The conclusion is based on the ideas presented in the column narrative. Originality/value: The average approach to cost analysis, otherwise known as the return on investment, stifles the ability of library leadership to make strategic decisions that are focused on opportunities and relevance. Agile scrum is not simply a method to organize and manage software development projects. It transforms the thinking of an organization and establishes a decision-making model that places concerns at the appropriate level so that libraries can be nimble with regard to technology implementation. © 2016, © Emerald Group Publishing Limited.},
  Author_keywords          = {Agile; Cost analysis; Estimation; Scrum; Strategy; Technology implementation},
  Document_type            = {Article},
  Doi                      = {10.1108/DLP-07-2016-0018},
  ISSN                     = {20595816},
  Keywords                 = {Cost accounting; Costs; Decision making; Estimation; Software design; Software engineering, Agile; Cost analysis; Scrum; Strategy; Technology implementation, Cost benefit analysis},
  Publisher                = {Emerald Group Publishing Ltd.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85015276069&doi=10.1108%2fDLP-07-2016-0018&partnerID=40&md5=4602b58864d50c563f63db80a365bc13}
}

@Conference{Frey2016,
  Title                    = {The innovation-driven Hackathon - One means for accelerating innovation},
  Author                   = {Frey, F.J. and Luks, M.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Publisher                = {Association for Computing Machinery},

  Abstract                 = {Established companies often have difficulties developing new innovative products in a fast and creative way because of their fix structure and organizational complexity. With decision processes divided across several departments it takes too long to get all required skills and people onboard compared to more agile competitors. There are plenty of causes for organizational obstacles which hinder and slow-down the companies developing innovative products, particularly, within large companies having established processes and a lot of bureaucracy. From the perspective of the authors a set of means is required to tackle these organizational challenges as well to develop an innovation-friendly underlying corporate culture to enable the company identifying, developing, and selling innovative solutions in time. This paper introduces the concept of hackathons and describes how companies may consider hackathons as one means for overcoming organizational challenges and speeding-up the early phases of their innovation process up to the development and evaluation of prototypes. Although a hackathon can be applied for a variety of purposes, this paper focusses on its benefits for identifying, and developing innovative solutions and overcoming organizational hurdles on the path. Therefore, the INNOVATION-DRIVEN HACKATHON pattern is introduced and described in this paper from the perspective of practitioners. The authors aim at sharing practical experience with other industry experts as well as researchers and getting new insights concerning the application of hackathons and other means for optimizing the innovation process in the industry context. © 2016 ACM.},
  Art_number               = {a10},
  Author_keywords          = {Agile; Hackathon; Innovation; Lean; Prototyping},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/3011784.3011794},
  ISBN                     = {9781450340748},
  Journal                  = {ACM International Conference Proceeding Series},
  Keywords                 = {Computer applications; Computer programming; Software prototyping, Agile; Hackathon; Innovation process; Innovative product; Innovative solutions; Lean; Organizational complexity; Practical experience, Innovation},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85015200818&doi=10.1145%2f3011784.3011794&partnerID=40&md5=2cae1ca3922dfe660ca575ab25dc107a}
}

@Conference{Frtala20158,
  Title                    = {Animating organizational patterns},
  Author                   = {Frtala, T. and Vranić, V.},
  Year                     = {2015},
  Note                     = {cited By 2},
  Pages                    = {8-14},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Organizational patterns are the key to a stepwise adoption of agile and lean approaches and to a piecemeal growth of agile and lean organization of work. However, their text description is not easy to comprehend. In this paper, we introduce our initial efforts towards establishing an approach to animate organizational patterns as text adventure games. Players pass through a series of scenes described using Erickson's conversational hypnosis language patterns in order to better evoke their experience. The game scenario space is expressed using UML state machine diagrams. The approach is presented on adventure games we created for the Architect Also Implements organizational pattern. © 2015 IEEE.},
  Art_number               = {7166082},
  Author_keywords          = {agile; Erickson's converstaional hypnosis patterns; lean; organizational patterns; text adventure games},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/CHASE.2015.8},
  ISBN                     = {9781479919345},
  Journal                  = {Proceedings - 8th International Workshop on Cooperative and Human Aspects of Software Engineering, CHASE 2015},
  Keywords                 = {Adventure games; agile; Erickson's converstaional hypnosis patterns; lean; Organizational pattern, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84946074616&doi=10.1109%2fCHASE.2015.8&partnerID=40&md5=ec0c05907bc4cfd38cdfaccde1de6bc7}
}

@Conference{Fucci2016,
  Title                    = {An External Replication on the Effects of Test-driven Development Using a Multi-site Blind Analysis Approach},
  Author                   = {Fucci, D. and Scanniello, G. and Romano, S. and Shepperd, M. and Sigweni, B. and Uyaguari, F. and Turhan, B. and Juristo, N. and Oivo, M.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Publisher                = {IEEE Computer Society},
  Volume                   = {08-09-September-2016},

  Abstract                 = {Context: Test-driven development (TDD) is an agile practice claimed to improve the quality of a software product, as well as the productivity of its developers. A previous study (i.e., baseline experiment) at the University of Oulu (Finland) compared TDD to a test-last development (TLD) approach through a randomized controlled trial. The results failed to support the claims. Goal: We want to validate the original study results by replicating it at the University of Basilicata (Italy), using a different design. Method: We replicated the baseline experiment, using a crossover design, with 21 graduate students. We kept the settings and context as close as possible to the baseline experiment. In order to limit researchers bias, we involved two other sites (UPM, Spain, and Brunel, UK) to conduct blind analysis of the data. Results: The Kruskal-Wallis tests did not show any significant difference between TDD and TLD in terms of testing effort (p-value = .27), external code quality (p-value = .82), and developers' productivity (p-value = .83). Nevertheless, our data revealed a difference based on the order in which TDD and TLD were applied, though no carry over effect. Conclusions: We verify the baseline study results, yet our results raises concerns regarding the selection of experimental objects, particularly with respect to their interaction with the order in which of treatments are applied. We recommend future studies to survey the tasks used in experiments evaluating TDD. Finally, to lower the cost of replication studies and reduce researchers' bias, we encourage other research groups to adopt similar multi-site blind analysis approach described in this paper.},
  Art_number               = {a3},
  Author_keywords          = {blind analysis; external experiment replication; test-driven development},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2961111.2962592},
  ISBN                     = {9781450344272},
  ISSN                     = {19493770},
  Journal                  = {International Symposium on Empirical Software Engineering and Measurement},
  Keywords                 = {Computer programming; Productivity; Software engineering; Students, blind analysis; Carry-over effects; external experiment replication; External replication; Graduate students; Kruskal-Wallis tests; Randomized controlled trial; Test driven development, Software testing},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84991666654&doi=10.1145%2f2961111.2962592&partnerID=40&md5=33e4be68fee8b847004d6a75102452b5}
}

@Conference{Furtado2015740,
  Title                    = {Agile practices in maturity model for testing: An experience report},
  Author                   = {Furtado, A.P.C.C. and Sampaio, S. and Andrade, E. and De Farias, I., Jr. and Wanderley, M.},
  Year                     = {2015},
  Note                     = {cited By 0},
  Pages                    = {740-741},
  Publisher                = {Knowledge Systems Institute Graduate School},
  Volume                   = {2015-January},

  Abstract                 = {Software testing is an important tool for ensuring that software products produced and launched on the market reach the appropriate quality standards. Testing maturity models such as MPT.BR or TMMI, appear in the software scenario as a way to support introducing elements that are essential for developing the discipline of software testing within organizations. Together with this reality, it is observed that there is a strong trend towards using agile methods in software development. Therefore, this paper presents an experience report on the use of agile practices together with MPT.BR. Copyright © 2015 by KSI Research Inc. and Knowledge Systems Institute Graduate School.},
  Author_keywords          = {Agile Practices; Maturity Models; Software Testing},
  Document_type            = {Conference Paper},
  ISBN                     = {1891706373},
  ISSN                     = {23259000},
  Journal                  = {Proceedings of the International Conference on Software Engineering and Knowledge Engineering, SEKE},
  Keywords                 = {Knowledge engineering; Software design; Software engineering; Standards, Agile methods; Agile practices; Experience report; Maturity model; Quality standard; Software products, Software testing},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84969790487&partnerID=40&md5=e7250452f17361db4e8c2a9c38453af4}
}

@Conference{Furtado201666,
  Title                    = {Trace++: A Traceability Approach to Support Transitioning to Agile Software Engineering},
  Author                   = {Furtado, F. and Zisman, A.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {66-75},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Agile methodologies have been introduced as an alternative to traditional software engineering methodologies. However, despite the advantages of using agile methodologies, the transition between traditional and agile methodologies is not an easy task. There are several problems associated with the use of agile methodologies. Examples of these problems are related to (i) lack of metrics to measure the amount of rework that occurs per sprint, (ii) interruption of a project after several iterations, (iii) changes in the requirements, (iv) lack of documentation, and (v) lack of management control. In this paper we present Trace++, a traceability technique that extends traditional traceability relationships with extra information in order to support the transition between traditional and agile software development. The use of Trace++ has been evaluated in two real projects of different software development companies to measure the benefits of using Trace++ to support agile software development. © 2016 IEEE.},
  Art_number               = {7765512},
  Author_keywords          = {agile methods; hybrid process; Traceability},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/RE.2016.47},
  ISBN                     = {9781509041213},
  Journal                  = {Proceedings - 2016 IEEE 24th International Requirements Engineering Conference, RE 2016},
  Keywords                 = {Requirements engineering; Software design, Agile methods; Agile software development; Agile software engineering; Hybrid process; Software engineering methodologies; Support agile software development; Traceability; Traceability techniques, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85007271071&doi=10.1109%2fRE.2016.47&partnerID=40&md5=c4ed84ebf1d772083cbb6499247e2ca1}
}

@Article{Gaikwad2016387,
  Title                    = {An empirical study of writing effective user stories},
  Author                   = {Gaikwad, V. and Joeg, P.},
  Journal                  = {International Journal of Software Engineering and its Applications},
  Year                     = {2016},
  Note                     = {cited By 0},
  Number                   = {11},
  Pages                    = {387-404},
  Volume                   = {10},

  Abstract                 = {Software requirements should be accurately captured in the form of user stories so that development teams are able to meet customer expectations for the software. This study investigates the various challenges in capturing requirements of the agile scrum methodology and proposes some improvements. A user story writing workshop was conducted based on a standard set of business requirements. The resulting user stories were analyzed for correctness and problem areas were identified. Then a separate industry survey was conducted to confirm that the problem areas found in this workshop are indeed the common problem areas for industry practitioners. A set of improvements were then identified to address the problem areas. A second workshop was then conducted to check whether the improvements actually result in better user story writing. The results of the second workshop suggest that the improvements were quite effective in resolving most of the problem areas. They can thus be adopted by industry practitioners as best practices. © 2016 SERSC.},
  Author_keywords          = {Agile; Persona; Requirements engineering; Scrum; User stories},
  Document_type            = {Article},
  Doi                      = {10.14257/ijseia.2016.10.11.31},
  ISSN                     = {17389984},
  Publisher                = {Science and Engineering Research Support Society},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85007109259&doi=10.14257%2fijseia.2016.10.11.31&partnerID=40&md5=993ba311b1c17b6a6e3ae8a470fa8f61}
}

@Conference{Gamble201614,
  Title                    = {Can metamodels link development to design intent?},
  Author                   = {Gamble, M.T.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {14-17},
  Publisher                = {Association for Computing Machinery, Inc},

  Abstract                 = {Developers of enterprise software are often admonished to be more aware of where the output of their programming tasks fit within the outcomes of the business which they serve. However, despite recent progress in adopting agile development techniques and promotion of architecture frameworks for greater traceability between IT efforts and business outcomes, such insight is still elusive. Meanwhile the renaissance of design thinking is not well represented in those same "modern" frameworks. We review components of current metamodels for development and architecture frameworks and point out tools from service design thinking that could be paired with the frameworks. Some extensions are proposed to align metamodels to improve the conceptual orientation of developers and other participants in the development process. The linkage between design intent and development is possible, but not clearly apparent in current metamodels. © 2016 ACM.},
  Author_keywords          = {Agile methods; ArchiMate; Architecture framework; Design thinking; Domain model; Metamodel; SAFe; TOGAF; UML},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2896935.2896937},
  ISBN                     = {9781450341530},
  Journal                  = {Proceedings - 1st International Workshop on Bringing Architectural Design Thinking Into Developers' Daily Activities, Bridge 2016},
  Keywords                 = {Bridges; Design; Enterprise software, Agile methods; Archimate; Architecture frameworks; Design thinking; Domain model; Meta model; SAFe; TOGAF, Architectural design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84974533433&doi=10.1145%2f2896935.2896937&partnerID=40&md5=021c67553fc4d3976579a151c8dfc59e}
}

@Conference{Gamble20131678,
  Title                    = {Assessing individual performance in Agile undergraduate software engineering teams},
  Author                   = {Gamble, R.F. and Hale, M.L.},
  Year                     = {2013},
  Note                     = {cited By 6},
  Pages                    = {1678-1684},

  Abstract                 = {The Agile Software Development (ASD) process is at the forefront of rapid product development driven by changing customer requirements and a trusted, self-organizing development team. Scrum has become a viable model of ASD focusing on determining immediate deliverables and structuring short timelines, called Sprints, for designing, implementing, and providing them for testing by the customer. While these practices are being adopted by organizations, there is significant difficulty in scaling them to the classroom. Once in place, it is a complex task to evaluate individual student performance based solely on the product outcome and Sprint grade. Thus, there is limited opportunity to catch performance problems that may lead to missing deliverable deadlines or decreasing team trust. In this paper, we impose ASD using Scrum on a senior software projects course in Computer Science. Using a collaborative environment that embeds a social network, project management modules, and event capture system, we perform broad data and event capture and analysis to investigate metrics that are relevant to assessing individual performance aspects related to functioning on an Agile team for software development. Our results suggest that predictive data is available after each Sprint to ascertain individual performance attributes and their relationship to product outcomes. © 2013 IEEE.},
  Art_number               = {6685123},
  Author_keywords          = {Agile software development; Performance assessment; Scrum; Undergraduate software engineering},
  Coden                    = {PFECD},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/FIE.2013.6685123},
  ISBN                     = {9781467352611},
  ISSN                     = {15394565},
  Journal                  = {Proceedings - Frontiers in Education Conference, FIE},
  Keywords                 = {Agile software development; Collaborative environments; Individual performance; Performance assessment; Project management module; Rapid product development; Scrum; Undergraduate software engineering, Human resource management; Product development; Project management; Software design; Teaching, Information management},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893328189&doi=10.1109%2fFIE.2013.6685123&partnerID=40&md5=c4a8bdacda99e4dd6b1b6ce97b667c3e}
}

@Conference{Gammaitoni2016125,
  Title                    = {Agile Validation of Higher Order Transformations Using F-Alloy},
  Author                   = {Gammaitoni, L. and Kelsen, P. and Ma, Q.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {125-131},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Model transformations play a key role in model driven software engineering approaches. Validation of model transformations is crucial for the quality assurance of software systems to be constructed. The relational logic based specification language Alloy and its accompanying tool the Alloy Analyzer have been used in the past to validate properties of model transformations. However Alloy based analysis of transformations suffers from time complexity and scalability issues. The problem becomes even more severe when it comes to higher order transformations that are inherently more complex. In previous work, we proposed a sub-language of Alloy, called F-Alloy, that is tailored for model transformation specifications. Instead of pure analysis based validation, F-Alloy speeds up the validation of model transformations by applying a hybrid strategy that combines analysis with interpretation. In this paper, we show how the F-Alloy approach can be extended to also support efficient validation of higher order transformations. © 2016 IEEE.},
  Art_number               = {7541896},
  Author_keywords          = {Agile; Alloy; F-Alloy; Higher-order transformations; Interpretation; Model transformation; Validation},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/TASE.2016.21},
  ISBN                     = {9781509017638},
  Journal                  = {Proceedings - 10th International Symposium on Theoretical Aspects of Software Engineering, TASE 2016},
  Keywords                 = {Alloying; Quality assurance; Specification languages; Specifications, Agile; Higher-order; Interpretation; Model transformation; Validation, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84988019868&doi=10.1109%2fTASE.2016.21&partnerID=40&md5=58c9b2eb62aa65ff2b68ea612d2eb876}
}

@Article{Ganci201411,
  Title                    = {Becoming a team player: The evolving role of design in the world of agile development},
  Author                   = {Ganci, A. and Ribeiro, B.},
  Journal                  = {International Journal of Design Management and Professional Practice},
  Year                     = {2014},
  Note                     = {cited By 2},
  Number                   = {2},
  Pages                    = {11-23},
  Volume                   = {7},

  Abstract                 = {Through qualitative methods, this paper examines the evolving role of the visual communication designer within the Agile development process with a special focus on educational ramifications. As websites and software become more complex environments, designers can quickly find themselves unable to design and implement a complete solution on their own. While this realization seems like a loss of control-the designers and their designs now appear to be at the whim of the developer-it can actually result in more thoughtful solutions. Designers must simply learn to become a team player by integrating themselves firmly into the process. In doing this, the integrity of the visual design will not be compromised and will add broader benefit to the site or application. It is crucial that designers adopt a new team-based mentality towards designing digital products. This paper will document insights from interviews about, and direct observation of, the Agile development processes to provide context and insight into a visual communication designer's ideal role and expected deliverables. Implications and challenges for visual communication design education will be derived from the insights obtained through this study. © Common Ground, Aaron Ganci, and Bruno Ribeiro, All Rights Reserved.},
  Author_keywords          = {Agile methods; Collaboration; Design education; Mobile application; Software; User experience design; Visual communication design; Web design},
  Document_type            = {Article},
  ISSN                     = {2325162X},
  Publisher                = {Common Ground Publishing},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84900532272&partnerID=40&md5=266339b73b8c94e773bf7aee7a6cca65}
}

@Book{Gandomani201624,
  Title                    = {Agile coaches and champions: Two hidden facilitators of agile transition},
  Author                   = {Gandomani, T.J. and Nafchi, M.Z.},
  Publisher                = {IGI Global},
  Year                     = {2016},
  Note                     = {cited By 0},

  Abstract                 = {Prevalence of Agile methods in software companies is increasing dramatically. Software companies and teams need to employ these methods to overcome the inherent challenges of traditional methods in software development. However, transitioning to Agile approach is a topic of debate. This is mainly because software companies are facing with many challenges, obstacles, and hindrances when leaving traditional methods and moving to Agile methods, as shown in previous research studies. Conducting a large-scale research study showed that Agile transformation need to be supported by several facilitators and identified its most important facilitators. The main aim of this chapter is to present two hidden facilitators of Agile transition, Agile coaches and Agile champions, which rarely have been taken into consideration. Both of these facilitators directly impress the people involved in the transition. People-intensive nature of Agile methods and critical role of the people in the transition process reflect the importance of these facilitators when a software company doing its transition. © 2016 by IGI Global. All rights reserved.},
  Document_type            = {Book Chapter},
  Doi                      = {10.4018/978-1-4666-9858-1.ch002},
  ISBN                     = {9781466698598; 1466698586; 9781466698581},
  Journal                  = {Emerging Innovations in Agile Software Development},
  Pages                    = {24-36},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84981484646&doi=10.4018%2f978-1-4666-9858-1.ch002&partnerID=40&md5=777c48c7b82c6b9e734bd0055f95c89e}
}

@Article{Gandomani20135089,
  Title                    = {Compatibility of agile software development methods and CMMI},
  Author                   = {Gandomani, T.J. and Zulzalil, H.},
  Journal                  = {Indian Journal of Science and Technology},
  Year                     = {2013},
  Note                     = {cited By 4},
  Number                   = {8},
  Pages                    = {5089-5094},
  Volume                   = {6},

  Abstract                 = {Agile software development methods by focusing on the different values, have established a new approach for software development compare to the traditional methods. While traditional methods emphasizes on the following disciplined processes and rigid practices, agile methods focused on individuals and their collaborations. Previously, CMMI was introduced as process improvement model in the traditional methods and now it is known as symbol of those methods. Nevertheless, compatibility of these two different approaches has been a serious question and there are several conflicting reports about their compatibility. The main purpose of this study was scrutinizing this issue. Generic practices and specific practices in CMMI were selected as criteria for checking compatibility of CMMI and agile methods. The results showed that CMMI and agile are compatible in several process areas. However, there are serious incompatibilities in the others. In level 3 and level 4 of CMMI, two and one incompatible process areas have been seen respectively. Also, agile does not support most of the generic practices in CMMI level 4 and 5. The results also showed that these incompatibilities return to the notion of organization and its role in software development.},
  Author_keywords          = {Agile Methods.; Agile Software Development.; CMMI.; Traditional Software Development.},
  Document_type            = {Article},
  ISSN                     = {09746846},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84884408914&partnerID=40&md5=abbfbbadd9762fedd53c7eeb95f8b240}
}

@Article{Gandomani2015295,
  Title                    = {The impact of inadequate and dysfunctional training on agile transformation process: A grounded theory study},
  Author                   = {Gandomani, T.J. and Zulzalil, H. and Abdul Ghani, A.A. and Md. Sultan, A.B. and Parizi, R.M.},
  Journal                  = {Information and Software Technology},
  Year                     = {2015},
  Note                     = {cited By 8},
  Number                   = {1},
  Pages                    = {295-309},
  Volume                   = {57},

  Abstract                 = {Context: Training is an essential facilitator in moving from traditional to Agile software development. Objective: This paper addresses the importance of adequate and functional training in Agile transformation process, the causes of inadequate and dysfunctional training, and the heuristic strategies that can be used in software companies for dealing with this phenomenon. Method: A Grounded Theory study was conducted with participation of 35 Agile experts from 13 different countries. Results: This research discovered that inadequate and dysfunctional training was one of the critical issues that affected Agile transformation process. This study shows that comprehensive and functional training is not often provided to support Agile transformation. This paper shows the primary causes of inadequate and dysfunctional training, its adverse consequences on the transformation process, and the heuristic and ad-hoc treatments as the strategies used by Agile teams to cope with this challenge. Conclusion: Comprehensive training is important in Agile transformation process. Inadequate and dysfunctional training causes several challenges and problems for software companies and development teams when moving to Agile. Several ad-hoc strategies identified by this study can be employed to help software teams and companies facing similar problems. © 2014 Elsevier B.V. All rights reserved.},
  Author_keywords          = {Agile software development; Agile training; Agile transformation process; Agile transition; Grounded Theory},
  Coden                    = {ISOTE},
  Document_type            = {Conference Paper},
  Doi                      = {10.1016/j.infsof.2014.05.011},
  ISSN                     = {09505849},
  Keywords                 = {Software design, Agile software development; Agile transformations; Agile transition; Development teams; Functional trainings; Grounded theory; Heuristic strategy; Transformation process, Software engineering},
  Publisher                = {Elsevier},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84922646182&doi=10.1016%2fj.infsof.2014.05.011&partnerID=40&md5=7265de9d001dd564abec29abe81f1f8e}
}

@Article{Gandomani2013,
  Title                    = {Important considerations for agile software development methods governance},
  Author                   = {Gandomani, T.J. and Zulzalil, H. and Abdul Ghani, A.A. and Sultan, A.B.M.},
  Journal                  = {Journal of Theoretical and Applied Information Technology},
  Year                     = {2013},
  Note                     = {cited By 14},
  Number                   = {3},
  Volume                   = {55},

  Abstract                 = {After introducing Agile approach in 2001, several Agile methods were founded over the last decade. Agile values such as customer collaboration, embracing changes, iteration and frequent delivery, continuous integration, etc. motivate all software stakeholders to use these methods in their projects. Moving to Agile methods needs a huge change in organization and involved people. This change is a fundamental and critical mutation. The main issue is that Agile transition and governance action plan needs to consider different aspects of change related issues. Conduction a Grounded Theory study with participation of 37 Agile experts from 13 countries showed that software companies should consider three main factors before inception of transformation action plan: Adoption styles, Method selection and Awareness of challenges and constraints. These fundamental considerations encompass many critical items for Agile movement and adoption process. However these items may lead to different results in different companies, but they should be studied in deep before any transition action plan. © 2005 - 2013 JATIT & LLS. All rights reserved.},
  Author_keywords          = {Agile Adoption; Agile Governance; Agile methods; Agile software development; Agile transformation; Agile transition},
  Document_type            = {Article},
  ISSN                     = {19928645},
  Publisher                = {Asian Research Publishing Network (ARPN)},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84884867012&partnerID=40&md5=e0c1f97466f4eb788a680dd28aceac87}
}

@Article{Gandomani2014129,
  Title                    = {How human aspects impress Agile software development transition and adoption},
  Author                   = {Gandomani, T.J. and Zulzalil, H. and Abdul Ghani, A.A. and Sultan, A.B.M. and Sharif, K.Y.},
  Journal                  = {International Journal of Software Engineering and its Applications},
  Year                     = {2014},
  Note                     = {cited By 10},
  Number                   = {1},
  Pages                    = {129-148},
  Volume                   = {8},

  Abstract                 = {Many software companies are interested in using Agile methods in their software projects. Contrary to traditional software development methods, Agile methods are people oriented. This fact shows the significant role of individuals in these methods. Increasing prevalence of Agile methods forces software companies to consider people related factors as critical issues in adoption and transition to Agile methods and practices. This article focused on human aspects of Agile transformation process by conducting a Grounded Theory study involving 32 Agile experts. The main contribution of this article is identification and classification of diverse human aspects of Agile transformation process. Analyzing collected data showed that human aspects of Agile transformation process can be classified in several categories. While some of them are impediments to change, some others act as change accelerators. At the same time people's perceptions about change process and incentive factors can shape and form human aspects during the Agile transformation process. Each of these categories encompasses its own factors which have negative or positive effect on change process. © 2014 SERSC.},
  Author_keywords          = {Agile methods; Agile software development; Agile transformation; Agile transition; Grounded theory; Human aspects},
  Document_type            = {Article},
  Doi                      = {10.14257/ijseia.2014.8.1.12},
  ISSN                     = {17389984},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893831240&doi=10.14257%2fijseia.2014.8.1.12&partnerID=40&md5=2f276cd7b2845ee5319fd4b71af505a6}
}

@Article{Gandomani2014177,
  Title                    = {An Exploratory Study on Managing Agile Transition and Adoption},
  Author                   = {Gandomani, T.J. and Zulzalil, H. and Ghani, A.A.A. and Md. Sultan, A.B. and Sharif, K.Y.},
  Journal                  = {Advances in Intelligent Systems and Computing},
  Year                     = {2014},
  Note                     = {cited By 2},
  Pages                    = {177-188},
  Volume                   = {265 AISC},

  Abstract                 = {Software companies are replacing traditional software development methods with Agile methods due to coping with inherent problems of traditional methods. Due to the different nature of traditional and Agile methods, adaptation to Agile methods is not a simple process and needs to be managed in a sustainable way. In recent years, several studies have conducted on investigation of Agile migration journey, but less effort on identifying the serious managerial attentions in Agile transition process. Conducting a Grounded Theory in context of Agile software development, showed various aspects of the transition to be considered in order to having a successful change management process. This paper shows the important role of the emergent managerial attentions on success of Agile transition and adoption process. © Springer International Publishing Switzerland 2014.},
  Author_keywords          = {Agile adoption; Agile software development; Agile transformation; Agile transition; Grounded Theory; Managerial concerns},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-06538-0_18},
  ISBN                     = {9783319065373},
  ISSN                     = {21945357},
  Keywords                 = {Managers, Agile adoptions; Agile software development; Agile transformations; Agile transition; Grounded theory; Managerial concerns, Software design},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84906879938&doi=10.1007%2f978-3-319-06538-0_18&partnerID=40&md5=e2f23913e79d47d1f45622662deb42d4}
}

@Article{Gandomani2013620,
  Title                    = {Obstacles in moving to agile software development methods; At a Glance},
  Author                   = {Gandomani, T.J. and Zulzalil, H. and Ghani, A.A.A. and Sultan, A.B.M. and Nafchi, M.Z.},
  Journal                  = {Journal of Computer Science},
  Year                     = {2013},
  Note                     = {cited By 18},
  Number                   = {5},
  Pages                    = {620-625},
  Volume                   = {9},

  Abstract                 = {It is only less than a decade that agile SD methods were introduced and got popular steadily. The defined values in these methods and their outcomes have motivated many software producers to use these methods. Since migration from traditional software development methods to agile methods is growing highly, managers of the companies should be aware of problems, hindrances and challenges they may face with during the agile transformation process. This study focused on challenges which companies may face with and it is necessary that managers think about solving them. Classifying them into four main categories; organization and management, people, process and tools are the areas that challenges have been seen in recent studies. © 2013 Science Publications.},
  Author_keywords          = {Agile adoption; Agile software development; Agile software methods; Agile transformation process; Obstacles in agile transformation},
  Document_type            = {Article},
  Doi                      = {10.3844/jcssp.2013.620.625},
  ISSN                     = {15493636},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84880142906&doi=10.3844%2fjcssp.2013.620.625&partnerID=40&md5=31cc6c34cadb9dec16dea7f122df6287}
}

@Article{Gandomani20132345,
  Title                    = {Towards comprehensive and disciplined change management strategy in agile transformation process},
  Author                   = {Gandomani, T.J. and Zulzalil, H. and Ghani, A.A.A. and Sultan, M.A.B.},
  Journal                  = {Research Journal of Applied Sciences, Engineering and Technology},
  Year                     = {2013},
  Note                     = {cited By 11},
  Number                   = {13},
  Pages                    = {2345-2351},
  Volume                   = {6},

  Abstract                 = {Moving to agile through a well-defined strategy and framework is essential and this socio-technical process should be studied in deep. Advantages and earned values of agile approach in software industry motivate a lot of companies to try to use agile methods in their software product lines. Transformation process to agile methods is not easy and because of its nature, takes a long time. Since agile transformation needs organizational mutation, companies are faced with many challenges during this process. While several studies have been conducted for how to use agile methods, some other studies have focused on finding obstacles in agile adoption process. However, previous studies are valuable, but each of them has focused the change process from a particular perspective. In this study we discuss the dimensions of agile transformation process from a wider perspective. We will show that focusing on agile adoption is not the only master key for success in agile transformation process and we need to define an agile change management strategy for this organizational metamorphosis. This strategy should consider all aspects of changing approach and is underpinning of achievement in agile transformation process through substantive transformation experiences.},
  Author_keywords          = {Agile adoption; Agile software development; Agile transformation; Change management strategy},
  Document_type            = {Article},
  ISSN                     = {20407459},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84880649131&partnerID=40&md5=6473fa535606d66c63aa266b59cf0b06}
}

@Conference{Gandomani2014240,
  Title                    = {Agile transformation: What is it about?},
  Author                   = {Gandomani, T.J. and Zulzalil, H. and Nafchi, M.Z.},
  Year                     = {2014},
  Editor                   = {Jawawi D.N.A., Sulaiman S., Mohamad R., Sa'Adon N.A.},
  Note                     = {cited By 1},
  Pages                    = {240-245},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Agile software development by offering new values motivates software companies to use Agile methods instead of traditional methods. However, reviewing the literature shows that leaving traditional methods and moving to Agile methods is subjected to many serious challenges. We have conducted a large-scale research study to empirically discover various aspects of Agile transformation. Our Grounded Theory study showed the general outline of Agile transformation. The main aim of this paper is to figure out the most important concepts that need to be considered when moving to Agile. This study showed that Agile transformation comprises many concepts, activities, and steps including transformation prerequisites, facilitators, framework, assessment, coaching, and so on. Companies need to be familiar with these concepts before starting transitioning to Agile. © 2014 IEEE.},
  Art_number               = {6986021},
  Author_keywords          = {Agile methods; Agile software development; Agile transformation; Agile transition; Grounded Theory},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/MySec.2014.6986021},
  ISBN                     = {9781479954391},
  Journal                  = {2014 8th Malaysian Software Engineering Conference, MySEC 2014},
  Keywords                 = {Software design, Agile methods; Agile software development; Agile transformations; Agile transition; Grounded theory, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84929323920&doi=10.1109%2fMySec.2014.6986021&partnerID=40&md5=343e44fe0f4ea15d1ec19623fd6cff91}
}

@Article{Gandomani201589,
  Title                    = {Agile transformation: A multi-dimensional process},
  Author                   = {Gandomani, T.J. and Zulzalil, H. and Nafchi, M.Z.},
  Journal                  = {Jurnal Teknologi},
  Year                     = {2015},
  Note                     = {cited By 0},
  Number                   = {9},
  Pages                    = {89-96},
  Volume                   = {77},

  Abstract                 = {Software companies are widely interested to use Agile methodologies instead of traditional methods, mainly because of achieving the values offered by Agile approach. However, literature review implies that the alteration process is subject to various serious challenges that make Agile transformation more difficult than expected. Most of the companies are facing these challenges mainly because of the lack of knowledge and understanding of the transformation process. We have conducted a large-scale empirical research study discover various aspects of Agile transformation. Applying a Grounded Theory study identified the general outline of Agile transformation Process. The main aim of this paper is to illustrate the most important concepts that need to be considered when adopting Agile methodologies. This study showed that Agile transformation comprises many concepts, activities, and steps including transformation prerequisites, facilitators, framework, assessment, coaching, and so on. Software companies and organizations need to be familiar with these concepts before inception of Agile transformation process. © 2015 Penerbit UTM Press. All rights reserved.},
  Author_keywords          = {Agile methods; Agile software development; Agile transformation; Agile transition; Grounded theory},
  Document_type            = {Article},
  Doi                      = {10.11113/jt.v77.6188},
  ISSN                     = {01279696},
  Publisher                = {Penerbit UTM Press},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84947265478&doi=10.11113%2fjt.v77.6188&partnerID=40&md5=41502fdc46fe420759f32a3b98d0ecd4}
}

@Article{Ganesh20164302,
  Title                    = {Insights on various meeting requisites in handling agile projects: Shared experiences from indian software organizations},
  Author                   = {Ganesh, N.},
  Journal                  = {Asian Journal of Information Technology},
  Year                     = {2016},
  Note                     = {cited By 0},
  Number                   = {21},
  Pages                    = {4302-4308},
  Volume                   = {15},

  Abstract                 = {Many Indian software organizations nowadays are keen to switch their project development from traditional software development to agile software development. During their shift in transition many software organization stick to the practices adopted in traditional methodology and they fail in their project when they change state to the agile practice without knowing fully well about the agile software development. This study exclusively focus on the various levels of planning and its meetings starting from planning at large, like initial planning, strategic planning meeting, release planning meeting, iteration planning meeting. Most of the Indian software companies research either with extreme programming agile methodology or with scrum framework. This study focus on the scrum framework and discuss about the daily scrum meetings, sprint burn down meetings and the retrospective meetings. This study will be highly useful for the first time agile practitioners as well to the larger crowd as this paper is devised after making a thorough scrutiny and discussion from large number of experienced practitioners working on agile software development projects. © Medwell Journals, 2016.},
  Author_keywords          = {Agile software development; Daily scrum meeting; Iteration planning meeting; Meeting prerequisites; Planning at large; Release planning meeting; Retrospective meeting; Strategic meeting},
  Document_type            = {Article},
  Doi                      = {10.3923/ajit.2016.4302.4308},
  ISSN                     = {16823915},
  Publisher                = {Medwell Journals},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85010991448&doi=10.3923%2fajit.2016.4302.4308&partnerID=40&md5=c5ff2e3f35465edd3916ef0bde73bf0b}
}

@Conference{Gannod2015,
  Title                    = {Agile way of educating},
  Author                   = {Gannod, G.C. and Troy, D.A. and Luczaj, J.E. and Rover, D.T.},
  Year                     = {2015},
  Note                     = {cited By 0},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},
  Volume                   = {2014},

  Abstract                 = {We have investigated whether Agile practices can be applied as a pedagogical approach to derive benefit in the areas of encouraging students to take responsibility for their learning (self managed learning), continuous improvement through reflection, alternative approaches for grading, increased engagement by learners, and more effective data collection and assessment of outcomes. Agile is an umbrella term for values, principles and practices applied to the process of software development. The Agile movement has aimed to develop a new and better culture within the software development community and has seen an increased rate of adoption within corporate settings. The goal of this workshop is to help participants explore how Agile development, a management technique borne out of the software industry, can not only change the way that students engage in project-based and team-based course projects, but also transform the way that we educate our students. © 2015 IEEE.},
  Art_number               = {7344019},
  Author_keywords          = {Agile; Innovative Pedagogy; Project-based Learning},
  Coden                    = {PFECD},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/FIE.2015.7344019},
  ISBN                     = {9781479984534},
  ISSN                     = {15394565},
  Journal                  = {Proceedings - Frontiers in Education Conference, FIE},
  Keywords                 = {Curricula; Education; Grading; Human resource management; Project management; Software design; Students; Teaching, Agile; Continuous improvements; Development community; Innovative Pedagogy; Management techniques; Principles and practices; Project based learning; Self-managed learning, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84960362350&doi=10.1109%2fFIE.2015.7344019&partnerID=40&md5=aae75d83264d396649a35ec8ceede99c}
}

@Article{Garbajosa2014408,
  Title                    = {Communication in agile global software development: An exploratory study},
  Author                   = {Garbajosa, J. and Yagüe, A. and Gonzalez, E.},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2014},
  Note                     = {cited By 2},
  Pages                    = {408-417},
  Volume                   = {8842},

  Abstract                 = {Agile Global Software Development is gaining relevance and importance. While communication is key for exchanging information between team members, multi-site software development introduces additional obstacles and delays. This paper reports an exploratory study on the impact of infrastructure on communication. Although this topic has been a subject of interest many issues remain unaddressed. In this paper we address both team member communication and the combination of project and product development. One of the main conclusions is that communication can be improved if tool infrastructure combine different levels of information (i.e. team members, project status and product status). The use of simple tools, such as Vsee in SmartBoards is useful for reducing distance between sites. Dependency on bandwidth is not a new issue but is still relevant. © Springer-Verlag Berlin Heidelberg 2014.},
  Author_keywords          = {Agile; Exploratory research; Global distributed software development; Infrastructure; Technologies; Tools},
  Document_type            = {Conference Paper},
  Editor                   = {Mishra A., Ciuciu I., Bezzi M., Valencia-Garcia R., Lucas Soares A., Meersman R., Panetto H., Moser T., Chan H., Ferri F., Weichhart G.},
  ISBN                     = {9783662455494},
  ISSN                     = {03029743},
  Keywords                 = {C (programming language); Product development; Software engineering; Technology; Tools, Agile; Distributed software development; Exploratory research; Exploratory studies; Global software development; Infrastructure; Multi-site software development; Team members, Software design},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84910142981&partnerID=40&md5=8ae5818cb2a1b3cc14fec1c8e64d7c78}
}

@Article{Garcia2015117,
  Title                    = {Software Engineering education for a graduate course: A web-based tool for conducting process improvement initiatives with local industry collaboration},
  Author                   = {Garcia, I.A. and Calvo-Manzano, J.A. and Pacheco, C.L. and Perez, C.A.},
  Journal                  = {Computer Applications in Engineering Education},
  Year                     = {2015},
  Note                     = {cited By 2},
  Number                   = {1},
  Pages                    = {117-136},
  Volume                   = {23},

  Abstract                 = {In recent years, there has been an on-going demand for better services and functionality in software products; as a consequence many models, techniques, and tools have been developed such as CMMI-DEV v1.2, TSP, or Scrum. However, software products still suffer from excessive costs, delays in delivery, and low quality. Furthermore, there is a lack of educational material providing high levels of interaction between students and the software industry to learn about how enterprises adopt these models, techniques, and tools into their daily work. This article describes a web-based Tool (EduSysProVAL) to support a graduate course in collaboration with the local software industry. The main goal of this research is to demonstrate that a Software Engineering course may use the EduSysProVAL tool to improve students' practical and professional skills, thus increasing their participation and effort in improvement initiatives, in comparison to traditional educational approaches which are only based on theory classes. This research uses a four-category questionnaire and follow-up interviews to evaluate a satisfactory level of tool effectiveness with undergraduate students and summarizes the industry's positive perceptions about its contribution to the course. © 2013 Wiley Periodicals, Inc.},
  Author_keywords          = {Graduate level; Software Engineering education; Software industry collaboration; Web-based tool},
  Coden                    = {CAPEE},
  Document_type            = {Article},
  Doi                      = {10.1002/cae.21584},
  ISSN                     = {10613773},
  Keywords                 = {Education; Education computing; Engineering education; Social networking (online); Software engineering; Surveys; Websites; World Wide Web, Educational materials; Graduate levels; Industry collaboration; Process improvement initiatives; Software engineering course; Software industry; Undergraduate students; Web-based tools, Students},
  Publisher                = {John Wiley and Sons Inc.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84920917101&doi=10.1002%2fcae.21584&partnerID=40&md5=e8ab5d82b60eac1298aa6173790963c5}
}

@Conference{Garnier2014489,
  Title                    = {Reliable software development for machine protection systems},
  Author                   = {Garnier, J.C. and Anderson, D. and Audrain, M. and Dragu, M. and Fuchsberger, K. and Gorzawski, A.A. and Koza, M. and Krol, K. and Misiowiec, K. and Stamos, K. and Zerlauth, M.},
  Year                     = {2014},
  Note                     = {cited By 0},
  Pages                    = {489-491},
  Publisher                = {Joint Accelerator Conferences Website (JACoW)},

  Abstract                 = {The Controls software for the Large Hadron Collider (LHC) at CERN, with more than 150 millions lines of code, resides amongst the largest known code bases in the world1. Industry has been applying Agile software engineering techniques for more than two decades now, and the advantages of these techniques can no longer be ignored to manage the code base for large projects within the accelerator community. Furthermore, CERN is a particular environment due to the high personnel turnover and manpower limitations, where applying Agile processes can improve both, the codebase management as well as its quality. This paper presents the successful application of the Agile software development process Scrum for machine protection systems at CERN, the quality standards and infrastructure introduced together with the Agile process as well as the challenges encountered to adapt it to the CERN environment. Copyright © 2014 CC-BY-3.0 and by the respective authors.},
  Document_type            = {Conference Paper},
  ISBN                     = {9783954501328},
  Journal                  = {IPAC 2014: Proceedings of the 5th International Particle Accelerator Conference},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84928314548&partnerID=40&md5=75ab91214894c65d516e1f80b0d905b2}
}

@Conference{Gaudenzi2015201,
  Title                    = {To hack or not to hack: Interactive storytelling in the 21st century},
  Author                   = {Gaudenzi, S.},
  Year                     = {2015},
  Note                     = {cited By 0},
  Pages                    = {201-202},
  Publisher                = {Association for Computing Machinery, Inc},

  Abstract                 = {This course aims at introducing notions of usercentered design in the realm of interactive storytelling. After reviewing how software methodologies like hacks and agile development have been used in the context of storytelling prototyping, the course will provide a hands-on workshop aimed at putting the user at the center of the story from day one of the production process.},
  Author_keywords          = {Design thinking; Hack; Hackathon; Interactive documentary; Interactive storytelling; Learn do share; Popathon; POV hacks, tribeca hacks; User; User experience; User-centered design; Workshop},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2745197.2745696},
  ISBN                     = {9781450335263},
  Journal                  = {TVX 2015 - Proceedings of the ACM International Conference on Interactive Experiences for TV and Online Video},
  Keywords                 = {Curricula; Software prototyping; User centered design, Design thinking; Hack; Hackathon; Interactive documentary; Interactive storytelling; Learn do share; Popathon; POV hacks, tribeca hacks; User; User experience; Workshop, Interactive television},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84960929629&doi=10.1145%2f2745197.2745696&partnerID=40&md5=f591ec2a2c6354de58d5bad02a37f5fd}
}

@Article{Ghani20151,
  Title                    = {Secure dynamic system development method (SDSDM): A survey about its suitability},
  Author                   = {Ghani, I. and Abdullahisani and Niknejad, N. and Bello, M. and Kamal, S. and Chughtai, M.W. and Jeong, S.R.},
  Journal                  = {Journal of Theoretical and Applied Information Technology},
  Year                     = {2015},
  Note                     = {cited By 0},
  Number                   = {1},
  Pages                    = {1-11},
  Volume                   = {74},

  Abstract                 = {Building secure software is about taking security into account during all phases of software development. However, the major problem in agile methods is the lack of basic security elements in their phases and practices. One of such method is Dynamic System Development Method (DSDM).Based on this study, we have observed that the original/traditional DSDM does not help guide the agile to develop secure software. In order to address this issue, we introduced additional phases and sub-phases to the original/traditional DSDM to integrate security. The proposed model is named Secure Dynamic System Development Method (SDSDM), which has six phases. These phases and sub-phases are feasibility study, functional model iteration, secure functional model iteration, secure design, design and build iteration and implementation. Our findings highlight an improved agility in DSDM after integration of security. However, the study focuses on a questionnaire (survey) where the subject matter experts’ opinion has been used to validate our model. Based on the experts’ opinion, we can say that it is possible to develop secure software using SDSDM model without affecting its agility negatively. © 2005 - 2015 JATIT & LLS. All rights reserved.},
  Author_keywords          = {Agile methodology; Degree of agility; Dynamic system development method; Software security},
  Document_type            = {Article},
  ISSN                     = {19928645},
  Publisher                = {Asian Research Publishing Network},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84926685144&partnerID=40&md5=fc514f55483c608feae735efead1a87b}
}

@Article{Ghani20153231,
  Title                    = {Agile adoption in IT organizations},
  Author                   = {Ghani, I. and Bello, M.},
  Journal                  = {KSII Transactions on Internet and Information Systems},
  Year                     = {2015},
  Note                     = {cited By 1},
  Number                   = {8},
  Pages                    = {3231-3248},
  Volume                   = {9},

  Abstract                 = {Many IT organizations aspire to improve the efficiency and general standard of their software development effort by implementing agile software development practices. Some of the popular agile development methods adopted by IT organizations are Scrum, eXtreme Programming (XP), Kanban, Featured Driven Development (FDD) and Dynamic System Development Method (DSDM). This paper intends to identify and analyze the barriers that impact on the performance of IT organizations that use such agile software development methods. The analysis will help the IT organizations to cater the needed aspects to be successful. The analysis will also help the IT organizations to select the right methodology for their organization. The contribution of this analysis is to present guideline related to avoid or overcome the barriers towards adoption of agile. © 2015 KSII},
  Author_keywords          = {Agile adoption; DSDM; eXtreme programming; FDD; Kanban; Scrum},
  Document_type            = {Article},
  Doi                      = {10.3837/tiis.2015.08.029},
  ISSN                     = {19767277},
  Keywords                 = {Societies and institutions; Software engineering, Agile adoptions; DSDM; EXtreme Programming; FDD; Kanban; Scrum, Software design},
  Publisher                = {Korean Society for Internet Information},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84940973400&doi=10.3837%2ftiis.2015.08.029&partnerID=40&md5=5e00212452698562f0b41e00857c1faa}
}

@Book{Ghani20161,
  Title                    = {Emerging innovations in agile software development},
  Author                   = {Ghani, I. and Jawawi, D.N.A. and Dorairaj, S. and Sidky, A.},
  Publisher                = {IGI Global},
  Year                     = {2016},
  Note                     = {cited By 1},

  Abstract                 = {Agile is a relatively recent methodology used in the development process of a project. Therefore, it is important to share new emerging knowledge with researchers and professionals interested in adopting an agile mindset. Emerging Innovations in Agile Software Development focuses on the use of agile methodologies to manage, design, develop, test and maintain software projects. Emphasizing research-based solutions for contemporary software development, this publication is designed for use by software developers, researchers, and graduate-level students in software engineering and project management programs. © 2016 by IGI Global. All rights reserved.},
  Document_type            = {Book},
  Doi                      = {10.4018/978-1-4666-9858-1},
  ISBN                     = {9781466698598; 1466698586; 9781466698581},
  Journal                  = {Emerging Innovations in Agile Software Development},
  Pages                    = {1-323},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84981543097&doi=10.4018%2f978-1-4666-9858-1&partnerID=40&md5=17a7e69d1a43427163a1a1355e17a362}
}

@Book{Ghani2016141,
  Title                    = {A survey of agile transition models},
  Author                   = {Ghani, I. and Jawawi, D.A. and Niknejad, N. and Khan, M. and Jeong, S.R.},
  Publisher                = {IGI Global},
  Year                     = {2016},
  Note                     = {cited By 0},

  Abstract                 = {Nowadays, since business environment is highly dynamic, software necessities are continuously being improved in order to meet the needs of modern industrialized world. Therefore, IT organizations seek for a quick way of software delivery and for adapting to the necessary technological changes. From this ideal viewpoint, traditional plan-driven developments lag behind to overcome these conflicts. The purpose of this chapter is to present the existing models and frameworks which guide organizations to adopt agile methods. This may help organizations to follow professionals' suggestions during their migration from traditional systems to agile development. © 2016 by IGI Global. All rights reserved.},
  Document_type            = {Book Chapter},
  Doi                      = {10.4018/978-1-4666-9858-1.ch008},
  ISBN                     = {9781466698598; 1466698586; 9781466698581},
  Journal                  = {Emerging Innovations in Agile Software Development},
  Pages                    = {141-164},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84981531514&doi=10.4018%2f978-1-4666-9858-1.ch008&partnerID=40&md5=b814210e1a0b7ea95c7283b468f7a988}
}

@Conference{Ghezzi201362,
  Title                    = {On requirements verification for model refinements},
  Author                   = {Ghezzi, C. and Menghi, C. and Sharifloo, A.M. and Spoletini, P.},
  Year                     = {2013},
  Note                     = {cited By 8},
  Pages                    = {62-71},
  Publisher                = {IEEE Computer Society},

  Abstract                 = {Conventional formal verification techniques rely on the assumption that a system's specification is completely available so that the analysis can say whether or not a set of properties will be satisfied. On the contrary, modern development lifecycles call for agileincremental and iterativeapproaches to tame the boosting complexity of modern software systems and reduce development risks. We focus here on requirements verification performed in the early exploratory stages on high-level models and we discuss how this can be integrated into an agile approach. We present a new technique to model-check incomplete high-level specifications against formally specified requirements. We do this in the context of incomplete hierarchical Statecharts, verified against a variation of CTL properties. Our approach supports step-wise specification and refinement verification. Verification can be incremental, that is alternative refinements may be separately explored and verification is only replayed for the modified parts. The results are presented by introducing the formalisms, the model-checking algorithm, and the tool we have implemented. © 2013 IEEE.},
  Art_number               = {6636706},
  Author_keywords          = {Agile Development; Formal Verification; Incremental Verification; Model Checking; Software Modeling; Statecharts},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/RE.2013.6636706},
  ISBN                     = {9781467357654},
  Journal                  = {2013 21st IEEE International Requirements Engineering Conference, RE 2013 - Proceedings},
  Keywords                 = {Model checking; Requirements engineering; Specifications, Agile development; Formal verifications; Incremental verification; Software model; Statecharts, Formal methods},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84891134753&doi=10.1109%2fRE.2013.6636706&partnerID=40&md5=35727f1d3bb18d137a30aa2e17ce7e9f}
}

@Book{Ghezzi201331,
  Title                    = {Towards agile verification},
  Author                   = {Ghezzi, C. and Sharifloo, A.M. and Menghi, C.},
  Publisher                = {Springer-Verlag Berlin Heidelberg},
  Year                     = {2013},
  Note                     = {cited By 3},

  Abstract                 = {Advances in software verification techniques have been impressive in the past decade. Formal verification of large production software is now increasingly feasible and this is paving the way to transferring these techniques from research to practice. We argue, however, that there is still a serious mismatch between verification and modern development processes, which highly focus on agility and incremental, iterative development. To address this issue, verification has to become agile, and seamless introduction into agile processes has to become feasible. We envision new approaches that will support verification-driven development in the same way as test-driven development is possible today, for example through JUnit within an IDE like Eclipse. In this paper we discuss how agile verification can be achieved, and we show some promising initial steps in this direction. © 2013 Springer-Verlag Berlin Heidelberg. All rights are reserved.},
  Document_type            = {Book Chapter},
  Doi                      = {10.1007/978-3-642-37395-4_3},
  ISBN                     = {9783642373954; 3642373941; 9783642373947},
  Journal                  = {Perspectives on the Future of Software Engineering: Essays in Honor of Dieter Rombach},
  Pages                    = {31-47},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84903609958&doi=10.1007%2f978-3-642-37395-4_3&partnerID=40&md5=e8db5ed609a3dd1cccf551c24df55bd4}
}

@Article{Gibert201562,
  Title                    = {Profiling support for runtime managed code: Next generation performance monitoring units},
  Author                   = {Gibert, E. and Martínez, R. and Madriles, C. and Codina, J.M.},
  Journal                  = {IEEE Computer Architecture Letters},
  Year                     = {2015},
  Note                     = {cited By 1},
  Number                   = {1},
  Pages                    = {62-65},
  Volume                   = {14},

  Abstract                 = {Given the increase of runtime managed code environments in desktop, server, and mobile segments, agile, flexible, and accurate performance monitoring capabilities are required in order to perform wise code transformations and optimizations. Common profiling strategies, mainly based on instrumentation and current performance monitoring units (PMUs), are not adequate and new innovative designs are necessary. In this paper, we present the desired characteristics of what we call next generation PMUs and advocate for hardware/software collaborative approaches where hardware implements the profiling hooks and mechanisms and software implements the complex heuristics. We then propose a first design in which the hardware uses a small, yet flexible table to profile specific code regions and the software decides what/when/how to profile. This first design meets all required features and we aim it as the seed for future PMUs extensions to enable novel dynamic code transformations and optimizations. © 2014 IEEE.},
  Art_number               = {6809167},
  Author_keywords          = {just in time (JIT) compiler; Performance monitoring unit (PMU); profiling; runtime managed code},
  Document_type            = {Article},
  Doi                      = {10.1109/LCA.2014.2321398},
  ISSN                     = {15566056},
  Keywords                 = {Computer hardware; Cosine transforms; Design; Hardware; Just in time production; Optimization, Accurate performance; Collaborative approach; Current performance; Dynamic code transformations; Just-in-time compiler; Performance monitoring; profiling; Runtimes, Codes (symbols)},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84932613926&doi=10.1109%2fLCA.2014.2321398&partnerID=40&md5=1e621628a105194f59289582b5570e53}
}

@Article{Gill201557,
  Title                    = {Distributed Agile development: Applying a coverage analysis approach to the evaluation of a communication technology assessment tool},
  Author                   = {Gill, A.Q.},
  Journal                  = {International Journal of e-Collaboration},
  Year                     = {2015},
  Note                     = {cited By 5},
  Number                   = {1},
  Pages                    = {57-76},
  Volume                   = {11},

  Abstract                 = {Organizations have shown a significant interest in the adoption of emerging social technologies to support communication and collaboration needs of their Distributed Agile or Adaptive Development Environment (DADE). However, the challenge is how best to assess contemporary social technologies for supporting communication and collaboration in the DADE. Here, a communication technology assessment tool, called CTAT, is developed as a part of the Adaptive Enterprise Service System (AESS) toolkit by using the design research approach. This paper presents the evaluation of the CTAT construct through its use in the assessment of three social technologies within the context of a DADE. The results of this evaluation indicate that CTAT is shown to be useful, for example, when assessing a particular social technology for a specific DADE communication and collaboration context. The CTAT is intended to be used by senior developers for assessing social technologies for their DADE context. Copyright © 2015, IGI Global.},
  Author_keywords          = {Agile; Communication Technology Assessment Tool (CTAT); Distributed Software Development; Enterprise Architecture; Social Technologies},
  Document_type            = {Article},
  Doi                      = {10.4018/ijec.2015010104},
  ISSN                     = {15483673},
  Keywords                 = {Software engineering, Agile; Communication technologies; Distributed software development; Enterprise Architecture; Social technologies, Software design},
  Publisher                = {IGI Global},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84923091711&doi=10.4018%2fijec.2015010104&partnerID=40&md5=50cf1a174cdbef006ab989e1504c675c}
}

@Article{Gill20161,
  Title                    = {Scaling for agility: A reference model for hybrid traditional-agile software development methodologies},
  Author                   = {Gill, A.Q. and Henderson-Sellers, B. and Niazi, M.},
  Journal                  = {Information Systems Frontiers},
  Year                     = {2016},
  Note                     = {cited By 0; Article in Press},
  Pages                    = {1-27},

  Abstract                 = {The adoption of agility at a large scale often requires the integration of agile and non-agile development elements for architecting a hybrid adaptive methodology. The challenge is ”which elements or components (agile or non-agile) are relevant to develop the context-aware hybrid adaptive methodology reference architecture?” This paper addresses this important challenge and develops a hybrid adaptive methodology reference architecture model using a qualitative constructive empirical research approach. In this way, we have uncovered the agility, abstraction, business value, business policy, rules, legal, context and facility elements or components that have not been explicitly modelled or discussed in International Standards (IS) such as the ISO/IEC 24744 metamodel. It is anticipated that a context-aware hybrid adaptive methodology can be architected by using the proposed context-aware hybrid adaptive methodology reference architecture elements for a particular situation when using a situational method engineering approach. © 2016 Springer Science+Business Media New York},
  Author_keywords          = {Agile methods; Method engineering; Methodology architecture; Reference architecture},
  Document_type            = {Article in Press},
  Doi                      = {10.1007/s10796-016-9672-8},
  ISSN                     = {13873326},
  Keywords                 = {Software design, Adaptive methodologies; Agile methods; Agile software development; Empirical research; International standards; Method engineering; Reference architecture; Situational Method Engineering, Software engineering},
  Publisher                = {Springer New York LLC},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84978919966&doi=10.1007%2fs10796-016-9672-8&partnerID=40&md5=02dd8dd3d9148f7bf57c9335b1765708}
}

@Conference{Gillet2014,
  Title                    = {Could agile methods facilitate users new software take ownership in IS evolution's projects? [Les méthodes agiles rendent-elles plus facile l'appropriation des nouveaux logiciels par les utilisateurs dans les projets d'évolution du SI ?]},
  Author                   = {Gillet, P. and Gillet, M.},
  Year                     = {2014},
  Note                     = {cited By 0},
  Publisher                = {Association Information and Management},

  Abstract                 = {More than agile methods, the concept of agility is very relevant in the literature. It appears to be the best way for an organization to survive in the contemporary environment. In organizations where we was software's designer and developer, we have be able to experiment a continuum of agile methods, agile management, agile project management and agile development-deployment. This continuum appears to be a good way for users taking tools ownership, needed condition to the success of agile management. However, contingency factors could make impossible the emergence of this continuum.},
  Author_keywords          = {Adoption; Agile methods; Agility; Taking ownership},
  Document_type            = {Conference Paper},
  Journal                  = {19th Symposium of the Association Information and Management 2014, AIM 2014},
  Keywords                 = {Information science; Information systems, Adoption; Agile development; Agile methods; Agile project management; Agility; Contemporary environments; Contingency factors; nocv1; Taking ownership, Project management},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84995970252&partnerID=40&md5=6a167b4794f041326293e89425204132}
}

@Article{Gilson201549,
  Title                    = {Transformation-wise design of software architectures},
  Author                   = {Gilson, F. and Englebert, V.},
  Journal                  = {Communications in Computer and Information Science},
  Year                     = {2015},
  Note                     = {cited By 0},
  Pages                    = {49},
  Volume                   = {506},

  Abstract                 = {Stakeholders have to face requirements in increasing number and complexity, and the link between these requirements and design artifacts is primordial. Agile design methods and documentation techniques have emerged in the past years in order to trace the decision process and the rationale sustaining a software model. The present work proposes an integrated framework combining system requirement definitions, component-based models and model transformations. Architecturally significant requirements are explicitly linked to software architecture elements and iteratively refined or implemented by model transformations. Any transformation must be documented, even briefly, and the framework retains the transformations tree. This way, the iterative decision and design processes are completely documented for future reference or modification, i.e., designers can (i) see the mapping between a system requirement and its implementation in the architecture model, (ii) explore design alternatives or apply structural modifications without losing previous versions of the model, and finally (iii) at least understand partially the reasons why the model is how it is. © Springer International Publishing Switzerland 2015.},
  Author_keywords          = {Design method; Design rationale; Model transformation; Software architecture; Traceability},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-25156-1_4},
  Editor                   = {Hammoudi S., Filipe J., Pires L.F., das Neves R.C.},
  ISBN                     = {9783319251554},
  ISSN                     = {18650929},
  Keywords                 = {Design; Iterative methods; Requirements engineering; Software architecture, Architecture modeling; Component-based models; Design method; Design rationale; Integrated frameworks; Model transformation; Structural modifications; Traceability, Software design},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84952017492&doi=10.1007%2f978-3-319-25156-1_4&partnerID=40&md5=b26324986e3c7ed404af1a0a7885499f}
}

@Conference{Gilson201467,
  Title                    = {A domain specific language for stepwise design of software architectures},
  Author                   = {Gilson, F. and Englebert, V.},
  Year                     = {2014},
  Note                     = {cited By 2},
  Pages                    = {67-78},
  Publisher                = {SciTePress},

  Abstract                 = {Stakeholders have to face requirements in increasing number and complexity. Their translations to system functionalities are often diluted into the overall architecture so that it becomes tricky to undertake future changes. Since information systems are intended to evolve in terms of functionalities and underlying technologies, the link between requirements and design artifacts is primordial. Agile design methods and documentation techniques have emerged in the past years in order to deal with the amount of requirements and to trace the decision process and the rationale sustaining a software model. Also, it is not unusual that numerous technologies with similar purpose are confronted to each other during the design phase. In the present work, we propose an integrated framework combining system requirement definitions, a component-based modeling language and model transformations. Architecturally-significant requirements are explicitly linked to software architecture elements and iteratively refined or implemented by model transformations. Any transformation must be documented, even briefly, and the framework retains the transformations tree. This way, the iterative decision and design processes are completely documented for future reference or modification, i.e, designers can (i) see the mapping between a system requirement and its implementation in the architecture model, (ii) explore design alternatives or apply structural modifications without losing previous versions of the model, and finally (iii), depending on the level of documentation, at least understand partially the reasons why the model is how it is. Copyright © 2014 SCITEPRESS - Science and Technology Publications. All rights reserved.},
  Author_keywords          = {Design method; Design rationale; Model transformation; Software architecture; Traceability},
  Document_type            = {Conference Paper},
  ISBN                     = {9789897580079},
  Journal                  = {MODELSWARD 2014 - Proceedings of the 2nd International Conference on Model-Driven Engineering and Software Development},
  Keywords                 = {Computer programming languages; Iterative methods; Mathematical models; Requirements engineering; Software architecture; Software design, Component-based modeling; Design method; Design rationale; Domain specific languages; Integrated frameworks; Model transformation; Structural modifications; Traceability, Design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84906913714&partnerID=40&md5=015bd9daa49b5b06e2da483a498be973}
}

@Conference{Giotis2015,
  Title                    = {Policy-based orchestration of NFV services in Software-Defined Networks},
  Author                   = {Giotis, K. and Kryftis, Y. and Maglaris, V.},
  Year                     = {2015},
  Note                     = {cited By 7},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {In this paper we investigate synergies between Network Functions Virtualization (NFV) architectures and Software-Defined Networks (SDN). We identify value adding capabilities such technologies may offer to telecom providers regarding agile management and deployment of network functions across their infrastructures. Specifically, we propose a modular NFV architecture that permits policy-based management of Virtualized Network Functions (VNFs). Hence we can handle the lifecycle of VNFs and dynamically instantiate business applications as Service Chains of diverse VNFs delivered to large scale customers. To describe network resources, network control functions and VNFs capabilities we introduced an Information Model that abstracts these elements. In order to verify the proposed architecture we considered the case of multiple Content Delivery Network (CDN) providers having CDN caching nodes hosted by another operator. We implemented and deployed VNFs capable to map virtual links on the physical substrate and monitor the traffic of each client, ultimately providing the means to instantiate and orchestrate a policy-based traffic engineering service as a business application. © 2015 IEEE.},
  Art_number               = {7116145},
  Author_keywords          = {CDN; NFV; OpenFlow; Policy-based Management; SDN; Service Chains},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/NETSOFT.2015.7116145},
  ISBN                     = {9781479978991},
  Journal                  = {1st IEEE Conference on Network Softwarization: Software-Defined Infrastructures for Networks, Clouds, IoT and Services, NETSOFT 2015},
  Keywords                 = {Chains; Distributed computer systems; Transfer functions, CDN; NFV; Openflow; Policy based management; SDN; Service chain, Network architecture},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84945252683&doi=10.1109%2fNETSOFT.2015.7116145&partnerID=40&md5=fe8c26dfb3d8bdbae4aa7606a759763f}
}

@Article{Gonçalves2014546,
  Title                    = {Comparing agility analysis techniques: AgilAC framework versus ad hoc approach},
  Author                   = {Gonçalves, M.B. and Paiva, D.M.B. and Camargo, V.V. and Cagnin, M.I.},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2014},
  Note                     = {cited By 0},
  Number                   = {PART 6},
  Pages                    = {546-561},
  Volume                   = {8584 LNCS},

  Abstract                 = {Agile methods have gained ground in academia and industry since their inception. However, identifying whether a development method is in accordance with the agile philosophy has become a challenge because of the diversity and amount of their activities, artifacts and roles. Thus, we defined the AgilAC framework to support agility analysis of development methods. It supports software engineers to better understand the adherence of their methods to agile philosophy. In order to evaluate the applicability of this framework, an experiment was conducted to comparing the AgilAC and the ad hoc analysis, and it is presented in this paper. We adopted two criteria in the comparison: the time spent during the analysis and the correctness of the analysis result. We observed that although the AgilAC requires more time to be applied than the ad hoc analysis, the quality of the analysis results were better. Therefore, it was possible to verify the advantage of the AgilAC over an ad hoc analysis, when considering the correctness of the agility characterization. © 2014 Springer International Publishing.},
  Author_keywords          = {agile methods; agility analysis; assessing agile methods; software engineering experiment},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-09153-2_41},
  ISBN                     = {9783319091525},
  ISSN                     = {03029743},
  Keywords                 = {Experiments; Ontology; Software engineering, Ad hoc approach; Agile methods; agility analysis; Analysis techniques; Development method; It supports; Software engineering experiments; Time spent, Quality control},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904863361&doi=10.1007%2f978-3-319-09153-2_41&partnerID=40&md5=41652c0f6cee3763c82afaced828b6cd}
}

@Article{Goswami20142127,
  Title                    = {A frequency-agile RF frontend architecture for multi-band TDD applications},
  Author                   = {Goswami, S. and Kim, H. and Dawson, J.L.},
  Journal                  = {IEEE Journal of Solid-State Circuits},
  Year                     = {2014},
  Note                     = {cited By 5},
  Number                   = {10},
  Pages                    = {2127-2140},
  Volume                   = {49},

  Abstract                 = {Emerging wireless standards specify dozens of bands spanning several octaves, which need to be supported in form-factor and energy constrained mobile devices targeting ubiquitous connectivity. However, in current multi-band radio implementations, significant redundancy is still the norm in the RF frontend. This work introduces an improved architecture for multi-band, time-division duplexed (TDD) radios, which replaces multiple narrowband frontend components with a frequency-agile solution, tunable over a wide frequency range. A highly digital architecture is adopted, leading to a fully integrated solution wherein both efficiency and achievable frequency range benefit from CMOS scaling. A prototype is integrated in 45 nm SOI CMOS. Peak PA output power is 27.7 ± 0.5 dBm from 1.3 to 3.3 GHz, with up to 30% total efficiency at 2 V. For TDD LTE applications, better than - 30 dBc ACLR and - 30 dB EVM is measured with 64 QAM, 20 MHz signals from 1.44 to 3.41 GHz, with up to 17.2% average efficiency and 23.4 dBm average power. The LNA achieves AV ≥, 14 dB, NF = 4.4 ± 1.6 dB and IIP3 ≥ -7 dBm from 1.3 to 3.3 GHz while drawing just 6 mA from 1 V. The demonstrated frequency range covers a total of 11 TDD bands. © 1966-2012 IEEE.},
  Art_number               = {6871369},
  Author_keywords          = {4G wireless communication; low-noise amplifiers; power amplifiers; silicon on insulator technology; software radio; time division multiplexing; wireless LAN},
  Coden                    = {IJSCB},
  Document_type            = {Article},
  Doi                      = {10.1109/JSSC.2014.2339318},
  ISSN                     = {00189200},
  Keywords                 = {Silicon on insulator technology; Software radio; Time division multiplexing; Wireless local area networks (WLAN), 4G wireless; Multiband; RF front end, Power amplifiers},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84907609210&doi=10.1109%2fJSSC.2014.2339318&partnerID=40&md5=1b20320a7ed11608c95383f5aba8cacb}
}

@Conference{Grapenthin20141,
  Title                    = {Facilitating task breakdown in sprint planning meeting 2 with an interaction room: An experience report},
  Author                   = {Grapenthin, S. and Poggel, S. and Book, M. and Gruhn, V.},
  Year                     = {2014},
  Editor                   = {Rabiser R., Torkar R., Torkar R.},
  Note                     = {cited By 4},
  Pages                    = {1-8},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {In a large industry project that followed an agile approach based on the Scrum method, we found that the team often struggled with breaking coarse product backlog items down into the detailed tasks that had to be completed in a sprint. The team's understanding of the backlog items' business and technical implications and dependencies seemed not deep enough to identify all necessary tasks, so in addition to the tasks defined in the sprint planning meeting prescribed by Scrum, an average of 26% of additional tasks was identified later over the course of each sprint, making any attempt at progress estimation or risk management very difficult. To counter this effect and support the team's understanding of backlog items right from the beginning of each sprint, we introduced a pragmatic method to analyze backlog items more comprehensively and thus support a more complete and reliable task breakdown. We consequently found that the effectiveness and precision of task breakdowns has improved significantly in the project. © 2014 IEEE.},
  Art_number               = {6928782},
  Author_keywords          = {Interaction Room; Scrum; Task Breakdown},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/SEAA.2014.71},
  ISBN                     = {9781479957941},
  Journal                  = {Proceedings - 40th Euromicro Conference Series on Software Engineering and Advanced Applications, SEAA 2014},
  Keywords                 = {Application programs; Risk management; Risk perception; Software engineering, Experience report; Interaction Room; Large industries; Planning meetings; Progress estimations; Scrum; Task Breakdown; Technical implications, Human resource management},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84916607370&doi=10.1109%2fSEAA.2014.71&partnerID=40&md5=a1c52c3ef15d65b9b21e077b1e9f1ca9}
}

@Article{Grapenthin2015254,
  Title                    = {Improving task breakdown comprehensiveness in agile projects with an Interaction Room},
  Author                   = {Grapenthin, S. and Poggel, S. and Book, M. and Gruhn, V.},
  Journal                  = {Information and Software Technology},
  Year                     = {2015},
  Note                     = {cited By 2},
  Pages                    = {254-264},
  Volume                   = {67},

  Abstract                 = {Context The planning, estimation and controlling mechanisms of agile process models rely significantly on a fixed set of tasks being established for each sprint. These tasks are created as refinements of product backlog items at the beginning of each sprint. However, a project team's understanding of the backlog items' business implications and dependencies may often not be deep enough to identify all necessary tasks this early, so in addition to the tasks defined in the beginning of the sprint, more necessary tasks might be discovered as the sprint progresses, making any attempt at progress estimation or risk management difficult. Objective We strive to enable software teams to achieve a deeper understanding of product backlog items, which should help them to identify a sprint's tasks more reliably and comprehensively, and avoid discovering the need for extra tasks during sprint execution. Method We introduced a project team in a medium-sized software development company to the Interaction Room method, which encourages interdisciplinary communication about key system design aspects among all stakeholders. We observed the team's conduct in the sprint planning meetings, and tracked early- vs. late-identified tasks across several sprints. Results Before the introduction of our method, the team used to discover on average 26% of a sprint's tasks not at the beginning of the sprint, but later during the course of the sprint. Using the Interaction Room in two separate projects, this ratio dropped to an average of 5% late-discovered tasks. Conclusion Our observations from these projects suggest that increased communication among all stakeholders of a project leads to a more reliable identification of the tasks to be performed in a sprint, and that an Interaction Room can provide appropriate guidance to conduct this team communication in a focused and pragmatic way. © 2015 Elsevier B.V.},
  Author_keywords          = {Interaction Room; Scrum; Sprint planning meeting; Task breakdown},
  Coden                    = {ISOTE},
  Document_type            = {Conference Paper},
  Doi                      = {10.1016/j.infsof.2015.07.008},
  ISSN                     = {09505849},
  Keywords                 = {Risk management; Risk perception; Software design, Agile process model; Controlling mechanism; Interaction Room; Interdisciplinary communications; Planning meetings; Progress estimations; Scrum; Task breakdown, Human resource management},
  Publisher                = {Elsevier},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84941878494&doi=10.1016%2fj.infsof.2015.07.008&partnerID=40&md5=ebd828c1af1a6c93cd74641437be6f2e}
}

@Article{Greenberg2016635,
  Title                    = {Development of a large urban longitudinal HIV clinical cohort using a web-based platform to merge electronically and manually abstracted data from disparate medical record systems: Technical challenges and innovative solutions},
  Author                   = {Greenberg, A.E. and Hays, H. and Castel, A.D. and Subramanian, T. and Happ, L.P. and Jaurretche, M. and Binkley, J. and Kalmin, M.M. and Wood, K. and Hart, R. and Benator, D. and Kumar, P. and Elion, R. and Parenti, D. and Ruiz, M.E. and Wood, A. and D'Angelo, L. and Rakhmanina, N. and Rana, S. and Bryant, M. and Hebou, A. and Fernandez, R. and Abbott, S. and Kharfen, M. and Masur, H.},
  Journal                  = {Journal of the American Medical Informatics Association},
  Year                     = {2016},
  Note                     = {cited By 2},
  Number                   = {3},
  Pages                    = {635-643},
  Volume                   = {23},

  Abstract                 = {Objective Electronic medical records (EMRs) are being increasingly utilized to conduct clinical and epidemiologic research in numerous fields. To monitor and improve care of HIV-infected patients in Washington, DC, one of the most severely affected urban areas in the United States, we devel- oped a city-wide database across 13 clinical sites using electronic data abstraction and manual data entry from EMRs. Materials and Methods To develop this unique longitudinal cohort, a web-based electronic data capture system (Discovere®) was used. An Agile software development methodology was implemented across multiple EMR platforms. Clinical informatics staff worked with information technology specialists from each site to abstract data electronically from each respective site's EMR through an extract, transform, and load process. Results Since enrollment began in 2011, more than 7000 patients have been enrolled, with longitudinal clinical data available on all patients. Data sets are produced for scientific analyses on a quarterly basis, and benchmarking reports are generated semi-annually enabling each site to com- pare their participants' clinical status, treatments, and outcomes to the aggregated summaries from all other sites. Discussion Numerous technical challenges were identified and innovative solutions developed to ensure the successful implementation of the DC Cohort. Central to the success of this project was the broad collaboration established between government, academia, clinics, community, information technology staff, and the patients themselves. Conclusions Our experiences may have practical implications for researchers who seek to merge data from diverse clinical databases, and are applicable to the study of health related issues beyond HIV. © The Author 2015. Published by Oxford University Press on behalf of the American Medical Informatics Association. All rights reserved.},
  Author_keywords          = {Cohort; DC Cohort; Electronic medical record; EMR; HIV},
  Coden                    = {JAMAF},
  Document_type            = {Article},
  Doi                      = {10.1093/jamia/ocv176},
  ISSN                     = {10675027},
  Publisher                = {Oxford University Press},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84978975612&doi=10.1093%2fjamia%2focv176&partnerID=40&md5=8d2e4713774dac088b9769c1aa211917}
}

@Article{Gregory201626,
  Title                    = {The challenges that challenge: Engaging with agile practitioners' concerns},
  Author                   = {Gregory, P. and Barroca, L. and Sharp, H. and Deshpande, A. and Taylor, K.},
  Journal                  = {Information and Software Technology},
  Year                     = {2016},
  Note                     = {cited By 4},
  Pages                    = {26-38},
  Volume                   = {75},

  Abstract                 = {Context There continues to be concern that research is not addressing the challenges that practice faces. For the benefit of academia and industry, researchers need to be aware of practitioners' challenges and their context so that relevant and applicable research is undertaken. Objective This paper investigates two research questions: What challenges do agile practitioners face? and, how do practitioner challenges manifest themselves in an organisational setting? It aims to map the practitioner challenge landscape, explore challenge characteristics, compare findings with previous literature and identify implications for research that is relevant to practice. Method A combination of methods was used: Elicitation of practitioner challenges collected using a Challenge Wall at a series of practitioner events; organisational Case Study using interviews, document analysis and observation; and online Survey. Findings were then compared to previous publications. Results Challenges collected from the Challenge Wall were grouped under 27 subthemes and seven themes: Claims and Limitations, Organisation, Sustainability, Culture, Teams, Scale, and Value. Investigating one challenge in the Case Study uncovered a set of new challenges, which were inter-related. Over 50% of survey respondents experienced challenges highlighted in the Case Study. Conclusion The landscape of agile practitioner challenges is complex and intertwined. Some challenges, such as doing agile in a non-agile environment, are multi-dimensional, affect many aspects of practice, and may be experienced simultaneously as business, organisational, social and adaptation problems. Some challenges, such as understanding cultural change or measuring agile value, persist and are hard to address, while others, such as adoption, change focus over time. Some challenges, such as governance and contracts, are under-researched, while others, such as business and IT transformation, have been researched but findings have not had the expected impact. Researchers wishing to address practitioner challenges need to treat them in context rather than in isolation and improve knowledge transfer. © 2016 Elsevier B.V. All rights reserved.},
  Author_keywords          = {Agile methods; Agile software development; Challenges; DSDM; Evidence-based software engineering},
  Coden                    = {ISOTE},
  Document_type            = {Article},
  Doi                      = {10.1016/j.infsof.2016.03.003},
  ISSN                     = {09505849},
  Keywords                 = {Knowledge management; Software design; Surveys; Sustainable development, Agile methods; Agile software development; Challenges; DSDM; Evidence Based Software Engineering, Software engineering},
  Publisher                = {Elsevier},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84961618488&doi=10.1016%2fj.infsof.2016.03.003&partnerID=40&md5=8446e593edc04f81569816b314d28d6b}
}

@Article{Gregory2015,
  Title                    = {The challenges that challenge: Engaging with agile practitioners' concerns},
  Author                   = {Gregory, P. and Barroca, L. and Sharp, H. and Deshpande, A. and Taylor, K.},
  Journal                  = {Information and Software Technology},
  Year                     = {2015},
  Note                     = {cited By 0; Article in Press},

  Abstract                 = {Context: There continues to be concern that research is not addressing the challenges that practice faces. For the benefit of academia and industry, researchers need to be aware of practitioners' challenges and their context so that relevant and applicable research is undertaken. Objective: This paper investigates two research questions: what challenges do agile practitioners face? and, how do practitioner challenges manifest themselves in an organisational setting? It aims to map the practitioner challenge landscape, explore challenge characteristics, compare findings with previous literature and identify implications for research that is relevant to practice. Method: A combination of methods was used: elicitation of practitioner challenges collected using a Challenge Wall at a series of practitioner events; organisational case study using interviews, document analysis and observation; and online survey. Findings were then compared to previous publications. Results: Challenges collected from the Challenge Wall were grouped under 27 subthemes and seven themes: claims and limitations, organisation, sustainability, culture, teams, scale, and value. Investigating one challenge in the case study uncovered a set of new challenges, which were inter-related. Over 50% of survey respondents experienced challenges highlighted in the case study. Conclusion: The landscape of agile practitioner challenges is complex and intertwined. Some challenges, such as doing agile in a non-agile environment, are multi-dimensional, affect many aspects of practice, and may be experienced simultaneously as business, organisational, social and adaptation problems. Some challenges, such as understanding cultural change or measuring agile value, persist and are hard to address, while others, such as adoption, change focus over time. Some challenges, such as governance and contracts, are under-researched, while others, such as business and IT transformation, have been researched but findings have not had the expected impact. Researchers wishing to address practitioner challenges need to treat them in context rather than in isolation and improve knowledge transfer. © 2016 Elsevier Ltd.},
  Author_keywords          = {Agile methods; Agile software development; Challenges; DSDM; Evidence-based software engineering},
  Coden                    = {ISOTE},
  Document_type            = {Article in Press},
  Doi                      = {10.1016/j.infsof.2016.04.006},
  ISSN                     = {09505849},
  Keywords                 = {Knowledge management; Software design; Surveys; Sustainable development, Agile methods; Agile software development; Challenges; DSDM; Evidence Based Software Engineering, Software engineering},
  Publisher                = {Elsevier},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84964319068&doi=10.1016%2fj.infsof.2016.04.006&partnerID=40&md5=c7505bbe9aa40b983ca636b9365bdee6}
}

@Conference{Gregory2013696,
  Title                    = {Chains of control in agile software development},
  Author                   = {Gregory, T. and Sambhara, C. and Mathiassen, L.},
  Year                     = {2013},
  Note                     = {cited By 0},
  Pages                    = {696-704},
  Volume                   = {1},

  Abstract                 = {Although extant literature on control in software development provides interesting and rich insights, it also indicates existing constructs are, in some ways, inadequate as intellectual means to support investigation of control practices. Most importantly, current theorizing distinguishes between two types of formal controls (outcome and behavior) and two types of informal controls (clan and self), making it impossible to investigate informal outcome and behavior controls and formal clan and selfcontrols. We therefore introduce a deconstructed framework for describing management controls and apply it to a holistic examination of controls in a case study of a multi-site agile software development organization. The empirical examination revealed consequent controls across a process and multiple representations of control across hierarchical levels of analysis. As a result, we offer a refined, deconstructed framework for investigating control practices, and the concept of chains of control as a useful tool for examining control practices in software development. © (2013) by the AIS/ICIS Administrative Office All rights reserved.},
  Author_keywords          = {Agile; Case study; Control theory; Software development},
  Document_type            = {Conference Paper},
  ISBN                     = {9781629933948},
  Journal                  = {19th Americas Conference on Information Systems, AMCIS 2013 - Hyperconnected World: Anything, Anywhere, Anytime},
  Keywords                 = {Agile; Agile software development; Behavior control; Empirical examination; Hierarchical level; Informal controls; Management control; Multiple representation, Chains; Control theory; Information systems; Software engineering, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893332049&partnerID=40&md5=d979d65a42fdfbe289bec6c3f40c77ab}
}

@Article{Gren2017104,
  Title                    = {Group development and group maturity when building agile teams: A qualitative and quantitative investigation at eight large companies},
  Author                   = {Gren, L. and Torkar, R. and Feldt, R.},
  Journal                  = {Journal of Systems and Software},
  Year                     = {2017},
  Note                     = {cited By 0},
  Pages                    = {104-119},
  Volume                   = {124},

  Abstract                 = {The agile approach to projects focuses more on close-knit teams than traditional waterfall projects, which means that aspects of group maturity become even more important. This psychological aspect is not much researched in connection to the building of an “agile team.” The purpose of this study is to investigate how building agile teams is connected to a group development model taken from social psychology. We conducted ten semi-structured interviews with coaches, Scrum Masters, and managers responsible for the agile process from seven different companies, and collected survey data from 66 group-members from four companies (a total of eight different companies). The survey included an agile measurement tool and the one part of the Group Development Questionnaire. The results show that the practitioners define group developmental aspects as key factors to a successful agile transition. Also, the quantitative measurement of agility was significantly correlated to the group maturity measurement. We conclude that adding these psychological aspects to the description of the “agile team” could increase the understanding of agility and partly help define an “agile team.” We propose that future work should develop specific guidelines for how software development teams at different maturity levels might adopt agile principles and practices differently. © 2016 Elsevier Inc.},
  Author_keywords          = {Agile processes; Empirical study; Group psychology; Maturity; Measurement},
  Coden                    = {JSSOD},
  Document_type            = {Article},
  Doi                      = {10.1016/j.jss.2016.11.024},
  ISSN                     = {01641212},
  Keywords                 = {Measurements; Software design; Surveys, Agile process; Empirical studies; Group psychology; Maturity; Quantitative investigation; Quantitative measurement; Semi structured interviews; Software development teams, Software engineering},
  Publisher                = {Elsevier Inc.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84996563490&doi=10.1016%2fj.jss.2016.11.024&partnerID=40&md5=081cb4cf2c4c18acf2c1bba448ab998d}
}

@Conference{Gren20151,
  Title                    = {Group maturity and agility, are they connected? - A survey study},
  Author                   = {Gren, L. and Torkar, R. and Feldt, R.},
  Year                     = {2015},
  Note                     = {cited By 2},
  Pages                    = {1-8},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {The focus on psychology has increased within software engineering due to the project management innovation 'agile development processes'. The agile methods do not explicitly consider group development aspects, they simply assume what is described in group psychology as mature groups. This study was conducted with 45 employees and their twelve managers (N=57) from two SAP customers in the US that were working with agile methods, and the data were collected via an online survey. The selected Agility measurement was correlated to a Group Development measurement and showed significant convergent validity, i.e., A more mature team is also a more agile team. This means that the agile methods probably would benefit from taking group development into account when its practices are being introduced. © 2015 IEEE.},
  Art_number               = {7302424},
  Author_keywords          = {Biological system modeling; Collaboration; Correlation; Electronic mail; Organizations; Productivity; Psychology},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/SEAA.2015.31},
  ISBN                     = {9781467375856},
  Journal                  = {Proceedings - 41st Euromicro Conference on Software Engineering and Advanced Applications, SEAA 2015},
  Keywords                 = {Application programs; Biological systems; Correlation methods; Electronic mail; Human resource management; Management science; Productivity; Project management; Societies and institutions; Surveys, Agile development; Agility measurements; Biological system modeling; Collaboration; Convergent validity; Group development; Management innovation; Psychology, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958258291&doi=10.1109%2fSEAA.2015.31&partnerID=40&md5=9cfcabed023ffed7f70f820f5f762aa3}
}

@Article{Griffin20131,
  Title                    = {Adopting agile methods for graduate employability},
  Author                   = {Griffin, B. and Udall, M. and Ross, M. and Georgiadou, E.},
  Journal                  = {International Journal of Human Capital and Information Technology Professionals},
  Year                     = {2013},
  Note                     = {cited By 0},
  Number                   = {3},
  Pages                    = {1-10},
  Volume                   = {4},

  Abstract                 = {The paper evaluates the impacts of using adaptive contemporary workplace methods for the enhancement of student motivation and learning, along with future employability. The interim effects of incorporating an 'Agile' project management approach within an established Activity-Based Learning strategy are considered for second year undergraduate students in Software Engineering and Computer Games Development environments. A range of observations and measurements are analysed to determine likely cause and effect relationships, supported by the university's virtual learning environment, as a key communications component. The findings suggest that student motivation may be significantly enhanced through online access to interactive multi-media materials in support of an incremental facilitated learning strategy. In addition, local employer interest in graduate recruitment has been increased. Copyright © 2013, IGI Global.},
  Author_keywords          = {Activity-based learning; Adaptive contemporary workplace methods; Agility; Employability; Motivation},
  Document_type            = {Article},
  Doi                      = {10.4018/jhcitp.2013070101},
  ISSN                     = {19473478},
  Publisher                = {IGI Global},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84897012017&doi=10.4018%2fjhcitp.2013070101&partnerID=40&md5=f3f611da622dfb6f3729f8af51c8f0af}
}

@Article{Grünert2015463,
  Title                    = {OBPM – An opportunistic approach to business process modeling and execution},
  Author                   = {Grünert, D. and Brucker-Kley, E. and Keller, T.},
  Journal                  = {Lecture Notes in Business Information Processing},
  Year                     = {2015},
  Note                     = {cited By 2},
  Pages                    = {463-474},
  Volume                   = {202},

  Abstract                 = {Traditional workflow management systems are suited to automate well-structured processes based on a strict sequence of user tasks and a top-down approach to model creation. Such a conventional approach does not comply with the bottom-up philosophy of social software and therefore makes it difficult to incorporate its strengths in process modeling and automation. Opportunistic Business Process Modeling (oBPM) aims to overcome these limitations by introducing a new paradigm for modeling and executing business processes that is both user- and document-centric, adequate for bottom-up modeling, agile process modification, opportunistic task scheduling and process mining. © Springer International Publishing Switzerland 2015.},
  Author_keywords          = {Artifact-centric workflow models; Bottom-up model creation; Content-oriented workflow models; Document-oriented workflow models; Obpm},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-15895-2_40},
  Editor                   = {Fournier F., Mendling J.},
  ISBN                     = {9783319158945},
  ISSN                     = {18651348},
  Keywords                 = {Administrative data processing; Enterprise resource management; Process engineering; Systems engineering; Work simplification, Bottom up models; Bottom-up philosophies; Business process model; Conventional approach; Obpm; Top down approaches; Workflow management systems; Workflow models, Automation},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84929860246&doi=10.1007%2f978-3-319-15895-2_40&partnerID=40&md5=93dc2400a4e0b0bf9771eee58b83eff6}
}

@Article{Guerra20149,
  Title                    = {Designing a framework with test-driven development: A journey},
  Author                   = {Guerra, E.},
  Journal                  = {IEEE Software},
  Year                     = {2014},
  Note                     = {cited By 2},
  Number                   = {1},
  Pages                    = {9-14},
  Volume                   = {31},

  Abstract                 = {Usually we read about agile development practices that seem like no more than hand waving. If that's how you feel, you'll enjoy traveling this detailed design journey and seeing up close how test-driven development (TDD) and refactoring are done in an agile environment. This article is especially insightful because of the collaborative shepherding by Rebecca Wirfs-Brock. © 1984-2012 IEEE.},
  Art_number               = {6750460},
  Author_keywords          = {best practices; frameworks; hotspots; programming; TDD; test-driven development; tests},
  Coden                    = {IESOE},
  Document_type            = {Article},
  Doi                      = {10.1109/MS.2014.3},
  ISSN                     = {07407459},
  Keywords                 = {Computer software; Mathematical programming; Testing, Best practices; frameworks; Hotspots; TDD; Test driven development, Software engineering},
  Publisher                = {IEEE Computer Society},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84896274659&doi=10.1109%2fMS.2014.3&partnerID=40&md5=6357e0035f7907f1d2139c253dfb6274}
}

@Conference{Guerrero-Garcia2016149,
  Title                    = {Getting research findings into practice: Guidelines to produce quality software engineering diagrams to assist novice engineers},
  Author                   = {Guerrero-Garcia, J. and Gonzalez-Calleros, J. and Munoz-Arteaga, J. and Morales, A. and Monarca, I.},
  Year                     = {2016},
  Editor                   = {Fernandez y Fernandez C.A., Oktaba H.J., Sandoval G.L., Juarez-Ramirez R., Calleros S.J., Vera R.A.A., Cisneros J.A.},
  Note                     = {cited By 0},
  Pages                    = {149-158},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Computer Diagrams are the communication mechanism among the different stakeholders of the software development lifecycle. While they are though at school, and promoted to be used by students for current and future projects, we still do not see full adoption in real life context. The literature reviewed points out some reasons related to this issue and propose some solutions, but still the problem persist. In this paper, we present our findings of three years of research at the University while working with senior students on real-life projects. Different methodologies were used as an iterative process, improving the quality of the results year by year. We present the lesson learned including guidelines on how to facilitate novice engineers to adopt diagrams and produce them with high quality standards. The proposal is validated with a real life case study. © 2016 IEEE.},
  Art_number               = {7477925},
  Author_keywords          = {Agile; Design; Modeling; Quality; Research and Development; Software Engineering},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/CONISOFT.2016.31},
  ISBN                     = {9781509010745},
  Journal                  = {Proceedings - 2016 4th International Conference in Software Engineering Research and Innovation, CONISOFT 2016},
  Keywords                 = {Design; Image quality; Iterative methods; Models; Software design; Software engineering, Agile; Communication mechanisms; High-quality standards; Iterative process; Real-life contexts; Research and development; Senior students; Software development life cycle, Engineering research},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84978217241&doi=10.1109%2fCONISOFT.2016.31&partnerID=40&md5=cc3247b75a7db75da4a3f2bd9f6db434}
}

@Conference{Gupta20161093,
  Title                    = {Implementation of stateful firewall using POX controller},
  Author                   = {Gupta, V. and Kaur, S. and Kaur, K.},
  Year                     = {2016},
  Editor                   = {Hoda M.N.},
  Note                     = {cited By 0},
  Pages                    = {1093-1096},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Software Defined Networking is new emerging area of research. It is replacing current inflexible and complex networks with innovative and agile networks but the pace of replacement has been slow. In SDN they have decoupled the control and data plane. Openflow is most used protocol needed for communication between control and data plane. The main concern about slow adoption of SDN is security features provided by SDN Switches. Firewall is necessary part of current networks. You cannot think of secure network without using firewall. Already layer 2 and stateless firewalls are available in SDN but the main issue is that can we implement stateful firewall that keeps connection tracking information. In this paper we are implementing SDN stateful firewall using POX Controller. We tested our stateful firewall on mininet emulator as well as real hardware. © 2016 IEEE.},
  Art_number               = {7724431},
  Author_keywords          = {Mininet; OpenFlow; POX Controller; Software Defined Networking},
  Document_type            = {Conference Paper},
  ISBN                     = {9789380544199},
  Journal                  = {Proceedings of the 10th INDIACom; 2016 3rd International Conference on Computing for Sustainable Global Development, INDIACom 2016},
  Keywords                 = {Complex networks; Controllers; Software defined networking, Data planes; Layer 2; Mininet; Openflow; Secure networks; Security features; Stateful firewalls, Computer system firewalls},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84997112357&partnerID=40&md5=41fd21a8c9582870b736feab042702a3}
}

@Conference{Haber201519,
  Title                    = {Integration of heterogeneous modeling languages via extensible and composable language components},
  Author                   = {Haber, A. and Look, M. and Perez, A.N. and Nazari, P.M.S. and Rumpe, B. and Völkel, S. and Wortmann, A.},
  Year                     = {2015},
  Editor                   = {Hammoudi S., Pires L.F., Desfray P., Filipe J., Filipe J.},
  Note                     = {cited By 12},
  Pages                    = {19-31},
  Publisher                = {SciTePress},

  Abstract                 = {Effective model-driven engineering of complex systems requires to appropriately describe different specific system aspects. To this end, efficient integration of different heterogeneous modeling languages is essential. Modeling language integaration is onerous and requires in-depth conceptual and technical knowledge and effort. Traditional modeling lanugage integration approches require language engineers to compose monolithic language aggregates for a specific task or project. Adapting these aggregates to different contexts requires vast effort and makes these hardly reusable. This contribution presents a method for the engineering of grammarbased language components that can be independently developed, are syntactically composable, and ultimately reusable. To this end, it introduces the concepts of language aggregation, language embedding, and language inheritance, as well as their realization in the language workbench MontiCore. The result is a generalizable, systematic, and efficient syntax-oriented composition of languages that allows the agile employment of modeling languages efficiently tailored for individual software projects. Copyright © 2015 SCITEPRESS - Science and Technology Publications.},
  Author_keywords          = {MDE; Modeling language engineering; Modeling language integration},
  Document_type            = {Conference Paper},
  ISBN                     = {9789897580833},
  Journal                  = {MODELSWARD 2015 - 3rd International Conference on Model-Driven Engineering and Software Development, Proceedings},
  Keywords                 = {Aggregates; Computational linguistics; Integration; Software design, Heterogeneous modeling; Language engineering; Language inheritances; Language integration; Language workbenches; MDE; Model-driven Engineering; Traditional models, Modeling languages},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84939549902&partnerID=40&md5=e862e1ca0cb7d44c1964364b98b2a24c}
}

@Article{Hachani2013160,
  Title                    = {Multi-level service approach for flexible support of design processes},
  Author                   = {Hachani, S. and Gzara, L. and Verjus, H.},
  Journal                  = {IFIP Advances in Information and Communication Technology},
  Year                     = {2013},
  Note                     = {cited By 0},
  Pages                    = {160-169},
  Volume                   = {415},

  Abstract                 = {The need to answer quickly to new market opportunities and the high variability of consumer demands tend industrial companies to review their adopted organisation, so to improve their reactivity and to facilitate the coupling with the business enactment. Therefore, these companies require agility in their information systems to allow business needs scalability and design process flexibility. We propose in this paper, the business activities as a service based on the service paradigm and whereas a design process is made of agile services orchestrations. We discuss the interest to use a service-oriented approach and propose a layered architecture for design process enactment. © IFIP International Federation for Information Processing 2013.},
  Author_keywords          = {Agility; BPM; Design process; MDA; PLM; Service orchestration; SOA},
  Document_type            = {Conference Paper},
  Editor                   = {Prabhu V., Kiritsis D., Taisch M.},
  ISBN                     = {9783642412622},
  ISSN                     = {18684238},
  Keywords                 = {Design; Industrial management; Information services; Software architecture; Supply chains, Agility; Business activities; Design process; Industrial companies; Layered architecture; Market opportunities; Service orchestration; Service-oriented approaches, Service oriented architecture (SOA)},
  Publisher                = {Springer New York LLC},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84978280175&partnerID=40&md5=45ffa01ebf761bd18765b6a6701855c0}
}

@Article{Hajrizi2015153,
  Title                    = {Agile Software Development Process at Financial Institution in Kosovo},
  Author                   = {Hajrizi, E. and Bytyci, F.},
  Journal                  = {IFAC-PapersOnLine},
  Year                     = {2015},
  Note                     = {cited By 0},
  Number                   = {24},
  Pages                    = {153-156},
  Volume                   = {48},

  Abstract                 = {Due to the business requirement and having request very often to change the products in order to be more competitive in the market the main questions for this paper is: does the Financial Institution in Kosovo have adopted any SDLC (Software Development Life Cycle) Methodology to full fill requirement of business, respectively outside customers and which is this methodology they are using. Additionally this paper is to begin filling this gap by systematically reviewing the existing literature on agile software development methodologies and review the standard for software development life cycle implemented in Kosovo Banks by gathering requirement as a minimum standard from other networks banks in group and see how this framework helps us as Financial Institution in Kosovo. © 2015, IFFCA (Internaitional Fedreation of Automatic Control) Hosting by Elsevier Ltd. All rights reserved.},
  Author_keywords          = {Agile Software Development; Financial Institutions; Lean; RAD; Scrum; Software Development Life Cycle},
  Document_type            = {Conference Paper},
  Doi                      = {10.1016/j.ifacol.2015.12.074},
  ISSN                     = {24058963},
  Keywords                 = {Computer software; Finance; Life cycle; Software engineering, Agile software development; Financial institution; Lean; Scrum; Software development life cycle, Software design},
  Publisher                = {Elsevier B.V.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84983161360&doi=10.1016%2fj.ifacol.2015.12.074&partnerID=40&md5=ad017f25bba4cf0ce6a0b2c3f671e6ce}
}

@Article{Haleplidis20151423,
  Title                    = {Network Programmability with ForCES},
  Author                   = {Haleplidis, E. and Hadi Salim, J. and Halpern, J.M. and Hares, S. and Pentikousis, K. and Ogawa, K. and Weiming, W. and Denazis, S. and Koufopavlou, O.},
  Journal                  = {IEEE Communications Surveys and Tutorials},
  Year                     = {2015},
  Note                     = {cited By 6},
  Number                   = {3},
  Pages                    = {1423-1440},
  Volume                   = {17},

  Abstract                 = {Network programmability has re-emerged as a top item of the networking research agenda since Software Defined Networking (SDN) gained wide acceptance simultaneously in vendor product line plans and operator expectations for future deployments. Key ingredients for the successful deployment of SDN technologies are standardized models, mechanisms, and protocols for the separation of the control and forwarding planes. The Internet Engineering Task Force (IETF) standardization effort on Forwarding and Control Element Separation (ForCES) has published a set of standards track documents which specify in detail a comprehensive architectural framework and the respective standard protocols which can be employed to implement the separation of these two planes in a flexible, scalable, and vendor-Agnostic yet fully interoperable manner. The IETF standards on ForCES define how to achieve said separation through a complete and modular system model of the forwarding plane elements. In the ForCES model every network element is composed of numerous logically separate and well-defined functional entities that cooperate to provide the desired overall functionality, such as a routing or IP switching. The elegance of the model lies in the fact that a ForCES-based implementation of a network element is indistinguishable from a traditional ('closed-box') network element and therefore can be deployed in the field without any need for migration to a new architecture. Conversely, ForCES allows for rapid prototyping and agile deployment of new architectures as emphasis is placed on software-defined functionality and full programmability. The difference of ForCES from other SDN approaches that depend on logically centralized controllers and the deployment of solely simple or 'dumb' switches is that ForCES standards provide a complete toolbox to design, implement, and interoperate ForCES-based network elements with both previously deployed infrastructures as well as in experimental or early-deployment phase endeavors. An example of the former is the implementation of 3GPP-standardized network elements such as a packet gateway (PGW). Examples of the latter include the use of ForCES for network function virtualization (NFV) proofs-of-concepts. This paper surveys the programmable networks and SDN area and provides a comprehensive tutorial on ForCES by summarizing numerous standards documents and thus making the technology easily understood by the wider research community. We present the design goals, choices, and tradeoffs for this standardized approach for network programmability and provide a thorough primer on the ForCES model and protocol. This paper also surveys recent independent interoperable implementations that showcase the full spectrum of ForCES applications in the era of NFV and SDN. © 1998-2012 IEEE.},
  Art_number               = {7118637},
  Author_keywords          = {ForCES model; ForCES protocol; IETF; Logical Functional Block; Network Programmability; OpenFlow; Software Defined Networking},
  Document_type            = {Article},
  Doi                      = {10.1109/COMST.2015.2439033},
  ISSN                     = {1553877X},
  Keywords                 = {Internet protocols; Mobile telecommunication systems; Network architecture; Separation; Standards; Surveys, Functional block; IETF; Openflow; Programmability; Software-defined networkings, Gateways (computer networks)},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84940106187&doi=10.1109%2fCOMST.2015.2439033&partnerID=40&md5=edae8bb368ac8697ab86c65a8e85b989}
}

@Article{Hamdan20152019,
  Title                    = {A Quality Framework for Software Continuous Integration},
  Author                   = {Hamdan, S. and Alramouni, S.},
  Journal                  = {Procedia Manufacturing},
  Year                     = {2015},
  Note                     = {cited By 0},
  Pages                    = {2019-2025},
  Volume                   = {3},

  Abstract                 = {The research in this paper combines two main areas, the first one is software quality and the second is the agile practices of continuous integration. Software quality has been an important topic since the beginning of the software development and production. Many researches have been conducted to discuss how the quality of software is a critical factor to its success [1–5]. Because software became an important part of almost every task in our daily life, having high quality software that meets the users’ expectations is important [6]. Software integration is a stage in every software development lifecycle, it is defined as the process to assemble the software components and produce a single product. It has been shown that software integration and integration testing can make more than 40% of the overall project cost, so it is important that they are done efficiently and easily to be able to manage the involved risks [7]. A software engineering practice called continuous integration (CI) was introduced by Kent Beck and Ron Jeffries to mitigate the risks of software integration, enhance its process and improve its quality [8]. In this research, the principles of CI are identified and applied to a case study in order to analyze their impact on the software development process quality factors. © 2015 The Authors},
  Author_keywords          = {Agile; Continuous integration; Extreme programming; ISO; Software development; Software quality framework},
  Document_type            = {Article},
  Doi                      = {10.1016/j.promfg.2015.07.249},
  ISSN                     = {23519789},
  Publisher                = {Elsevier B.V.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85009957296&doi=10.1016%2fj.promfg.2015.07.249&partnerID=40&md5=76fe92ab78fa3147d1ec8289bdfb132f}
}

@Conference{Hampaiah2014,
  Title                    = {DevOps for non-functional test assurance},
  Author                   = {Hampaiah, U. and Patil, M. and Paluri, V. and Jandhyala, S.},
  Year                     = {2014},
  Note                     = {cited By 0},
  Publisher                = {Computer Measurment Group Inc.},

  Abstract                 = {This paper introduces a framework SPARTA: Scalability, Performance, Availability and Reliability Test Assurance that is based on the concept of DevOps. The successes of large programs are highly dependent on the Non-Functional (NF) aspects like Scalability, Performance, Availability, and Reliability. Given that NF testing falls at the end of the Software Development Life Cycle (SDLC) and just before the go live phase, the onus falls on the NF test teams to assure operational efficiency. Validation of these NF aspects presents certain unique challenges like low priority on NF details in designs, non-availability of NF test environment, stack up of all SDLC delays towards NF testing window etc. Sparingly as it maybe, but at times the performance test does spring up performance defects which lead to an alteration of the architecture at a crucial juncture -just before "Go-live"This paper presents a SPARTA framework that assures the NF aspects as a Quality Assurance team using DevOps. This approach is proactive, easy and can be seamlessly integrated with existing waterfall or Agile methodologies. Unlike traditional NF testing the focus of SPARTA approach is on assuring the NF aspects at every stage of SDLC and it is developed in alignment with DevOps. This framework is elaborated in detail and discussed further in this paper along with examples of quantified benefits illustrated during adoption of SPARTA in the programs.},
  Document_type            = {Conference Paper},
  Journal                  = {40th International Conference on Performance and Capacity 2014 by CMG},
  Keywords                 = {Computer software; Life cycle; Quality assurance; Scalability; Software design; Testing, Agile Methodologies; Non-functional; Non-functional tests; Operational efficiencies; Performance tests; Reliability test; Software development life cycle; Test Environment, Software testing},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84925004477&partnerID=40&md5=9d3c6bc6bde5c867af86f3edc34b8852}
}

@Conference{Han2016417,
  Title                    = {Design and implementation of LISP controller in ONOS},
  Author                   = {Han, Y. and Ryu, S. and Suh, Y.-J. and Hong, J.W.-K.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {417-422},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Software Defined Networking (SDN) is an emerging paradigm to address the demands for flexible and agile network controllability. The fundamental idea of SDN is the physical separation of the network control plane from the data (forwarding) plane. This migration of control into programmable computing devices enables the underlying network infrastructures to be abstracted for applications and services. It brings many beneficial features such as programmability, agility, elasticity. Currently, OpenFlow is widely used as interfacing protocol between data and control planes. However, to practically deploy the SDN paradigm, OpenFlow is insufficient in terms of scalability, performance, heterogeneity, inter-operability with legacy networks and protocols. To overcome those limitations, we need to consider multiple protocols as South Bound Interface for SDN controllers. In this paper, we describe our experience to design and implement Locator/Identifier Separation Protocol (LISP) in ONOS, which is an open source SDN OS for service providers. LISP is a tunneling based protocol to solve Internet scalability issue, and several recent studies show that LISP can be applied to various use cases to improve efficiency such as virtual machine live migration, multi-homing, and traffic engineering. Therefore, LISP is a good candidate to extend SDN's South Bound Interface. Furthermore, several use cases to effectively use LISP within SDN environments are introduced. © 2016 IEEE.},
  Art_number               = {7502478},
  Author_keywords          = {Locator Identifier Separation Protocol(LISP); Open Network Operating System (ONOS); OpenFlow; Software Defined Networking (SDN); South Bound APIs},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/NETSOFT.2016.7502478},
  ISBN                     = {9781467394864},
  Journal                  = {IEEE NETSOFT 2016 - 2016 IEEE NetSoft Conference and Workshops: Software-Defined Infrastructure for Networks, Clouds, IoT and Services},
  Keywords                 = {Controllers; Internet protocols; Open source software; Scalability; Separation; Software defined networking, Locator Identifier Separation Protocol(LISP); Open network; Openflow; Software defined networking (SDN); South Bound APIs, Source separation},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84979992979&doi=10.1109%2fNETSOFT.2016.7502478&partnerID=40&md5=fe6843c845fd73d35dba4d617f1385bb}
}

@Article{Hanson2014,
  Title                    = {Metabolic pathways for the whole community},
  Author                   = {Hanson, N.W. and Konwar, K.M. and Hawley, A.K. and Altman, T. and Karp, P.D. and Hallam, S.J.},
  Journal                  = {BMC Genomics},
  Year                     = {2014},
  Note                     = {cited By 15},
  Number                   = {1},
  Volume                   = {15},

  Abstract                 = {Background: A convergence of high-throughput sequencing and computational power is transforming biology into information science. Despite these technological advances, converting bits and bytes of sequence information into meaningful insights remains a challenging enterprise. Biological systems operate on multiple hierarchical levels from genomes to biomes. Holistic understanding of biological systems requires agile software tools that permit comparative analyses across multiple information levels (DNA, RNA, protein, and metabolites) to identify emergent properties, diagnose system states, or predict responses to environmental change.Results: Here we adopt the MetaPathways annotation and analysis pipeline and Pathway Tools to construct environmental pathway/genome databases (ePGDBs) that describe microbial community metabolism using MetaCyc, a highly curated database of metabolic pathways and components covering all domains of life. We evaluate Pathway Tools' performance on three datasets with different complexity and coding potential, including simulated metagenomes, a symbiotic system, and the Hawaii Ocean Time-series. We define accuracy and sensitivity relationships between read length, coverage and pathway recovery and evaluate the impact of taxonomic pruning on ePGDB construction and interpretation. Resulting ePGDBs provide interactive metabolic maps, predict emergent metabolic pathways associated with biosynthesis and energy production and differentiate between genomic potential and phenotypic expression across defined environmental gradients.Conclusions: This multi-tiered analysis provides the user community with specific operating guidelines, performance metrics and prediction hazards for more reliable ePGDB construction and interpretation. Moreover, it demonstrates the power of Pathway Tools in predicting metabolic interactions in natural and engineered ecosystems. © 2014 Hanson et al.},
  Art_number               = {619},
  Coden                    = {BGMEE},
  Document_type            = {Article},
  Doi                      = {10.1186/1471-2164-15-619},
  ISSN                     = {14712164},
  Keywords                 = {accuracy; Article; biosynthesis; controlled study; energy yield; genetic database; genetic variability; genome analysis; metagenome; microbial community; microbial genome; microbial metabolism; nonhuman; phenotype; practice guideline; sensitivity analysis; sequence analysis; taxonomic identification; genetics; genomics; metabolism; molecular genetics; procedures, Genomics; Metabolic Networks and Pathways; Molecular Sequence Annotation},
  Publisher                = {BioMed Central Ltd.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904525446&doi=10.1186%2f1471-2164-15-619&partnerID=40&md5=d157fac24324ef8570e0949a17052e16}
}

@Article{Harvie2016476,
  Title                    = {Targeted Scrum: Applying Mission Command to Agile Software Development},
  Author                   = {Harvie, D.P. and Agah, A.},
  Journal                  = {IEEE Transactions on Software Engineering},
  Year                     = {2016},
  Note                     = {cited By 1},
  Number                   = {5},
  Pages                    = {476-489},
  Volume                   = {42},

  Abstract                 = {Software engineering and mission command are two separate but similar fields, as both are instances of complex problem solving in environments with ever changing requirements. Our research hypothesis is that modifications to agile software development based on inspirations from mission command can improve the software engineering process in terms of planning, prioritizing, and communication of software requirements and progress, as well as improving the overall software product. Targeted Scrum is a modification of Traditional Scrum based on three inspirations from Mission Command: End State, Line of Effort, and Targeting. These inspirations have led to the introduction of the Product Design Meeting and modifications of some current Scrum meetings and artifacts. We tested our research hypothesis using a semester-long undergraduate level software engineering class. Students developed two software projects, one using Traditional Scrum and the other using Targeted Scrum. We then assessed how well both methodologies assisted the software development teams in planning and developing the software architecture, prioritizing requirements, and communicating progress. We also evaluated the software product produced by both methodologies. We found that Targeted Scrum did better in assisting the software development teams in the planning and prioritization of the requirements. However, Targeted Scrum had a negligible effect on improving the software development teams external and internal communications. Finally, Targeted Scrum did not have an impact on the product quality by the top performing and worst performing teams. Targeted Scrum did assist the product quality of the teams in the middle of the performance spectrum. © 2015 IEEE.},
  Art_number               = {7296686},
  Author_keywords          = {agile; empirical software engineering; line of effort; mission command; product design meeting; Scrum},
  Coden                    = {IESED},
  Document_type            = {Article},
  Doi                      = {10.1109/TSE.2015.2489654},
  ISSN                     = {00985589},
  Keywords                 = {Problem solving; Product design; Quality control; Software engineering; Software testing, agile; Empirical Software Engineering; line of effort; Mission command; Scrum, Software design},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84973548043&doi=10.1109%2fTSE.2015.2489654&partnerID=40&md5=de4a9aa5cacd2ee3a718d1e3193a5798}
}

@Conference{Häser2015,
  Title                    = {Non-intrusive documentation-driven integration testing},
  Author                   = {Häser, F. and Breu, R.},
  Year                     = {2015},
  Note                     = {cited By 0},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Powerful development frameworks and adoption of agile development methods are continuously increasing release frequency, thus compress test cycles. Test automation, often relying on model based approaches, helps to reduce test time, however the introduction of related heavy weight processes is often quite challenging. In order to tackle this problem, we propose a bottom up testing approach, which in a nutshell, in the initial phase supports the integration tester in creating a semi-formal test case description and report. The approach, a textual domain specific framework, will guide the test expert in evolving the base language, in order to be tailored for a domain language of an organization. The evolved language can be linked to executable code, which enables in the long run (semi-)automated model based regression testing. © 2015 IEEE.},
  Art_number               = {7102616},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICST.2015.7102616},
  ISBN                     = {9781479971251},
  Journal                  = {2015 IEEE 8th International Conference on Software Testing, Verification and Validation, ICST 2015 - Proceedings},
  Keywords                 = {Computational linguistics; Software testing; Testing; Verification, Agile development methods; Automated modeling; Development frameworks; Domain-specific frameworks; Executable codes; Model based approach; Regression testing; Test Automation, Integration testing},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84935086629&doi=10.1109%2fICST.2015.7102616&partnerID=40&md5=8e1c548ccd44a93f338b7dcc671affad}
}

@Conference{Hauder201438,
  Title                    = {Agile enterprise architecture management an analysis on the application of agile principles},
  Author                   = {Hauder, M. and Roth, S. and Schulz, C. and Matthes, F.},
  Year                     = {2014},
  Editor                   = {Shishkov B.},
  Note                     = {cited By 1},
  Pages                    = {38-46},
  Publisher                = {SciTePress},

  Abstract                 = {Enterprise Architecture (EA) management has proven to be an efficient instrument to align business and IT from a holistic perspective. Many organizations have established a permanent EA management function responsible for modeling, analyzing, and defining the current and future EA state as well as the roadmap. Similar as in software development, EA management initiatives face challenges that delay results, complicate the collaboration, and deteriorate the overall work quality. While in software development, agile principles and values reflected in tangible methods like Scrum and Extreme Programming are increasingly adopted by organizations, there is little known whether these practices have already made their way into EA management. Based on three research questions, this paper sheds light on the status-quo of agile principles applied to EA management. We present results of an online survey among 105 industry experts working for more than 10 industry sectors across 22 different countries.},
  Author_keywords          = {Agile; Enterprise Architecture Framework; Enterprise Architecture Management; Survey},
  Document_type            = {Conference Paper},
  ISBN                     = {9789897580321},
  Journal                  = {BMSD 2014 - Proceedings of the 4th International Symposium on Business Modeling and Software Design},
  Keywords                 = {Software engineering; Surveying; Surveys; Systems engineering, Agile; Enterprise Architecture; Enterprise architecture managements; EXtreme Programming; Holistic perspectives; Industry experts; Industry sectors; Research questions, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84926354836&partnerID=40&md5=d6dba13c46fc9d3df64bfd304df2b1a8}
}

@Article{Heaton2015207,
  Title                    = {Claims about the use of software engineering practices in science: A systematic literature review},
  Author                   = {Heaton, D. and Carver, J.C.},
  Journal                  = {Information and Software Technology},
  Year                     = {2015},
  Note                     = {cited By 5},
  Pages                    = {207-219},
  Volume                   = {67},

  Abstract                 = {Context: Scientists have become increasingly reliant on software in order to perform research that is too time-intensive, expensive, or dangerous to perform physically. Because the results produced by the software drive important decisions, the software must be correct and developed efficiently. Various software engineering practices have been shown to increase correctness and efficiency in the development of traditional software. It is unclear whether these observations will hold in a scientific context. Objective: This paper evaluates claims from software engineers and scientific software developers about 12 different software engineering practices and their use in developing scientific software. Method: We performed a systematic literature review examining claims about how scientists develop software. Of the 189 papers originally identified, 43 are included in the literature review. These 43 papers contain 33 different claims about 12 software engineering practices. Results: The majority of the claims indicated that software engineering practices are useful for scientific software development. Every claim was supported by evidence (i.e. personal experience, interview/survey, or case study) with slightly over half supported by multiple forms of evidence. For those claims supported by only one type of evidence, interviews/surveys were the most common. The claims that received the most support were: "The effectiveness of the testing practices currently used by scientific software developers is limited" and "Version control software is necessary for research groups with more than one developer." Additionally, many scientific software developers have unconsciously adopted an agile-like development methodology. Conclusion: Use of software engineering practices could increase the correctness of scientific software and the efficiency of its development. While there is still potential for increased use of these practices, scientific software developers have begun to embrace software engineering practices to improve their software. Additionally, software engineering practices still need to be tailored to better fit the needs of scientific software development. © 2015 Elsevier B.V.},
  Author_keywords          = {Computational science; Scientific software; Systematic literature review},
  Coden                    = {ISOTE},
  Document_type            = {Conference Paper},
  Doi                      = {10.1016/j.infsof.2015.07.011},
  ISSN                     = {09505849},
  Keywords                 = {Software engineering; Software testing, Computational science; Development methodology; Personal experience; Scientific context; Scientific software development; Scientific softwares; Software engineering practices; Systematic literature review, Software design},
  Publisher                = {Elsevier},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84942021945&doi=10.1016%2fj.infsof.2015.07.011&partnerID=40&md5=c8ecc701ff7f58ea5c48a1e595526efd}
}

@Conference{Hebig2014164,
  Title                    = {On the need to study the impact of model driven engineering on software processes},
  Author                   = {Hebig, R. and Bendraou, R.},
  Year                     = {2014},
  Note                     = {cited By 3},
  Pages                    = {164-168},
  Publisher                = {Association for Computing Machinery},

  Abstract                 = {There is an increasing use of model-driven engineering (MDE) in the industry. Despite the existence of research proposals for MDE-specific processes, the question arises whether and how the processes that are already used within a company can be reused, when MDE is introduced. In this position paper we report on a systematic literature review on the question how standard processes, such as SCRUM or the V-Model XT, can be combined with MDE. We come up with the observation that - although it is in some cases possible to reuse standard processes - the combination with MDE can also result in heavyweight changes to a process. Our goal is to draw attention to two arising research needs: the need to collect systematic knowledge about the influence of MDE on software processes and the need to provide guidance for the tailoring of processes based on the set of used MDE techniques. © 2014 ACM.},
  Author_keywords          = {literature survey; model-driven engineering; Software process tailoring},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2600821.2600846},
  ISBN                     = {9781450327541},
  Journal                  = {ACM International Conference Proceeding Series},
  Keywords                 = {Computer applications, Literature survey; Model-driven Engineering; Position papers; Provide guidances; Research proposals; Software process; Software process tailoring; Systematic literature review, Computer programming},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84902440755&doi=10.1145%2f2600821.2600846&partnerID=40&md5=3e3c3ab829ee3158687e472fa5c62bcf}
}

@Article{Hegarty2014784,
  Title                    = {Transition to a product line infrastructure: experience at Akari Software},
  Author                   = {Hegarty, P. and O'Leary, E. and Dineen, D. and Bustard, D. and Moore, A.},
  Journal                  = {Journal of Software: Evolution and Process},
  Year                     = {2014},
  Note                     = {cited By 0},
  Number                   = {9},
  Pages                    = {784-790},
  Volume                   = {26},

  Abstract                 = {Akari Software offers a family of software products supporting curriculum management in higher education. The work started with one specific commission, but within 4 years, a small product suite had been developed, with ten organisations using customised variants of those products. In effect, a product family had been created but without the underlying structure and processes needed to ensure the efficient creation and maintenance of variants. This is a common issue faced by software companies as their product range expands. In 2010, Akari began making internal changes to develop a product range infrastructure that was suitable both for its existing products and its plans for future growth. The purpose of this paper is to describe the product line transition that occurred, both to share the experience involved and to identify a number of general lessons learned. The work was supported by a FUSION project, funded by InterTradeIreland, undertaken in collaboration with the University of Ulster. Copyright © 2014 John Wiley & Sons, Ltd. Copyright © 2014 John Wiley & Sons, Ltd.},
  Author_keywords          = {agile software development; localisation; process transition; software product line},
  Document_type            = {Conference Paper},
  Doi                      = {10.1002/smr.1663},
  ISSN                     = {20477481},
  Keywords                 = {Copyrights; Curricula; Software engineering, Agile software development; Internal changes; Localisation; Process transitions; Product families; Software company; Software Product Line; Software products, Software design},
  Publisher                = {John Wiley and Sons Ltd},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84979934212&doi=10.1002%2fsmr.1663&partnerID=40&md5=77ceace9ef76ad008ad3a1e8f7733561}
}

@Conference{Heikkila201385,
  Title                    = {ScrumBut, but does it matter? A mixed-method study of the planning process of a multi-team scrum organization},
  Author                   = {Heikkila, V.T. and Paasivaara, M. and Lassenius, C.},
  Year                     = {2013},
  Note                     = {cited By 2},
  Pages                    = {85-94},

  Abstract                 = {Context: Proponents of the Scrum software development method use the term 'Scrum But' to refer to harmful changes to Scrum. Scrum has been increasingly adopted in large software development organizations. This has led to changes to Scrum practices, but it is not known if these changes are harmful. Objective: We studied how the requirements were planned and managed in the development teams of a large Scrum organization, how well the requirements planning and management practices matched Scrum, and whether the changes were perceived harmful. Method: We quantitatively analysed 435 requirements spanning a time period of approximately one year. We conducted a total of 40 interviews to study the Scrum adoption in the organization and to explain and validate the quantitative results. Results: The main discrepancies between the organization's practices and Scrum were the pacing of the planning process, which was more akin to a continuous process instead of the iteration-paced Scrum model, and the average time it took to develop requirements, which was considerably longer than the time prescribed by Scrum. The latter discrepancy was considered slightly harmful. Conclusion: Changes to the Scrum practices should be evaluated in their context to separate harmful ones from necessary or beneficial changes mandated by the organizational context. © 2013 IEEE.},
  Art_number               = {6681341},
  Author_keywords          = {large-scale agile software development; release planning; Scrum; software engineering},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ESEM.2013.27},
  ISSN                     = {19493770},
  Journal                  = {International Symposium on Empirical Software Engineering and Measurement},
  Keywords                 = {Agile software development; Management practices; Organizational context; Quantitative result; Release planning; Scrum; Software development methods; Software development organizations, Human resource management; Software design; Software engineering, Iterative methods},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893301078&doi=10.1109%2fESEM.2013.27&partnerID=40&md5=0f88be2028a5312dfd82e6d060487343}
}

@Article{Heikkilä2015116,
  Title                    = {Operational release planning in large-scale scrum with multiple stakeholders - A longitudinal case study at F-secure corporation},
  Author                   = {Heikkilä, V.T. and Paasivaara, M. and Rautiainen, K. and Lassenius, C. and Toivola, T. and Järvinen, J.},
  Journal                  = {Information and Software Technology},
  Year                     = {2015},
  Note                     = {cited By 5},
  Number                   = {1},
  Pages                    = {116-140},
  Volume                   = {57},

  Abstract                 = {Context: The analysis and selection of requirements are important parts of any release planning process. Previous studies on release planning have focused on plan-driven optimization models. Unfortunately, solving the release planning problem mechanistically is difficult in an agile development context. Objective: We describe how a release planning method was employed in two case projects in F-Secure, a large Finnish software company. We identify the benefits which the projects gained from the method, and analyze challenges in the cases and improvements made to the method during the case projects. Method: We observed five release planning events and four retrospectives and we conducted surveys in the first two events. We conducted six post-project interviews. We conjoined the observation notes, survey results and interviews and analyzed them qualitatively and quantitatively. Results: The focal point of the method was release planning events where the whole project organization gathered to plan the next release. The planning was conducted by the development teams in close collaboration with each other and with the other stakeholders. We identified ten benefits which included improved communication, transparency, dependency management and decision making. We identified nine challenges which included the lacking preparation and prioritization of requirements, unrealistic schedules, insufficient architectural planning and lacking agile mindset. The biggest improvements to the method were the introduction of frequent status checks and a big visible planning status board. Conclusion: The release planning method ameliorated many difficult characteristics of the release planning problem but its efficiency was negatively affected by the performing organization that was in transition from a plan-driven to an agile development mindset. Even in this case the benefits clearly outweighed the challenges and the method enabled the early identification of the issues in the project. © 2014 Elsevier B.V. All rights reserved.},
  Author_keywords          = {Agile software development; Large projects; Release planning; Scrum; Software project management},
  Coden                    = {ISOTE},
  Document_type            = {Conference Paper},
  Doi                      = {10.1016/j.infsof.2014.09.005},
  ISSN                     = {09505849},
  Keywords                 = {Decision making; Optimization; Project management; Software engineering; Surveys, Agile software development; Large project; Release planning; Scrum; Software project management, Software design},
  Publisher                = {Elsevier},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84922489975&doi=10.1016%2fj.infsof.2014.09.005&partnerID=40&md5=8c83686f954667078389511d549a9c33}
}

@Conference{Heil2016189,
  Title                    = {AWSM: Agile web migration for SMEs},
  Author                   = {Heil, S. and Gaedke, M.},
  Year                     = {2016},
  Editor                   = {Filipe J., Maciaszek L., Maciaszek L.},
  Note                     = {cited By 0},
  Pages                    = {189-194},
  Publisher                = {SciTePress},

  Abstract                 = {Migrating legacy desktop to web applications is an important and challenging task for SME software companies. Due to their limited resources, migration should be integrated in ongoing development processes. Existing research in this area does not consider recent paradigm shifts in web development. Therefore, our work is dedicated to supporting SME software providers in migrating to modern web applications while integrating this into ongoing development. This paper outlines our idea and presents a roadmap towards achieving this goal. Copyright © 2016 by SCITEPRESS - Science and Technology Publications, Lda. All rights reserved.},
  Author_keywords          = {Agile development; Software migration; Web engineering},
  Document_type            = {Conference Paper},
  ISBN                     = {9789897581892},
  Journal                  = {ENASE 2016 - Proceedings of the 11th International Conference on Evaluation of Novel Software Approaches to Software Engineering},
  Keywords                 = {Application programs; Software engineering, Agile development; Development process; Paradigm shifts; Software company; Software migration; WEB application; Web development; Web engineering, World Wide Web},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84979508825&partnerID=40&md5=c42518f0f518c83d1ef1dddc3195db97}
}

@Article{Heiser2015327,
  Title                    = {Revealing hidden structures in organizational transformation–a case study},
  Author                   = {Heiser, F. and Lagerström, R. and Addibpour, M.},
  Journal                  = {Lecture Notes in Business Information Processing},
  Year                     = {2015},
  Note                     = {cited By 0},
  Pages                    = {327-338},
  Volume                   = {215},

  Abstract                 = {EA initiatives are usually spanning the entire enterprise on high level. While, a typical development organization (could be a business unit within a larger enterprise) often has detailed models describing their product, the enterprise architecture on the business unit level is handled in an ad hoc or detached way. However, research shows that there is a tight link between the product architecture and its developing organization. In this paper we have studied an organization within Ericsson, which focuses on the development of large software and hardware products. We have applied the hidden structure method, which is based on the Design Structure Matrix approach, to analyze of organizational transformations. The to-be scenarios are possible alternatives in trying to become more agile and lean. Our analysis shows that one scenario likely increases the complexity of developing the product, while the other two suggestions are both promising to-be scenarios. © Springer International Publishing Switzerland 2015.},
  Author_keywords          = {Design structure matrix; Enterprise architecture; Hidden structure; Organizational transformation},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-19243-7_31},
  Editor                   = {Persson A., Stirna J.},
  ISBN                     = {9783319192420},
  ISSN                     = {18651348},
  Keywords                 = {Administrative data processing; Cognitive systems; Computer supported cooperative work; Design; Enterprise resource management; Enterprise resource planning; Information systems; Linear transformations; Management information systems; Product design; Systems engineering, Design Structure Matrices; Detailed models; Enterprise Architecture; Hidden structures; Organizational transformation; Product architecture; Software and hardwares; Typical development, Information management},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84937484989&doi=10.1007%2f978-3-319-19243-7_31&partnerID=40&md5=2f4ced57354d81433aa80e07b8f5fe70}
}

@Article{Henriques201753,
  Title                    = {A systematic literature review of agile and maturity model research},
  Author                   = {Henriques, V. and Tanner, M.},
  Journal                  = {Interdisciplinary Journal of Information, Knowledge, and Management},
  Year                     = {2017},
  Note                     = {cited By 0},
  Pages                    = {53-73},
  Volume                   = {12},

  Abstract                 = {Background/Aim/Purpose: A commonly implemented software process improvement framework is the capability maturity model integrated (CMMI). Existing literature indicates higher levels of CMMI maturity could result in a loss of agility due to its organizational focus. To maintain agility, research has focussed attention on agile maturity models. The objective of this paper is to find the common research themes and conclusions in agile maturity model research. Methodology: This research adopts a systematic approach to agile maturity model research, using Google Scholar, Science Direct, and IEEE Xplore as sources. In total 531 articles were initially found matching the search criteria, which was filtered to 39 articles by applying specific exclusion criteria. Contribution: The article highlights the trends in agile maturity model research, specifically bringing to light the lack of research providing validation of such models. Findings: Two major themes emerge, being the coexistence of agile and CMMI and the development of agile principle based maturity models. The research trend indicates an increase in agile maturity model articles, particularly in the latter half of the last decade, with concentrations of research coinciding with version updates of CMMI. While there is general consensus around higher CMMI maturity levels being incompatible with true agility, there is evidence of the two coexisting when agile is introduced into already highly matured environments. Future Research: Future research direction for this topic should include how to attain higher levels of CMMI maturity using only agile methods, how governance is addressed in agile environments, and whether existing agile maturity models relate to improved project success.},
  Author_keywords          = {Agile; Agile maturity model; Agile process improvement; Maturity model; Scrum; XP},
  Document_type            = {Review},
  ISSN                     = {15551229},
  Keywords                 = {Process engineering; X ray photoelectron spectroscopy, Agile; Agile process; Capability maturity model integrated; Future research directions; Maturity model; Scrum; Software Process Improvement; Systematic literature review, Software engineering},
  Publisher                = {Informing Science Institute},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85016155701&partnerID=40&md5=85c3683faf037fd2f2c54799d1b5bb75}
}

@Article{Heredia2014859,
  Title                    = {Study of factors influencing the adoption of agile processes when using Wikis},
  Author                   = {Heredia, A. and Garcia-Guzman, J. and Amescua-Seco, A. and Serrano, A.},
  Journal                  = {International Journal of Software Engineering and Knowledge Engineering},
  Year                     = {2014},
  Note                     = {cited By 0},
  Number                   = {6},
  Pages                    = {859-885},
  Volume                   = {24},

  Abstract                 = {The adoption of innovative Software Engineering (SE) processes by an organization implies that engineers have to learn new processes which they might not be familiar with. Social software can support and enhance this adoption process, so research needs to focus on how the exchange of knowledge among software engineers using these tools can help to perform training more effectively. We propose a framework based on social software to support the collaborative learning, adoption and improvement of SE processes through the exchange of experiences among individuals. This article examines factors influencing the adoption of new SE processes and the quality of the experiences shared using the proposed framework in comparison with similar ones. Two case studies were carried out involving junior engineers in a training course on agile software development. Anonymous surveys collected data on the perceived quality of the experiences shared during the research, their usefulness, and the simplicity of the mechanisms provided to contribute experiences. Results show that the adoption of new SE processes is influenced by several factors such as the commitment of software engineers to collaborate in the adoption of the new process, the perceived level of usefulness of the tacit knowledge elicited during the adoption process, the diversity of the topics covered by the shared knowledge, the simplicity of the mechanisms to contribute new tacit knowledge, and the amount of learning achieved by software engineers. © 2014 World Scientific Publishing Company.},
  Author_keywords          = {agile software development; collaborative learning; Process adoption; social software; tacit knowledge},
  Coden                    = {ISEKE},
  Document_type            = {Article},
  Doi                      = {10.1142/S0218194014400014},
  ISSN                     = {02181940},
  Keywords                 = {Curricula; Engineers; Knowledge management; Personnel training; Software engineering, Agile software development; Collaborative learning; Process adoption; Social software; Tacit knowledge, Software design},
  Publisher                = {World Scientific Publishing Co. Pte Ltd},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84928607230&doi=10.1142%2fS0218194014400014&partnerID=40&md5=f9daa0c934f06f57a545a4289eac6cba}
}

@Conference{Hermawan2016,
  Title                    = {Colaborated Architechture Framework for Composition UML 2.0 in Zachman Framework},
  Author                   = {Hermawan and Hastarista, F.},
  Year                     = {2016},
  Editor                   = {Zwiggelaar R., Yusup S., Taha Z.},
  Note                     = {cited By 0},
  Number                   = {1},
  Publisher                = {Institute of Physics Publishing},
  Volume                   = {105},

  Abstract                 = {Zachman Framework (ZF) is the framework of enterprise architechture that most widely adopted in the Enterprise Information System (EIS) development. In this study, has been developed Colaborated Architechture Framework (CAF) to collaborate ZF with Unified Modeling Language (UML) 2.0 modeling. The CAF provides the composition of ZF matrix that each cell is consist of the Model Driven architechture (MDA) from the various UML models and many Software Requirement Specification (SRS) documents. Implementation of this modeling is used to develops Enterprise Resource Planning (ERP). Because ERP have a coverage of applications in large numbers and complexly relations, it is necessary to use Agile Model Driven Design (AMDD) approach as an advanced method to transforms MDA into components of application modules with efficiently and accurately. Finally, through the using of the CAF, give good achievement in fullfilment the needs from all stakeholders that are involved in the overall process stage of Rational Unified Process (RUP), and also obtaining a high satisfaction to fullfiled the functionality features of the ERP software in PT. Iglas (Persero) Gresik.},
  Art_number               = {012037},
  Author_keywords          = {Agile Model Driven Design (AMDD); Colaborated Architechture Framework (CAF); Model Driven Architechture (MDA); Unified Modelling Language (UML); Zachman Framework (ZF)},
  Document_type            = {Conference Paper},
  Doi                      = {10.1088/1757-899X/105/1/012037},
  ISSN                     = {17578981},
  Journal                  = {IOP Conference Series: Materials Science and Engineering},
  Keywords                 = {Computational linguistics; Design; Enterprise resource planning; Information systems; Modeling languages; Planning; Requirements engineering; Room and pillar mining; Software architecture; Sustainable development, Agile modeling; Architechture; Enterprise information system; Enterprise resource planning (ERP); Rational Unified Process; Software requirement specification; Unified modeling language 2.0; Zachman framework, Unified Modeling Language},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84960155269&doi=10.1088%2f1757-899X%2f105%2f1%2f012037&partnerID=40&md5=335a09673ca5fa8fbe2ec19c84ab5a16}
}

@Article{Hernández201699,
  Title                    = {Situational factors which have an impact on the successful usage of an agile methodology for software maintenance: an empirical study},
  Author                   = {Hernández, L. and Vite, N. and Alvarez, F. and García, A.-R.},
  Journal                  = {Advances in Intelligent Systems and Computing},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {99-109},
  Volume                   = {405},

  Abstract                 = {A software maintenance process implies a high difficulty degree, since it tries to keep a current version operational, concurrently with the execution of changes which once implemented must guarantee the service continuity. Therefore, the adoption of a methodology requires the accurate identification of restrictions and characteristics of software maintenance which allows anticipating risk situations and guaranteeing aim compliance. The current study examines contextual factors and its influence in a maintenance process using agile methodologies. Specifically in the maintenance of the Registry System, Assessment and on line Applicators and Auxiliaries Selection case study in the admission process to the Universidad Veracruzana. The results confirm the success of the adoption is highly associated to the identification of situational factors, to the discipline for the activity registration and control, as well as in the communication techniques and applied management. © Springer International Publishing Switzerland 2016.},
  Author_keywords          = {Agile methodology; Situational factors; Software maintenance},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-26285-7_9},
  Editor                   = {Mejia J., Munoz M., Rocha A., Calvo-Manzano J.},
  ISBN                     = {9783319262833},
  ISSN                     = {21945357},
  Keywords                 = {Application programs; Maintenance; Process engineering; Software engineering, Agile Methodologies; Communication techniques; Contextual factors; Empirical studies; Maintenance process; Service continuity; Situational factors; Software maintenance process, Computer software maintenance},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84983097812&doi=10.1007%2f978-3-319-26285-7_9&partnerID=40&md5=010697ea5981080f0ce72525132e3a43}
}

@Article{Herrmann201563,
  Title                    = {CoDEL – A relationally complete language for database evolution},
  Author                   = {Herrmann, K. and Voigt, H. and Behrend, A. and Lehner, W.},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2015},
  Note                     = {cited By 1},
  Pages                    = {63-76},
  Volume                   = {9282},

  Abstract                 = {Software developers adapt to the fast-moving nature of software systems with agile development techniques. However, database developers lack the tools and concepts to keep pace. Data, already existing in a running product, needs to be evolved accordingly, usually by manually written SQL scripts. A promising approach in database research is to use a declarative database evolution language, which couples both schema and data evolution into intuitive operations. Existing database evolution languages focus on usability but did not aim for completeness. However, this is an inevitable prerequisite for reasonable database evolution to avoid complex and error-prone workarounds. We argue that relational completeness is the feasible expressiveness for a database evolution language. Building upon an existing language, we introduce CoDEL. We define its semantic using relational algebra, propose a syntax, and show its relational completeness. © Springer International Publishing Switzerland 2015.},
  Author_keywords          = {Descriptive database evolution; Evolution language; Relational completeness},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-23135-8_5},
  Editor                   = {Bellatreche L., Morzy T., Valduriez P.},
  ISBN                     = {9783319231341},
  ISSN                     = {03029743},
  Keywords                 = {Algebra; Computational linguistics; Information systems; Semantics; Software engineering, Database research; Descriptive database evolution; Evolution language; Intuitive operations; Nature of software; Relational algebra; Relational completeness; Software developer, Database systems},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84944599941&doi=10.1007%2f978-3-319-23135-8_5&partnerID=40&md5=3cd25927f5ca3900cfaa6005b45ea5d0}
}

@Conference{Hiekata2016471,
  Title                    = {Design of software development architecture comparison of waterfall and agile using reliability growth model},
  Author                   = {Hiekata, K. and Mitsuyuki, T. and Goto, T. and Moser, B.},
  Year                     = {2016},
  Editor                   = {Verhagen W.J.C., Peruzzini M., Borsato M., Stjepandic J., Wognum N.},
  Note                     = {cited By 0},
  Pages                    = {471-480},
  Publisher                = {IOS Press BV},
  Volume                   = {4},

  Abstract                 = {This paper proposes a method for deciding whether to insert an agile process as part of a waterfall project. Recently, many software projects adopt an agile software methodology. Still, some software is developed with traditional waterfall methodologies. Agile methods claim a strength of flexibility for uncertain changes, yet in some cases the initial expected scope of the project cannot be realized or undetected errors remain because schedules are fixed and unexpected backlog of tests and bug fixes remain unaddressed. On the other hand, a waterfall methodology can include high risk of violating schedule targets, while fulfilling the initially expected scope with comprehensive tests so that more complex products are reliable. For the decision whether to develop in waterfall or agile, our approach is to evaluate the effects on uncertainties by adoption of agile techniques. We begin with focus on uncertain rework. The effects on rework are evaluated as cost using simulation. The decision making problem is modeled as a decision tree. In the simulation, a Software Reliability Growth Model is used as an error likelihood and detection model. This proposed method is demonstrated using a simple shopping web site. As a case study, the effects on rework by adoption of agile can be evaluated using the developed simulator. With comparison of predicted rework costs given a balance of waterfall or agile methods for a specific case, the project can be designed more effectively. © 2016 The authors and IOS Press.},
  Author_keywords          = {Agile; Decision Making; Project design; Simulation; Software development methodologies},
  Document_type            = {Conference Paper},
  Doi                      = {10.3233/978-1-61499-703-0-471},
  ISBN                     = {9781614997023},
  Journal                  = {Advances in Transdisciplinary Engineering},
  Keywords                 = {Computer software; Decision making; Decision trees; Software design; Software engineering, Agile; Architecture comparison; Decision-making problem; Project designs; Reliability growth model; Simulation; Software development methodologies; Software Reliability Growth Modeling, Software reliability},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84993983984&doi=10.3233%2f978-1-61499-703-0-471&partnerID=40&md5=bcd6aa4782074e966c297ab347a56229}
}

@Article{Hoda201448,
  Title                    = {Aligning technological and pedagogical considerations: Harnessing touch-technology to enhance opportunities for collaborative gameplay and reciprocal teaching in NZ early education},
  Author                   = {Hoda, R. and Henderson, A. and Lee, S. and Beha, B. and Greenwood, J.},
  Journal                  = {International Journal of Child-Computer Interaction},
  Year                     = {2014},
  Note                     = {cited By 0},
  Number                   = {1},
  Pages                    = {48-59},
  Volume                   = {2},

  Abstract                 = {New Zealand early childhood education (ECE) aims to provide a mix of teacher and child-led learning. A non-prescriptive curriculum allows for broad and rich early years teaching and learning experiences, with teachers responsive to devising engaging activities to align with children's diverse interests. However, such spontaneity presents an on-going challenge for teachers. Using a combination of Action Research, elements of User-Centered and Participatory Design, and Scrum software development approaches, we conducted a multi-disciplinary study which leveraged joint contributions of software engineers and experts, including practitioners (teachers), users (children and teachers), and domain experts (in ECE curriculum and pedagogy, and early childhood psychology). Examination of teacher-child interactions with our software demonstrated that our game was engaging, promoted collaborative gameplay (by promoting mutual awareness, opportunities for information, and equitable control) and supported reciprocal teaching (by aligning children's interests with content knowledge). Finally, it opens new avenues for introducing research and pedagogy-informed interactive educational software in the NZ ECE domain. © 2014 Elsevier B.V.},
  Document_type            = {Article},
  Doi                      = {10.1016/j.ijcci.2014.06.001},
  ISSN                     = {22128689},
  Publisher                = {Elsevier},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84925356897&doi=10.1016%2fj.ijcci.2014.06.001&partnerID=40&md5=2f7ae7f12639a3265f6a98eaee78ff6e}
}

@Book{Hodgson201555,
  Title                    = {Application of mobile data capture with imagery support},
  Author                   = {Hodgson, M.E. and Davis, B.A. and Accardo, D. and Xu, H. and Beidel, K. and Piovan, S.E.},
  Publisher                = {Springer New York},
  Year                     = {2015},
  Note                     = {cited By 0},

  Abstract                 = {Remote sensing technology and mobile devices are two data collection approaches that are proving invaluable in the disaster response phase of the hazard event. The adoption of these approaches is not universal and still faces significant challenges. The user community must understand the technology, learn how to acquire it, and be trained on its use before the disaster event. Much has been written about volunteered, unvolunteered, and crowd-sourcing of geospatial information for disaster response and recovery. While research in these areas continues, most U.S. federal and state agencies rely on authoritative data collected by authorized personnel. This research focuses on the use of geospatial technology with mobile devices by appointed users—those individuals with authorization tocollect geospatial information for a governmental agency with authority in the disaster response process. This chapter describes a project to develop a web-app that allows appointed users to collect geospatial data in the field with Google Maps and user-supplied imagery and with pre-defined and user-defined structured forms. Although the original purpose focused on disaster response and recovery activities, such as the Urban Search and Rescue (USaR) house-to-house searches, the user-groups, purposes, and technologies rapidly changed in this two year project. Technology for the web environment rapidly changes, particularly for mobile devices. Our focus on the USaR teams changed to all parishes in the state of Louisiana. This project used an agile software development approach, which permitted the evolving nature of the user requirements.Without this agile approach the user community would not have adopted the application for emergency response. © Springer Science+Business Media New York 2015. All rights reserved.},
  Author_keywords          = {Disaster response; Mobile applications; Remote sensing; Web-GIS; WebApp},
  Document_type            = {Book Chapter},
  Doi                      = {10.1007/978-1-4939-2602-2_5},
  ISBN                     = {9781493926022; 9781493926015},
  Journal                  = {Time-Sensitive Remote Sensing},
  Pages                    = {55-75},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84945430239&doi=10.1007%2f978-1-4939-2602-2_5&partnerID=40&md5=367e7477423a62d17116529a680d9648}
}

@Article{Hohl2016468,
  Title                    = {Forces that prevent agile adoption in the automotive domain},
  Author                   = {Hohl, P. and Münch, J. and Schneider, K. and Stupperich, M.},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {468-476},
  Volume                   = {10027 LNCS},

  Abstract                 = {Context: The current transformation of automotive development towards innovation, permanent learning and adapting to changes are directing various foci on the integration of agile methods. Although, there have been efforts to apply agile methods in the automotive domain for many years, a wide-spread adoption has not yet taken place. Goal: This study aims to gain a better understanding of the forces that prevent the adoption of agile methods. Method: Survey based on 16 semi-structured interviews from the automotive domain. The results are analyzed by means of thematic coding. Results: Forces that prevent agile adoption are mainly of organizational, technical and social nature and address inertia, anxiety and context factors. Key challenges in agile adoption are related to transforming organizational structures and culture, achieving faster software release cycles without loss of quality, the importance of software reuse in combination with agile practices, appropriate quality assurance measures, and the collaboration with suppliers and other disciplines such as mechanics. Conclusion: Significant challenges are imposed by specific characteristics of the automotive domain such as high quality requirements and many interfaces to surrounding rigid and inflexible processes. Several means are identified that promise to overcome these challenges. © Springer International Publishing AG 2016.},
  Author_keywords          = {Agile methods; Automotive; Software development},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-49094-6_32},
  Editor                   = {Amasaki S., Mikkonen T., Felderer M., Abrahamsson P., Duc A.N., Jedlitschka A.},
  ISBN                     = {9783319490939},
  ISSN                     = {03029743},
  Keywords                 = {Computer software reusability; Process engineering; Quality assurance; Software engineering, Agile methods; Assurance measures; Automotive; Automotive development; Automotive domains; Current transformation; Organizational structures; Semi structured interviews, Software design},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84998678841&doi=10.1007%2f978-3-319-49094-6_32&partnerID=40&md5=5abe1e39e8eb3fc71f01b85eac18e9ae}
}

@Conference{Holmes201552,
  Title                    = {Facilitating agile prototyping of cloud applications - A model-based approach},
  Author                   = {Holmes, T.},
  Year                     = {2015},
  Editor                   = {Kulkarni V., Badreddin O.},
  Note                     = {cited By 0},
  Pages                    = {52-55},
  Publisher                = {CEUR-WS},
  Volume                   = {1554},

  Abstract                 = {Modern cloud applications, generally, demand complex service topologies, e.g., for meeting scalability, maintenance, or security requirements. Thus, often, it is desirable to increase the complexity of service topologies in cloud applications. The required changes, however, may constitute a burden for improving cloud applications. Changes, overall, are undertaken frequently in prototyping or when adopting agile development. Their costs correlate with the number of people involved. For facilitating agile prototyping of cloud applications this demonstration presents a model-based approach incorporating different roles. Using, integrating with, and building on top of open-source projects, it comprises domain-specific language editors and showcases their use and the realized automation fostering iterative development. © Copyright 2015 for the individual papers by the papers' authors.},
  Author_keywords          = {Agile; Application; Automation; Cloud; DSL; Model-based; Prototyping; Provisioning; Service topology},
  Document_type            = {Conference Paper},
  ISSN                     = {16130073},
  Journal                  = {CEUR Workshop Proceedings},
  Keywords                 = {Applications; Automation; Clouds; Computational linguistics; Computer programming languages; DSL; Problem oriented languages; Software prototyping, Agile; Domain specific languages; Iterative development; Model-based OPC; Open source projects; Provisioning; Security requirements; Service topology, Topology},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84963670602&partnerID=40&md5=15d2303dbce724711629d166d06a882b}
}

@Conference{Holzmann201367,
  Title                    = {Communications management in scrum projects},
  Author                   = {Holzmann, V. and Panizel, I.},
  Year                     = {2013},
  Note                     = {cited By 5},
  Pages                    = {67-74},

  Abstract                 = {The last decade is characterized, in many IT companies, by changing the system development life cycle methodology from the classical waterfall or prototype methods to the agile methodology of development. The agile methodology, developed in the beginning of 2000's, encourages the development of working software within a defined framework, while accepting changes and keeping the customer involved during the whole project. The present paper examines the relationship between the project management-customer's communication and the project success. The agile software development methodology was introduced in February 2001, when the Agile Manifesto was conceived, based on four values: (1) Individuals and interactions over processes and tools; (2) Working software over comprehensive documentation; (3) Customer collaboration over contract negotiation; and (4) Responding to change over following a plan. The scrum model for developing software applies the agile values and methodology while presenting a framework, terminology, roles and ceremonies to perform successful projects. The core roles include the development team, the scrum master, and the product owner who represents the customer and the users. Effective communication with the various stakeholders in a scrum project, aimed to develop a new product or software, is essential. The scrum method defines a series of sprints, of two to four weeks, in which the team performs the tasks to be completed. The current paper presents a quantitative research, where 61 managers and customers of IT scrum projects, answered a reliable questionnaire. The study investigated the perceived success of agile projects as measured by meeting schedule, budget and performance requirements, as well as customer satisfaction and long term achievements such as business objectives and development of core competencies. Findings reveal that effective communication is a dominant factor in a success scrum project. Furthermore, the communications with the customer was characterized by the following items: face-to-face conversations, telephone and email correspondences, and accepting changes following conversations with the customer. Analysis of the virtual communication tools effectiveness shows that although the project team members are satisfied with the use of these communication media tools, the tools are usually not evaluated on an economical basis but rather based on a convenience of use. The study highlights the importance of communications management in IT project management as applied these days. Professionals and project managers should be aware to the impact of effective communications on the project success and to be able to identify the weak areas in their arena of communications.},
  Author_keywords          = {Agile; Communications management; Project management; Project success; Scrum},
  Document_type            = {Conference Paper},
  ISBN                     = {9781629931388},
  Journal                  = {7th European Conference on Information Management and Evaluation, ECIME 2013},
  Keywords                 = {Agile; Agile software development; Comprehensive documentation; Face-to-face conversation; Performance requirements; Project success; Scrum; System development life cycles, Communication; Customer satisfaction; Information management; Managers; Sales; Software engineering; Tools, Project management},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893528256&partnerID=40&md5=4836375b1917112eb229fe1ba976c7f4}
}

@Book{Homès2013,
  Title                    = {Fundamentals of Software Testing},
  Author                   = {Homès, B.},
  Publisher                = {John Wiley and Sons},
  Year                     = {2013},
  Note                     = {cited By 2},

  Abstract                 = {The testing market is growing at a fast pace and ISTQB certifications are being increasingly requested, with more than 180,000 persons currently certified throughout the world. The ISTQB Foundations level syllabus was updated in 2011, and this book provides detailed course study material including a glossary and sample questions to help adequately prepare for the certification exam. The fundamental aspects of testing are approached, as is testing in the lifecycles from Waterfall to Agile and iterative lifecycles. Static testing, such as reviews and static analysis, and their benefits are examined as well as techniques such as Equivalence Partitioning, Boundary Value Analysis, Decision Table Testing, State Transitions and use cases, along with selected white box testing techniques. Test management, test progress monitoring, risk analysis and incident management are covered, as are the methods for successfully introducing tools in an organization. Contents Fundamentals of Testing. Testing Throughout the Software Life Cycle. Static Techniques (FL 3.0). Test Design Techniques (FL 4.0). Test Management (FL 5.0). Tools support for Testing (FL 6.0). Mock Exam. Templates and Models. Answers to the Questions. © ISTE Ltd 2012.},
  Document_type            = {Book},
  Doi                      = {10.1002/9781118602270},
  ISBN                     = {9781848213241},
  Journal                  = {Fundamentals of Software Testing},
  Page_count               = {342},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84891583505&doi=10.1002%2f9781118602270&partnerID=40&md5=3a2854ac2a070bfaca6cab9abe120ec3}
}

@Conference{Hornig2016,
  Title                    = {New space operations in the Internet of Things ERA - Anywhere, anytime, anything!},
  Author                   = {Hornig, A. and Fritsch, D.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Publisher                = {International Astronautical Federation, IAF},

  Abstract                 = {The vision of the Internet of Things (IoT) has evolved. Multiple technologies converged due to improvements in micro systems, wirelesse communications, sensoring and breakthroughs in software development, and all of them are enabling the Internet of Things. Networks of smart devices are implemented into people's houses and at work. The results of permanent environmental and social monitoring are already taking influences into the daily lifes. The experiences of using smart networks can also be applied on space operations. This paper describes the adaptions on basis of a flexible and agile space segment like small satellites with respect to the ground segment. It is shown in particular with a focus of the Distributed Ground Station Network (DGSN) for tracking of and communication with small satellites and cubesats. The DGSN uses a grid of ground stations with a multitude of internet connected nodes. It is based on software defined radio (SDR) to provide not only flexibility in servicing several satellites in several fequency bands, but also to be able to be used in sensoring the environmental natural and artifical electro-magnetic transmissions in the spectrum. For achieving this, the approach of combining a well known space operation ground system together with a global deployment of small and cheap ground station design uncovers the need of adopting new strategies and techniques. The paper shows aspects such as the reliability of such a network, what the level of trust amoung all peers can be, the current regulations of the International Telecommunications Union and possible cybersecurity challenges of a wide and open grid. The DGSN was started as part of the Small Satellite Design studies at the Institute of Space Systems (IRS) at the University of Stuttgart in 2012. It took part in the Google and ESA Summer of Code campaigns in 2013-2015 as well as the NASA Space Applications Challenge, where the open-source nature of the network was developed to include and foster the community in being involved right from the start. The DGSN is now a doctoral dissertation research at the Institute for Photogrammetry (IFP) at the University of Stuttgart. DGSN is currently in field testing of the prototype ground stations during which the challenges and opportunities of the IoT behaviour are studied. The results and further derivates will be presented in this paper. Copyright 2016 by Mr. Andreas Hornig.},
  Document_type            = {Conference Paper},
  ISSN                     = {00741795},
  Journal                  = {Proceedings of the International Astronautical Congress, IAC},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85016518297&partnerID=40&md5=84f51a509e5f0dc0580646f86d4dbaaa}
}

@Conference{Hua2015241,
  Title                    = {Building fuel powered supercomputing data center at low cost},
  Author                   = {Hua, Y. and Li, C. and Tang, W. and Jiang, L. and Liang, X.},
  Year                     = {2015},
  Note                     = {cited By 2},
  Pages                    = {241-250},
  Publisher                = {Association for Computing Machinery},
  Volume                   = {2015-June},

  Abstract                 = {Distributed power generations that fed with various economical clean fuels are emerging as promising power supplies for extremescale computing systems. Recent years have witnessed a growing adoption of these non-conventional power supplies in data center designs due to the heightening demand for reducing IT carbon footprint and server energy cost. However, the benefits of such a fuel powered data center are often severely compromised by its high initial capital cost (CapEx). This is because most pilot designs today either rely on expensive advanced generators or employ low-performance generators with costly standby power backup. In this study we exploit heterogeneous generation to reduce the cost of data center powered by fuel. We show that different types of power supplies, if used together, can greatly improve the costeffectiveness of self-generation but introduce a new layer of design complexity and raise an important question of how to dispatch computing tasks on heterogeneous power supplies. Specifically, due to the non-ideal output power response speed of heterogeneous generators, servers may incur serious power budget deficiencies when dispatching large amount of jobs. We refer to this phenomenon as power lagging, which jeopardizes system reliability and are not economical to be handled by costly power backup systems. To overcome this barrier, we propose μBatch, an agile load dispatching scheme that eliminate power lagging at the system/software level. Other than dispatch computing tasks in bulk without considering power system behaviors, μBatch intelligently splits job queue into small sets and incrementally schedule jobs based on the power ramping rate constraints and total power budget constraints. Using realistic HPC datacenter load traces, we demonstrate that μBatch enables supercomputers to smoothly operate on heterogeneous power. Our design helps data center operators save over 80% cost while maintaining the desired workload performance. © Copyright 2015 ACM.},
  Author_keywords          = {Cost; Data center; Dispatching; Fuel; Hybrid generation},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2751205.2751215},
  ISBN                     = {9781450335591},
  Journal                  = {Proceedings of the International Conference on Supercomputing},
  Keywords                 = {Budget control; Carbon; Carbon footprint; Cost reduction; Costs; Design; Distributed computer systems; Fueling; Fuels; Intelligent control; Supercomputers, Computing system; Conventional power; Data centers; Design complexity; Dispatching; Hybrid generation; System behaviors; System reliability, Electric load dispatching},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84957573576&doi=10.1145%2f2751205.2751215&partnerID=40&md5=8499b61221faf1d93d1ece0ea9d3acea}
}

@Conference{Huang2015145,
  Title                    = {Efficient broadcast on fragmented spectrum in cognitive radio networks},
  Author                   = {Huang, P. and Liu, C.-J. and Yang, X. and Xiao, L.},
  Year                     = {2015},
  Note                     = {cited By 2},
  Pages                    = {145-153},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},
  Volume                   = {26},

  Abstract                 = {To improve spectrum utilization, cognitive radio (CR) is introduced to detect and exploit available spectrum resources autonomously. The flexible spectrum use imposes special challenges on broadcast because different CR devices may detect different available spectrum fragments at different locations. The sender and the receivers have to agree on spectrum fragments that will be used for broadcast. There may not exist a common spectrum fragment that is available to all receivers. Most existing work assumes that a device works only in a single channel and thus the sender has to broadcast multiple times in different channels to reach all receivers. The broadcast problem is studied as a channel rendezvous and minimum latency scheduling problem. Recent spectrum-agile designs have enabled a device to utilize partially occupied spectrum. We thus view a wideband channel as an aggregation of multiple narrow channels that can be evaluated independently. A Spectrum Fragment Agile Broadcast (SFAB) scheme is introduced in this paper to support efficient broadcast on fragmented spectrum. It aims at achieving spectrum agreement between the transmitter and the receivers efficiently and maximizing the channel width used for broadcast regardless of the spectrum availability differences at receivers. We validate the effectiveness of SFAB through implementation on the GNU Radio / USRP platform and use ns-2 simulations to evaluate the performance in large deployments. © 2015 IEEE.},
  Art_number               = {7218377},
  Coden                    = {PINFE},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/INFOCOM.2015.7218377},
  ISBN                     = {9781479983810},
  ISSN                     = {0743166X},
  Journal                  = {Proceedings - IEEE INFOCOM},
  Keywords                 = {Open source software; Radio broadcasting; Radio communication; Radio systems; Signal receivers, Broadcast problem; Cognitive radio network; NS-2 simulations; Scheduling problem; Spectrum availability; Spectrum fragments; Spectrum utilization; Wideband channel, Cognitive radio},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84954472341&doi=10.1109%2fINFOCOM.2015.7218377&partnerID=40&md5=f5af4ba529bf2d375f6b5c51b8be9482}
}

@Article{Huang2015801,
  Title                    = {Design of control software based on Petri net for high precision ICT},
  Author                   = {Huang, Y.-B. and Zhang, Y.-M. and Qiu, W.-D.},
  Journal                  = {Hedianzixue Yu Tance Jishu/Nuclear Electronics and Detection Technology},
  Year                     = {2015},
  Note                     = {cited By 0},
  Number                   = {8},
  Pages                    = {801-804},
  Volume                   = {35},

  Abstract                 = {Based on waterfall model, this paper introduces a approach to design a control software architecture for high precision industrial CT according to its control hardware and function requirements. During the design of inspection process control, Petri net based calling model and control logic model are established. The control software uses graphic programming language LabVIEW to program, and all the required functions are realized in the software. It is proved that the stability and the reliability of the control software meet the requirements of the high precision industrial CT. © 2015, Editorial Board of Nuclear Electronics & Detection Tech. All right reserved.},
  Author_keywords          = {Control software; Industrial CT; LabVIEW; Petri net},
  Coden                    = {HDYUE},
  Document_type            = {Article},
  ISSN                     = {02580934},
  Publisher                = {Atomic Energy Press},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84962050502&partnerID=40&md5=a0f95b18d522cbcfb5df0c231b78ff93}
}

@Article{Huber201449,
  Title                    = {How collaboration software enables globally distributed software development teams to become agile - an effective use perspective},
  Author                   = {Huber, T. and Dibbern, J.},
  Journal                  = {Lecture Notes in Business Information Processing},
  Year                     = {2014},
  Note                     = {cited By 0},
  Pages                    = {49-63},
  Volume                   = {195},

  Abstract                 = {Offshored, distributed teams increasingly use agile software development methodologies. Since agile software development practices were originally developed for co-located teams, distributed teams are required to use tools in order to achieve agility. This study is the first to adopt the lens of effective use theory in order to explore the role of tools in achieving agility, and other favorable project outcomes despite geographic distribution. First, we present Effective Use Theory and contextualize it for outsourced, agile software development projects. After this contextualization of Effective Use Theory, we present our exploratory, longitudinal case study and the four data sources we will use as a basis for our empirical investigation. Then, we develop measures that will enable us to study effective use behaviors empirically for the first time. The paper ends with expected results and implications for literature on IS outsourcing, agile software development, tool use literature, and for managerial practice. © Springer International Publishing Switzerland 2014.},
  Author_keywords          = {Agile software development; Agility; Effective use; IS outsourcing; Scrum; Tool use},
  Document_type            = {Article},
  Doi                      = {10.1007/978-3-319-11367-8_4},
  ISSN                     = {18651348},
  Keywords                 = {Geographical distribution; Outsourcing; Project management; Software design, Agile software development; Agility; Effective use; Is outsourcings; Scrum; Tool use, Software engineering},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84921985075&doi=10.1007%2f978-3-319-11367-8_4&partnerID=40&md5=d98ba9606198780c86bbd06aa8e967ef}
}

@Conference{Hui2015472,
  Title                    = {Compare Essential Unified Process (EssUP) with Rational Unified Process (RUP)},
  Author                   = {Hui, Y. and Yan, Y. and Quanyu, W. and Zhiwen, C.},
  Year                     = {2015},
  Note                     = {cited By 0},
  Pages                    = {472-476},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Essential Unified Process (EssUP) is a new software development process invented by Ivar Jacobson around 2006. It is based on Rational Unified Process (RUP) and takes Agile development philosophy into account. RUP was proposed by IBM Rational and now it is implemented as part of the IBM Rational tools. It is well known that EssUP is practice separation and lightweight and UP is an integrated and heavyweight process. In this paper, we introduce and characterize EssUP by systematically comparing it with traditional RUP from different aspects such as separation of concerns, flexibility, presentation, and tailorable. Comparison results show that EssUP is very flexible to be adopted, adapted, and configured. In other words, there is no actual process for EssUP and EssUP is just composed of a set of selected practices. Moreover, to successfully apply EssUP requires experiences and expertise. The contribution of the paper is that we provide readers a comprehensive and insight view of EssUP by thoroughly comparing it with commonly-used RUP. © 2015 IEEE.},
  Art_number               = {7334159},
  Author_keywords          = {Essential Unified Process (EssUP); IBM Rational Unified Process; Software Development Process},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICIEA.2015.7334159},
  ISBN                     = {9781467373173},
  Journal                  = {Proceedings of the 2015 10th IEEE Conference on Industrial Electronics and Applications, ICIEA 2015},
  Keywords                 = {Industrial electronics; Software engineering, Agile development; Comparison result; IS practices; Rational Unified Process; Separation of concerns; Software development process; Unified process, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84960896138&doi=10.1109%2fICIEA.2015.7334159&partnerID=40&md5=968777b895f5fa0268162255ea46b19a}
}

@Conference{Huijgens2013137,
  Title                    = {Measuring best-in-class software releases},
  Author                   = {Huijgens, H. and Van Solingen, R.},
  Year                     = {2013},
  Note                     = {cited By 3},
  Pages                    = {137-146},
  Publisher                = {IEEE Computer Society},

  Abstract                 = {In this research we aimed to identify distinguishing factors in software releases. For this purpose we analyzed the metrics of 26 software projects. These projects were releasebased deliveries from two stable, experienced development teams. During the measurement period both teams transformed from a plan-driven delivery model (waterfall) to an agile approach (Scrum). Overall, we observed that these small release-based projects differ largely from non-release-based projects. Our research indicates that a combination of release-based working, a fixed and experienced development team, and a steady heartbeat contribute to performances that can be characterized as bestpractice. The main contribution of this paper is that we found five success factors (all reducing development complexity) that result in best-of-class performance for small software releases. © 2013 IEEE.},
  Art_number               = {6693233},
  Author_keywords          = {IT-metrics; Performance measurement; Productivity; Quality; Scrum; Software engineering; Time-to-market},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/IWSM-Mensura.2013.29},
  ISBN                     = {9780769550787},
  Journal                  = {Proceedings - Joint Conference of the 23rd International Workshop on Software Measurement and the 8th International Conference on Software Process and Product Measurement, IWSM-MENSURA 2013},
  Keywords                 = {Image quality; Measurements; Productivity, Agile approaches; Development teams; IT-metrics; Performance measurements; Scrum; Software project; Software release; Time-to-market, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893557931&doi=10.1109%2fIWSM-Mensura.2013.29&partnerID=40&md5=e00a7241db466dce61efa0bf46d4881d}
}

@Article{Hunt201313,
  Title                    = {Uncomfortable with agile},
  Author                   = {Hunt, A.},
  Journal                  = {CrossTalk},
  Year                     = {2013},
  Note                     = {cited By 0},
  Number                   = {3},
  Pages                    = {13-16},
  Volume                   = {26},

  Abstract                 = {The original intent behind the agile software development movement and its goals have become diluted over the past decade, with many teams simply doing selected agile practices instead of becoming agile practitioners. Many adopters and their organizations now claim to be comfortable with the idea of agile software development and their own use of it, which is probably an indication that they are doing it wrong.},
  Document_type            = {Article},
  Keywords                 = {Agile practices; Agile software development, Crosstalk; Human computer interaction; Software engineering, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84880914871&partnerID=40&md5=00a86f7ce5503840bdb12d4e727fb7f3}
}

@Article{Inayat2015915,
  Title                    = {A systematic literature review on agile requirements engineering practices and challenges},
  Author                   = {Inayat, I. and Salim, S.S. and Marczak, S. and Daneva, M. and Shamshirband, S.},
  Journal                  = {Computers in Human Behavior},
  Year                     = {2015},
  Note                     = {cited By 17},
  Pages                    = {915-929},
  Volume                   = {51},

  Abstract                 = {Unlike traditional software development methods, agile methods are marked by extensive collaboration, i.e. face-to-face communication. Although claimed to be beneficial, the software development community as a whole is still unfamiliar with the role of the requirements engineering practices in agile methods. The term "agile requirements engineering" is used to define the "agile way" of planning, executing and reasoning about requirements engineering activities. Moreover, not much is known about the challenges posed by collaboration-oriented agile way of dealing with requirements engineering activities. Our goal is to map the evidence available about requirements engineering practices adopted and challenges faced by agile teams in order to understand how traditional requirements engineering issues are resolved using agile requirements engineering. We conducted a systematic review of literature published between 2002 and June 2013 and identified 21 papers, that discuss agile requirements engineering. We formulated and applied specific inclusion and exclusion criteria in two distinct rounds to determine the most relevant studies for our research goal. The review identified 17 practices of agile requirements engineering, five challenges traceable to traditional requirements engineering that were overcome by agile requirements engineering, and eight challenges posed by the practice of agile requirements engineering. However, our findings suggest that agile requirements engineering as a research context needs additional attention and more empirical results are required to better understand the impact of agile requirements engineering practices e.g. dealing with non-functional requirements and self-organising teams. © 2014 Elsevier Ltd. All rights reserved.},
  Author_keywords          = {Agile requirements engineering; Agile software development methods; Collaboration; Systematic review; Traditional requirements engineering},
  Coden                    = {CHBEE},
  Document_type            = {Review},
  Doi                      = {10.1016/j.chb.2014.10.046},
  ISSN                     = {07475632},
  Keywords                 = {Requirements engineering; Software design, Agile software development; Collaboration; Face-to-face communications; Inclusion and exclusions; Non-functional requirements; Software development methods; Systematic literature review; Systematic Review, Software engineering, attention; computer program; human; literature; systematic review},
  Publisher                = {Elsevier Ltd},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84967020007&doi=10.1016%2fj.chb.2014.10.046&partnerID=40&md5=3b674410449ba21545ae191545c5a402}
}

@Conference{Incze2015,
  Title                    = {Communication and collaboration of heterogeneous unmanned systems using the joint architecture for Unmanned Systems (JAUS) standards},
  Author                   = {Incze, M.L. and Sideleau, S.R. and Gagner, C. and Pippin, C.A.},
  Year                     = {2015},
  Note                     = {cited By 1},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {The Naval Undersea Warfare Center Division Newport (NUWCDIVNPT) and Georgia Tech Research Institute (GTRI) completed a successful at-sea exercise with autonomous UAS and UUV systems demonstrating cross-domain unmanned system communication and collaboration. The exercise was held at the NUWC Narragansett Bay Shallow Water Test Facility (NBSWTF) range, and it represented for the first time the use of standard protocols and formats that effectively support cross-domain unmanned system operations. Four man-portable Iver2 UUVs operating in coordinated missions autonomously collected environmental data, which was compressed in-stride, re-formatted, and exfiltrated via UAS relay for display and tactical decision making. Two UAS with autonomous flight take-off and mission execution were sequenced to serve as ISR platforms and to support communications as RF relays for the UUVs performing Intelligence Preparation of the Environment missions. Two Command and Control nodes ashore provided unmanned system tasking and re-tasking, and they served to host and display both geo-positional data and status for UAS and UUV vehicles during the operational scenarios run during the exercise. The SAE Joint Architecture for Unmanned Systems (JAUS) standards were used for all message traffic between shore-based C2 nodes, UAS, and UUVs active in the NBSWTF exercise area. Exercise goals focused on CNO priorities expressed in the Undersea Domain Operating Concept of AUG 2013 which emphasized protocols essential to effective command and control of networked unmanned systems with decentralization and flexibility of command structures. Development for this project highlighted both the strengths and shortfalls of JAUS and captured the requirements for moving forward in effective cross-domain communications that support distributed, agile C2 nodes to meet evolving CONOPS for growing unmanned system presence and mission roles. The scenario employed operating parameters for UAS and UUV that have been established in real-world operations and ongoing unmanned system programs. The tactical information from unmanned systems was displayed in real-time on shore-based C2 displays: the tactical FalconView display and the developmental TOPSIDE command and control station. This work represents a critical step in communications for networking of heterogeneous unmanned systems and establishes a solid platform for alignment of development and ongoing programs. The evaluation of JAUS suitability for near-term operational applications provides significant value as Concepts of Operation that rely on netted heterogeneous systems are being targeted. The focus on affordable commercial unmanned systems for this experimentation establishes the value of highly capable, portable systems to provide economical development and test opportunities with low-cost and low-risk alternatives to many planned and fielded systems. The JAUS architecture was introduced to the NUWC and GTRI unmanned systems though an instantiation of the Mission Oriented Operating Suite (MOOS) autonomy framework on secondary CPUs integrated into the Iver2 UUVs and the GTRI UAS. Since the GTRI UASs already had ROS installed, a MOOS-ROS bridge was employed to support use of the developed JAUS messaging capability. Established JAUS services were employed where the required functions could be met. New JAUS services were developed to meet functionality required for the operational scenarios in this exercise but not yet supported in the existing releases of SAE JAUS. Independent C++ header libraries that could be compiled at run time for specific autonomy frameworks, such as MOOS, were employed to support a software-agnostic approach. Immediate targets for broadening the influence of this work to coalition partners include the NATO Recognized Environmental Picture (REP) 2015 and The Technical Cooperation Program (TTCP) 2015 exercises. This project and demonstration was funded under a NUWC Strategic Initiative and GTRI program support. © 2015 IEEE.},
  Art_number               = {7271613},
  Author_keywords          = {autonomous vehicles; command and control systems; communication protocols; data transmission; environmental characterization},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/OCEANS-Genova.2015.7271613},
  ISBN                     = {9781479987368},
  Journal                  = {MTS/IEEE OCEANS 2015 - Genova: Discovering Sustainable Ocean Energy for a New World},
  Keywords                 = {C++ (programming language); Computer software; Control theory; Data communication systems; Decision making; Flight control systems; Military applications; Naval warfare; Network protocols; Networked control systems; Program processors; Real time systems; Unmanned aerial vehicles (UAV); Vehicle transmissions, Autonomous Vehicles; Communication and collaborations; Cross-domain communication; Environmental characterization; Joint architecture for unmanned systems; Operational applications; Tactical decision makings; Technical cooperation programs, Command and control systems},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84957613628&doi=10.1109%2fOCEANS-Genova.2015.7271613&partnerID=40&md5=72b8ea4f6de36241f94fe44bf2bb1ccd}
}

@Conference{Iskandar2014,
  Title                    = {Android based binus profile applications as the marketing tools of Bina Nusantara University},
  Author                   = {Iskandar, K.},
  Year                     = {2014},
  Note                     = {cited By 0},
  Publisher                = {EDP Sciences},
  Volume                   = {68},

  Abstract                 = {Smart phones with apps in it is not a new phenomenon. Both of technologies have been fused with the lifestyle today. The ease and speed of access to information makes a lot of companies use it in the process of marketing a product to the public. Objective of this action is to win the competition that more competitive. The purpose of this research is to create mobile application android based to assist in the marketing and introduction Bina Nusantara University profile to prospective students. This research method using software engineering waterfall model to produce Android-based mobile applications. The results in the form of Android-based mobile application that can be used as a viral marketing tool for Bina Nusantara University. At the end of this study can be generated that mobile technology can be used as a media for effective marketing and branding, especially for Bina Nusantara University. Android technology based for marketing applications suited to the Bina Nusantara University applicant segment which are generally young people. The future along with the improvement of network quality and affordable cost, then the application can be made online, so features such as chat, maps, and other can be used optimally. © Owned by the authors, published by EDP Sciences, 2014.},
  Art_number               = {00007},
  Document_type            = {Conference Paper},
  Doi                      = {10.1051/epjconf/20146800007},
  ISSN                     = {21016275},
  Journal                  = {EPJ Web of Conferences},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84901393580&doi=10.1051%2fepjconf%2f20146800007&partnerID=40&md5=272fafefe2a0f919ccbeeba46c42de21}
}

@Conference{Islam201358,
  Title                    = {Cloud: The global transformation},
  Author                   = {Islam, A. and Irfan, M. and Mohiuddin, K. and Al-Kabashi, H.},
  Year                     = {2013},
  Note                     = {cited By 0},
  Pages                    = {58-62},

  Abstract                 = {In the world of today, Information Technology is changing and evolving continuously for driving business and personal needs. with the emerging interest in cloud computing, more and more business or individuals are looking not only migrate them but also to transform services and applications for resource rich competencies; are provided through cloud platforms; develop the new business era that facilitates by cloud transformation. Transformation can be referred to as a phenomenon, a process, a state or a concept. It represents the technological transformation in the dynamic process and the world is changing, adapting to external or internal forces. Organizations have been made investing their capital in developing IT infrastructure; further on maintenance, upgradations of hardware, software and to improve their services. Cloud based transformation is an approach for creating new service-centric technology, cost-effective, agile and flexible. IT service model by switching from company-owned IT infrastructure and services to pay-per use business model. It leverages the latest trends in cloud computing technology and next generation SaaS, IaaS, PaaS models. This approach will help to achieve desired business agility and guarantee quality-of-services through emerging Global Cloud Transformation System (GCTS). We will illustrate the costbenefit analysis of lean IT transformation approach in enterprise collaboration scenario to Cloud Global Transformation (CGT). © 2013 IEEE.},
  Art_number               = {6701476},
  Author_keywords          = {Cloud; Cloud services; Cost benefit analysis; Global cloud transformation system; Global transformation},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/CUBE.2013.21},
  ISBN                     = {9781479922345},
  Journal                  = {Proceedings - 2013 International Conference on Cloud and Ubiquitous Computing and Emerging Technologies, CUBE 2013},
  Keywords                 = {Cloud computing technologies; Cloud services; Cloud transformations; Enterprise collaboration; Global clouds; Global transformation; IT infrastructures; Services and applications, Cloud computing; Clouds; Cost benefit analysis; Industry; Ubiquitous computing, Information technology},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893677412&doi=10.1109%2fCUBE.2013.21&partnerID=40&md5=4bd94fea111372947566eb4faaa8f20d}
}

@Conference{Isong2016264,
  Title                    = {On the integration of agile practices into teaching: An approach to overcoming teaching and learning challenges of programming},
  Author                   = {Isong, B. and Ifeoma, O. and Gasela, N.},
  Year                     = {2016},
  Editor                   = {Tran Q.-N., Deligiannidis L., Arabnia H.R.},
  Note                     = {cited By 1},
  Pages                    = {264-270},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {In Computer Science Education, teaching of computer programming (CP) for beginners remains one of the greatest challenges. This is due to the nature of first year students characterized by under-preparedness, poor academic background and so on. Moreover, the traditional lecture-based approach is used and the computer laboratories are rarely used. Consequently, students are not motivated, engaged or no active participation. While this teaching approach has failed to achieve learning outcome, incorporating cutting-edge practices like agile methods into the teaching could be valuable. This stems from the widespread in practice and acceptance of agile methods in the software industries today. Though agile practices like pair programming have impacted students' programming projects, none has been reported on teaching. Therefore, this paper proposes a new approach of teaching CP using the agile methods. The goal is to assist beginners acquire needed programming skills, proffer teaching technique that maximizes the chances of engagement, active participation, and improving teaching by reflecting on what has been taught and what the students are learning. Additionally, beginners will be able to operate the computer, write correct code, gain better programming skills and assist teachers to manage large classes effectively. To achieve this, the study adopted the framework for decoding the discipline. © 2015 IEEE.},
  Art_number               = {7424100},
  Author_keywords          = {Agile process; Computer programming; Learning; Teaching; Undergraduate students},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/CSCI.2015.153},
  ISBN                     = {9781467397957},
  Journal                  = {Proceedings - 2015 International Conference on Computational Science and Computational Intelligence, CSCI 2015},
  Keywords                 = {Artificial intelligence; Education; Education computing; Students; Teaching, Agile process; Computer laboratory; Computer Science Education; Learning; Programming projects; Teaching and learning; Teaching techniques; Undergraduate students, Computer programming},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84964454346&doi=10.1109%2fCSCI.2015.153&partnerID=40&md5=62d6568005294ff553c68531fde8a503}
}

@Article{Iyawa2016,
  Title                    = {Customer interaction in software development: A comparison of software methodologies deployed in Namibian software firms},
  Author                   = {Iyawa, G.E. and Herselman, M.E. and Coleman, A.},
  Journal                  = {Electronic Journal of Information Systems in Developing Countries},
  Year                     = {2016},
  Note                     = {cited By 0},
  Number                   = {1},
  Volume                   = {77},

  Abstract                 = {Software methodologies provide guidelines for the development of software applications. Studies reveal that customer interaction in the software development process improves the chances that software applications will meet customers' needs. Despite a number of software methodologies introduced and a comparison of these methodologies, there is a dearth of studies that empirically investigate customer interaction between these software methodologies within the Namibian context. The purpose of this study was to examine the differences in customer interaction between software methodologies deployed in Namibian software firms. The study adopted a qualitative, case study approach. Data was collected through standardized, open-ended interviews. The findings show that the methodologies deployed in Namibian software firms include the waterfall model, Scrum, iterative model, eXtreme Programming (XP), and rapid application development (RAD). The findings also reveal that although there was in-depth customer interaction in Scrum, the iterative model, XP and RAD, customer interaction in the software development process could also be challenging. The findings provide useful insights in software methodologies deployed in Namibian software firms and the experience within the Namibian context. An implication for software project managers and software developers is that customer interaction should be properly managed to ensure that the software methodologies for improving software development processes are effectively deployed.},
  Art_number               = {1},
  Author_keywords          = {EXtreme Programming; Iterative model; Namibia; Rapid application development; Scrum; Waterfall model},
  Document_type            = {Article},
  ISSN                     = {16814835},
  Publisher                = {City University of Hong Kong Press},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85010612345&partnerID=40&md5=c61aa1532c9d98648311fd53ff2c83b5}
}

@Article{Jamro201491,
  Title                    = {Development and execution of POU-oriented performance tests for IEC 61131-3 control software},
  Author                   = {Jamro, M.},
  Journal                  = {Advances in Intelligent Systems and Computing},
  Year                     = {2014},
  Note                     = {cited By 3},
  Pages                    = {91-101},
  Volume                   = {267},

  Abstract                 = {Due to performing complex and crucial tasks in industry, the control software should be created in a way ensuring possibly the highest quality. It can be increased by modeling, standardized implementation, and precise testing. The latter should verify not only functional requirements, but also nonfunctional, such as performance. In the paper, a concept of agile POU-oriented performance testing is proposed, which is dedicated to the IEC 61131-3 standard. The approach allows to measure and analyze execution times of particular Program Organization Units. The concept supports multiple target platforms and allows to take performance into account during early development stages, as well as to perform regression testing. The proposed process consists of a few stages, namely modeling (using SysML diagrams), implementation (in a dedicated test definition language), and execution (by a dedicated testing framework). The approach has been introduced into the CPDev engineering environment for programming industrial controllers. © Springer International Publishing Switzerland 2014.},
  Author_keywords          = {Control software; IEC 61131-3; Performance; Testing},
  Document_type            = {Article},
  Doi                      = {10.1007/978-3-319-05353-0_10},
  ISSN                     = {21945357},
  Keywords                 = {Quality control; Testing, Control software; Engineering environment; Functional requirement; IEC61131-3; Industrial controllers; Performance; Performance testing; Program organization units, Software testing},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84911917398&doi=10.1007%2f978-3-319-05353-0_10&partnerID=40&md5=c23a04b3e0942f52a7155cd1f1fc8475}
}

@Article{Janakova2014177,
  Title                    = {Software development with regards to simulations: Are interaction features needed for a better description of actual reality?},
  Author                   = {Janakova, M.},
  Journal                  = {WSEAS Transactions on Information Science and Applications},
  Year                     = {2014},
  Note                     = {cited By 1},
  Number                   = {1},
  Pages                    = {177-185},
  Volume                   = {11},

  Abstract                 = {This paper is centered on the optimal description of an actual reality for better support needed processes based on simulations. Data processing was, is and will be at the center of interest of all firms, organizations and individuals. The reasons are natural. There is an enormous amount of information, and orientation is very difficult with regards to data volume, variety and velocity. The selection of the correct way for optimal computational processing has a number of forms via preferences by actual conditions and IT user preferences. The better solutions are designed with support in cooperation with the global environment. The new approaches and ideas are often linked to innovations based on inspiration from swarm intelligence, trust in an agile method, or graphic support within the simulation. All such approaches help in software development and optimal implementation through settings and configuration, but many IT users have doubts about their real benefits in practice. They have problems with complexity, orientation, offered services, or timelines of obtained results and analyses. Based on this reality, there is a question about a better method for simulation design for optimal software development with regards to actual reality. These simulations are successfully used in software specification through needed objects. Standard objects are used for the description of the adopted resolution based on object features such as Name, Size, and Capacity. For actual reality description, there are other features needed with links on current context. Inspiration of this idea is based on pheromones from swarm intelligence like a point of interaction. These additional object features are oriented on practical preferences such as standard professional matter, cooperation, presentation, management, analytical matter, creativity, multicultural needs, services, and contact with the customer. Practical preferences then define the total priority of an object in a simulation. The benefit of the total priority of an object is a better relation to actual reality, and an optimal description of existing needs by preferences in a dynamic society. This approach offers a better way of software development like operating and database systems, or BI (Business Intelligence) and CRM (Customer Relationship Management) products.},
  Author_keywords          = {Global changes; Object features; Software development; Swarm intelligence},
  Document_type            = {Article},
  ISSN                     = {17900832},
  Keywords                 = {Artificial intelligence; Computer software; Data handling; Database systems; Management science; Public relations; Software engineering, Amount of information; Computational processing; Customer relationship management; Global change; Interaction features; Object features; Software Specification; Swarm Intelligence, Software design},
  Publisher                = {World Scientific and Engineering Academy and Society},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84912573742&partnerID=40&md5=066105ab22175bceeb668d5197a2dbf8}
}

@Conference{Janjua2016,
  Title                    = {OPENTCQ: Towards change management in hybrid agile model},
  Author                   = {Janjua, J.I. and Ali, A. and Chaudhry, M.U.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Publisher                = {Association for Computing Machinery},
  Volume                   = {06-08-July-2016},

  Abstract                 = {The reforming Project management (PM) is changing at continuous basis in the field of IT industry. Project managers have to face a continuous pressure for profligate turnovers delivery because they have to face frequent variations in the requirements of business also when they are to work with limited budgets as well as small teams. In order to follow and fulfil the demands of IT project management, IT leaders are found engaged in a continuous effort of enhancing and implementing the new as well as different more effective strategies and styles. The main purpose of this paper is to propose an interoperable hybrid technique with change management, while introducing the agility in the scaled traditional development models. The requirement assessment strategy is proposed for the each change iteration by controlling time cost and the quality by using TCQ metric. A trade-off revelation between time cost and quality will be clear after measuring TCQ Metric. The paper also highlights open source transition in an IT concern which is required for transforming from the traditional method to the projected fresh hybrid methodology, we propose OPENTCQ an open inter operable framework for any approach use for the software development. © 2016 ACM.},
  Art_number               = {2967920},
  Author_keywords          = {Agile; Hybrid; OpenInteroperableFramework; Software process models; Unified process modelling},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2967878.2967920},
  ISBN                     = {9781450341790},
  Journal                  = {ACM International Conference Proceeding Series},
  Keywords                 = {Budget control; Economic and social effects; Human resource management; Iterative methods; Open source software; Open systems; Software design; Software engineering, Agile; Hybrid; OpenInteroperableFramework; Software process models; Unified process, Project management},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84989257142&doi=10.1145%2f2967878.2967920&partnerID=40&md5=ae7793ed1454defbf4347b45fd202d10}
}

@Conference{Janković2013232,
  Title                    = {Intelligent agile method framework},
  Author                   = {Janković, M. and Bajec, M. and Khodabandelou, G. and Deneckere, R. and Hug, C. and Salinesi, C.},
  Year                     = {2013},
  Note                     = {cited By 2},
  Pages                    = {232-237},

  Abstract                 = {The paper addresses the problem of the low usage of software development methods in software development practice. This has been recognized as one of the key reasons for failures in software development projects and a contributor to the low quality of software. We introduce a novel approach that could help to improve the maturity of software development processes. The approach is based on the method engineering principles taking into account the limitations that hinder its use in practice. The main objective of our research is to show that the method engineering concepts are applicable in real settings and that could contribute to the higher quality of software development processes and their products. Copyright © 2013 SCITEPRESS.},
  Author_keywords          = {Process mining; Situational method engineering; Software development improvement},
  Document_type            = {Conference Paper},
  ISBN                     = {9789898565624},
  Journal                  = {ENASE 2013 - Proceedings of the 8th International Conference on Evaluation of Novel Approaches to Software Engineering},
  Keywords                 = {Method engineering; Process mining; Quality of softwares; Situational Method Engineering; Software development methods; Software development practices; Software development process; Software development projects, Engineering; Industrial engineering, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84887049613&partnerID=40&md5=ab15a0d34dbb315034ab31235643c278}
}

@Article{Järvinen201458,
  Title                    = {From agile software development to mercury business},
  Author                   = {Järvinen, J. and Huomo, T. and Mikkonen, T. and Tyrväinen, P.},
  Journal                  = {Lecture Notes in Business Information Processing},
  Year                     = {2014},
  Note                     = {cited By 6},
  Pages                    = {58-71},
  Volume                   = {182 LNBIP},

  Abstract                 = {The rapid downfall of the Nokia software ecosystem has radically altered the landscape of software industry in Finland in recent years. There has been a shift from largely corporate driven way of working, which is often dominant in large companies, to more agile practices, and in general software organizations are seeking new, leaner ways of composing, delivering, and using software also inside already established companies. To accelerate this transformation in large scale, a collaborative research program has been created, called Need for Speed (N4S). In this paper, we give an insight to the joint goals and concrete actions of the program and discuss the motivations of individual companies that are participating in the program. As one concrete goal of the project, we introduce the concept of Mercury business, where the principles of the Lean startup framework are applied in a more conventional industrial setting. © Springer International Publishing Switzerland 2014.},
  Author_keywords          = {Deep customer insight; Elastic enterprise; Lean startup; Mercury business; Real-time value delivery},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-08738-2},
  ISBN                     = {9783319087375},
  ISSN                     = {18651348},
  Keywords                 = {Concretes; Mercury (metal); Software engineering, Agile software development; Collaborative research; Customer insights; Industrial settings; Software ecosystems; Software industry; Software organization; Value delivery, Industry},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904547144&doi=10.1007%2f978-3-319-08738-2&partnerID=40&md5=23d4a6216a2e115ffba538da5761f752}
}

@Article{JavdaniGandomani2016257,
  Title                    = {Agile transition and adoption human-related challenges and issues: A Grounded Theory approach},
  Author                   = {Javdani Gandomani, T. and Ziaei Nafchi, M.},
  Journal                  = {Computers in Human Behavior},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {257-266},
  Volume                   = {62},

  Abstract                 = {Agile methods in software development have been introduced to cope with the inherent problems of the traditional methods. The increasing prevalence of using these methods reflects their important role in the future of software development. However, leaving traditional approach and adapting to Agile approach has been a central attention of the researchers. Indeed, Agile transition needs enough time and effort and most often is subject to several challenges and barriers, mainly because of its people-centric nature. Human-related challenges in several studies have been reported as the major transition challenges. However, exploring the primary origins and reasons of these challenges has received less effort in a large-scale research study. A Grounded Theory in context of Agile software development has been conducted involving 49 Agile practitioners across the 13 different countries. This study identified different aspects of human-related challenges throughout Agile transition process. The results of this study show that the root of the emerged issues is the people's perceptions about Agile transition. The main purpose of this paper is to describe the origins and reasons of these challenges and issues in order to help software companies and development teams. Considering the findings may help them to facilitate Agile transition process with less cost, time and effort and to get better results by considering these potential challenges. © 2016 Elsevier Ltd. All rights reserved.},
  Author_keywords          = {Agile adoption; Agile software development; Agile transformation; Agile transition; Grounded Theory; Human-related challenges},
  Coden                    = {CHBEE},
  Document_type            = {Article},
  Doi                      = {10.1016/j.chb.2016.04.009},
  ISSN                     = {07475632},
  Keywords                 = {Software design, Agile adoptions; Agile software development; Agile transformations; Agile transition; Grounded theory; Human-related challenges, Software engineering, adoption; computer program; grounded theory; human; perception; physician},
  Publisher                = {Elsevier Ltd},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84962694954&doi=10.1016%2fj.chb.2016.04.009&partnerID=40&md5=a98b7412b8f7a01a426863f624909378}
}

@Article{JavdaniGandomani2015204,
  Title                    = {An empirically-developed framework for Agile transition and adoption: A Grounded Theory approach},
  Author                   = {Javdani Gandomani, T. and Ziaei Nafchi, M.},
  Journal                  = {Journal of Systems and Software},
  Year                     = {2015},
  Note                     = {cited By 9},
  Pages                    = {204-219},
  Volume                   = {107},

  Abstract                 = {To date, few Agile transition and adoption frameworks have been proposed in the software industry. However, using them is not easy in practice and primarily requires a huge organizational overhead because of their complex and non-flexible structure. These drawbacks make such frameworks difficult to apply in small and medium-sized companies. We have conducted a large-scale empirical research study using Grounded Theory approach with the participation of 49 Agile experts from 13 different countries. This study inductively developed a substantive Agile transition and adoption framework which appears to be simple and flexible. The main aim of this paper is to present the developed framework. The primary characteristics of this framework, including iterative, gradual, continuous, and value-based are in line with the Agile approach and show promise of being useful in software companies and organizations, regardless of size. This paper also describes how various steps of this framework could help software companies to achieve Agile transformation. © 2015 Elsevier Inc. All rights reserved.},
  Author_keywords          = {Agile adoption; Agile software development; Agile transformation process; Grounded Theory; Transition framework},
  Coden                    = {JSSOD},
  Document_type            = {Article},
  Doi                      = {10.1016/j.jss.2015.06.006},
  ISSN                     = {01641212},
  Keywords                 = {Flexible structures; Software design, Agile adoptions; Agile software development; Agile transformations; Grounded theory; Transition framework, Software engineering},
  Publisher                = {Elsevier Inc.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84937427552&doi=10.1016%2fj.jss.2015.06.006&partnerID=40&md5=0191ff9524377275c00e273190814cd7}
}

@Article{JavdaniGandomani2013146,
  Title                    = {Exploring Key Factors of Pilot Projects in Agile Transformation Process Using a Grounded Theory Study},
  Author                   = {Javdani Gandomani, T. and Zulzalil, H. and Abd Ghani, A.A. and Sultan, A.B.M. and Sharif, K.Y.},
  Journal                  = {Communications in Computer and Information Science},
  Year                     = {2013},
  Note                     = {cited By 2},
  Pages                    = {146-158},
  Volume                   = {403},

  Abstract                 = {Changing development approach from disciplined to agile methods is an organizational mutation that requires many issues to be considered to increase its chance of success. Selecting an appropriate pilot project as initial project that is going to be done through an Agile method is a critical task. Due to the impact of such a pilot project on successful Agile transformation, understanding its critical factors helps organizations choose the most suitable project to start Agile transition. Conducting a Grounded Theory, showed that organization should considered some key factors of a pilot: Criticality, Duration, Size and Required resources. Besides these factors, the results showed that organization should be aware of the risk of successful pilot project in their next Agile projects. The study also showed that pilot selection mostly is done by Agile coaches or is forced by customer. © Springer-Verlag Berlin Heidelberg 2013.},
  Author_keywords          = {Agile Pilot Project; Agile Transformation; gile Software Development; Grounded Theory},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-642-41947-8_14},
  ISBN                     = {9783642419461},
  ISSN                     = {18650929},
  Keywords                 = {Computer science, Agile methods; Agile transformations; Critical factors; Critical tasks; Development approach; Grounded theory; Pilot projects, Software engineering},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84885701300&doi=10.1007%2f978-3-642-41947-8_14&partnerID=40&md5=af041bec0b8e02e12c34c200f32cad34}
}

@Conference{Jelschen2014469,
  Title                    = {SENSEI: Software evolution service integration},
  Author                   = {Jelschen, J.},
  Year                     = {2014},
  Note                     = {cited By 2},
  Pages                    = {469-472},
  Publisher                = {IEEE Computer Society},

  Abstract                 = {Software evolution tools mostly implement a single technique to assist in achieving a specific objective. Overhauling, renovating, or migrating large and complex legacy software systems require the proper combination of several different techniques appropriate for each subtask. Since few tools are built for interoperability, the setup of a toolchain supporting a given software evolution process is an elaborate, time-consuming, error-prone, and redundant endeavor, which yields brittle and inflexible toolchains with little to no reusability. This paper presents SENSEI, an approach to enable the implementation of an integration framework for software evolution tools using component-based, service-oriented, and model-driven methods, to ease toolchain creation and enable agile execution of software evolution projects. It will be evaluated by implementing and using it to build the toolchains supporting two software evolution projects, and having practitioners assess its usefulness. © 2014 IEEE.},
  Art_number               = {6747220},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/CSMR-WCRE.2014.6747220},
  Journal                  = {2014 Software Evolution Week - IEEE Conference on Software Maintenance, Reengineering, and Reverse Engineering, CSMR-WCRE 2014 - Proceedings},
  Keywords                 = {Computer software maintenance; Reengineering; Reusability; Reverse engineering, Component based; Integration frameworks; Legacy software; Model-driven method; Service integration; Service Oriented; Software Evolution; Software evolution process, Tools},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84898494284&doi=10.1109%2fCSMR-WCRE.2014.6747220&partnerID=40&md5=36358121f51369fc3bd409010110af2b}
}

@Conference{Jinzenji2013310,
  Title                    = {An experience report for software quality evaluation in highly iterative development methodology using traditional metrics},
  Author                   = {Jinzenji, K. and Hoshino, T. and Williams, L. and Takahashi, K.},
  Year                     = {2013},
  Note                     = {cited By 1},
  Pages                    = {310-319},

  Abstract                 = {The use of highly iterative software development methodologies, such as Agile and Lean, have been growing. However, these methodologies do not explicitly provide practices for managing and measuring software quality. This deficiency may prevent software development organizations in critical domains from transforming from traditional development to highly iterative development. These organizations may need to manage quality during development and may desire to compare with the quality of a large number of products produced in the past. In this paper, we focus on the reliability aspects of software quality and discuss the applicability of conventional reliability metrics to iterative development. First, we defined the general process structure in iterative development. Then, we present an associated quality evaluation scheme closely. Our experimental results indicate that traditional quality metrics were applicable to iterative development and that the iterative development achieved maturity sufficient for the commercial release. © 2013 IEEE.},
  Art_number               = {6698884},
  Author_keywords          = {iterative development; quality metrics; software reliability},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ISSRE.2013.6698884},
  ISBN                     = {9781479923663},
  Journal                  = {2013 IEEE 24th International Symposium on Software Reliability Engineering, ISSRE 2013},
  Keywords                 = {Iterative development; Process structures; Quality evaluation; Quality metrics; Reliability metrics; Software development methodologies; Software development organizations; Software quality evaluation, Computer software selection and evaluation; Software design; Software reliability, Iterative methods},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893281916&doi=10.1109%2fISSRE.2013.6698884&partnerID=40&md5=98c8295d6701b6dbf8b6c9d4a1c908fd}
}

@Article{Jones2015,
  Title                    = {Scaling agile infrastructure to people},
  Author                   = {Jones, B. and McCance, G. and Traylen, S. and Barrientos Arias, N.},
  Journal                  = {Journal of Physics: Conference Series},
  Year                     = {2015},
  Note                     = {cited By 0},
  Number                   = {2},
  Volume                   = {664},

  Abstract                 = {When CERN migrated its infrastructure away from homegrown fabric management tools to emerging industry-standard open-source solutions, the immediate technical challenges and motivation were clear. The move to a multi-site Cloud Computing model meant that the tool chains that were growing around this ecosystem would be a good choice, the challenge was to leverage them. The use of open-source tools brings challenges other than merely how to deploy them. Homegrown software, for all the deficiencies identified at the outset of the project, has the benefit of growing with the organization. This paper will examine what challenges there were in adapting open-source tools to the needs of the organization, particularly in the areas of multi-group development and security. Additionally, the increase in scale of the plant required changes to how Change Management was organized and managed. Continuous Integration techniques are used in order to manage the rate of change across multiple groups, and the tools and workflow for this will be examined.},
  Art_number               = {022026},
  Document_type            = {Conference Paper},
  Doi                      = {10.1088/1742-6596/664/2/022026},
  Editor                   = {Bonacorsi D., Lyon A., Sakamoto H., Ueda I.},
  ISSN                     = {17426588},
  Publisher                = {Institute of Physics Publishing},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84962289881&doi=10.1088%2f1742-6596%2f664%2f2%2f022026&partnerID=40&md5=02bd45182d5abd4fe2b8d4012d75a5cf}
}

@Conference{Jorge20131,
  Title                    = {Binary recommender systems: Introduction, an application and outlook},
  Author                   = {Jorge, A.M.},
  Year                     = {2013},
  Note                     = {cited By 0},
  Pages                    = {1-2},

  Abstract                 = {Recommender Systems are a hot application area these days, made popular by well known web sites. The problem of predicting user preferences is very demanding from the data mining algorithm design point of view, but it also poses challenges to evaluation and monitoring. Moreover, there is a lot of information that can be exploited, from clickstreams and background information to musical content and social interaction. As data grows and recommendation requests must be answered in a split second, online and agile solutions must be implemented. In this talk we will give a brief introduction to binary recommender systems, describe a particular hybrid application to music recommendation - from algorithm to online evaluation, and refer to context aware and online recommender algorithms. © 2013 ACM.},
  Author_keywords          = {Data MiningRecommender SystemsCollaborative Filtering; H.4 [Information Systems Applications]},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2494444.2494491},
  ISBN                     = {9781450319768},
  Journal                  = {ACM International Conference Proceeding Series},
  Keywords                 = {Background information; Data mining algorithm; Hybrid applications; Information systems application; Music recommendation; On-line evaluation; Recommender algorithms; Social interactions, Algorithms; Data mining; Recommender systems; Software engineering, Online systems},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84882762544&doi=10.1145%2f2494444.2494491&partnerID=40&md5=2f27a3fd8726b593a9b74dcbfb240bf2}
}

@Article{Jörges20131,
  Title                    = {Construction and evolution of code generators: A model-driven and service-oriented approach},
  Author                   = {Jörges, S.},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2013},
  Note                     = {cited By 5},
  Pages                    = {1-265},
  Volume                   = {7747},

  Abstract                 = {Automatic code generation is an essential cornerstone of model-driven approaches to software development. It closes the gap that emerges when models are used to abstract from a concrete software system, and thus is to models what compilers are to high-level languages. Consequently, the simple and fast development of code generators is a key requirement of today's approaches to model-driven development, which are increasingly characterized by a strong focus on agility and domain-specificity. Currently, many techniques are available that support the specification and implementation of code generators, such as engines based on templates or rule-based transformations. All these techniques have in common that code generators are either directly programmed or described by means of textual specifications. This monograph presents Genesys, a general approach, which advocates the graphical development of code generators for arbitrary source and target languages, on the basis of models and services. In particular, it is designed to support incremental language development on arbitrary metalevels. The use of models allows building of code generators in a truly platform-independent and domain-specific way. Furthermore, models are amenable to formal verification methods such as model checking, which increase the reliability and robustness of the code generators. Services enable the reuse and integration of existing code generation frameworks and tools regardless of their complexity, and at the same time manifest as easy-to-use building blocks that facilitate agile development through quick interchangeability. Both models and services are reusable and thus form a growing repository for the fast creation and evolution of code generators. This book shows these and further advantages arising from the Genesys approach by means of a full-fledged reference implementation, which has been field-tested in a large number of case studies.. © 2013 Springer-Verlag Berlin Heidelberg.},
  Document_type            = {Article},
  ISBN                     = {9783642361265},
  ISSN                     = {03029743},
  Keywords                 = {Agile development; Automatic code generations; Building blockes; Code Generation; Code generators; Domain specific; Formal verification methods; General approach; GENESYS; Graphical development; Language development; Meta levels; Model driven approach; Model driven development; Model-driven; Reference implementation; Reliability and robustness; Reuse and integrations; Rule-based transformation; Service-oriented approaches; Software systems; Target language, Computer programming languages; Model checking; Software engineering; Specifications; Systems analysis, Building codes},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84874502400&partnerID=40&md5=3a3325ad07091d9b49a12a24c6c4ca6f}
}

@Conference{Joseph2016338,
  Title                    = {Agile software development and it project performance in South Africa: A positive relationship?},
  Author                   = {Joseph, N. and Marnewick, C. and Santana, M.J.},
  Year                     = {2016},
  Editor                   = {Pretorius L., Thopil G.A., Hosni Y.},
  Note                     = {cited By 0},
  Pages                    = {338-358},
  Publisher                = {International Association for Management of Technology Conference (IAMOT) and the Graduate School of Technology Management, University of Pretoria},

  Abstract                 = {IT project performance is a topic which is often researched as these projects continue to fail at an alarming rate. Significant amounts of money is invested in IT projects yet the returns are not as significant as expected. Agile Software Development (ASD) has become popularised as a means to improve IT software projects performance rates. Traditional software development methods take a linear and structured approach while agile methods are more flexible and iterative in nature. ASD methods primarily alleviates challenges around project changes as IT software projects experience changes more than other types of projects. Although there is considerable research regarding the impact of ASD on IT project performance, research is lacking within the South African context. This research aims to fill that gap by exploring the impact ASD has on IT project performance in South Africa. This research uses a quantitative approach through a web-based structured questionnaire. The target sample is individuals which are actively involved in IT software projects in various industries across South Africa. The initial results show that ASD methods are used in a multitude of industries and not only IT as often believed. The most prolific ASD methods are Scrum and Extreme Programming which signifies that South African software projects use the same methods as their international counterparts. IT software projects are positively impacted by ASD methods as these projects are more successful and experience less challenges and failures. This aligns with previous research which empirically argues that agile methods improve IT project performance rates. Furthermore, ASD methods have a positive impact on the constraints of time and scope. This implies that IT software projects which use ASD methods are more consistently on time and manage scope more effectively. Alternatively, the impact on the constraint of cost was disputed as half the respondents indicate ASD methods have a positive impact while the other half indicate ASD methods do not. The impact of agile methods on cost is also debated in literature as there are contradicting findings around this constraint. ASD methods are primarily used on medium to large software projects which challenges the notion that agile methods are best suited to small to medium software projects. The findings of this research are mixed when compared to previous research. A number of findings confirm previous research while others contradict and challenge previous studies. The research indicates that ASD methods have a positive impact on IT software projects and that there are still a number of areas which need to be tackled when adopting these methods. Moreover, further research must be conducted to determine the impact ASD methods have on other IT project types. Although the findings are positive overall, agile methods are not the "saving grace" to instantly and dramatically improve IT project performance.},
  Author_keywords          = {Agile methods; Agile software development; IT software projects; Project management; Project performance},
  Document_type            = {Conference Paper},
  ISBN                     = {0981581781; 9780981581781},
  Journal                  = {IAMOT 2016 - 25th International Association for Management of Technology Conference, Proceedings: Technology - Future Thinking},
  Keywords                 = {Industrial management; Iterative methods; Project management; Software engineering, Agile methods; Agile software development; EXtreme Programming; Project performance; Quantitative approach; Software development methods; Software project; Structured approach, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84988329136&partnerID=40&md5=0fd264a5097427e648efc8775ad924dc}
}

@Conference{Kandil2016,
  Title                    = {A methodology for regression testing reduction and prioritization of agile releases},
  Author                   = {Kandil, P. and Moussa, S. and Badr, N.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Regression testing is the type of software testing that seeks to uncover new software bugs in existing areas of a system after changes have been made to them. The significance of regression testing have grown in the past decade with the amplified adoption of agile development methodologies, which requires the execution of regression testing at the end of each release. In this paper, we present an automated agile regression testing approach that reduces the number of test cases to be used at regression phase depending on the similarity of issues exposed from the different test cases, taking into consideration the user story coverage. It then prioritizes the reduced test cases using user-provided weighted agile parameters. The proposed approach achieves enhancement for both the reduction and prioritization of test cases for agile regression testing. © 2015 IEEE.},
  Art_number               = {7426903},
  Author_keywords          = {Agile Parameters; Agile Releases; Agile Testing; Regression Testing; Test Cases Prioritization; Test Cases Reduction},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICTA.2015.7426903},
  ISBN                     = {9781467387491},
  Journal                  = {2015 5th International Conference on Information and Communication Technology and Accessibility, ICTA 2015},
  Keywords                 = {Program debugging; Regression analysis; Testing; Transportation, Agile Parameters; Agile Releases; Agile testing; Prioritization; Regression testing; Test case, Software testing},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84988329776&doi=10.1109%2fICTA.2015.7426903&partnerID=40&md5=c6236694a904f55bb30100d698df1bca}
}

@Conference{Kaneyama20151654,
  Title                    = {Methodology for developing ICT based course material for children with a developmental disability based on EPISODE},
  Author                   = {Kaneyama, T. and Goto, T. and Nishino, T.},
  Year                     = {2015},
  Note                     = {cited By 2},
  Pages                    = {1654-1658},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Education curricula for children with developmental disabilities have attempted to include information and communication technology (ICT) teaching materials. However, such children demonstrate individual differences at the developmental stage of their cognitive faculties. Thus, it is difficult to adopt commercially available ICT teaching materials when working with them. In this study, we introduce the concept of inclusive design in the implementation of ICT teaching materials for children with developmental disabilities. Inclusive design allows for the participation of the elderly as well as those with disabilities at the early stages of development and can be used to identify special needs associated with the development. In addition to ICT teaching materials, the use of Extreme Programming Method for Innovative Software Based on Systems Design (EPISODE), which has agile development and innovation techniques at its core, has been proposed. Therefore, in this study, we attempt to develop a method comprising inclusive design and EPISODE to develop ICT teaching materials. Finally, we report on the practice of developing ICT teaching materials for children with developmental disabilities. © 2015 IEEE.},
  Art_number               = {7281982},
  Author_keywords          = {Convergence; Education; Planning; Programming; Prototypes; Senior citizens; Software},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/INDIN.2015.7281982},
  ISBN                     = {9781479966493},
  Journal                  = {Proceeding - 2015 IEEE International Conference on Industrial Informatics, INDIN 2015},
  Keywords                 = {Computer software; Curricula; Design; Information science; Mathematical programming; Planning; Software prototyping; Teaching, Convergence; Developmental disability; Developmental stage; EXtreme Programming; Individual Differences; Information and Communication Technologies; Prototypes; Senior citizens, Education},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84949504870&doi=10.1109%2fINDIN.2015.7281982&partnerID=40&md5=def7a459e6852cc5dd103667f17aa179}
}

@Article{Kapitsaki201518,
  Title                    = {Learning from the current status of agile adoption},
  Author                   = {Kapitsaki, G.M. and Christou, M.},
  Journal                  = {Communications in Computer and Information Science},
  Year                     = {2015},
  Note                     = {cited By 0},
  Pages                    = {18-32},
  Volume                   = {551},

  Abstract                 = {Software processes have evolved significantly since the first formal appearance of software engineering. The academia and the industry have introduced, embraced or rejected various methodologies that are more or less efficient in theory and in practice. A current popular trend can be found in Agile methodologies widely adopted in the last decade. Since software processes are constantly evolving, it is vital to see how they evolve over time. This work presents the current state of the adoption of Agile methodologies with an emphasis on Scrum development method. Study results from 44 different countries were collected during the months of March and April 2012. The results are enlightening in order to understand how Agile development and Scrum are viewed today, to see where their success factors lie, discover if they offer benefits in comparison to heavyweight approaches and discuss their future evolution. © Springer International Publishing Switzerland 2015.},
  Author_keywords          = {Adaptive development; Agile; Scrum; Software process},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-27218-4_2},
  Editor                   = {Filipe J., Maciaszek L.A.},
  ISBN                     = {9783319272177},
  ISSN                     = {18650929},
  Keywords                 = {Computers, Adaptive development; Agile; Agile development; Agile Methodologies; Development method; Scrum; Software process; Success factors, Software engineering},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84951992129&doi=10.1007%2f978-3-319-27218-4_2&partnerID=40&md5=e6ad86c8a1929fc9effce61d8bc1c66a}
}

@Conference{Kapitsaki2014101,
  Title                    = {Where is Scrum in the current Agile world?},
  Author                   = {Kapitsaki, G.M. and Christou, M.},
  Year                     = {2014},
  Note                     = {cited By 5},
  Pages                    = {101-108},
  Publisher                = {SciTePress},

  Abstract                 = {A variety of methodologies in software processes exist nowadays with the Agile software development having gained significant ground since the introduction of the Agile manifesto in 2001. Scrum is a representative Agile development method employed in the software industry. Since trends come and go, it is vital to see where they stand in the real world. In order to gain an insight into how Scrum is viewed nowadays, we have conducted an online study on the current state of the adoption of Scrum. The study targeted in demonstrating where the success or failure success factors of Scrum lie and in viewing Scrum properties in comparison to heavyweight approaches. This paper presents the results of the study that constitute an instructive view into the above aspects of Scrum development.},
  Author_keywords          = {Adaptive development; Agile; Scrum; Software process},
  Document_type            = {Conference Paper},
  ISBN                     = {9789897580307},
  Journal                  = {ENASE 2014 - Proceedings of the 9th International Conference on Evaluation of Novel Approaches to Software Engineering},
  Keywords                 = {Engineering; Industrial engineering, Adaptive development; Agile; Agile development methods; Agile software development; Scrum; Software industry; Software process; Success factors, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84902320752&partnerID=40&md5=b6eeb9e2b3925dddb72f6a03a1ff8cac}
}

@Article{Karunakaran201518529,
  Title                    = {A method to effort estimation for XP projects in clients perspective},
  Author                   = {Karunakaran, E. and Sreenath, N.},
  Journal                  = {International Journal of Applied Engineering Research},
  Year                     = {2015},
  Note                     = {cited By 1},
  Number                   = {7},
  Pages                    = {18529-18550},
  Volume                   = {10},

  Abstract                 = {All engineering fields have definite methods to calculate the cost of the product whereas in software engineering although many methods are exists, but no two methods will give same value neither for the size of the product nor for the effort and cost of the product. Also, most of the existing methods and models to find the cost of a project are based on previous experience or using the history of the project. But using past experience cannot predict the future works due to the complexity as well as the new projects may not match with the earlier projects. So it is a research problem to get an optimal solution satisfying the objective function. The COCOMO model can help to find the effort of the project based on the previously finished project data for the traditional projects by multiplying the effort multiplier with the number of lines as size of the project. Nowadays the project development methodology has been changing to overcome the problems of project failures, to improve the efficiency, and makes the development methodology much easier. Agile software development methods have various forms like eXtreme Programming (XP) (Kent Beck -1999), SCRUM (Ken Schwaber and Mike Beedle – 2001) etc is introduced since 1999. The aim is to find the optimal size, effort and cost on both client and stack holder perspective for XP projects. The transparency is required for the client in estimation of the project. Based on the previous experience a method is proposed which is easy and accurate in sizing, effort estimation of the project. The sizing is done by a modified COSMIC full function points concepts. The effort estimation is the product of size and effort multipliers of the project, where effort multiplier are found using the finished XP projects of a leading software company from Chennai, India who were practicing XP methodology since 1999. The effort multiplier values are tuned by training the twenty finished projects data. The results are validated by using MMRE and different regression methods. These effort multipliers are applied to five different new projects (these projects are already finished and reserved for validation). These results of the projects are evaluated using different regression methods. Finally a tool is developed which takes the finished project as input and produce the output of the size, effort and cost of the project, which is more transparent and trust worthy to the client. © Research India Publications.},
  Author_keywords          = {COSMIC full function; Effort estimation; Estimation; Extreme programming; EXtreme software size unit; Sizing the software; Software measurement},
  Document_type            = {Article},
  ISSN                     = {09734562},
  Publisher                = {Research India Publications},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84929340671&partnerID=40&md5=e0d57a2fe746a7a030e8ac9d49d8c390}
}

@Article{Karvonen201787,
  Title                    = {Systematic literature review on the impacts of agile release engineering practices},
  Author                   = {Karvonen, T. and Behutiye, W. and Oivo, M. and Kuvaja, P.},
  Journal                  = {Information and Software Technology},
  Year                     = {2017},
  Note                     = {cited By 0},
  Pages                    = {87-100},
  Volume                   = {86},

  Abstract                 = {Context Agile release engineering (ARE) practices are designed to deliver software faster and cheaper to end users; hence, claims of such impacts should be validated by rigorous and relevant empirical studies. Objective The study objective was to analyze both direct and indirect impacts of ARE practices as well as to determine how they have been empirically studied. Method The study applied the systematic literature review research method. ARE practices were identified in empirical studies by searching articles for “rapid release,” “continuous integration,” “continuous delivery,” and “continuous deployment.” We systematically analyzed 619 articles and selected 71 primary studies for deeper investigation. The impacts of ARE practices were analyzed from three viewpoints: impacts associated with adoption of the practice, prevalence of the practice, and success of software development. Results The results indicated that ARE practices can create shorter lead times and better communication within and between development teams. However, challenges and drawbacks were also found in change management, software quality assurance, and stakeholder acceptance. The analysis revealed that 33 out of 71 primary studies were casual experience reports that had neither an explicit research method nor a data collection approach specified, and 23 out of 38 empirical studies applied qualitative methods, such as interviews, among practitioners. Additionally, 12 studies applied quantitative methods, such as mining of software repositories. Only three empirical studies combined these research approaches. Conclusion ARE practices can contribute to improved efficiency of the development process. Moreover, release stakeholders can develop a better understanding of the software project's status. Future empirical studies should consider the comprehensive reporting of the context and how the practice is implemented instead of merely referring to usage of the practice. In addition, different stakeholder points of view, such as customer perceptions regarding ARE practices, still clearly require further research. © 2017 Elsevier B.V.},
  Author_keywords          = {Agile; Continuous delivery; Continuous deployment; Continuous integration; Rapid release; Release engineering},
  Coden                    = {ISOTE},
  Document_type            = {Review},
  Doi                      = {10.1016/j.infsof.2017.01.009},
  ISSN                     = {09505849},
  Keywords                 = {Computer software selection and evaluation; Quality assurance, Agile; Continuous delivery; Continuous deployment; Continuous integrations; Rapid release, Software design},
  Publisher                = {Elsevier B.V.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85015727740&doi=10.1016%2fj.infsof.2017.01.009&partnerID=40&md5=95efd780bf10d5088320a394191c370c}
}

@Article{Karvonen2016,
  Title                    = {Systematic literature review on the impacts of agile release engineering practices},
  Author                   = {Karvonen, T. and Behutiye, W. and Oivo, M. and Kuvaja, P.},
  Journal                  = {Information and Software Technology},
  Year                     = {2016},
  Note                     = {cited By 0; Article in Press},

  Abstract                 = {Context: Agile release engineering (ARE) practices are designed to deliver software faster and cheaper to end users; hence, claims of such impacts should be validated by rigorous and relevant empirical studies. Objective: The study objective was to analyze both direct and indirect impacts of ARE practices as well as to determine how they have been empirically studied. Method: The study applied the systematic literature review research method. ARE practices were identified in empirical studies by searching articles for "rapid release," "continuous integration," "continuous delivery," and "continuous deployment." We systematically analyzed 619 articles and selected 71 primary studies for deeper investigation. The impacts of ARE practices were analyzed from three viewpoints: impacts associated with adoption of the practice, prevalence of the practice, and success of software development. Results: The results indicated that ARE practices can create shorter lead times and better communication within and between development teams. However, challenges and drawbacks were also found in change management, software quality assurance, and stakeholder acceptance. The analysis revealed that 33 out of 71 primary studies were casual experience reports that had neither an explicit research method nor a data collection approach specified, and 23 out of 38 empirical studies applied qualitative methods, such as interviews, among practitioners. Additionally, 12 studies applied quantitative methods, such as mining of software repositories. Only three empirical studies combined these research approaches. Conclusion: ARE practices can contribute to improved efficiency of the development process. Moreover, release stakeholders can develop a better understanding of the software project's status. Future empirical studies should consider the comprehensive reporting of the context and how the practice is implemented instead of merely referring to usage of the practice. In addition, different stakeholder points of view, such as customer perceptions regarding ARE practices, still clearly require further research. © 2017.},
  Author_keywords          = {Agile; Continuous delivery; Continuous deployment; Continuous integration; Rapid release; Release engineering},
  Coden                    = {ISOTE},
  Document_type            = {Article in Press},
  Doi                      = {10.1016/j.infsof.2017.01.009},
  ISSN                     = {09505849},
  Keywords                 = {Computer software selection and evaluation; Quality assurance, Agile; Continuous delivery; Continuous deployment; Continuous integrations; Rapid release, Software design},
  Publisher                = {Elsevier B.V.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85010951278&doi=10.1016%2fj.infsof.2017.01.009&partnerID=40&md5=29bbd06be23c0dc05a465af30a259aa3}
}

@Article{Katumba201433,
  Title                    = {Agile development in automotive software development: Challenges and opportunities},
  Author                   = {Katumba, B. and Knauss, E.},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2014},
  Note                     = {cited By 0},
  Pages                    = {33-47},
  Volume                   = {8892},

  Abstract                 = {In modern cars, most of the functionalities are controlled by software. The increased significance of software-based functionality has resulted in various challenges for automotive industry, which is slowly transitioning towards being a software centric industry. Challenges include the definition of key competencies, processes, methods, tools, and organization settings to accommodate combined development of software and hardware. Based on qualitative research, this paper aims at understanding the applicability of agile methods to automotive software development. Our explorative case study with one of the development sections at Volvo Car Cooperation identified challenges in their software development process related to process perception and reactive mode, multi-tasking and frequent task switching, individualism and lack of complete knowledge, as well as long communication chains and low crossfunction mind set. Moreover it prepares a transition of software development at this multinational automotive company towards agile by relating agile principles and practices to automotive software process challenges. © Springer International Publishing Switzerland 2014.},
  Author_keywords          = {Agile software development; Automotive software development; Challenges; Embedded systems; Software process improvement},
  Document_type            = {Article},
  ISSN                     = {03029743},
  Keywords                 = {Automotive industry; Embedded systems, Agile software development; Challenges; Communication chains; Principles and practices; Qualitative research; Software and hardwares; Software development process; Software Process Improvement, Software design},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84911864627&partnerID=40&md5=a72551659c1e93442c54b1a9adaa21f8}
}

@Conference{Kaur2015832,
  Title                    = {Applying agile methodologies in industry projects: Benefits and challenges},
  Author                   = {Kaur, K. and Jajoo, A. and Manisha},
  Year                     = {2015},
  Note                     = {cited By 1},
  Pages                    = {832-836},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Agile software development has been prevalent in IT industry since more than two decades now. Conceptually, Agile was introduced as an iterative, incremental and adaptive methodology for software development. There are quite a few studies that discuss the success of agile development projects on account of multiple factors like cost, time, quality and productivity. Owing to its popular virtues like enhanced flexibility to incorporate evolving requirements, incremental delivery, quick time to market and ability to keep pace with market trends [1], clients tend to leverage agile methods for a variety of project types in addition to typical small scale development projects. Through this paper, we discuss some of the practical aspects, pros and cons of applying agile principles to different types of IT projects including testing projects, maintenance projects and large-scale development projects. © 2015 IEEE.},
  Art_number               = {7155964},
  Author_keywords          = {Agile; Implementation; Large scale development; Maintenance; Projects; Testing},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICCUBEA.2015.166},
  ISBN                     = {9781479968923},
  Journal                  = {Proceedings - 1st International Conference on Computing, Communication, Control and Automation, ICCUBEA 2015},
  Keywords                 = {Commerce; Iterative methods; Maintenance; Software design; Testing, Adaptive methodologies; Agile; Agile software development; Implementation; Incremental delivery; Large-scale development; Maintenance projects; Projects, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84943311283&doi=10.1109%2fICCUBEA.2015.166&partnerID=40&md5=f61352e6db1db6231ee293b6befff642}
}

@Article{Kaur2016159,
  Title                    = {Building stateful firewall over software defined networking},
  Author                   = {Kaur, K. and Singh, J.},
  Journal                  = {Advances in Intelligent Systems and Computing},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {159-168},
  Volume                   = {434},

  Abstract                 = {Current network architectures are ill suited to meet today’s enterprise and academic requirements. Software Defined Networking (SDN) is a new way to Design, Build and Operate Networks. It replaces static, inflexible and complex networks with networks that are agile, scalable and innovative. The main idea is to decouple the control and data planes, allowing the network to be programmatically controlled. A key element of SDN architectures is the controller. This logically centralized entity acts as a network operating system, providing applications with a uniform and centralized programming interface to the underlying network. But it also introduces new security challenges. The challenge of building robust firewalls is the main challenge for protection of OpenFlow networks. The main problem with traditional firewall is that Network Administrator cannot modify/extend the capabilities of traditional vendor-specific firewall. Network Administrator can only configure the firewall according to the specifications given by the firewall vendor. To solve these problems we developed stateful firewall application that runs over SDN controller to show that most of the firewall functionalities can be built on software, without the aid of a dedicated hardware. © Springer India 2016.},
  Author_keywords          = {Firewall; OpenFlow; Packet filtering; SDN; Stateful firewall; Stateless firewall},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-81-322-2752-6_15},
  Editor                   = {Satapathy S.C., Mandal J.K., Udgata S.K., Bhateja V.},
  ISBN                     = {9788132227502},
  ISSN                     = {21945357},
  Keywords                 = {Application programs; Complex networks; Computer systems programming; Information systems; Network architecture; Software defined networking; Systems analysis, Firewall; Openflow; Packet filtering; Stateful firewalls; Stateless firewall, Computer system firewalls},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84959010622&doi=10.1007%2f978-81-322-2752-6_15&partnerID=40&md5=5e22f5f5b287692045e6b4e8d64c0c13}
}

@Article{Kavitha2015319,
  Title                    = {Knowledge sharing through pair programming in learning environments: An empirical study},
  Author                   = {Kavitha, R.K. and Ahmed, M.S.I.},
  Journal                  = {Education and Information Technologies},
  Year                     = {2015},
  Note                     = {cited By 0},
  Number                   = {2},
  Pages                    = {319-333},
  Volume                   = {20},

  Abstract                 = {Agile software development is an iterative and incremental methodology, where solutions evolve from self-organizing, cross-functional teams. Pair programming is a type of agile software development technique where two programmers work together with one computer for developing software. This paper reports the results of the pair programming exercise which was carried out among fifty six post graduate students of Master of Computer Applications (MCA) who are engaged in developing small applications as a part of their Visual Programming laboratory course at Kumaraguru College of Technology (KCT) during the academic year 2012–2013. The basic intent of the study is to explore the possibilities of adopting pair programming as a pedagogical tool in higher educational setting. The study investigates the possibilities of deploying purposeful pair programming modules to facilitate knowledge sharing in regular laboratory sessions. The research findings suggest that pair programming can be a useful approach to teach computer programming in higher education to facilitate effective knowledge sharing among the students. © 2013, Springer Science+Business Media New York.},
  Author_keywords          = {Agile software development; Collaborative learning; Knowledge sharing; Pair programming},
  Document_type            = {Article},
  Doi                      = {10.1007/s10639-013-9285-5},
  ISSN                     = {13602357},
  Publisher                = {Springer New York LLC},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84889806054&doi=10.1007%2fs10639-013-9285-5&partnerID=40&md5=305db3b0aeca33cf2162cc4480764e65}
}

@Article{Kawamoto2015223,
  Title                    = {Value driven outcomes (VDO): A pragmatic, modular, and extensible software framework for understanding and improving health care costs and outcomes},
  Author                   = {Kawamoto, K. and Martin, C.J. and Williams, K. and Tu, M.-C. and Park, C.G. and Hunter, C. and Staes, C.J. and Bray, B.E. and Deshmukh, V.G. and Holbrook, R.A. and Morris, S.J. and Fedderson, M.B. and Sletta, A. and Turnbull, J. and Mulvihill, S.J. and Crabtree, G.L. and Entwistle, D.E. and McKenna, Q.L. and Strong, M.B. and Pendleton, R.C. and Lee, V.S.},
  Journal                  = {Journal of the American Medical Informatics Association},
  Year                     = {2015},
  Note                     = {cited By 11},
  Number                   = {1},
  Pages                    = {223-235},
  Volume                   = {22},

  Abstract                 = {Objective: To develop expeditiously a pragmatic, modular, and extensible software framework for understanding and improving healthcare value (costs relative to outcomes). Materials and methods: In 2012, a multidisciplinary team was assembled by the leadership of the University of Utah Health Sciences Center and charged with rapidly developing a pragmatic and actionable analytics framework for understanding and enhancing healthcare value. Based on an analysis of relevant prior work, a value analytics framework known as Value Driven Outcomes (VDO) was developed using an agile methodology. Evaluation consisted of measurement against project objectives, including implementation timeliness, system performance, completeness, accuracy, extensibility, adoption, satisfaction, and the ability to support value improvement. Results: A modular, extensible framework was developed to allocate clinical care costs to individual patient encounters. For example, labor costs in a hospital unit are allocated to patients based on the hours they spent in the unit; actual medication acquisition costs are allocated to patients based on utilization; and radiology costs are allocated based on the minutes required for study performance. Relevant process and outcome measures are also available. A visualization layer facilitates the identification of value improvement opportunities, such as high-volume, high-cost case types with high variability in costs across providers. Initial implementation was completed within 6 months, and all project objectives were fulfilled. The framework has been improved iteratively and is now a foundational tool for delivering high-value care. Conclusions: The framework described can be expeditiously implemented to provide a pragmatic, modular, and extensible approach to understanding and improving healthcare value. © The Author 2014.},
  Author_keywords          = {Activity-based cost accounting; Care costs; Care outcomes; Care quality; Care value},
  Coden                    = {JAMAF},
  Document_type            = {Article},
  Doi                      = {10.1136/amiajnl-2013-002511},
  ISSN                     = {10675027},
  Keywords                 = {accuracy; Article; computer program; cost benefit analysis; health care cost; health care delivery; health care quality; health care system; health care value; hospital subdivisions and components; hospital utilization; outcome assessment; value driven outcome; human; treatment outcome; United States, Cost-Benefit Analysis; Health Care Costs; Humans; Software; Treatment Outcome; Utah},
  Publisher                = {Oxford University Press},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84929397814&doi=10.1136%2famiajnl-2013-002511&partnerID=40&md5=423e7a0c66ceaa35ed79a5d5f71bf4f5}
}

@Article{Kayes2016303,
  Title                    = {Product backlog rating: a case study on measuring test quality in scrum},
  Author                   = {Kayes, I. and Sarker, M. and Chakareski, J.},
  Journal                  = {Innovations in Systems and Software Engineering},
  Year                     = {2016},
  Note                     = {cited By 0},
  Number                   = {4},
  Pages                    = {303-317},
  Volume                   = {12},

  Abstract                 = {Agile software development methodologies focus on software projects which are behind schedule or highly likely to have a problematic development phase. In the last decade, Agile methods have transformed from cult techniques to mainstream methodologies. Scrum, an Agile software development method, has been widely adopted due to its adaptive nature. This paper presents a metric that measures the quality of the testing process in a Scrum process. As product quality and process quality correlate, improved test quality can ensure high-quality products. Also, gaining experience from 8 years of successful Scrum implementation at SoftwarePeople, we describe the Scrum process emphasizing the testing process. We propose a metric Product Backlog Rating (PBR) to assess the testing process in Scrum. PBR considers the complexity of the features to be developed in an iteration of Scrum, assesses test ratings and offers a numerical score of the testing process. This metric is able to provide a comprehensive overview of the testing process over the development cycle of a product. We present a case study which shows how the metric is used at SoftwarePeople. The case study explains some features that have been developed in a Sprint in terms of feature complexity and potential test assessment difficulties and shows how PBR is calculated during the Sprint. We propose a test process assessment metric that provides insights into the Scrum testing process. However, the metric needs further evaluation considering associated resources (e.g., quality assurance engineers, the length of the Scrum cycle). © 2016, Springer-Verlag London.},
  Document_type            = {Article},
  Doi                      = {10.1007/s11334-016-0271-0},
  ISSN                     = {16145046},
  Keywords                 = {Iterative methods; Quality assurance; Software engineering; Testing, Adaptive natures; Agile software development; Development cycle; Development phase; High-quality products; Process quality; Software project; Testing process, Software design},
  Publisher                = {Springer-Verlag London Ltd},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84957689430&doi=10.1007%2fs11334-016-0271-0&partnerID=40&md5=256311a5ccc503ae393198d27e41e73a}
}

@Article{Keith2013227,
  Title                    = {Service-oriented methodology for systems development},
  Author                   = {Keith, M. and Demirkan, H. and Goul, M.},
  Journal                  = {Journal of Management Information Systems},
  Year                     = {2013},
  Note                     = {cited By 8},
  Number                   = {1},
  Pages                    = {227-259},
  Volume                   = {30},

  Abstract                 = {Despite advances in software development practices, organizations struggle to implement methodologies that match the risk in a project environment with needed coordination capabilities. Plan-driven and agile software development methodologies each have strengths and risks. However, most project environments cannot be classified as entirely "risky" or "stable," suggesting the need for hybrid approaches. We leverage a design science approach to implement a novel hybrid methodology based on concepts from the service-oriented paradigm. We motivate the approach using theory on interdependence and coordination, and design the methodology using theory on modularity and service-dominant logic. We also examine the effects of its adoption at a large electrical power company over a three-year period. The results imply that service-oriented theory should be applied to the human processes involved in systems development in order to achieve better fit between project risk, interdependencies, and the selected methodology(ies) in order to improve overall project performance. © 2013 M.E. Sharpe, Inc. All rights reserved.},
  Author_keywords          = {design science; modularization; project management; service orientation},
  Coden                    = {JMISE},
  Document_type            = {Article},
  Doi                      = {10.2753/MIS0742-1222300107},
  ISSN                     = {07421222},
  Keywords                 = {Agile software development; Design science; Hybrid methodologies; Modularizations; Project environment; Service orientation; Service-dominant Logic; Software development practices, Electric utilities; Modular construction; Project management; Software design, Design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84883159155&doi=10.2753%2fMIS0742-1222300107&partnerID=40&md5=395dc90b4a06d2035c4cf31dcf7ea6ad}
}

@Conference{Khalane2013,
  Title                    = {Software quality assurance in Scrum: The need for concrete guidance on SQA strategies in meeting user expectations},
  Author                   = {Khalane, T. and Tanner, M.},
  Year                     = {2013},
  Note                     = {cited By 0},
  Publisher                = {IEEE Computer Society},

  Abstract                 = {The purpose of this study is to identify and present the concerns of project stakeholders in relation to Software Quality Assurance (SQA) in a Scrum environment. Guided by the tenets of Classic Grounded Theory Methodology, this exploratory and inductive case study uncovers SQA concepts related to the main concern of Meeting User Expectations. In trying to resolve the main concern, the Scrum project stakeholders alluded to lack of "Concrete Guidance" on SQA strategies, tools, and techniques in Scrum, The lack of concrete guidance in Scrum requires a development team to devise Innovations which may include Adopting Practices from other methodologies and carefully designing the Process Structure to accommodate the Adopted Practices, ensure Continuous Improvement of the process, and provide an environment for Collaborative Ownership. By demonstrating the incompleteness of Agile methods with particular attention to the lack of concrete guidance in Scrum, the study draws on method tailoring literature to argue for customisation of Scrum. The study further proposes that Scrum needs to be viewed as a framework of 'empty buckets' which need to be filled with situation specific SQA practices and processes in order to meet user expectations © 2013 IEEE.},
  Art_number               = {6707499},
  Author_keywords          = {Agile Software Development; Concrete Guidance; Process Structure; Quality Assurance; Scrum; User Expectations},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICASTech.2013.6707499},
  ISBN                     = {9781479930678},
  ISSN                     = {23269413},
  Journal                  = {IEEE International Conference on Adaptive Science and Technology, ICAST},
  Keywords                 = {Computer software selection and evaluation; Quality assurance; Software engineering; Technology, Agile software development; Continuous improvements; Development teams; Process structures; Project stakeholders; Scrum; Software quality assurance; User expectations, Concretes},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84896482831&doi=10.1109%2fICASTech.2013.6707499&partnerID=40&md5=f774c05c967cc1be80a375ef5de6a10c}
}

@Article{Khalil2013103,
  Title                    = {Agile management practices in a "Lightweight" organization: A case study analysis},
  Author                   = {Khalil, C. and Fernandez, V.},
  Journal                  = {Journal of Modern Project Management},
  Year                     = {2013},
  Note                     = {cited By 2},
  Number                   = {1},
  Pages                    = {103-111},
  Volume                   = {1},

  Abstract                 = {The transition to an "agile" organization remains a challenge. Despite the increasing number of empirical researches regarding "agile" software development, "agile" management and engineering practices are still difficult to implement within large organizations. To our knowledge, there is no specific framework that organizations can rely on to become "agile". Many contextual factors, such as team size and team distribution, seem to constrain the implementation of these emergent methods. From this perspective, how can a "lightweight" team structure become "agile"? What are the major challenges faced by such project teams? The present research aims at analyzing these questions through a longitudinal case study. The study has been conducted in a French telecommunication company that strives to become agile. We adopted a qualitative approach jor collecting and analyzing data. Our findings highlight the reasons that drive organizations to become "agile" and stress on the contingency factors that affect the implementation of "agile" practices and tools in a "lightweight" organizational structure.},
  Author_keywords          = {Ambivalence paradigm; Lean; Process; Product lifecycle},
  Document_type            = {Article},
  ISSN                     = {23173963},
  Publisher                = {Editora Mundos Sociais},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84932618820&partnerID=40&md5=d6fa6aa63721d8565a61f3b7075d327d}
}

@Article{Khan2016147,
  Title                    = {A study on global software development (GSD) and software development processes in Malaysian software companies},
  Author                   = {Khan, A.R. and Akbar, R. and Ten, D.W.H.},
  Journal                  = {Journal of Telecommunication, Electronic and Computer Engineering},
  Year                     = {2016},
  Note                     = {cited By 0},
  Number                   = {2},
  Pages                    = {147-151},
  Volume                   = {8},

  Abstract                 = {Software development processes have been tremendously changed since last two decades. Due to GSD or IT globalization, traditional practices of software development have been replaced by lightweight methodologies; global software industry has been reshaped and has taken new direction. Software companies are struggling to cope with these changes to stay competitive in the international markets. The companies need to understand these changes, their consequences and how to accommodate them. A lot of new processes and approaches of software development have been introduced. It is difficult for companies to select an appropriate process suitable for their project and environment as well as for addressing the challenges associated with GSD. Therefore, it is required to identify the GSD factors that bring change in software processes and also play role in the selection of a suitable process. In this context, the present study has been conducted on Malaysian companies. Therefore, it is necessary to understand the software processes currently being used by the Malaysian companies; how GSD affects these processes and what is the change in processes after GSD. The present study finds the answers of these questions to help in understanding the current software development trends in Malaysian software companies. It will contribute to formulate a process selection framework for Malaysian companies.},
  Author_keywords          = {Agile; Companies; Factors; Global software development; Processes},
  Document_type            = {Article},
  ISSN                     = {21801843},
  Publisher                = {Universiti Teknikal Malaysia Melaka},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84984839714&partnerID=40&md5=07349f9a9224c98bcbf6ee83917bb031}
}

@Article{Khan201475,
  Title                    = {Enhancing software reusability through value based software repository},
  Author                   = {Khan, M.Z. and Khan, M.N.A.},
  Journal                  = {International Journal of Software Engineering and its Applications},
  Year                     = {2014},
  Note                     = {cited By 0},
  Number                   = {11},
  Pages                    = {75-88},
  Volume                   = {8},

  Abstract                 = {Profitability is prime goal of every software organization. In the recent years, software development paradigm has vastly changed due to rapidly changing business requirements. Now customers demand for their desired products to be delivered in a minimal timeframe. To cater for these demands, different rapid development techniques termed as agile development and reusability phenomena are introduced in the software industry. With the help of reusable components, developing and deploying software products can be much easier and economical. Such approaches can help save cost and working hours so that the developing company can utilize its scare resources on other projects. But achieving accurate and precise reusability is not a piece of cake because along with economical and time saving benefits it comes with some shortcomings, such as it can increase the system complexity, can harm the architecture, degrade quality of the system etc. A proper storage facility of reusable components is required where an organization can save its important data and retrieve it when required. A wide range of standard repositories are used in various organizations for this purpose where important data is stored and retrieved. But in reality, every repository contains huge volumes of data and mostly no proper business standards of storing mechanism are applied. Though there are some repository maintaining software available in the market, but they only provide mechanism for storing artifacts. Maintaining the huge data volumes necessitates providing ample search assistance and putting in place precise reusable components suggestion procedure; therefore, researchers have to sift through loads of volumes of data within the repository for locating the intended component. In this paper, we discuss a novel concept of Central Value Based Software Repository (CBVSR). The proposed approach can assist users in finding the more appropriate artifact as it provides the best possible match against the user query. Proper standards have been followed in storing, deleting, amending and discarding data from the CBVSR. Data quality, security and integrity have been taken care of and indexing, tagging and classification are performed to provide technical assistance to developers. © 2014 SERSC.},
  Author_keywords          = {Central value based repository; Ranking and keyword tagging; Software reusability; Value based artifacts},
  Document_type            = {Article},
  Doi                      = {10.14257/ijseia.2014.8.11.07},
  ISSN                     = {17389984},
  Publisher                = {Science and Engineering Research Support Society},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84913597657&doi=10.14257%2fijseia.2014.8.11.07&partnerID=40&md5=da9ed7fcf50c03c0153843630da2c989}
}

@Conference{Khanh201715,
  Title                    = {Human stories - A new written technique in Agile Software requirements},
  Author                   = {Khanh, N.T. and Daengdej, J. and Arifin, H.H.},
  Year                     = {2017},
  Note                     = {cited By 0},
  Pages                    = {15-22},
  Publisher                = {Association for Computing Machinery},

  Abstract                 = {Software requirement is one of the most important issues for starting any software projects. Especially in Agile software development, it is hard to be specific and complete, while customers/users keep asking about time and cost to finish their project. Fortunately, some researchers found that by improving the quality of requirements, the effort of estimation can be reduced. In this paper, we due with the quality in Agile software requirements focusing on their different written techniques. User-story and persona-story are two most famous written methods to deal with Agile requirement quality. While user-story focuses on the holistic view of the users that playing with role, persona-story focuses on the detailed view of the individuals that playing with people. However; throughout our research and other arguments, both of them have their strengths and weaknesses. Some researchers found that there is a coherent relationship between them, but the agreements are still the discussions. Therefore, we introduce human-story as a promising written technique to overcome the disadvantages of both existing stories, to enhance the key benefits of them and to fill the gap between differences. INVEST Grid is used to evaluate the quality of Agile requirements and to give the comparison among three techniques, the results show that persona-story and human-story have the higher scale values than user-story in most of the type of software requirements. Because the Grid cannot give us a clear comparative result to the significant different among three stories, the introduced Agile requirement checklist makes sure our proposals meet our goal. The results displays the percentage of the completeness in human-story is 84% while user-story and persona-story are 44% and 56%. © 2017 ACM.},
  Author_keywords          = {Agile requirement quality checklist; Agile software requirement; Human-story; INVEST Grid; Persona; Persona-story; Role; User-story},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/3056662.3056680},
  ISBN                     = {9781450348577},
  Journal                  = {ACM International Conference Proceeding Series},
  Keywords                 = {Application programs; Requirements engineering; Software design; Software engineering, Agile requirements; Agile softwares; Human-story; INVEST Grid; Persona; Persona-story; Role; User stories, Computer software},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85019400724&doi=10.1145%2f3056662.3056680&partnerID=40&md5=b2b80f7f5e1bdd22d2ab3bbaad0a21f6}
}

@Conference{Khatri2015,
  Title                    = {Evolving a risk-free, requirement centric and goal oriented software development life cycle model},
  Author                   = {Khatri, S.K. and Garg, A.},
  Year                     = {2015},
  Note                     = {cited By 0},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Software is a general term for the various kinds of programs used to operate computers and various related devices. Software mainly consists of carefully-organized instructions and code written by developers in any of various special programming languages. Software impacts on the general public and society keeps on being profound. As the significance of software development model develops, the software community consistently attempts to develop new technologies that will make it much faster, easier, and less expensive to construct good-quality software's. The software development life cycle model is a framework which consists of sequence of activities followed by the system designers and software developers. It comprises of a sequence of various different phases or stages in which every phase of the SDLC utilizes the outcomes of the previous phase. Previously developed models such as Incremental model, Spiral Model, Prototyping model, Agile Models, waterfall model, RAD model, Transformation model were successful in the early stages of software development cycle which later brings out some obstacles such as less customer satisfaction as per their requirements , high risk and cost involved, time complexity and many more. The present research emphasizes a new model which focuses on full-filling the targeted objectives based on the better understanding of customer's requirements. © 2015 IEEE.},
  Art_number               = {7359262},
  Author_keywords          = {customer satisfaction; Requirement centric; Software Development Life Cycle (SDLC); Software Engineering},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICRITO.2015.7359262},
  ISBN                     = {9781467372312},
  Journal                  = {2015 4th International Conference on Reliability, Infocom Technologies and Optimization: Trends and Future Directions, ICRITO 2015},
  Keywords                 = {Computer software; Customer satisfaction; Life cycle; Sales; Software design; Software engineering, Customer's requirements; Incremental modeling; Requirement centric; Software community; Software development cycles; Software development life cycle; Software development models; Transformation model, Software prototyping},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84961845598&doi=10.1109%2fICRITO.2015.7359262&partnerID=40&md5=c64e41b09f0bdd7940f5bb8f67401c66}
}

@Conference{Kim2017377,
  Title                    = {Our journey to becoming agile: Experiences with agile transformation in Samsung electronics},
  Author                   = {Kim, S. and Lee, H. and Kwon, Y. and Yu, M. and Jo, H.},
  Year                     = {2017},
  Editor                   = {Murphy G.C., Reeves S., Potanin A., Dietrich J.},
  Note                     = {cited By 0},
  Pages                    = {377-380},
  Publisher                = {IEEE Computer Society},

  Abstract                 = {For traditional consumer electronics companies, it is important that requirements are clearly described and design based on the requirement analysis is well-defined in the early phases of a project, because well-defined design and interfaces guarantee that all necessary tasks for the project are identified and assigned to the appropriate teams to maximize the constructive interactions among multiple teams. There are several benefits to this; however, there are also some weaknesses. Changing or adding features are usually not permitted, and 'organizational silos' that decrease efficient cooperation among teams are inadvertently formed. We thought that our company could overcome these weaknesses using agile development methodologies, so we decided to transform our organization to become more agile from being reliant on traditional development process. In this paper, we describe our efforts to achieve this agile transformation including our road map, process revision, master plan to adopt engineering practices, cross functional team formations, and cultivation of an agile culture. © 2016 IEEE.},
  Art_number               = {7890616},
  Author_keywords          = {Agile Office; Agile Transformation; Scrum},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/APSEC.2016.064},
  ISBN                     = {9781509055753},
  ISSN                     = {15301362},
  Journal                  = {Proceedings - Asia-Pacific Software Engineering Conference, APSEC},
  Keywords                 = {Engineering; Industrial engineering, Agile development methodologies; Agile Office; Agile transformations; Cross-functional teams; Engineering practices; Requirement analysis; Samsung electronics; Scrum, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85018471726&doi=10.1109%2fAPSEC.2016.064&partnerID=40&md5=73cfb375bda2945a7669a70a9875487e}
}

@Conference{Kizaki2014662,
  Title                    = {Software development PBL focusing on communication using scrum},
  Author                   = {Kizaki, S. and Tahara, Y. and Ohsuga, A.},
  Year                     = {2014},
  Note                     = {cited By 3},
  Pages                    = {662-669},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {In this paper, we improved the PBL (Project-Based Learning) environment aiming at the collaborative-software development education by industry-university cooperation. In the fiscal year 2011, the agile technique adopted as the software development process, and the small-scale project was tried. However, there were problems like the shortage of communication between members, the customers and difference of a member's technical capabilities and the burden was placed to the individual. In the fiscal year 2012/2013, in order to solve these problems, the development process 'Scrum' was adopted. We analyzed the result of projects. In the result, Scrum was being able to perform problem solving in which the member's diversity was harnessed. It could carry out improved relations as the team by the positive participation in customer's projects. And, it could build the communication base by 'making the place team'. Therefore, we understood using Scrum for success of projects. © 2014 IEEE.},
  Art_number               = {6913382},
  Author_keywords          = {Agile software development; Project-based Learning(PBL); Scrum},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/IIAI-AAI.2014.138},
  ISBN                     = {9781479941735},
  Journal                  = {Proceedings - 2014 IIAI 3rd International Conference on Advanced Applied Informatics, IIAI-AAI 2014},
  Keywords                 = {Groupware; Problem solving, Agile software development; Development process; Fiscal years; Project based learning; Scrum; Software development process; Technical capabilities, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84918581748&doi=10.1109%2fIIAI-AAI.2014.138&partnerID=40&md5=d9df8e417a82b0c3474e2cab6541fd7a}
}

@Conference{Klein201620,
  Title                    = {Agile engineering in mechatronic education: Interdisciplinary development of a mechatronic system using Scrum},
  Author                   = {Klein, T.P. and Drescher, B. and Reinhart, G.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {20-25},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Agile procedures (e.g. Scrum) are applied in software engineering increasingly. These procedures enhance interdisciplinary collaboration, improvements of lead times and reduction of development costs. Hence, latest research activities are transferring such flexible techniques into machinery and plant construction, in order to cope with the rising software integration into mechatronic modules. As agile procedures have been omitted in mechanical engineering yet, we introduce a novel concept of a learning platform about Agile Engineering. This paper presents the background and experiences of Agile Engineering as well as the setting, the results and first educational achievements within our academic courses. © 2016 IEEE.},
  Art_number               = {7547109},
  Author_keywords          = {Agility; Development Process; Lean Product Development; Learning Platform; Mechatronics; Scrum},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/MECATRONICS.2016.7547109},
  ISBN                     = {9781509017874},
  Journal                  = {2016 11th France-Japan and 9th Europe-Asia Congress on Mechatronics, MECATRONICS 2016 / 17th International Conference on Research and Education in Mechatronics, REM 2016},
  Keywords                 = {E-learning; Education; Machinery; Mechatronics; Software engineering, Agility; Development process; Lean product development; Learning platform; Scrum, Engineering education},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84986199061&doi=10.1109%2fMECATRONICS.2016.7547109&partnerID=40&md5=05a74ea42a76cb7449ed1572b248f55b}
}

@Conference{Klepper20155,
  Title                    = {Introducing Continuous Delivery of Mobile Apps in a Corporate Environment: A Case Study},
  Author                   = {Klepper, S. and Krusche, S. and Peters, S. and Bruegge, B. and Alperowitz, L.},
  Year                     = {2015},
  Note                     = {cited By 4},
  Pages                    = {5-11},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Software development is conducted in increasingly dynamic business environments. Organizations need the capability to develop, release and learn from software in rapid parallel cycles. The abilities to continuously deliver software, to involve users, and to collect and prioritize their feedback are necessary for software evolution. In 2014, we introduced Rugby, an agile process model with workflows for continuous delivery and feedback management, and evaluated it in university projects together with industrial clients. Based on Rugby's release management workflow we identified the specific needs for project-based organizations developing mobile applications. Varying characteristics and restrictions in projects teams in corporate environments impact both process and infrastructure. We found that applicability and acceptance of continuous delivery in industry depend on its adaptability. To address issues in industrial projects with respect to delivery process, infrastructure, neglected testing and continuity, we extended Rugby's workflow and made it tailor able. Eight projects at Cap Gemini, a global provider of consulting, technology and outsourcing services, applied a tailored version of the workflow. The evaluation of these projects shows anecdotal evidence that the application of the workflow significantly reduces the time required to build and deliver mobile applications in industrial projects, while at the same time increasing the number of builds and internal deliveries for feedback. © 2015 IEEE.},
  Art_number               = {7167166},
  Author_keywords          = {Agile Methods; Configuration Management; Continuous Delivery; Continuous Integration; Release Management; Software Evolution; User Feedback; User Involvement},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/RCoSE.2015.9},
  ISBN                     = {9781479919345},
  Journal                  = {Proceedings - 2nd International Workshop on Rapid Continuous Software Engineering, RCoSE 2015},
  Keywords                 = {Mobile computing; Mobile telecommunication systems; Software design; Software engineering, Agile methods; Configuration management; Continuous Delivery; Continuous integrations; Release management; Software Evolution; User feedback; User involvement, Project management},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84945892254&doi=10.1109%2fRCoSE.2015.9&partnerID=40&md5=e071de9222004e5eb1dcbca8d630f7bc}
}

@Article{Koehler2015278,
  Title                    = {An impact-oriented maturity model for IT-based case management},
  Author                   = {Koehler, J. and Woodtly, R. and Hofstetter, J.},
  Journal                  = {Information Systems},
  Year                     = {2015},
  Note                     = {cited By 2},
  Pages                    = {278-291},
  Volume                   = {47},

  Abstract                 = {Case management comprises various complex activities. Consequently, case managers have to balance very diverging requirements and needs, while at the same time facing increasingly complex decisions. Case management software systems (CMS) provide capabilities such as information assessment and handling, decision and collaboration management as well as flexible process guidance to support case managers. When introducing a CMS into an organization, a maturity model of IT-based case management helps in mastering different levels of technology adoption by exploiting technological benefits and carefully addressing associated risks. In this paper, we propose the C3M maturity model for IT-based case management that links maturity levels with sets of capabilities that are typical for case management in social work, health care, and the handling of complex claims in insurance. The model focuses on the impact of technology and is linked to a map of benefits and risks across five impact areas. Each impact area is characterized by six impact factors that we consider as especially important when managing IT technology adoption within case management. © 2013 Elsevier Ltd. All rights reserved.},
  Author_keywords          = {Agile business processes; Case management; Maturity model; Technology impact},
  Coden                    = {INSYD},
  Document_type            = {Article},
  Doi                      = {10.1016/j.is.2013.12.003},
  ISSN                     = {03064379},
  Keywords                 = {Business Process; Case management; Maturity model; Technology impact},
  Publisher                = {Elsevier Ltd},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84908213138&doi=10.1016%2fj.is.2013.12.003&partnerID=40&md5=0d049e3de7e12942c1cfd96f093f322b}
}

@Article{Korhonen2013599,
  Title                    = {Evaluating the impact of an agile transformation: A longitudinal case study in a distributed context},
  Author                   = {Korhonen, K.},
  Journal                  = {Software Quality Journal},
  Year                     = {2013},
  Note                     = {cited By 7},
  Number                   = {4},
  Pages                    = {599-624},
  Volume                   = {21},

  Abstract                 = {Many software-development organizations have recently started to adopt agile practices in order to benefit from the improvements they clearly bring, in terms of production speed and software quality, for example. However, in a large, distributed organization, such as Nokia Siemens Networks, an agile transformation may be a long-term, complex process, and therefore, evaluating the benefits achieved, and measuring the success of the change, can be difficult, especially in the early phases of the transformation. This paper is based on the results of a case study on the impact introducing agile practices actually had in a large, software-development organization, part of Nokia Siemens Networks. The impact of this agile transformation was evaluated in terms of how well it succeeded in achieving the goals set by the management before the transformation started. This longitudinal study included two separate analyses, made at 6 monthly intervals, which measured what agile practices were really in use in the organization, and what effects, if any, were visible in terms of the goals which had been set by the management The 6 monthly analyses included defect data metrics and opinion surveys of the personnel directly involved in the transformation. The study showed two things: firstly, that the introduction of agile practices does have the beneficial effects that one would expect, and secondly, that, using this kind of study, it is not only possible to evaluate the impact that the adoption of agile practices has in a large, established software-development company, but also that the effects are visible at a surprisingly early stage. © 2012 Springer Science+Business Media New York.},
  Author_keywords          = {Agile adoption; Agile software development; Agile transformation; Defect management; Distributed development},
  Document_type            = {Article},
  Doi                      = {10.1007/s11219-012-9189-4},
  ISSN                     = {09639314},
  Keywords                 = {Agile adoptions; Agile software development; Agile transformations; Defect management; Distributed development, Complex networks; Computer software selection and evaluation; Defects; Human resource management; Software design, Metadata},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84883463661&doi=10.1007%2fs11219-012-9189-4&partnerID=40&md5=3c1828a0079a1fbae58dc59fd5e4956f}
}

@Conference{Korošec2015,
  Title                    = {Supporting the transition to an agile test matrix},
  Author                   = {Korošec, R. and Pfarrhofer, R.},
  Year                     = {2015},
  Note                     = {cited By 1},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {The transition of AVL's software development unit towards lean and agile practices on team and enterprise level (implementing the scaled agile framework SAFe) requires a change in testing role, set and practices. We describe the changes of the testing strategy in reference to the agile test matrix - moving the focus of testing from system acceptance tests towards functional and unit tests. Furthermore, a supporting automated testing procedure was adopted to enable the splitting of tasks between different, globally distributed teams. With a test distribution tool, we are optimizing test execution time and test resource usage to meet the needs of the short agile cadence. The lessons learned so far during this ongoing project of tool implementation are shared. We conclude with an outlook on a research project that examines ways of systematic testing of nonfunctional requirements © 2015 IEEE.},
  Art_number               = {7102632},
  Author_keywords          = {Agile Test Practices; Automated Test; Component Test; Nonfunctional Requirements; Unit Test},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICST.2015.7102632},
  ISBN                     = {9781479971251},
  Journal                  = {2015 IEEE 8th International Conference on Software Testing, Verification and Validation, ICST 2015 - Proceedings},
  Keywords                 = {Software design; Software engineering; Software testing; Testing; Verification, Agile Test Practices; Automated test; Component tests; Non-functional requirements; Unit tests, Acceptance tests},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84935145218&doi=10.1109%2fICST.2015.7102632&partnerID=40&md5=aaf0598ae5f1b841294b80aa8a3b1167}
}

@Article{Košinár201642,
  Title                    = {Formal Knowledge Framework for Software Processes Architecture},
  Author                   = {Košinár, M.A. and Czopik, J. and Štolfa, J.},
  Journal                  = {Frontiers in Artificial Intelligence and Applications},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {42-56},
  Volume                   = {280},

  Abstract                 = {Last decades have introduced different improvements into software process modeling yet none has proven itself as a silver bullet; software development community has proposed various solutions from rigid prescriptive processes to agile methods, in the end, however, every good software process implementation require process modeling that can be used for different purposes like process auditing, analysis, and evaluation. This paper discusses application of explicit knowledge profiles based on process meta-model within software process modeling, alignment with visual process modeling, and further analysis with simulation and reverse engineering methods. © 2016 The authors and IOS Press. All rights reserved.},
  Author_keywords          = {Knowledge Modeling; OWL; Petri Nets; Process Mining; Reverse Engineering Software Process; UML},
  Document_type            = {Conference Paper},
  Doi                      = {10.3233/978-1-61499-611-8-42},
  Editor                   = {Welzer T., Kiyoki Y., Yoshida N., Riva G., Wiederhold B.K., Wiederhold M.D., Thalheim B., Jaakkola H.},
  ISBN                     = {9781614996101},
  ISSN                     = {09226389},
  Keywords                 = {Application programs; Computer software; Petri nets; Process engineering; Reverse engineering; Software engineering, Development community; Engineering software; Explicit knowledge; Knowledge model; Process meta models; Process mining; Software process; Software process modeling, Software design},
  Publisher                = {IOS Press},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84956604382&doi=10.3233%2f978-1-61499-611-8-42&partnerID=40&md5=e76d5cc3192fdc5c9339073cbfe11bb6}
}

@Conference{Kouzari2015151,
  Title                    = {Critical success factors and barriers for lightweight software process improvement in agile development: A literature review},
  Author                   = {Kouzari, E. and Gerogiannis, V.C. and Stamelos, I. and Kakarontzas, G.},
  Year                     = {2015},
  Editor                   = {Lorenz P., Maciaszek L., Maciaszek L.},
  Note                     = {cited By 0},
  Pages                    = {151-159},
  Publisher                = {SciTePress},

  Abstract                 = {The majority of software development companies are significantly benefitted by adopting software process improvement (SPI). This has been extensively addressed both in terms of research and established standards. In particular, the need for SPI in the context of Small and Medium-sized Enterprises (SMEs) led a lot of researchers to focus on this area. SMEs struggle daily to survive in a very competitive environment and their distinguishing characteristics such as the small number of employees, the flat and small organizational structure and the flexibility that governs them make it hard for them to adopt and implement SPI. On the same spirit, their distinguishing characteristics are also those that make SMEs an ideal environment for the adoption of agile methodologies. The agility that governs SMEs allows flexibility in every process they apply and, thus, promotes lightweight SPI approaches in order to remain on the battle fields of competition. In this article, we examine the special characteristics SMEs have and highlight critical success factors that should be taken advantage of and barriers that could be avoided during SPI, as they are presented in the relevant literature. In addition, we examine how critical success factors of SPI could positively affect a firm's Return on Investment and, consequently, help the firm survive in the long-term.},
  Author_keywords          = {Agile development; Barriers; Critical success factors; Return on investment; Software process improvement},
  Document_type            = {Conference Paper},
  ISBN                     = {9789897581144},
  Journal                  = {ICSOFT-EA 2015 - 10th International Conference on Software Engineering and Applications, Proceedings; Part of 10th International Joint Conference on Software Technologies, ICSOFT 2015},
  Keywords                 = {Application programs; Enterprise resource planning; Process engineering; Profitability; Software engineering, Agile development; Barriers; Critical success factor; Re-turn-on; Software Process Improvement, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84965074509&partnerID=40&md5=d37cb3d85ab50169b94924a0ed51c67f}
}

@Conference{Kroll2013262,
  Title                    = {Adopting agile methods for follow-the-sun software development},
  Author                   = {Kroll, J. and Audy, J.},
  Year                     = {2013},
  Note                     = {cited By 0},
  Pages                    = {262-270},
  Volume                   = {1},

  Abstract                 = {Follow-the-sun (FTS) is a special case of Global Software Development (GSD) in which development is distributed around twenty-four hours of work per day in order to reduce the overall project completion time. However, FTS is barely used by software development companies as they find it difficult to put FTS into practice. Recent studies have suggested agile methods as a promising approach to implement FTS. Thus, in this study we examine how agile methods can collaborate with FTS. We present an experience report describing the challenges and lessons learned by applying the Scrum method to a software development project. Moreover, we discuss how agile methods can be used effectively for FTS software development aiming to target the project managers who want to better reap the benefits of FTS. © (2013) by the AIS/ICIS Administrative Office All rights reserved.},
  Author_keywords          = {Agile methods; Follow-the-sun; Global software development; Software engineering},
  Document_type            = {Conference Paper},
  ISBN                     = {9781629933948},
  Journal                  = {19th Americas Conference on Information Systems, AMCIS 2013 - Hyperconnected World: Anything, Anywhere, Anytime},
  Keywords                 = {Agile methods; Experience report; Follow-the-sun; Global software development; Hours of works; Project completion time; Project managers; Software development projects, Information systems; Software engineering, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893307150&partnerID=40&md5=7c23aad20271f93acca84435260f293c}
}

@Conference{Kropp20161003,
  Title                    = {Collaboration and human factors in software development: Teaching agile methodologies based on industrial insight},
  Author                   = {Kropp, M. and Meier, A.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {1003-1011},
  Publisher                = {IEEE Computer Society},
  Volume                   = {10-13-April-2016},

  Abstract                 = {Recent studies show that many companies have successfully adopted agile methodologies. In this paper the authors present results of their quantitative and qualitative studies, showing that only experienced companies apply agile collaboration practices properly. The studies also suggest that successful professional agile teams tend to use more collaboration practices and consciously live the agile values. This leads to the conclusion that applying the collaborative practices and living the agile values is difficult. Thus we educators should pay special attention to teaching these practices and values in courses on agile software development. This paper presents how agile collaboration is being taught in the classroom in a fourth semester software engineering module and explains the underlying assumptions. We use an agile coaching game as introduction to Scrum and discuss the mechanics of agile teams in the classroom. We present the setup of a hands-on agile student project with large student teams and the observations we made. Last but not least, we show and discuss how modern online collaboration tools act as enablers for agile collaboration in the classroom. © 2016 IEEE.},
  Art_number               = {7474675},
  Author_keywords          = {Agile; Collaboration; Collaboration tool; Software Development},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/EDUCON.2016.7474675},
  ISBN                     = {9781467386333},
  ISSN                     = {21659559},
  Journal                  = {IEEE Global Engineering Education Conference, EDUCON},
  Keywords                 = {Curricula; Education; Engineering education; Software design; Students; Teaching, Agile; Agile Methodologies; Agile software development; Collaboration; Collaboration practices; Collaboration Tool; Collaborative practices; Online collaboration tools, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84994651251&doi=10.1109%2fEDUCON.2016.7474675&partnerID=40&md5=348e23e28ae7d09e0b8d12706274ba84}
}

@Conference{Kropp20141019,
  Title                    = {New sustainable teaching approaches in software engineering education: How agile methods influence teaching software engineering},
  Author                   = {Kropp, M. and Meier, A.},
  Year                     = {2014},
  Note                     = {cited By 1},
  Pages                    = {1019-1022},
  Publisher                = {IEEE Computer Society},

  Abstract                 = {Ten years ago, it was usual that projects in the software industry ran on for years before the customer was able to lay his hands on the product he had ordered. This often resulted in delays, budget overruns and disappointing deliverables. During the last decade, the Agile approach has been taking over software project management, shortening product development cycles from a few years to a few weeks or even days. Recently, the agile approach has even been used for developing a new car which runs 100 miles per gallon [1]. Several recent surveys [2], [3] show that agile methodologies like Scrum, Extreme Programming or Kanban have successfully been adopted by many companies to develop software. However, agile methodologies do not come for free. A different set of skills, or agile practices as they are called, are necessary for the software engineers in order to be able to sucessfully deliver high-quality software at the end of every iteration. The same surveys show that only few of the agile practices are used and even fewer are applied consequently and thoroughly. This is to a great extent due to the lack of skilled software engineers. Although teaching agile software development has drawn some attention in recent research, we do not yet seem to be able to 'deliver' the appropriately skilled engineers. What is the reason for this, and more importantly, how can we improve the situation? In this position paper we propose a more holistic approach for teaching agile software engineering, in which the required agile practices and values are not only integrated theoretically but also practically applied and repeated until they become a habit to students and software engineers. © 2014 IEEE.},
  Art_number               = {6826229},
  Author_keywords          = {Agile Processes; Education; Openness; Software Engeering},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/EDUCON.2014.6826229},
  ISBN                     = {9781479931910},
  ISSN                     = {21659559},
  Journal                  = {IEEE Global Engineering Education Conference, EDUCON},
  Keywords                 = {Budget control; Education; Engineering education; Engineers; Iterative methods; Product development; Project management; Surveys; Sustainable development, Agile Methodologies; Agile process; Agile software development; Agile software engineering; High-quality software; Openness; Product development cycle; Software project management, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84903451963&doi=10.1109%2fEDUCON.2014.6826229&partnerID=40&md5=a826943c18d019119f3563c8ebcf4829}
}

@Conference{Kropp2013179,
  Title                    = {Teaching agile software development at university level: Values, management, and craftsmanship},
  Author                   = {Kropp, M. and Meier, A.},
  Year                     = {2013},
  Note                     = {cited By 15},
  Pages                    = {179-188},

  Abstract                 = {Agile methodologies have come a long way over the last decade. Several recent surveys show that agile methodologies like Scrum, Extreme Programming and, more recently, Kanban have been successfully adopted by many companies to develop their software. However, the same surveys show that only few of the agile practices are used and even fewer are applied consequently and thoroughly. This is to a great extent due to the lack of skilled personnel. Although teaching agile software development has drawn some attention in recent research and has been discussed in several papers, we do not yet seem to be able to 'deliver' the appropriately skilled personnel. What is the reason for this, and more importantly, how can we improve the situation? In this paper we propose a more holistic approach for teaching agile software development, in which the required agile practices and values are not only integrated theoretically into our courses but also practically applied and repeated until they become a habit to our graduates. The proposed concept was realized in a new Software Engineering course held at Zurich University of Applied Sciences during 2012. The evaluation shows very encouraging results, but also leaves some challenges and problems to be solved. © 2013 IEEE.},
  Art_number               = {6595249},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/CSEET.2013.6595249},
  ISBN                     = {9781467351409},
  ISSN                     = {10930175},
  Journal                  = {Software Engineering Education Conference, Proceedings},
  Keywords                 = {Agile Methodologies; Agile software development; EXtreme Programming; Holistic approach; Skilled personnel; Software engineering course; University levels; University of applied science, Engineering education; Surveys, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84884973105&doi=10.1109%2fCSEET.2013.6595249&partnerID=40&md5=319a917bb2766b6c806d9b8cec9c2d3d}
}

@Article{Kropp2016416,
  Title                    = {Agile practices, collaboration and experience an empirical study about the effect of experience in agile software development},
  Author                   = {Kropp, M. and Meier, A. and Biddle, R.},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {416-431},
  Volume                   = {10027 LNCS},

  Abstract                 = {Agile Software Development has been around for more than fifteen years and is now widespread. How does experience effect the application of agile methods in organizations and what are the implications on the individual and organizational culture? This paper presents indepth analysis of the Swiss Agile Study 2014. Switzerland offers an illustrative microcosm of software development, with a range of industry domains and sizes, and well-educated and internationally aware professionals. The study included more than a hundred professionals and managers, contacted through professional and industry associations. The topics addressed included experience with Agile development, motivations for adopting it, barriers perceived, specific practices used, and specific benefits realized. Analysis of the data identified important trends and differences. Agile experience seems to be an important factor, which affects many aspects of practice and workplace culture. More troubling is that it appears stress and overwork may be common among Agile professionals. All these findings illustrate important differences between Agile processes as prescribed, and as actually practiced. © Springer International Publishing AG 2016.},
  Author_keywords          = {Agile; Collaboration; Organizational culture; Software practices; Software process},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-49094-6_28},
  Editor                   = {Amasaki S., Mikkonen T., Felderer M., Abrahamsson P., Duc A.N., Jedlitschka A.},
  ISBN                     = {9783319490939},
  ISSN                     = {03029743},
  Keywords                 = {Process engineering; Software engineering, Agile; Collaboration; Organizational cultures; Software practices; Software process, Software design},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84998772418&doi=10.1007%2f978-3-319-49094-6_28&partnerID=40&md5=c9ee4ff16bec84d10cf6f559436b1040}
}

@Conference{Kropp2016118,
  Title                    = {Teaching agile collaboration skills in the classroom},
  Author                   = {Kropp, M. and Meier, A. and Biddle, R.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {118-127},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Agile methodologies like Scrum or Extreme Programming have come a long way over the last fifteen years. Recent quantitative studies show that many companies have successfully adopted agile methodologies. It was found that in agile software development, experience leads to collaboration. It could also be shown that successful professional agile teams tend to use more collaboration practices. In 2013, the new Computer Science studies at the University of Applied Sciences were started. For this, a new curriculum was developed. This paper presents and discusses the lectures, labs and educational software projects in the programming and software engineering modules. It is discussed how agile collaboration and collaboration practices can be taught in the classroom. For this, the setup and observations of an agile student project are presented and different online collaboration tools are discussed. It is argued that software engineering education benefits significantly from embracing the modern collaboration tools the Internet has made available. © 2016 IEEE.},
  Art_number               = {7474474},
  Author_keywords          = {Agile; Collaboration; Curriculum; Software Development},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/CSEET.2016.27},
  ISBN                     = {9781509007653},
  Journal                  = {Proceedings - 2016 IEEE 29th Conference on Software Engineering Education and Training, CSEEandT 2016},
  Keywords                 = {Curricula; Education; Engineering education; Software design; Teaching, Agile; Agile software development; Collaboration; Collaboration practices; Collaboration skills; Educational software; Online collaboration tools; University of applied science, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84974560105&doi=10.1109%2fCSEET.2016.27&partnerID=40&md5=120445e8c7c6ef76df8e1c6238d1d1b6}
}

@Conference{Kropp2014139,
  Title                    = {Teaching and learning agile collaboration},
  Author                   = {Kropp, M. and Meier, A. and Mateescu, M. and Zahn, C.},
  Year                     = {2014},
  Note                     = {cited By 8},
  Pages                    = {139-148},
  Publisher                = {IEEE Computer Society},

  Abstract                 = {Agile methods are widely adopted in software development. They are based on agile principles that sharply contrast to traditional command-and-control management methods. Such methods emphasize the importance of highly interactive self-organizing teams and close collaboration of all stakeholders, as well as values like courage, openness and respect. However, recent studies show that graduates and undergraduates of computer science often lack the collaborative and communicative skills necessary for agile methods and, thus, are not yet well enough educated for agile development approaches. Therefore, new approaches or more adequate educational methods for teaching the necessary communication and collaboration skills need to be developed. In a recent interview study, the authors elicited specific collaboration and communication skills needed in agile teams. In this paper, we present results from this study and discuss teaching concepts for collaboration skills from both engineering and psychological points of view. We suggest an approach on how to integrate these concepts into university courses, that focuses on active learning of agile collaboration. We have started implementing the proposed concept in a software engineering course and report on the experiences we have made and on the challenges that we have encountered. © 2014 IEEE.},
  Art_number               = {6816791},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/CSEET.2014.6816791},
  ISBN                     = {9781479949700},
  Journal                  = {2014 IEEE 27th Conference on Software Engineering Education and Training, CSEE and T 2014 - Proceedings},
  Keywords                 = {Artificial intelligence; Communication; Engineering education, Collaboration skills; Command-and-control; Communication and collaborations; Communication skills; Management method; Self-organizing teams; Software engineering course; Teaching and learning, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84902207200&doi=10.1109%2fCSEET.2014.6816791&partnerID=40&md5=a51ca4a656c6424fb4e76d1b239cbc59}
}

@Article{Krouwel20163,
  Title                    = {Formalizing organization implementation},
  Author                   = {Krouwel, M.R. and Land, M.O. and Offerman, T.},
  Journal                  = {Lecture Notes in Business Information Processing},
  Year                     = {2016},
  Note                     = {cited By 1},
  Pages                    = {3-18},
  Volume                   = {252},

  Abstract                 = {Our research program aims at finding building blocks that are able to deal quickly with the constant change that organizations face. In order to do so, a deeper understanding of possible organization implementation variants is necessary, as well as the implications on the operation and IT support of organizations. In earlier research, we have composed a list of Organization Implementation Variables to informedly decide upon organization implementation, enabling traceability in governing enterprise and IT transformations. This list has been validated and extended by four practical case studies and has been formalized afterwards and validated by prototyping. In this paper the resulting framework is presented which (a) is broader and more detailed than before, (b) has a sound theoretical basis, and (c) contains precise and validated definitions of the variables itself. This paper shows that the framework is not only suitable for organization modeling, but also has possibilities for designing software in which implementation choices can be made explicit and variable. This paper also provides insights in the implications of implementation choices on the operation of an organization. © Springer International Publishing Switzerland 2016.},
  Author_keywords          = {Agile; DEMO; Enterprise engineering; Organization implementation},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-39567-8_1},
  Editor                   = {Aveiro D., Gouveia D., Pergl R.},
  ISBN                     = {9783319395661},
  ISSN                     = {18651348},
  Keywords                 = {Agile; Building blockes; Case-studies; DEMO; Designing softwares; Enterprise engineering; Organization model; Research programs, Data processing},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84976626590&doi=10.1007%2f978-3-319-39567-8_1&partnerID=40&md5=3732c6f5a2608585371150dbbefcc374}
}

@Conference{Krusche201442,
  Title                    = {Rugby: An agile process model based on continuous delivery},
  Author                   = {Krusche, S. and Alperowitz, L. and Bruegge, B. and Wagner, M.O.},
  Year                     = {2014},
  Note                     = {cited By 15},
  Pages                    = {42-50},
  Publisher                = {Association for Computing Machinery, Inc},

  Abstract                 = {In this paper we introduce Rugby, an agile process model that includes workows for the continuous delivery of software. It allows part-timers to work in a project-based organization with multiple projects for the rapid delivery of prototypes and products. We show how continuous delivery improves the development process in two ways: First, Rugby improves the interaction between developers and customers with a continuous feedback mechanism. Second, Rugby improves the coordination and communication with stakeholders and across multiple teams in project-based organizations with event based releases. We have evaluated Rugby in two large university software engineering capstone courses with up to 100 participants working in 10 simultaneous projects with industry partners in 2012 and 2013. We describe the metrics used in the evaluation. First results indicate that Rugby increases the frequency and quality of the interaction between developers and customers leading to improved results in the delivered products.},
  Author_keywords          = {Agile Methods; Communication Models; Continuous Delivery; Continuous Integration; Executable Prototypes; Feedback; Release Management; Software Evolution; User Involvement; Version Control System},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2593812.2593818},
  ISBN                     = {9781450328562},
  Journal                  = {1st International Workshop on Rapid Continuous Software Engineering, RCoSE 2014 - Proceedings},
  Keywords                 = {Feedback; Human resource management, Agile methods; Communication models; Continuous Delivery; Continuous integrations; Executable Prototypes; Release management; Software Evolution; User involvement; Version control system, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84927721905&doi=10.1145%2f2593812.2593818&partnerID=40&md5=e02c337eca0a1dfb11e387092c48ba83}
}

@Conference{Kuhrmann2013166,
  Title                    = {Systematic software process development: Where do we stand today?},
  Author                   = {Kuhrmann, M. and Fernández, D.M. and Steenweg, R.},
  Year                     = {2013},
  Note                     = {cited By 8},
  Pages                    = {166-170},

  Abstract                 = {A software process metamodel (SPMM) defines a language to describe concrete software processes in a structured manner. Although agile methods gained much attention in recent years, we still need to provide process engineers with adequate tools to design, implement, publish and deploy, and manage comprehensive software processes. In response to this need, several SPMMs have been developed. It remains, however, unclear, which of those SPMMs are disseminated to which extent. In this paper, we contribute first results of a study on the state-of-the-art in the systematic development of software processes using standardized SPMMs and their corresponding infrastructure. Our results show that only a few documented standards exist and, furthermore, that among those standards only two are disseminated into practice. We focus on those standardized SPMMs, show their process ecosystem, and sketch a first picture on the state-of-the-art in SPMM-based software process development in order to foster discussions on further problem-driven research. Copyright 2013 ACM.},
  Author_keywords          = {Literature review; Software process metamodels; Study},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2486046.2486077},
  ISBN                     = {9781450320627},
  Journal                  = {ACM International Conference Proceeding Series},
  Keywords                 = {Agile methods; Literature reviews; Meta model; Process engineer; Software process; Software process metamodel; Study, Computer applications},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84878442411&doi=10.1145%2f2486046.2486077&partnerID=40&md5=32517e14dde03e02757c11b86c8d1d44}
}

@Book{Kukreja2015157,
  Title                    = {Agile enablers and adoption scenario in industry context},
  Author                   = {Kukreja, V. and Singh, A.},
  Publisher                = {IGI Global},
  Year                     = {2015},
  Note                     = {cited By 0},

  Abstract                 = {In the globalization of fast changing business and technology environment, it becomes very important to respond quickly to changing user requirements. Traditional methodologies are not appropriate for the projects where user requirements are not fixed. Agile methodologies have been developed to cope up with user changing requirements and emphasize more on working software and customer collaboration. Agile is an umbrella term and it is used for many software development methodologies which shares common characteristics. This chapter mainly focuses on the working methodology of agile development and the usage areas of industry where agile development is implemented. Agile software development is difficult in distributed environment as the team members are at distributed locations. This chapter discusses agile industry applicability enablers which are useful for agile software development in distributed environment. © 2015, IGI Global. All rights reserved.},
  Document_type            = {Book Chapter},
  Doi                      = {10.4018/978-1-4666-8510-9.ch008},
  ISBN                     = {9781466685116; 1466685107; 9781466685109},
  Journal                  = {Achieving Enterprise Agility through Innovative Software Development},
  Pages                    = {157-178},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84957640476&doi=10.4018%2f978-1-4666-8510-9.ch008&partnerID=40&md5=f2f136f73f17c84585866760c06a94e1}
}

@Conference{Kumar2014118,
  Title                    = {A genetic algorithm approach to release planning in agile environment},
  Author                   = {Kumar, A. and Nagar, R. and Baghel, A.S.},
  Year                     = {2014},
  Editor                   = {Mishra M.K.},
  Note                     = {cited By 1},
  Pages                    = {118-122},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Agile software development methodology, got importance in recent years. The agile philosophy promotes incremental and iterative design and implementation. Each iterations, delivers one or more product features. Release planning is a main activity in any of Agile approach. Main factors that need to be considered are the technical precedence inherent in the requirements; the feature's business value perceived by project stake holders, team capacity and required effort to complete the requirement. There are multiple tools available in industry to manage project but they are lacking to provide planning while considering all these factors. Genetic algorithms (GA) have arisen from concepts, introduced from the natural process of biological evolution. GA uses selection, crossover and mutation to evolve a solution to the given problem. In this paper an attempt has been made to formalize the release planning. Then an approach is proposed to do Release planning using genetic algorithms. © 2014 IEEE.},
  Art_number               = {6965230},
  Author_keywords          = {Agile; Artificial Intelligence; Genetic Algorithms; Release Planning; Software Development Life Cycle(SDLC)},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICISCON.2014.6965230},
  ISBN                     = {9781479929818},
  Journal                  = {Proceedings of the 2014 International Conference on Information Systems and Computer Networks, ISCON 2014},
  Keywords                 = {Algorithms; Artificial intelligence; Bioinformatics; Biology; Iterative methods; Software design, Agile; Agile environment; Agile software development; Biological evolution; Crossover and mutation; Genetic algorithm approach; Release planning; Software development life cycle, Genetic algorithms},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84918516960&doi=10.1109%2fICISCON.2014.6965230&partnerID=40&md5=b32c961d119595cc3e332ea3a52a749a}
}

@Conference{Kumar2017160,
  Title                    = {Strategies for web application development methodologies},
  Author                   = {Kumar, S.R. and Sharma, R. and Gupta, K.},
  Year                     = {2017},
  Editor                   = {Swaroop A., Singh M., Astya P.N., Sharma V.},
  Note                     = {cited By 0},
  Pages                    = {160-165},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Web applications have grown very unexpectedly in these recent years but due to difference between web applications and software applications, their development methodologies differ in many ways. The distinction between these two different types of applications acquire for introduction of development methodologies dedicated to web applications. The thesis work represents various development approaches and methodologies proposed specially for web applications. Agile, object oriented, UML based etc. are some example of approaches to be used for inventing techniques for web application development. Appendixes contribute to the thesis work representing implementation of Agile based and UML based web application development techniques. © 2016 IEEE.},
  Art_number               = {7813710},
  Author_keywords          = {AWDWF (Agile Web Development with Web Framework); CORBA (Common Object Request Broker Architecture); WCML (Web Mark Up Language); XP (Extreme Programming)},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/CCAA.2016.7813710},
  ISBN                     = {9781509016662},
  Journal                  = {Proceeding - IEEE International Conference on Computing, Communication and Automation, ICCCA 2016},
  Keywords                 = {Application programs; Computer programming; Middleware; Object oriented programming, CORBA (common object request broker architecture); Development approach; Development methodology; EXtreme Programming; Object oriented; Software applications; Web application development; Web frameworks, Common object request broker architecture (CORBA)},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85011103156&doi=10.1109%2fCCAA.2016.7813710&partnerID=40&md5=417681dc89df7376ee55957e2a534455}
}

@Conference{Kumar201652,
  Title                    = {Among the agilists: Participant observation in a rapidly evolving workplace},
  Author                   = {Kumar, S. and Wallace, C.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {52-55},
  Publisher                = {Association for Computing Machinery, Inc},

  Abstract                 = {In this paper, we describe the practical considerations and challenges of studying an agile, co-located software development community by assimilating among them over many months. We have adopted a fully immersive ethnographic approach using semistructured and unstructured interviews. In many ways, the design choices in our study mirrored those faced by the development team, as we adjusted our methods on the y to accommodate our richer knowledge of the work environment and adapted to changes on the ground. We share our process of determining and adjusting an operating procedure for the ethnographic observation and we reect on the challenges faced in choosing subjects to study, getting them on board, planning questions and conducting interviews without disrupting the regular process of software development. © 2016 ACM.},
  Author_keywords          = {Communities of practice; Ethnography; Mentoring; Participant observation; Software engineering},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2897586.2897609},
  ISBN                     = {9781450341554},
  Journal                  = {Proceedings - 9th International Workshop on Cooperative and Human Aspects of Software Engineering, CHASE 2016},
  Keywords                 = {Software engineering, Communities of Practice; Development community; Development teams; Ethnographic approaches; Ethnographic observations; Ethnography; Mentoring; Participant observations, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84974529200&doi=10.1145%2f2897586.2897609&partnerID=40&md5=0a27193324a41f1dd5b610a50b316ea7}
}

@Conference{Kumar2015,
  Title                    = {Instruction in software project communication through guided inquiry and reflection},
  Author                   = {Kumar, S. and Wallace, C.},
  Year                     = {2015},
  Note                     = {cited By 2},
  Number                   = {February},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},
  Volume                   = {2015-February},

  Abstract                 = {Software professionals routinely use sophisticated problem solving and design skills in their communication with one another and other stakeholders in the software process. We wish to introduce our computer science and software engineering students to the communication challenges of real software development and help them to develop skills to meet these challenges. We describe our guided inquiry approach to addressing communication in a team software project course. This course constitutes a crucial juncture in the academic journey of our students, where they learn and practice the full responsibilities of a software engineer, including 'soft skills' like communication. Early in the course, we expose the students to real communication challenges that others have faced. Later, during their project development, we ask them to reflect on the communication challenges they are facing. We describe the guided inquiry techniques that scaffold the students' understanding of communication issues, and we outline our pattern approach to communication design. We provide some initial results from the classroom, following teams as they explore the communication practices of others and reflect on their own. © 2014 IEEE.},
  Art_number               = {7044167},
  Author_keywords          = {communication; guided inquiry; pattern language; reflection; Scrum; software process},
  Coden                    = {PFECD},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/FIE.2014.7044167},
  ISSN                     = {15394565},
  Journal                  = {Proceedings - Frontiers in Education Conference, FIE},
  Keywords                 = {Communication; Education; Problem solving; Reflection; Scaffolds; Software design; Software engineering; Teaching, Communication design; Communication practices; Computer science and software engineerings; Guided inquiry; Pattern languages; Scrum; Software process; Sophisticated problem solving, Students},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84938118167&doi=10.1109%2fFIE.2014.7044167&partnerID=40&md5=69d1c797cb1b64114674724eae3d44fa}
}

@Article{Kumlander2013801,
  Title                    = {Semi-agile approach to software development process},
  Author                   = {Kumlander, D.},
  Journal                  = {Lecture Notes in Electrical Engineering},
  Year                     = {2013},
  Note                     = {cited By 0},
  Pages                    = {801-809},
  Volume                   = {152 LNEE},

  Abstract                 = {Most modern companies realize that the best way to improve stability in the global, rapidly changing world is to be innovating and produce software that will be fully used and appreciated by customers. The key aspect on this road is personnel and processes. One of the best approaches to software development process into follow modern agility techniques. Unfortunately sometimes requirements to execute such are too high although the benefits are also sufficient. The paper proposes that the relaxing of those restrictions in many key aspects formulated as semi-agile technique can improve the level of possible adoption of it without any decrease of acquired benefits. The approach sufficiently differs from the hybrid agile proposals. © 2013 Springer Science+Business Media.},
  Author_keywords          = {Agile; Self-organised teams; Software development; Software engineering practises},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-1-4614-3535-8_67},
  ISBN                     = {9781461435341},
  ISSN                     = {18761100},
  Keywords                 = {Agile; IS personnel; Self-organised; Software development process, Innovation, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84866610497&doi=10.1007%2f978-1-4614-3535-8_67&partnerID=40&md5=b24245ae194f6ac0b184d3044d9b7139}
}

@Article{Kupiainen2015143,
  Title                    = {Using metrics in Agile and Lean software development - A systematic literature review of industrial studies},
  Author                   = {Kupiainen, E. and Mäntylä, M.V. and Itkonen, J.},
  Journal                  = {Information and Software Technology},
  Year                     = {2015},
  Note                     = {cited By 20},
  Number                   = {1},
  Pages                    = {143-163},
  Volume                   = {62},

  Abstract                 = {Context: Software industry has widely adopted Agile software development methods. Agile literature proposes a few key metrics but little is known of the actual metrics use in Agile teams. Objective: The objective of this paper is to increase knowledge of the reasons for and effects of using metrics in industrial Agile development. We focus on the metrics that Agile teams use, rather than the ones used from outside by software engineering researchers. In addition, we analyse the influence of the used metrics. Method: This paper presents a systematic literature review (SLR) on using metrics in industrial Agile software development. We identified 774 papers, which we reduced to 30 primary studies through our paper selection process. Results: The results indicate that the reasons for and the effects of using metrics are focused on the following areas: sprint planning, progress tracking, software quality measurement, fixing software process problems, and motivating people. Additionally, we show that although Agile teams use many metrics suggested in the Agile literature, they also use many custom metrics. Finally, the most influential metrics in the primary studies are Velocity and Effort estimate. Conclusion: The use of metrics in Agile software development is similar to Traditional software development. Projects and sprints need to be planned and tracked. Quality needs to be measured. Problems in the process need to be identified and fixed. Future work should focus on metrics that had high importance but low prevalence in our study, as they can offer the largest impact to the software industry. © 2015 Elsevier B.V. All rights reserved.},
  Author_keywords          = {Agile; Lean; Measurement; Metrics; Software engineering; Systematic literature review},
  Coden                    = {ISOTE},
  Document_type            = {Article},
  Doi                      = {10.1016/j.infsof.2015.02.005},
  ISSN                     = {09505849},
  Keywords                 = {Computer software selection and evaluation; Measurements; Software engineering; Target tracking, Agile; Agile software development; Lean; Lean software development; Metrics; Software industry; Systematic literature review; Systematic literature review (SLR), Software design},
  Publisher                = {Elsevier},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84932616989&doi=10.1016%2fj.infsof.2015.02.005&partnerID=40&md5=f16186d2e8334ed9f08bc6802d07e003}
}

@Conference{Kurnool2014132,
  Title                    = {Order management Sudoku simplified approach to transform OSS/BSS},
  Author                   = {Kurnool, A.P. and Dyaram, L.},
  Year                     = {2014},
  Note                     = {cited By 0},
  Pages                    = {132-136},
  Publisher                = {IEEE Computer Society},

  Abstract                 = {The rapid changes in the Telecommunication world and the advances in the Information Technology have paved way for a highly competitive market for the Service Providers, where new services and products need to be offered frequently. This paper examines the Order Management aspect of the Communication Providers and the challenges faced by the companies to make the application as agile and flexible as possible to keep up with the pace of changes in the market and competition. After discussing the current solutions provided by the Software Vendors in the market, this paper attempts to provide a new hybrid solution which when implemented would bring in rapid transformation to their OSS/BSS. © 2014 IEEE.},
  Art_number               = {6779307},
  Author_keywords          = {BPM; COTS; On-Demand; Order Management; Telecom Provider},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/IAdCC.2014.6779307},
  Journal                  = {Souvenir of the 2014 IEEE International Advance Computing Conference, IACC 2014},
  Keywords                 = {Information technology; Telecommunication services, BPM; COTS; On demands; Order management; Telecom providers, Commerce},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84899076067&doi=10.1109%2fIAdCC.2014.6779307&partnerID=40&md5=8ef9d48c388b6c532bf750b94662e647}
}

@Conference{Laanti20134761,
  Title                    = {Agile and wellbeing - Stress, empowerment, and performance in Scrum and Kanban teams},
  Author                   = {Laanti, M.},
  Year                     = {2013},
  Note                     = {cited By 5},
  Pages                    = {4761-4770},

  Abstract                 = {Little research data exist about agile teams and wellbeing. After changing our software engineering mode to agile, we wanted to find out if people experienced more or less stress than before. This study is based on a company-wide survey of 466 software engineering practitioners. We asked about their subjective feelings about stress, empowerment, and performance in their respective engineering teams after they had started to use agile methods. The results reveal that the feelings of higher performance improvement and sustainable pace are related, and that this difference is statistically significant. Respondents who feel that their team is empowered also feel less stress. However, no significant difference in feelings of stress and empowerment was found between respondents working in Kanban and Scrum mode after transition to agile. The group that was improving its performance because of agile was also reporting a better workload balance. The group that was experiencing worse performance because of agile methods was also more stressed. The differences may be explained by the management styles being practiced in the teams. The results are important as those verify in industrial setting what some agile books suggest: limiting workload and team empowerment has an impact on performance and stress. This contributes to our understanding how agile teams should be managed. © 2012 IEEE.},
  Art_number               = {6480418},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/HICSS.2013.74},
  ISBN                     = {9780769548920},
  ISSN                     = {15301605},
  Journal                  = {Proceedings of the Annual Hawaii International Conference on System Sciences},
  Keywords                 = {Engineering practitioners; Engineering teams; Industrial settings; Management style; Performance improvements; Research data; Significant differences; Workload balance, Management; Software engineering, Systems science},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84875483522&doi=10.1109%2fHICSS.2013.74&partnerID=40&md5=3159af2a4d0437b506873f547d10b72a}
}

@Conference{Lagerberg2013348,
  Title                    = {The impact of agile principles and practices on large-scale software development projects: A multiple-case study of two projects at Ericsson},
  Author                   = {Lagerberg, L. and Skude, T. and Emanuelsson, P. and Sandahl, K. and Stahl, D.},
  Year                     = {2013},
  Note                     = {cited By 7},
  Pages                    = {348-356},

  Abstract                 = {BACKGROUND: Agile software development methods have a number of reported benefits on productivity, project visibility, software quality and other areas. There are also negative effects reported. However, the base of empirical evidence to the claimed effects needs more empirical studies. AIM: The purpose of the research was to contribute with empirical evidence on the impact of using agile principles and practices in large-scale, industrial software development. Research was focused on impacts within seven areas: Internal software documentation, Knowledge sharing, Project visibility, Pressure and stress, Coordination effectiveness, and Productivity. METHOD: Research was carried out as a multiple-case study on two contemporary, large-scale software development projects with different levels of agile adoption at Ericsson. Empirical data was collected through a survey of project members. RESULTS AND CONCLUSIONS: Intentional implementation of agile principles and practices were found to: correlate with a more balanced use of internal software documentation, contribute to knowledge sharing, correlate with increased project visibility and coordination effectiveness, reduce the need for other types of coordination mechanisms, and possibly increase productivity. No correlation with increase in pressure and stress were found. © 2013 IEEE.},
  Art_number               = {6681378},
  Author_keywords          = {Agile software development; empirical software engineering; large-scale software development; multiple-case study; survey},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ESEM.2013.53},
  ISSN                     = {19493770},
  Journal                  = {International Symposium on Empirical Software Engineering and Measurement},
  Keywords                 = {Agile software development; Coordination mechanisms; Empirical Software Engineering; Industrial software development; Multiple-case study; Principles and practices; Software development projects; Software documentation, Computer software selection and evaluation; Knowledge management; Productivity; Research; Surveying; Surveys; Visibility, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893231167&doi=10.1109%2fESEM.2013.53&partnerID=40&md5=d66bfd6cdd35d18473ae233342fc25a3}
}

@Conference{Lai2016464,
  Title                    = {A version control-based continuous testing frame for improving the IID process efficiency and quality},
  Author                   = {Lai, S.-T. and Leu, F.-Y.},
  Year                     = {2016},
  Editor                   = {Xhafa F., Barolli L., Uchida N.},
  Note                     = {cited By 0},
  Pages                    = {464-469},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {In order to effectively manage resource, control time and reduce development risk, small scale or high changeable software project very suitable use IID (Iterative Incremental Development) process. Applying IID process, agile development model becomes the practical method to reduce software project failure rate. Continuous testing is an IID implementation concept which can timely identify the quality defects and effectively reduce software development risk. However, continuous testing and building the workable version need to spend more time and human resources. It is a major flaw of IID. For improving the continuous testing efficiency, the paper depth surveys test cases and version control. Enhancing test cases version control and testing tools frame can make up IID drawbacks and increase IID process efficiency and quality. For this, the paper proposes the Version Control-based Continuous Testing Frame (VCCTF) to assist new version integration and deployment operation. Combining IID and VCCTF makes software process problems and quality defects can be timely identified, deploy new version quickly, increase IID process efficiency and quality, and reduce software project risk. © 2016 IEEE.},
  Art_number               = {7794511},
  Author_keywords          = {Agile development model; Continuous testing; Development risk; IID; Version control},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/IMIS.2016.113},
  ISBN                     = {9781509009848},
  Journal                  = {Proceedings - 2016 10th International Conference on Innovative Mobile and Internet Services in Ubiquitous Computing, IMIS 2016},
  Keywords                 = {Computer control; Defects; Efficiency; Failure analysis; Information management; Integration testing; Iterative methods; Risks; Software design; Software engineering; Software testing; Ubiquitous computing; Web services, Agile development; Changeable software; Continuous testing; Development risk; Iterative incremental development; Practical method; Software project risks; Version control, Quality control},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85011110651&doi=10.1109%2fIMIS.2016.113&partnerID=40&md5=c0b6f0f747a0aa1d3c30c01e7ff8faec}
}

@Book{Lainez2014277,
  Title                    = {A project-based introduction to agile software development},
  Author                   = {Lainez, M. and Deville, Y. and Dessy, A. and Dejemeppe, C. and Mairy, J.-B. and Van Cauwelaert, S.},
  Publisher                = {IGI Global},
  Year                     = {2014},
  Note                     = {cited By 0},

  Abstract                 = {This chapter shows how a lightweight Agile process has been used to introduce Agile project development to young computer science students. This experience has been conducted on a project aimed at developing Android applications. The context, the process, and the results of this experiment are described in this chapter. © 2014, IGI Global. All rights reserved.},
  Document_type            = {Book Chapter},
  Doi                      = {10.4018/978-1-4666-5800-4.ch014},
  ISBN                     = {9781466658011; 1466658002; 9781466658004},
  Journal                  = {Overcoming Challenges in Software Engineering Education: Delivering Non-Technical Knowledge and Skills},
  Pages                    = {277-294},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84949442021&doi=10.4018%2f978-1-4666-5800-4.ch014&partnerID=40&md5=bd9e3bba1a3cf10a8b7b597f68a93047}
}

@Article{deLange2016570,
  Title                    = {DevOpsUse for rapid training of agile practices within undergraduate and startup communities},
  Author                   = {de Lange, P. and Nicolaescu, P. and Klamma, R. and Koren, I.},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {570-574},
  Volume                   = {9891 LNCS},

  Abstract                 = {Establishing a common practice between (startup) companies and universities in applied computer science labs has been tackled by pedagogical approaches based on the communities of practice theory. However, modern agile and distributed software engineering methods and recent developments like DevOps demand focused training of undergraduate students to enable them joining practices in companies. In this paper, we present the Community Application Editor (CAE) embedded in a DevOpsUse methodology supporting this form of basic training for bachelor students of computer science. We have evaluated the methodology and the tool usage in a first-stage undergraduate lab course. The results indicate that the students had a much smoother transition when later joining the second-stage lab with real companies. © Springer International Publishing Switzerland 2016.},
  Author_keywords          = {Case study; Community of practice; End user development; Entrepreneurship; MDWE},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-45153-4_65},
  Editor                   = {Verbert K., Sharples M., Klobucar T.},
  ISBN                     = {9783319451527},
  ISSN                     = {03029743},
  Keywords                 = {Education; Engineering education; Human computer interaction; Joining; Knowledge acquisition; Software engineering; Teaching, Communities of Practice; Community of practice; Distributed software engineering; End user development; Entrepreneurship; MDWE; Undergraduate lab course; Undergraduate students, Students},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84988526981&doi=10.1007%2f978-3-319-45153-4_65&partnerID=40&md5=af2151411c87c1556053d7f313362f52}
}

@Book{Lantz2014211,
  Title                    = {Scaling agile mechatronics: An industrial case study},
  Author                   = {Lantz, J. and Eliasson, U.},
  Publisher                = {Springer International Publishing},
  Year                     = {2014},
  Note                     = {cited By 1},

  Abstract                 = {The automotive industry is currently in a state of rapid change. The traditional mechanical industry has, forced by electronic revolution and global threats of climate change, transformed into a computerized electromechanical industry. A hybrid or electric car of 2013 can have, in the order of 100 electronic control units, running gigabytes of code, working together in a complex network within the car as well as being connected to networks in the world outside. This exponential increase of software has posed new challenges for the R&D organizations. In many cases the commonly used method of requirement engineering towards external suppliers in a waterfall process has shown to be unmanageable. Part of the solution has been to introduce more in-house software development and the new standardized platform for embedded software, AUTOSAR. During the past few years, Volvo Cars has focused on techniques and processes for continuous integration of embedded software for active safety, body functions, and motor and hybrid technology. The feedback times for ECU system test have decreased from months to, in the best cases, hours. Domain-specific languages (DSL), for both software and physical models, have been used to great extent when developing in-house embedded software at Volvo Cars. The main reasons are the close connection with mechatronic systems (motors, powertrain, servos, etc.), the advantage of having domain experts (not necessarily software experts) developing control software, and the facilitated reuse of algorithms. Model-driven engineering also provides a method for agile development and early learning in projects where hardware and mechanics usually are available only late. Model-based testing of the software is performed, both as pure simulation (MIL) and in hardware-in-the-loop (HIL) rigs, before it is deployed in real cars. This testing is currently being automated for several rigs, as part of the continuous integration strategy. The progress is, however, not without challenges. Details of the work split with Tier 1 suppliers, using the young AUTOSAR standard, and the efficiency of AUTOSAR code are still open problems. Another challenge is to manage the complex model framework required for virtual verification when applied on system level and numerous DSLs have to be executed together. © 2014 Springer International Publishing Switzerland. All rights reserved.},
  Document_type            = {Book Chapter},
  Doi                      = {10.1007/978-3-319-11283-1-17},
  ISBN                     = {9783319112831; 3319112821; 9783319112824},
  Journal                  = {Continuous software engineering},
  Pages                    = {211-222},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84930695275&doi=10.1007%2f978-3-319-11283-1-17&partnerID=40&md5=1984d0eb2be5a50afc0b4d846d8a9f39}
}

@Article{Lappi2017263,
  Title                    = {Project governance in public sector agile software projects},
  Author                   = {Lappi, T. and Aaltonen, K.},
  Journal                  = {International Journal of Managing Projects in Business},
  Year                     = {2017},
  Note                     = {cited By 0},
  Number                   = {2},
  Pages                    = {263-294},
  Volume                   = {10},

  Abstract                 = {Purpose: Agile methodologies are widely used to manage the technical complexity of software development, and project governance can provide feasible means of organizational support for complex project success. The purpose of this paper is to: analyze the project governance practices of public sector organizations, illustrate what kind of impact these practices have on agile software projects and describe the tensions of agile project governance. Design/methodology/approach: The research is based on qualitative research strategy and applies elaborative logic with analyses of three case projects in the Finnish public sector. Findings: The findings of the research describe how project governance practices can be categorized into six dimensions: business case, contracting, controlling, steering, decision-making and capability building. The results illustrate how these practices either support or detract the performance of agile projects. The results also show that there are two interfaces to agile project that create most tensions to governance – the public sector and technology. Originality/value: The study contributes to both project management and information and communication technology theories by combining technical aspects of agile methodologies with micro-level project governance practices. The study also adds original value to academics by introducing the new concept of “agile project governance.” The results of this study will allow public sector project organizations to design appropriate governance mechanisms for agile projects, and to identify the challenges and tensions that need to be considered and managed in the process. © 2017, © Emerald Publishing Limited.},
  Author_keywords          = {Agile; Agile project governance; ICT; Project governance; Public sector; Software projects},
  Document_type            = {Article},
  Doi                      = {10.1108/IJMPB-04-2016-0031},
  ISSN                     = {17538378},
  Publisher                = {Emerald Group Publishing Ltd.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85016822071&doi=10.1108%2fIJMPB-04-2016-0031&partnerID=40&md5=ee1c054a8b2bc3e0ca96d564036c0bf2}
}

@Conference{Laskowska2015,
  Title                    = {Best practices for validating research software prototypes-MARKOS case study},
  Author                   = {Laskowska, A. and Cruz, J.G. and Kedziora, P. and Lener, I. and Lewandowski, B. and Mazurek, C. and Di Penta, M.},
  Year                     = {2015},
  Note                     = {cited By 0},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {A common approach in research projects is to plan the evaluation and in particular the validation phase In the last months of the project. When done late in the project, validation cannot provide valuable inputs to the development of the research idea, because there is no space to bring about changes, and very often ends up as confirmatory tests. Software validation can and should occur since creating the first lines of code until the completion of the system in test. Thus, we propose the approach where research project can adopt the agile paradigm used by startups release early, release often, not only to development, but also to validation: validate early, validate often, to improve the quality of projects results on one hand and to be in line with potential users on the other. © 2014 IIMC Intl Information Management Corporatio.},
  Art_number               = {7058179},
  Document_type            = {Conference Paper},
  ISBN                     = {9781905824465},
  ISSN                     = {21661650},
  Journal                  = {eChallenges Conference},
  Keywords                 = {Software testing, Best practices; Confirmatory test; Lines of code; Potential users; Software validation; Validation phase, Software prototyping},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85014591005&partnerID=40&md5=d5cf048614eff229dd6a85286d50e524}
}

@Article{Law2015584,
  Title                    = {Whose Experience Do We Care About? Analysis of the Fitness of Scrum and Kanban to User Experience},
  Author                   = {Law, E.L.-C. and Lárusdóttir, M.K.},
  Journal                  = {International Journal of Human-Computer Interaction},
  Year                     = {2015},
  Note                     = {cited By 3},
  Number                   = {9},
  Pages                    = {584-602},
  Volume                   = {31},

  Abstract                 = {Two project management approaches, Agile and Lean, have increasingly been adopted in recent years for software development. Meanwhile, in the field of human–computer interaction (HCI), user experience (UX) has become central in research and practice. The new hybrids between the two fields—Agile UX and Lean UX—were born a few years ago. As Agile, Lean, and UX have different principles and practices, one can query whether the couplings are well justified and whether Agile or Lean is more compatible with UX work. We have conducted a conceptual analysis and tended to conclude that Lean instantiated as Kanban fits UX work better than Agile instantiated as Scrum. To explore further our claim, we performed a secondary data analysis of 10 semistructured interviews with practitioners working with Scrum and Kanban in different sectors (Study 1). This study enabled us to gain insights into the applications of the two processes in real-life cases, their strengths and weaknesses, and factors influencing the practicality of implementing them. Both processes seem not favorable for UX work in practice. Among others, one intriguing observation is loose adherence to the related guidelines and principles. A query derived from the analyses of the interviews is that “customer,” as compared with “user,” has more frequently been referred to by our interviewees, irrespective of the process they adopted. We have then been motivated to investigate this issue, using a web-based survey with another batch of practitioners (N = 73) in the software industry (Study 2). Results of the survey indicate that the practitioners in general had a reasonable understanding of the concepts “user” and “customer,” although a minority tended to treat them as synonyms. Limitations of the current studies and implications for future work are discussed. Copyright © Taylor & Francis Group, LLC.},
  Document_type            = {Article},
  Doi                      = {10.1080/10447318.2015.1065693},
  ISSN                     = {10447318},
  Keywords                 = {Human computer interaction; Project management; Social networking (online); Software design; Software engineering, Computer interaction; Conceptual analysis; Guidelines and Principles; Implications for futures; Principles and practices; Secondary data analysis; Semi structured interviews; User experiences (ux), Surveys},
  Publisher                = {Taylor and Francis Inc.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84940472836&doi=10.1080%2f10447318.2015.1065693&partnerID=40&md5=c7cbbdb561b17b38c0cd2e173c71d5b5}
}

@Conference{Lee2015348,
  Title                    = {Cloud service enabling architecture for multi-vendor environment},
  Author                   = {Lee, D.-S. and Sung, W.-T. and Wang, S.-M. and Shun, J.-Y.},
  Year                     = {2015},
  Note                     = {cited By 0},
  Pages                    = {348-351},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {In recent years, many Communication Service Providers (CSP) plan to gradually move from telecommunication companies to cloud service providers and many third party software vendors are invited as partners of CSPs. Without an agile cloud service enabling architecture, CSPs cannot integrate their own services with partners' efficiently due to some issues. First, silo operation support system (OSS) is difficult to share data during service enabling process. Second, in-house developers and outer partners cannot understand complete metadata of service because of lack catalog management mechanism, and it makes service mash up inefficiently and inappropriately. Finally, System APIs are customized for specific service, that is, APIs are not reusable. In this paper, CHT Cloud Service Enabling Architecture is introduced to overcome issues of silo system architecture and create capacity to enable integrated cloud service efficiently. © 2015 IEICE.},
  Art_number               = {7275360},
  Author_keywords          = {Cloud Service; Service Enabling},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/APNOMS.2015.7275360},
  ISBN                     = {9784885522963},
  Journal                  = {17th Asia-Pacific Network Operations and Management Symposium: Managing a Very Connected World, APNOMS 2015},
  Keywords                 = {Distributed database systems; Network architecture, Cloud service providers; Cloud services; Communication service; Management mechanisms; Multi-vendor environment; Operation support system; Service Enabling; Telecommunication companies, Computer architecture},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84957583710&doi=10.1109%2fAPNOMS.2015.7275360&partnerID=40&md5=517e3fffe452c174178279e0f9b0fd0f}
}

@Article{Lee2017235,
  Title                    = {A User eXperience Evaluation Framework for Mobile Usability},
  Author                   = {Lee, H.-J. and Lee, J.-S. and Jee, E. and Bae, D.-H.},
  Journal                  = {International Journal of Software Engineering and Knowledge Engineering},
  Year                     = {2017},
  Note                     = {cited By 0},
  Number                   = {2},
  Pages                    = {235-279},
  Volume                   = {27},

  Abstract                 = {The worldwide mobile software market has grown dramatically since feature phones became popular in the early 1990s. In practice, mobile usability-which can be defined for a resource-constrained device in two ways, namely, User eXperience (UX) and User Interface (UI)-has been regarded as the key to gaining superiority in terms of both market share and customer loyalty. Unfortunately, de facto standards for software design and the development process, such as Unified Modeling Language (UML) and Rational Unified Process (RUP), do not seem to promote mobile usability in a systematic manner in practice. This paper proposes a systematic and generalizable approach to modeling and evaluating the properties of mobile usability, herein treating it as a first-class software quality from the perspective of software engineering. We devise a UX evaluation framework for mobile usability, which we call UX Evaluation Framework (UEF) throughout this paper. A UX is specified by inter-scene interactions between users and terminals of software products using Extended Menu Navigation Viewpoints (EMNVs); then, a model checker, NuSMV, is adopted to observe whether the EMNV model meets a set of given UX properties. Importantly, the analysis and design of RUP is extended to support the co-design of UX and UI so that major roles, activities and artifacts in the UX and UI can be explicitly monitored and controlled by stakeholders. Through case studies, we demonstrate that UEF works properly to treat software products that prioritize mobile usability. Consequently, UEF plays a key role in filling the gap between two research disciplines to address usability: software engineering and human-computer interactions. © 2017 World Scientific Publishing Company.},
  Author_keywords          = {mobile usability; model checking; RUP; software engineering; usability evaluation; User eXperience model; UX evaluation framework},
  Coden                    = {ISEKE},
  Document_type            = {Article},
  Doi                      = {10.1142/S0218194017500097},
  ISSN                     = {02181940},
  Keywords                 = {Commerce; Competition; Computer software selection and evaluation; Graphical user interfaces; Human computer interaction; Model checking; Modeling languages; Network function virtualization; Software engineering; Unified Modeling Language; Usability engineering; User interfaces, Evaluation framework; Mobile usability; Rational Unified Process; Resourceconstrained devices; Usability evaluation; User experience evaluations; User experience model; User experiences (ux), Software design},
  Publisher                = {World Scientific Publishing Co. Pte Ltd},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85016313391&doi=10.1142%2fS0218194017500097&partnerID=40&md5=8848dafdcb5d8c7312aeab4a529ea3ea}
}

@Book{Lee20141,
  Title                    = {Digital da Vinci: Computers in music},
  Author                   = {Lee, N.},
  Publisher                = {Springer New York},
  Year                     = {2014},
  Note                     = {cited By 1},

  Abstract                 = {The Digital Da Vinci book series opens with the interviews of music mogul Quincy Jones, MP3 inventor Karlheinz Brandenburg, Tommy Boy founder Tom Silverman and entertainment attorney Jay L. Cooper. A strong supporter of science, technology, engineering and mathematics programs in schools, The Black Eyed Peas founding member will.i.am announced in July 2013 his plan to study computer science. Leonardo da Vinci, the epitome of a Renaissance man, was an Italian polymath at the turn of the 16th century. Since the Industrial Revolution in the 18th century, the division of labor has brought forth specialization in the workforce and university curriculums. The endangered species of polymaths is facing extinction. Computer science has come to the rescue by enabling practitioners to accomplish more than ever in the field of music. In this book, Newton Lee recounts his journey in executive producing a Billboard-charting song like managing agile software development; M. Nyssim Lefford expounds producing and its effect on vocal recordings; Dennis Reidsma, Mustafa Radha and Anton Nijholt survey the field of mediated musical interaction and musical expression; Isaac Schankler, Elaine Chew and Alexandre Francois describe improvising with digital auto-scaffolding; Shlomo Dubnov and Greg Surges explain the use of musical algorithms in machine listening and composition; Juan Pablo Bello discusses machine listening of music; Stephen and Tim Barrass make smart things growl, purr and sing; Raffaella Folgieri, Mattia Bergomi and Simone Castellani examine EEG-based brain-computer interface for emotional involvement in games through music and last but not least, Kai Ton Chau concludes the book with computer and music pedagogy. Digital Da Vinci: Computers in Music is dedicated to polymathic education and interdisciplinary studies in the digital age empowered by computer science. Educators and researchers ought to encourage the new generation of scholars to become as well rounded as a Renaissance man or woman. © 2014 Springer Science+Business Media New York. All rights are reserved.},
  Document_type            = {Book},
  Doi                      = {10.1007/978-1-4939-0536-2},
  ISBN                     = {9781493905362; 149390535X; 9781493905355},
  Journal                  = {Digital Da Vinci: Computers in Music},
  Pages                    = {1-267},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84929671559&doi=10.1007%2f978-1-4939-0536-2&partnerID=40&md5=69c1ff08dc786143e481db90c6dd6c61}
}

@Article{Lee201369,
  Title                    = {Agile software development framework in a small project environment},
  Author                   = {Lee, S. and Yong, H.-S.},
  Journal                  = {Journal of Information Processing Systems},
  Year                     = {2013},
  Note                     = {cited By 2},
  Number                   = {1},
  Pages                    = {69-88},
  Volume                   = {9},

  Abstract                 = {Agile methods are highly attractive for small projects, but no agile method works well as a standalone system. Therefore, some adaption or customization is always required. In this paper, the Agile Framework for Small Projects (AFSP) was applied to four industry cases. The AFSP provides a structured way for software organizations to adopt agile practices and evaluate the results. The framework includes an extended Scrum process and agile practices, which are based on agility and critical success factors in agile software projects that are selected from Scrum, XP, FDD, DSDM and Crystal Clear. AFSP also helps software managers and developers effectively use agile engineering techniques throughout the software development lifecycle. The case study projects were evaluated on the basis of risk-based agility factors, the agility of the adopted practices, agile adoption levels, and the degree of the agile project success. The analysis of the results showed that the framework used in the aforementioned cases was effective. © 2013 KIPS.},
  Author_keywords          = {Agile methods; Industrial case study; Small software projects},
  Document_type            = {Article},
  Doi                      = {10.3745/JIPS.2013.9.1.069},
  ISSN                     = {1976913X},
  Keywords                 = {Agile methods; Agile software development; Critical success factor; Industrial case study; Project environment; Software development life cycle; Software organization; Software project, Industrial applications, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84879159598&doi=10.3745%2fJIPS.2013.9.1.069&partnerID=40&md5=fe446995bfbd71c8a46a468a836bc4b1}
}

@Article{Lehtinen2014408,
  Title                    = {A tool supporting root cause analysis for synchronous retrospectives in distributed software teams},
  Author                   = {Lehtinen, T.O.A. and Virtanen, R. and Viljanen, J.O. and Mäntylä, M.V. and Lassenius, C.},
  Journal                  = {Information and Software Technology},
  Year                     = {2014},
  Note                     = {cited By 5},
  Number                   = {4},
  Pages                    = {408-437},
  Volume                   = {56},

  Abstract                 = {Context Root cause analysis (RCA) is a useful practice for software project retrospectives, and is typically carried out in synchronous collocated face-to-face meetings. Conducting RCA with distributed teams is challenging, as face-to-face meetings are infeasible. Lack of adequate real-time tool support exacerbates this problem. Furthermore, there are no empirical studies on using RCA in synchronous retrospectives of geographically distributed teams. Objective This paper presents a real-time cloud-based software tool (ARCA-tool) we developed to support RCA in distributed teams and its initial empirical evaluation. The feasibility of using RCA with distributed teams is also evaluated. Method We compared our tool with 35 existing RCA software tools. We conducted field studies of four distributed agile software teams at two international software product companies. The teams conducted RCA collaboratively in synchronous retrospective meetings by using the tool we developed. We collected the data using observations, interviews and questionnaires. Results Comparison revealed that none of the existing 35 tools matched all the features of our ARCA-tool. The team members found ARCA-tool to be an essential part of their distributed retrospectives. They considered the software as efficient and very easy to learn and use. Additionally, the team members perceived RCA to be a vital part of the retrospectives. In contrast to the prior retrospective practices of the teams, the introduced RCA method was evaluated as efficient and easy to use. Conclusion RCA is a useful practice in synchronous distributed retrospectives. However, it requires software tool support for enabling real-time view and co-creation of a cause-effect diagram. ARCA-tool supports synchronous RCA, and includes support for logging problems and causes, problem prioritization, cause-effect diagramming, and logging of process improvement proposals. It enables conducting RCA in distributed retrospectives. © 2014 Elsevier B.V. All rights reserved.},
  Author_keywords          = {ARCA-tool; Distributed retrospective; Global software engineering; Root cause analysis},
  Coden                    = {ISOTE},
  Document_type            = {Article},
  Doi                      = {10.1016/j.infsof.2014.01.004},
  ISSN                     = {09505849},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84894074202&doi=10.1016%2fj.infsof.2014.01.004&partnerID=40&md5=8e1d3399c9728d06cb8bc90aabce3558}
}

@Article{Lehtonen20171,
  Title                    = {Visualizations for software development process management},
  Author                   = {Lehtonen, T. and Aho, T. and Kuusinen, K. and Mikkonen, T.},
  Journal                  = {Frontiers in Artificial Intelligence and Applications},
  Year                     = {2017},
  Note                     = {cited By 0},
  Pages                    = {1-12},
  Volume                   = {292},

  Abstract                 = {Software development projects have increasingly been adopting new practices, such as continuous delivery and deployment to enable rapid delivery of new features to end users. Tools that are commonly utilized with these practices generate a vast amount of data concerning various development events. Analysis of the data provides a lightweight data driven view on the software process. We present an efficient way of visualizing software process data to provide a good overall view on the features and potential problems of the process. We use the visualization in a case project that has become more agile by applying continuous integration and delivery together with development and infrastructure automation. We compare data visualizations with information gathered from the development team and describe how the evolution can be understood through our visualizations. The case project is a good example of how a change from a traditional long cycle development to a rapid cycle DevOps culture can actually be made in a few years. However, the results show that the team has to focus on the process improvement continuously in order to maintain continuous delivery all the time. As the main contribution, we present a lightweight way to software process visualization. Moreover, we discuss how such a heuristic can be used to track the characteristics of the target process. © 2017 The authors and IOS Press.},
  Author_keywords          = {continuous delivery; DevOps; software visualization},
  Document_type            = {Conference Paper},
  Doi                      = {10.3233/978-1-61499-720-7-1},
  Editor                   = {Thalheim B., Jaakkola H., Kiyoki Y., Yoshida N.},
  ISBN                     = {9781614997191},
  ISSN                     = {09226389},
  Keywords                 = {Software engineering; Visualization, continuous delivery; Continuous integrations; DevOps; Potential problems; Process Improvement; Software development process; Software development projects; Software visualization, Software design},
  Publisher                = {IOS Press},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85002801567&doi=10.3233%2f978-1-61499-720-7-1&partnerID=40&md5=2d62db97b1282a58e1b020c3625eaaa6}
}

@Article{Lennerz2016697,
  Title                    = {Health Care Infrastructure for Financially Sustainable Clinical Genomics},
  Author                   = {Lennerz, J.K. and McLaughlin, H.M. and Baron, J.M. and Rasmussen, D. and Sumbada Shin, M. and Berners-Lee, N. and Miller Batten, J. and Swoboda, K.J. and Gala, M.K. and Winter, H.S. and Schmahmann, J.D. and Sweetser, D.A. and Boswell, M. and Pacula, M. and Stenzinger, A. and Le, L.P. and Hynes, W. and Rehm, H.L. and Klibanski, A. and Black-Schaffer, S.W. and Golden, J.A. and Louis, D.N. and Weiss, S.T. and Iafrate, A.J.},
  Journal                  = {Journal of Molecular Diagnostics},
  Year                     = {2016},
  Note                     = {cited By 1},
  Number                   = {5},
  Pages                    = {697-706},
  Volume                   = {18},

  Abstract                 = {Next-generation sequencing has evolved technically and economically into the method of choice for interrogating the genome in cancer and inherited disorders. The introduction of procedural code sets for whole-exome and genome sequencing is a milestone toward financially sustainable clinical implementation; however, achieving reimbursement is currently a major challenge. As part of a prospective quality-improvement initiative to implement the new code sets, we adopted Agile, a development methodology originally devised in software development. We implemented eight functionally distinct modules (request review, cost estimation, preauthorization, accessioning, prebilling, testing, reporting, and reimbursement consultation) and obtained feedback via an anonymous survey. We managed 50 clinical requests (January to June 2015). The fraction of pursued-to-requested cases (n = 15/50; utilization management fraction, 0.3) aimed for a high rate of preauthorizations. In 13 of 15 patients the insurance plan required preauthorization, which we obtained in 70% and ultimately achieved reimbursement in 50%. Interoperability enabled assessment of 12 different combinations of modules that underline the importance of an adaptive workflow and policy tailoring to achieve higher yields of reimbursement. The survey confirmed a positive attitude toward self-organizing teams. We acknowledge the individuals and their interactions and termed the infrastructure: human pipeline. Nontechnical barriers currently are limiting the scope and availability of clinical genomic sequencing. The presented human pipeline is one approach toward long-term financial sustainability of clinical genomics. © 2016 American Society for Investigative Pathology and the Association for Molecular Pathology},
  Coden                    = {JMDIF},
  Document_type            = {Article},
  Doi                      = {10.1016/j.jmoldx.2016.04.003},
  ISSN                     = {15251578},
  Keywords                 = {clinical article; consultation; genomics; human; pipeline; reimbursement; software; total quality management; workflow},
  Publisher                = {Elsevier B.V.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84991263737&doi=10.1016%2fj.jmoldx.2016.04.003&partnerID=40&md5=60f966f6d02f4af0e42838bbbe8fd28b}
}

@Conference{Leppanen201534,
  Title                    = {Towards Post-Agile Development Practices through Productized Development Infrastructure},
  Author                   = {Leppanen, M. and Kilamo, T. and Mikkonen, T.},
  Year                     = {2015},
  Note                     = {cited By 1},
  Pages                    = {34-40},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Modern software is developed to meet evolving customer needs in a timely fashion. The need for a rapid time-to-market together with changing requirements has led software intensive companies to utilize agile development, where each iteration aims at producing end-user value and change is embraced. In today's post-agile software development world, there is a need for processes and tools that deliver new software to the end-user as fast as possible. The level of adoption of these continuous software engineering practices depends on the product, customers, and the business domain. In this paper, we investigate the benefits gained from implementing a completely continuous delivery workflow using a domain specific productized development infrastructure through a descriptive single case study. Embracing the continuous delivery mindset throughout the development pipeline allows the case customer company to gain fast insight on new business directions and lends the services to live experimentation which in turn adds to end-user value. Up-to-date feedback cycles between all stakeholders all the way from concept design to end-users are offered. © 2015 IEEE.},
  Art_number               = {7167171},
  Author_keywords          = {continuous delivery; Continuous software engineering; development infrastructure},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/RCoSE.2015.14},
  ISBN                     = {9781479919345},
  Journal                  = {Proceedings - 2nd International Workshop on Rapid Continuous Software Engineering, RCoSE 2015},
  Keywords                 = {Sales; Software engineering, Agile development; Agile software development; Completely continuous; Concept designs; continuous delivery; Continuous software engineerings; Development infrastructure; Domain specific, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84945913864&doi=10.1109%2fRCoSE.2015.14&partnerID=40&md5=d769114a17884635ed3d29666506ed01}
}

@Article{Lerdrup2016349,
  Title                    = {An interactive environment for agile analysis and visualization of ChIP-sequencing data},
  Author                   = {Lerdrup, M. and Johansen, J.V. and Agrawal-Singh, S. and Hansen, K.},
  Journal                  = {Nature Structural and Molecular Biology},
  Year                     = {2016},
  Note                     = {cited By 7},
  Number                   = {4},
  Pages                    = {349-357},
  Volume                   = {23},

  Abstract                 = {To empower experimentalists with a means for fast and comprehensive chromatin immunoprecipitation sequencing (ChIP-seq) data analyses, we introduce an integrated computational environment, EaSeq. The software combines the exploratory power of genome browsers with an extensive set of interactive and user-friendly tools for genome-wide abstraction and visualization. It enables experimentalists to easily extract information and generate hypotheses from their own data and public genome-wide datasets. For demonstration purposes, we performed meta-analyses of public Polycomb ChIP-seq data and established a new screening approach to analyze more than 900 datasets from mouse embryonic stem cells for factors potentially associated with Polycomb recruitment. EaSeq, which is freely available and works on a standard personal computer, can substantially increase the throughput of many analysis workflows, facilitate transparency and reproducibility by automatically documenting and organizing analyses, and enable a broader group of scientists to gain insights from ChIP-seq data. © 2016 Nature America, Inc. All rights reserved.},
  Coden                    = {NSMBC},
  Document_type            = {Article},
  Doi                      = {10.1038/nsmb.3180},
  ISSN                     = {15459993},
  Keywords                 = {animal cell; Article; chromatin immunoprecipitation sequencing; computer program; controlled study; data analysis; embryonic stem cell; genome; human; information; meta analysis (topic); microcomputer; mouse; nonhuman; priority journal; protein analysis; quality control; reproducibility; scientist; screening; workflow; animal; chromatin immunoprecipitation; procedures; software, polycomb group protein, Animals; Chromatin Immunoprecipitation; Genome; Mice; Polycomb-Group Proteins; Software},
  Publisher                = {Nature Publishing Group},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84959215521&doi=10.1038%2fnsmb.3180&partnerID=40&md5=e49c1f0263af7e9cd2e42488a6614c2a}
}

@Article{Li201649.1,
  Title                    = {Three dimensional solid modeling of gears using solidworks secondary development},
  Author                   = {Li, M.},
  Journal                  = {International Journal of Simulation: Systems, Science and Technology},
  Year                     = {2016},
  Note                     = {cited By 0},
  Number                   = {42},
  Pages                    = {49.1-49.6},
  Volume                   = {17},

  Abstract                 = {We study three dimensional parametric agile design of gears and related software platforms in terms of: parameterization, modularization, and the software being easy to use, expand and maintain. We base our study on SolidWorks platform, aiming to generate 3-D solid models of gears automatically in terms of: i) inputting parameters to improve the modeling speed, ii) build up foundations for structure design, iii) do dynamic simulation, and iv) interference checks and v) use finite element analysis to improve design efficiency. Our results include: i) 3-D accurate description for involute gear is realized, ii) accurate specification of involute gear in SolidWorks has been achieved, iii) parameterized agile modeling system modules of involute cylindrical spur gear, helical gear and internal gear have been developed using SolidWorks as support platform, and iv) success in adopting object oriented technology for involute coordinate equations. © 2017, UK Simulation Society. All rights reserved.},
  Author_keywords          = {Gear; Involute; Modeling; Secondary development; Solidworks},
  Document_type            = {Article},
  Doi                      = {10.5013/IJSSST.a.17.42.49},
  ISSN                     = {14738031},
  Publisher                = {UK Simulation Society},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85016251135&doi=10.5013%2fIJSSST.a.17.42.49&partnerID=40&md5=721a4a79f40b8f3cdb3f8c5814fea91f}
}

@Conference{Li2015,
  Title                    = {A scalable big data test framework},
  Author                   = {Li, N. and Escalona, A. and Guo, Y. and Offutt, J.},
  Year                     = {2015},
  Note                     = {cited By 3},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {This paper identifies three problems when testing software that uses Hadoop-based big data techniques. First, processing big data takes a long time. Second, big data is transferred and transformed among many services. Do we need to validate the data at every transition point? Third, how should we validate the transferred and transformed data? We are developing a novel big data test framework to address these problems. The test framework generates a small and representative data set from an original large data set using input space partition testing. Using this data set for development and testing would not hinder the continuous integration and delivery when using agile processes. The test framework also accesses and validates data at various transition points when data is transferred and transformed. © 2015 IEEE.},
  Art_number               = {7102619},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICST.2015.7102619},
  ISBN                     = {9781479971251},
  Journal                  = {2015 IEEE 8th International Conference on Software Testing, Verification and Validation, ICST 2015 - Proceedings},
  Keywords                 = {Data handling; Integration testing; Software testing; Statistical tests; Transition flow; Verification, Agile process; Continuous integrations; Development and testing; Input space; Large datasets; Test framework; Testing software; Transition point, Big data},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84935097588&doi=10.1109%2fICST.2015.7102619&partnerID=40&md5=3b8d2f3bac67ffd7a81c976b2fe3cfa6}
}

@Conference{Li2016393,
  Title                    = {Skyfire: Model-Based Testing with Cucumber},
  Author                   = {Li, N. and Escalona, A. and Kamal, T.},
  Year                     = {2016},
  Note                     = {cited By 1},
  Pages                    = {393-400},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {In the software industry, a Behavior-Driven Development (BDD) tool, Cucumber, has been widely used by practitioners. Usually product analysts, developers, and testers manually write BDD test scenarios that describe system behaviors. Testers write implementation for the BDD scenarios by hand and execute the Cucumber tests. Cucumber provides transparency about what test scenarios are covered and how the test scenarios are mapped to executable tests. One drawback of the Cucumber BDD approach is that test scenarios are generated manually. Thus, the test scenarios are usually weak. More importantly, practitioners do not have a metric to measure test coverage. In this paper, we present a Model-Based Testing (MBT) tool, skyfire. Skyfire can automatically generate effective Cucumber test scenarios to replace manually generated test scenarios. Skyfire reads a behavioral UML diagram (e.g., a state machine diagram), identifies all necessary elements (e.g., transitions) of the diagram, generates effective tests to satisfy various graph coverage criteria, and converts the tests into Cucumber scenarios. Then testers write Cucumber mappings for the generated scenarios. Skyfire does not only generate effective tests but is also completely compatible with the existing agile development and continuous integration (CI) rhythm. We present the design architecture and implementation of skyfire, as well as an industrial case study to show how skyfire is used in practice. © 2016 IEEE.},
  Art_number               = {7515497},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICST.2016.41},
  ISBN                     = {9781509018260},
  Journal                  = {Proceedings - 2016 IEEE International Conference on Software Testing, Verification and Validation, ICST 2016},
  Keywords                 = {Automatic test pattern generation; Boolean functions; Model checking; Software engineering; Testing; Verification, Agile development; Continuous integrations; Coverage criteria; Design architecture; Industrial case study; Model based testing; Software industry; State machine diagrams, Software testing},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84983329182&doi=10.1109%2fICST.2016.41&partnerID=40&md5=dba5f275bbb9af67240ae30746aca439}
}

@Conference{Li2016637,
  Title                    = {Applying combinatorial test data generation to big data applications},
  Author                   = {Li, N. and Lei, Y. and Khan, H.R. and Liu, J. and Guo, Y.},
  Year                     = {2016},
  Editor                   = {Khurshid S., Lo D., Apel S.},
  Note                     = {cited By 1},
  Pages                    = {637-647},
  Publisher                = {Association for Computing Machinery, Inc},

  Abstract                 = {Big data applications (e.g., Extract, Transform, and Load (ETL) applications) are designed to handle great volumes of data. However, processing such great volumes of data is time-consuming. There is a need to construct small yet effective test data sets during agile development of big data applications. In this paper, we apply a combinatorial test data generation approach to two real-world ETL applications at Medidata. In our approach, we first create Input Domain Models (IDMs) automatically by analyzing the original data source and incorporating constraints manually derived from requirements. Next, the IDMs are used to create test data sets that achieve t-way coverage, which has shown to be very effective in detecting software faults. The generated test data sets also satisfy all the constraints identified in the first step. To avoid creating IDMs from scratch when there is a change to the original data source or constraints, our approach extends the original IDMs with additional information. The new IDMs, which we refer to as Adaptive IDMs (AIDMs), are updated by comparing the changes against the additional information, and are then used to generate new test data sets. We implement our approach in a tool, called comBinatorial bIg daTa Test dAta Generator (BIT-TAG). Our experience shows that combinatorial testing can be effectively applied to big data applications. In particular, the test data sets created using our approach for the two ETL applications are only a small fraction of the original data source, but we were able to detect all the faults found with the original data source. © 2016 ACM.},
  Author_keywords          = {Adaptive Input Domain Model; Big Data Testing; Combinatorial Testing; Input Domain Model; Test Data Generation},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2970276.2970325},
  ISBN                     = {9781450338455},
  Journal                  = {ASE 2016 - Proceedings of the 31st IEEE/ACM International Conference on Automated Software Engineering},
  Keywords                 = {Data communication systems; Data mining; Fault detection; Query languages; Software engineering; Software testing; Testing, Agile development; Big data applications; Combinatorial testing; Data testing; Data-source; Domain model; Software fault; Test data generation, Big data},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84989172085&doi=10.1145%2f2970276.2970325&partnerID=40&md5=a807cd182f39544a7ed593ad246ec339}
}

@Conference{Li2015,
  Title                    = {A test automation language framework for behavioral models},
  Author                   = {Li, N. and Offutt, J.},
  Year                     = {2015},
  Note                     = {cited By 2},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Model-based testers design tests in terms of models, such as paths in graphs. This results in abstract tests, which have to be converted to concrete tests because the abstract tests use names and events that exist in the model, but not the implementation. Model elements often appear in many abstract tests, so testers write the same redundant code many times. However, many existing model-based testing techniques are very complicated to use in practice, especially in agile software development. Thus, testers usually have to transform abstract tests to concrete tests by hand. This is time-consuming, laborintensive, and error-prone. This paper presents a language to automate the creation of mappings from abstract tests to concrete tests. Three issues are addressed: (1) creating mappings and generating test values, (2) transforming graphs and using coverage criteria to generate test paths, and (3) solving constraints and generating concrete tests. Based on the language, we developed a test automation language framework. The paper also presents results from an empirical comparison of testers using the framework with manual mapping on 11 open source and 6 example programs. We found that the automated test generation method took 29.6% of the time the manual method took on average, and the manual tests contained 48 errors in which concrete tests did not match their abstract tests while the automatic tests had zero errors. © 2015 IEEE.},
  Art_number               = {7107402},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICSTW.2015.7107402},
  ISBN                     = {9781479918850},
  Journal                  = {2015 IEEE 8th International Conference on Software Testing, Verification and Validation Workshops, ICSTW 2015 - Proceedings},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84934344164&doi=10.1109%2fICSTW.2015.7107402&partnerID=40&md5=adf7adbf6c5ba85366058d88e7a33eb0}
}

@Article{Li201691,
  Title                    = {Influence of different flow conditions on rotor axis locus of mixed-flow pump},
  Author                   = {Li, W. and Ji, L. and Shi, W. and Li, W. and Jiang, X.},
  Journal                  = {Nongye Gongcheng Xuebao/Transactions of the Chinese Society of Agricultural Engineering},
  Year                     = {2016},
  Note                     = {cited By 0},
  Number                   = {4},
  Pages                    = {91-97},
  Volume                   = {32},

  Abstract                 = {The rotor axis locus of the mixed-flow pump is an important graphic sign of rotor vibration state, so it is an effective way to reflect the actual rotor movement condition intuitively. Also, it is an effective research method to prevent the rotor vibration deterioration induced by the hydraulic vibration. In this article, the experimental study on the axis locus of the mixed-flow pump was based on the Bentley 408 data acquisition system under the condition of 0.8, 1.0 and 1.2 times of the design flow rate (380 m3/h). Besides, the rotor original axis locus chart and time domain chart of the mixed-flow pump were obtained in this article with the bi-directional dynamic measurement method. And then, the rotor original axis locus chart and time domain chart were purified with the signal processing and filtering functions of the ADRE Sxp software. The Butterworth filter was used to purify the original signal of the mixed-flow pump. Then, the rotor axis locus chart and time domain chart at one time frequency and double frequency were analyzed. Meanwhile, it also drew the waterfall spectrum diagram of the mixed-flow pump under different flow rate conditions. Those results showed that the flow rate had a great impact on the misalignment and the unbalance of the rotor system. From the results, we could know that the misalignment causes power-frequency vibration while the unbalance causes horizontal vibration. With the flow rate keeping away from the design flow, the vibration was increasing, and the shaft vibration which was caused by hydraulic excitation had peak vibration under small flow rate condition. The fluctuation amplitude of the rotor axis locus chart at one time frequency under the condition of 0.8 time of flow rate was 1.35 times higher than that of the design flow rate. The middle and high frequency vibration force which was induced by the unsteady flow under the condition of low flow rate was the main reason that caused power-frequency vibration deterioration. The fluctuation amplitude of the rotor axis locus chart of the double frequency had the maximum value with the increase of the hydraulic load. This article also adopted the frequency spectrum under different flow rate conditions to analyze the reason. It could be detected that the misalignment increased and the unbalance of the rotor system also became worse than ever when the flow rate value was keeping away from the design point. What was more, the vibration of shaft system also increased with the flow rate changing. The power-frequency vibration was the main component of the shaft system vibration and the double frequency also had great effects on the shafting vibration state, while other low frequencies had little influence on the shaft system vibration. The research results are useful for reducing or preventing the deterioration of vibration effectively, and provide the important reference for the steady operation of the mixed-flow pump under multiple working conditions. © 2016, Editorial Department of the Transactions of the Chinese Society of Agricultural Engineering. All right reserved.},
  Author_keywords          = {Axis locus; Fault detection; Multi-conditions; Pumps; Vibrations},
  Coden                    = {NGOXE},
  Document_type            = {Article},
  Doi                      = {10.11975/j.issn.1002-6819.2016.04.013},
  ISSN                     = {10026819},
  Publisher                = {Chinese Society of Agricultural Engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84960388818&doi=10.11975%2fj.issn.1002-6819.2016.04.013&partnerID=40&md5=50a761923f4e1a6b502312ae0f936f22}
}

@Article{Li20152542,
  Title                    = {Software-defined network function virtualization: A survey},
  Author                   = {Li, Y. and Chen, M.},
  Journal                  = {IEEE Access},
  Year                     = {2015},
  Note                     = {cited By 31},
  Pages                    = {2542-2553},
  Volume                   = {3},

  Abstract                 = {Diverse proprietary network appliances increase both the capital and operational expense of service providers, meanwhile causing problems of network ossification. Network function virtualization (NFV) is proposed to address these issues by implementing network functions as pure software on commodity and general hardware. NFV allows flexible provisioning, deployment, and centralized management of virtual network functions. Integrated with SDN, the software-defined NFV architecture further offers agile traffic steering and joint optimization of network functions and resources. This architecture benefits a wide range of applications (e.g., service chaining) and is becoming the dominant form of NFV. In this survey, we present a thorough investigation of the development of NFV under the software-defined NFV architecture, with an emphasis on service chaining as its application. We first introduce the software-defined NFV architecture as the state of the art of NFV and present relationships between NFV and SDN. Then, we provide a historic view of the involvement from middlebox to NFV. Finally, we introduce significant challenges and relevant solutions of NFV, and discuss its future research directions by different application domains. © 2015 IEEE.},
  Art_number               = {7350211},
  Author_keywords          = {Middlebox; Network function virtualization; Network virtualization; Service chain; Software-defined networks},
  Document_type            = {Article},
  Doi                      = {10.1109/ACCESS.2015.2499271},
  ISSN                     = {21693536},
  Keywords                 = {Application programs; Software defined networking; Surveys; Transfer functions; Virtual reality, Centralized management; Future research directions; Middleboxes; Network appliances; Network virtualization; Operational expense; Service chain; Virtualizations, Network architecture},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84960954325&doi=10.1109%2fACCESS.2015.2499271&partnerID=40&md5=a9af9ad5370cda5bcabe526fcf54a60a}
}

@Conference{Licorish2017369,
  Title                    = {Adoption and suitability of software development methods and practices},
  Author                   = {Licorish, S.A. and Holvitie, J. and Hyrynsalmi, S. and Leppänen, V. and Spínola, R.O. and Mendes, T.S. and MacDonell, S.G. and Buchan, J.},
  Year                     = {2017},
  Editor                   = {Murphy G.C., Reeves S., Potanin A., Dietrich J.},
  Note                     = {cited By 0},
  Pages                    = {369-372},
  Publisher                = {IEEE Computer Society},

  Abstract                 = {In seeking to complement consultants' and tool vendors' reports, there has been an increasing academic focus on understanding the adoption and use of software development methods and practices. We surveyed practitioners working in Brazil, Finland, and New Zealand in a transnational study to contribute to these efforts. Among our findings we observed that most of the 184 practitioners in our sample focused on a small portfolio of projects that were of short duration. In addition, Scrum and Kanban were used most; however, some practitioners also used conventional methods. Coding Standards, Simple Design and Refactoring were used most by practitioners, and these practices were held to be largely suitable for project and process management. Our evidence points to the need to properly understand and support a wide range of software methods. © 2016 IEEE.},
  Art_number               = {7890614},
  Author_keywords          = {Adoption and suitability; Agile practices; Empirical studies; Software development methods; Survey},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/APSEC.2016.062},
  ISBN                     = {9781509055753},
  ISSN                     = {15301362},
  Journal                  = {Proceedings - Asia-Pacific Software Engineering Conference, APSEC},
  Keywords                 = {Software engineering; Surveying; Surveys, Adoption and suitability; Agile practices; Coding standards; Conventional methods; Empirical studies; Process management; Software development methods; Software methods, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85018486669&doi=10.1109%2fAPSEC.2016.062&partnerID=40&md5=13463a3acd82406c3b54dce578bd9677}
}

@Conference{Liikkanen20141095,
  Title                    = {Lean UX - The next generation of user-centered Agile development?},
  Author                   = {Liikkanen, L.A. and Kilpiö, H. and Svan, L. and Hiltunen, M.},
  Year                     = {2014},
  Note                     = {cited By 8},
  Pages                    = {1095-1100},
  Publisher                = {Association for Computing Machinery, Inc},

  Abstract                 = {In this paper we discuss the opportunities and challenges of the recently introduced Lean UX software development philosophy. The point of view is product design and development in a software agency. Lean UX philosophy is identified by three ingredients: design thinking, Lean production and Agile development. The major challenge for an agency is the organizational readiness of the client organization to adopt a new way of working. Rather than any special tool or practice, we see that the renewal of user-centered design and development is hindered by existing purchase processes and slow decision making patterns. Copyright is held by the owner/author(s).},
  Author_keywords          = {Human-centered design; Lean UX; User experience},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2639189.2670285},
  ISBN                     = {1595930361; 9781450325424},
  Journal                  = {Proceedings of the NordiCHI 2014: The 8th Nordic Conference on Human-Computer Interaction: Fun, Fast, Foundational},
  Keywords                 = {Design; Human computer interaction; Ontology; Product design; Purchasing, Agile development; Client organizations; Human-centered designs; Lean ux; Organizational readiness; Product design and development; User centered designs; User experience, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84911393812&doi=10.1145%2f2639189.2670285&partnerID=40&md5=600d16b16ea00e4d235a199f0eb18c1d}
}

@Conference{Lin2014689,
  Title                    = {Studying task allocation decisions of novice Agile teams with data from Agile project management tools},
  Author                   = {Lin, J. and Yu, H. and Shen, Z. and Miao, C.},
  Year                     = {2014},
  Note                     = {cited By 2},
  Pages                    = {689-694},
  Publisher                = {Association for Computing Machinery, Inc},

  Abstract                 = {Task allocation decisions are critical for the success of Agile teams yet not well understood. Traditional survey/interview based methods limit the scale and level of details of data collection. As agile project management (APM) tools are increasingly adopted, they offer a mechanism for unobtrusively collecting behavior data to support research. In this paper, we demonstrate the advantage of APM tool based method of studying task allocation decision-making in agile software engineering compared to survey/interview based methods. Through the proposed HASE online APM tool, we conducted a study involving 20 novice Agile teams consisting of 119 undergraduate software engineering students over an 8 week period. Analysis of the collected data provides insight into the effects of novice Agile team members' competence and the difficulty of the tasks assigned on them on their workload variation, their confidence, and the timeliness of completion of these tasks. These findings can be useful in designing situation-aware task allocation decision support systems to serve Agile teams. © 2014 ACM.},
  Author_keywords          = {Agile project management tool; Task allocation decision-making; Unobtrusive data collection},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2642937.2642959},
  ISBN                     = {9781450330138},
  Journal                  = {ASE 2014 - Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering},
  Keywords                 = {Artificial intelligence; Data acquisition; Decision support systems; Human resource management; Project management; Software engineering; Students; Surveys, Agile project management; Agile software engineering; Data collection; Level of detail; Situation-aware; Task allocation; Undergraduate software engineering; Workload variation, Decision making},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84908619150&doi=10.1145%2f2642937.2642959&partnerID=40&md5=384f50653e1db2c205d040b0f9fe0fea}
}

@Book{Lin20131,
  Title                    = {Electromagnetic Transient Analysis and Novell Protective Relaying Techniques for Power Transformers},
  Author                   = {Lin, X. and Ma, J. and Tian, Q. and Weng, H.},
  Publisher                = {Wiley Blackwell},
  Year                     = {2013},
  Note                     = {cited By 0},

  Abstract                 = {A comprehensive, practical book on software management that dispels real-world issues through relevant case studies Software managers inevitably will meet obstacles while trying to deliver quality products and provide value to customers, often with tight time restrictions. The result: Software War Stories. This book provides readers with practical advice on how to handle the many issues that can arise as a software project unfolds. It utilizes case studies that focus on what can be done to establish and meet reasonable expectations as they occur in government, industrial, and academic settings. The book also offers important discussions on both traditional and agile methods as well as lean development concepts. Software War Stories: Covers the basics of management as applied to situations ranging from agile projects to large IT projects with infrastructure problems Includes coverage of topics ranging from planning, estimating, and organizing to risk and opportunity management Uses twelve case studies to communicate lessons learned by the author in practice Offers end-of-chapter exercises, sample solutions, and a blog for providing updates and answers to readers' questions Software War Stories: Case Studies in Software Management mentors practitioners, software engineers, students and more, providing relevant situational examples encountered when managing software projects and organizations. © 2015 John Wiley & Sons Singapore Pte. Ltd. All rights reserved.},
  Document_type            = {Book},
  Doi                      = {10.1002/9781118653838},
  ISBN                     = {9781118653838; 9781118653821},
  Journal                  = {Electromagnetic Transient Analysis and Novell Protective Relaying Techniques for Power Transformers},
  Pages                    = {1-326},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85015223885&doi=10.1002%2f9781118653838&partnerID=40&md5=0bcb4ca3eda2e8675a87eb7bab9cc9c5}
}

@Article{Lin2015281,
  Title                    = {Multi-Agent System for intelligent Scrum project management},
  Author                   = {Lin, Y. and Descamps, P. and Gaud, N. and Hilaire, V. and Koukam, A.},
  Journal                  = {Integrated Computer-Aided Engineering},
  Year                     = {2015},
  Note                     = {cited By 2},
  Number                   = {3},
  Pages                    = {281-296},
  Volume                   = {22},

  Abstract                 = {In the 21st century, enterprises face an increasingly competitive market place. In this context, the success of enterprises depends critically on the quality and efficiency of their product business processes. These processes generally aim to sell products or services. The approach presented in this paper aims at the assistance of teams following these processes. The underlying idea is to help team members in their daily tasks in order to be more efficient according to a specific process. The two main components of the approach are: an ontology for business processes modeling and a Multi-Agent System for providing intelligent assistance to the human workers. The Scrum software development process illustrates this approach. Scrum is an agile software-development process widely used in software companies. This paper introduces a specific intelligent assistance software that aims to assist Scrum project teams in their implementation of the Scrum process. This tool aims primarily at helping Scrum Masters to take decisions by monitoring Scrum project teams' activities with their various projects and collecting knowledge about these activities. The proposed Scrum tool is a web-based system, which uses Multi-Agent System and the conceptualization of the Scrum process with a specific ontology. © 2015 - IOS Press and the author(s). All rights reserved.},
  Author_keywords          = {business process; Multi-Agent System; ontology; Scrum},
  Coden                    = {ICAEE},
  Document_type            = {Article},
  Doi                      = {10.3233/ICA-150491},
  ISSN                     = {10692509},
  Keywords                 = {Intelligent agents; Management science; Ontology; Project management; Social networking (online); Software design; Software engineering, Agile software development process; Business Process; Competitive markets; Intelligent assistances; Scrum; Software company; Software development process; Web-based system, Multi agent systems},
  Publisher                = {IOS Press},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84931051675&doi=10.3233%2fICA-150491&partnerID=40&md5=36689e08cdce7628fb39e77f25b8d569}
}

@Conference{Liu2014183,
  Title                    = {On datastore support for Agile software development},
  Author                   = {Liu, J.},
  Year                     = {2014},
  Editor                   = {Holzinger A., Mellor S., Libourel T., Maciaszek L., Maciaszek L.},
  Note                     = {cited By 0},
  Pages                    = {183-188},
  Publisher                = {SciTePress},

  Abstract                 = {Most database-base applications support two main sets of features: customer facing transactional capabilities such as purchasing books at an online bookstore and functionality required by managers and business analysts such as identifying trends in sales data by combing through aggregated sales data. The conventional approach of having just one main database to support both features greatly restrict developers freedom in applying the best approach to quickly implement new features, to enhance existing features, or to mend defects because any attempt in changing database schema means code and test cases modifications in many places and may even require a large amount of effort in testing. Such an inherited resistance in changing introduced by data store does not fit the evolutionary development nature of Agile software development methodology. We argue that we should consider having at least two databases: one support transactional capabilities and the other support reporting and possible data warehouse needs, and will show how such an approach supports the Agile software development methodology.},
  Author_keywords          = {Agile software development process; And NoSQL; Database management systems; Databases; MongoDB; Software development},
  Document_type            = {Conference Paper},
  ISBN                     = {9789897580369},
  Journal                  = {ICSOFT-EA 2014 - Proceedings of the 9th International Conference on Software Engineering and Applications},
  Keywords                 = {Application programs; Data warehouses; Database systems; Online systems; Sales; Software engineering, Agile software development; Agile software development process; And NoSQL; Business analysts; Conventional approach; Evolutionary development; MongoDB; Sets of features, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84908885960&partnerID=40&md5=d8d3abe14032b660c5fdacdeecd84c9a}
}

@Conference{Liu2016387,
  Title                    = {The research of testing process and data tracing based on hybrid model},
  Author                   = {Liu, X. and Yan, H. and Sun, Y.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {387-392},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Software testing process is an important factor affecting the quality of software testing, which plays an important role in the entire software development life cycle. In order to achieve a precise result of testing, different software testing process model will be chosen in different software development process for testing. Traditional testing process model will be chosen in traditional software development, and agile testing process model will be chosen in agile software development. However, there is no kind of testing process model proposed for a special software development which is a combination of traditional software development and agile software development. This article will propose a hybrid software testing process model aiming at a combination of traditional software development model and agile software development model. In the following sections, traditional testing process model and agile testing process model will be introduced respectively in the first place. Most attentions will be paid to the introduction and analysis of the hybrid software testing process model through one case. Furthermore, we will discuss the relationship of the data tracing involved in the testing process model. © 2015 IEEE.},
  Art_number               = {7490775},
  Author_keywords          = {agile; data tracing; hybrid model; testing process},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICCSNT.2015.7490775},
  ISBN                     = {9781467381727},
  Journal                  = {Proceedings of 2015 4th International Conference on Computer Science and Network Technology, ICCSNT 2015},
  Keywords                 = {Computer networks; Computer software; Life cycle; Software design; Software engineering, agile; data tracing; Hybrid model; Software development life cycle; Software development models; Software development process; Software testing process model; Testing process, Software testing},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84979220746&doi=10.1109%2fICCSNT.2015.7490775&partnerID=40&md5=d20791994e8968e9e91df2f0a7bf5ce4}
}

@Article{Lo2014298,
  Title                    = {A flexible network management framework based on OpenFlow technology},
  Author                   = {Lo, C.-C. and Chin, H.-H. and Horng, M.-F. and Kuo, Y.-H. and Hsu, J.-P.},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2014},
  Note                     = {cited By 2},
  Number                   = {PART 2},
  Pages                    = {298-307},
  Volume                   = {8482 LNAI},

  Abstract                 = {In this paper, we present a network management framework based on OpenFlow technology, to enhance flexibility in network management to conform more service requirements from diverse user identities. To this aim, user-level based QoS differentiation is introduced to provide fine-grained handling of network flows under different user and service constraints. With user identity and service requirement in place, we are able to provide dynamic bandwidth adjustment with the support of traffic statistics and even allocate and share unutilized network resources to satisfy user service requirement and improve resource utilization in networks. Furthermore, we also present a unified but simple network management interface to help network administrators to manage a network as a single entity. With this interface, the agents in switches are developed to detect and response to anomalies of flows. In summary, the proposed framework improves the original OpenFlow framework to provide a flexible and agile way to manage networks with dynamic resource allocation and to meet the diverse QoS requirements in future cloud services. © 2014 Springer International Publishing Switzerland.},
  Author_keywords          = {Flexibility; Network Management; OpenFlow; QoS; Software Defined Networking},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-07467-2_32},
  ISBN                     = {9783319074665},
  ISSN                     = {03029743},
  Keywords                 = {Intelligent systems; Quality of service; Traffic surveys, Dynamic resource allocations; Flexibility; In-network management; Network administrator; Network management frameworks; Openflow; Resource utilizations; Software-defined networkings, Network management},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958528623&doi=10.1007%2f978-3-319-07467-2_32&partnerID=40&md5=c5b3920c25d8393f4e90f7f0662fd203}
}

@Article{Long20162906,
  Title                    = {A user-oriented resource scheduling method for improving agile software pattern in cloud environment},
  Author                   = {Long, F. and Yang, C. and Rong, H.-G. and Li, J.-F.},
  Journal                  = {Journal of Central South University},
  Year                     = {2016},
  Note                     = {cited By 0},
  Number                   = {11},
  Pages                    = {2906-2916},
  Volume                   = {23},

  Abstract                 = {The crowdsourcing, as a service pattern in cloud environment, usually aims at the cross-disciplinary cooperation and creating value together with customers and becomes increasingly prevalent. Software process, as a kind of software development and management strategy, is defined as a series of activities implemented by software life cycle and provides a set of rules for various phases of the software engineering to achieve the desired objectives. With the current software development cycle getting shorter, facing more frequent needs change and fierce competition, a new resource management pattern is proposed to respond to these issues agilely by introducing the crowdsourcing service to agile software development for pushing the agility of software process. Then, a user-oriented resource scheduling method is proposed for rational use of various resources in the process and maximizing the benefits of all parties. From the experimental results, the proposed pattern and resources scheduling method reduces greatly the resource of project resource manager and increases the team resource utilization rate, which greatly improves the agility of software process and delivers software products quickly in crowdsourcing pattern. © 2016, Central South University Press and Springer-Verlag Berlin Heidelberg.},
  Author_keywords          = {agile software development; individual resource provider (IRP)-; project resource manager (PRM); resource scheduling},
  Document_type            = {Article},
  Doi                      = {10.1007/s11771-016-3354-z},
  ISSN                     = {20952899},
  Keywords                 = {Crowdsourcing; Human resource management; Life cycle; Managers; Scheduling; Software engineering, Agile software development; Management strategies; Project resources; Resource providers; Resource utilizations; Resource-scheduling; Software development cycles; Software life cycles, Software design},
  Publisher                = {Central South University of Technology},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85002688408&doi=10.1007%2fs11771-016-3354-z&partnerID=40&md5=a01cc72865acd0126d518d655b1b2255}
}

@Conference{Lopez-Martinez2016141,
  Title                    = {Problems in the adoption of agile-scrum methodologies: A systematic literature review},
  Author                   = {Lopez-Martinez, J. and Juarez-Ramirez, R. and Huertas, C. and Jimenez, S. and Guerra-Garcia, C.},
  Year                     = {2016},
  Editor                   = {Fernandez y Fernandez C.A., Oktaba H.J., Sandoval G.L., Juarez-Ramirez R., Calleros S.J., Vera R.A.A., Cisneros J.A.},
  Note                     = {cited By 0},
  Pages                    = {141-148},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Agile methodologies are focused on the people and functional product delivery in short periods of time. There are methodologies that change considerably the work habits of software developers. Scrum is an agile methodology that involves an iterative, incremental, and empiric process. Besides it is designed to add value, focus, clarity and transparency to the activities and products of a project. Nowadays, most companies are interested in the adoption of agile methodologies. Although Scrum is a light process and easy to understand, its adoption sometimes is difficult. Agile methodologies are not obvious by themselves, so they are difficult to introduce in the culture of a company. In order to identify the problems presented during the adoption, a Systematic Literature Review is performed focusing in Scrum. We found several problems, these are categorized in four groups: people, process, project, and company (organization). The results represent a basis to propose a framework to support the agile adoption. © 2016 IEEE.},
  Art_number               = {7477924},
  Author_keywords          = {adoption problems; agile methodologies; Scrum; systematic literature review},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/CONISOFT.2016.30},
  ISBN                     = {9781509010745},
  Journal                  = {Proceedings - 2016 4th International Conference in Software Engineering Research and Innovation, CONISOFT 2016},
  Keywords                 = {Engineering research; Software engineering, adoption problems; Agile adoptions; Agile Methodologies; Functional products; Scrum; Scrum methodologies; Software developer; Systematic literature review, Iterative methods},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84978306067&doi=10.1109%2fCONISOFT.2016.30&partnerID=40&md5=f72bbda1e9b739f7a59d85e57aad2a3e}
}

@Conference{Louis2016359,
  Title                    = {Applying governance principles to improve agile project success},
  Author                   = {Louis, V.W. and Carl, M.},
  Year                     = {2016},
  Editor                   = {Pretorius L., Thopil G.A., Hosni Y.},
  Note                     = {cited By 0},
  Pages                    = {359-376},
  Publisher                = {International Association for Management of Technology Conference (IAMOT) and the Graduate School of Technology Management, University of Pretoria},

  Abstract                 = {Project governance forms part of the organisational governance structure. Within this governance structure, corporate governance is the highest level. This ensures that the board and management exercise due diligence in their roles and enforce the set of policies and procedures that was established as part of the business strategy. They also need to ensure that the business strategy and direction is implemented by managers and all stakeholders. Organisations that are compliant in corporate governance had better success in implementing Information Technology (IT) governance as well as project governance. IT governance ensures the alignment of IT's strategy with the organisations' strategy and vision. There is a positive relation between IT governance and IT projects that implement the IT strategy and the management thereof. One type of IT project is an Agile project which focuses on software development. Agile software development projects are gaining popularity due to various benefits. But the adherence to governance principles within these type of projects is a concern for IT project managers and organisations at large. Six identified principles could be used to implement agile governance but it excludes project governance. These six principles should be part of Agile governance per se but should also be incorporated into project governance and comply with project management standards, phases and processes. This paper provides evidence that agile software development projects are more successful when governance principles are applied and adhered to. A questionnaire consisting of 26 questions was circulated among a purposive sample of potential respondents. The population consisted of agile software development projects which were completed within a financial services organisation. Project managers of agile software development projects were requested to provide information on the projects they had been involved in. Data regarding 320 software development projects of various durations, budgets, and levels of complexity was received and analyzed. The purpose of the questionnaire was to determine whether a positive correlation exists between successful agile software development projects and compliance to project governance principles. The results indicated that even novice project managers with less than six months' agile experience, already achieved better results than those using the traditional waterfall methodology. Agile software development projects are still more successful when such projects were initiated using a business case and not just an inception deck. Therefore, an inception deck should be used in conjunction with a business case to enhance the visibility of project deliverables and ensure the agile team is aligned to the projects goals and objectives. The results demonstrated that when project managers apply all the agile principles and "ceremonies" prescribed by the Agile Methodology, software development projects were between 39% - 47% more successful. We concluded that the success rate of Agile software development projects are not dependent on project governance but that the success is dependent on the governance of the Agile framework. Agile projects mainly fail because of the lack of management support, lack of training and experience, little support for culture transformation and adoption throughout the organisation. These aspects are directly related to agile governance principles that are not complied with. The survey results clearly showed that the success rate of Agile projects were not determined by applying traditional project governance, but rather the governing of Agile processes and principles. It could also be established that the success rate of agile projects is dependent on the experience of the team, the support from their stakeholders and the level of agile knowledge the team members acquired.},
  Author_keywords          = {Agile governance framework; Agile projects; Governance; Project management},
  Document_type            = {Conference Paper},
  ISBN                     = {0981581781; 9780981581781},
  Journal                  = {IAMOT 2016 - 25th International Association for Management of Technology Conference, Proceedings: Technology - Future Thinking},
  Keywords                 = {Budget control; Industrial management; Management science; Managers; Planning; Societies and institutions; Software design; Software engineering; Strategic planning; Surveys, Agile governance framework; Agile projects; Agile software development projects; Governance; Governance structures; Positive correlations; Project management standards; Software development projects, Project management},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84988354306&partnerID=40&md5=077293b6bd07f935f571c26bbe8108f2}
}

@Conference{Lucassen2015126,
  Title                    = {Forging high-quality User Stories: Towards a discipline for Agile Requirements},
  Author                   = {Lucassen, G. and Dalpiaz, F. and Van Der Werf, J.M.E.M. and Brinkkemper, S.},
  Year                     = {2015},
  Note                     = {cited By 8},
  Pages                    = {126-135},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {User stories are a widely used notation for formulating requirements in agile development projects. Despite their popularity in industry, little to no academic work is available on assessing their quality. The few existing approaches are too generic or employ highly qualitative metrics. We propose the Quality User Story Framework, consisting of 14 quality criteria that user story writers should strive to conform to. Additionally, we introduce the conceptual model of a user story, which we rely on to design the AQUSA software tool. AQUSA aids requirements engineers in turning raw user stories into higher-quality ones by exposing defects and deviations from good practice in user stories. We evaluate our work by applying the framework and a prototype implementation to three user story sets from industry. © 2015 IEEE.},
  Art_number               = {7320415},
  Author_keywords          = {AQUSA; NLP; QUS Framework; requirements engineering; requirements quality; User stories},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/RE.2015.7320415},
  ISBN                     = {9781467369053},
  Journal                  = {2015 IEEE 23rd International Requirements Engineering Conference, RE 2015 - Proceedings},
  Keywords                 = {Software engineering, Agile development; Agile requirements; AQUSA; Conceptual model; Prototype implementations; Quality criteria; QUS Framework; User stories, Requirements engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84962428779&doi=10.1109%2fRE.2015.7320415&partnerID=40&md5=9db0d36604830f712068c38ff77fba79}
}

@Article{Lucassen2017235,
  Title                    = {Improving user story practice with the grimm method: A multiple case study in the software industry},
  Author                   = {Lucassen, G. and Dalpiaz, F. and van der Werf, J.M.E.M. and Brinkkemper, S.},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2017},
  Note                     = {cited By 0},
  Pages                    = {235-252},
  Volume                   = {10153 LNCS},

  Abstract                 = {Context and motivation: Previous research shows that a considerable amount of real-world user stories contain easily preventable syntactic defects that violate desired qualities of good requirements. However, we still do not know the effect of user stories’ intrinsic quality on practitioners’ work. Question/Problem: We study the effects of introducing the Grimm Method’s Quality User Story framework and the AQUSA tool on the productivity and work deliverable quality of 30 practitioners from 3 companies over a period of 2 months. Principal ideas/results: Our multiple case study delivered mixed findings. Despite an improvement in the intrinsic user story quality, practitioners did not perceive such a change. They explained, however, there was more constructive user story conversation in the post-treatment period leading to less unnecessary rework. Conversely, project management metrics did not result in statistically significant changes in the number of comments, issues, defects, velocity, and rework. Contribution: Introducing our treatment has a mildly positive effect but a larger scale investigation is crucial to decisively assess the impact on work practice. Also, our case study protocol serves as an example for evaluating RE research in practice. © Springer International Publishing AG 2017.},
  Author_keywords          = {Agile development; Empirical study; Multiple case study; Requirements engineering; User stories},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-54045-0_18},
  Editor                   = {Perini A., Grunbacher P.},
  ISBN                     = {9783319540443},
  ISSN                     = {03029743},
  Keywords                 = {Computer software selection and evaluation; Project management; Software engineering, Agile development; Empirical studies; Multiple-case study; Post treatment; Real-world; Software industry; User stories; Work practices, Requirements engineering},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85013951931&doi=10.1007%2f978-3-319-54045-0_18&partnerID=40&md5=0a17335509ba9d3a2e0bb6b4c0997446}
}

@Article{Lucassen2016383,
  Title                    = {Improving agile requirements: the Quality User Story framework and tool},
  Author                   = {Lucassen, G. and Dalpiaz, F. and van der Werf, J.M.E.M. and Brinkkemper, S.},
  Journal                  = {Requirements Engineering},
  Year                     = {2016},
  Note                     = {cited By 4},
  Number                   = {3},
  Pages                    = {383-403},
  Volume                   = {21},

  Abstract                 = {User stories are a widely adopted requirements notation in agile development. Yet, user stories are too often poorly written in practice and exhibit inherent quality defects. Triggered by this observation, we propose the Quality User Story (QUS) framework, a set of 13 quality criteria that user story writers should strive to conform to. Based on QUS, we present the Automatic Quality User Story Artisan (AQUSA) software tool. Relying on natural language processing (NLP) techniques, AQUSA detects quality defects and suggest possible remedies. We describe the architecture of AQUSA, its implementation, and we report on an evaluation that analyzes 1023 user stories obtained from 18 software companies. Our tool does not yet reach the ambitious 100Â % recall that Daniel Berry and colleagues require NLP tools for RE to achieve. However, we obtain promising results and we identify some improvements that will substantially improve recall and precision. Â© 2016, The Author(s).},
  Author_keywords          = {AQUSA; Multi-case study; Natural language processing; QUS framework; Requirements quality; User stories},
  Document_type            = {Article},
  Doi                      = {10.1007/s00766-016-0250-x},
  ISSN                     = {09473602},
  Keywords                 = {Computational linguistics; Defects, AQUSA; Multi-case study; NAtural language processing; QUS framework; User stories, Natural language processing systems},
  Publisher                = {Springer-Verlag London Ltd},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84962165147&doi=10.1007%2fs00766-016-0250-x&partnerID=40&md5=5089e95d920e836cb7d41266f68d772a}
}

@Article{Lustenberger201614,
  Title                    = {On the fading of organizational interfaces in the era of Internet-of-Things},
  Author                   = {Lustenberger, F.},
  Journal                  = {IEEE Engineering Management Review},
  Year                     = {2016},
  Note                     = {cited By 0},
  Number                   = {1},
  Pages                    = {14-15},
  Volume                   = {44},

  Abstract                 = {THE previous article discussed the adaptation from a Greek temple structure to the tightly packed atomic structure, when tackling the organizational issues related to the transformation of a (hardware) product centric company to the business-driven entity. It turned out that tight interaction is necessary if fast- evolving data-driven business services or software products are to be developed and marketed. Therefore, it might be interesting to investigate a unique approach nowadays often used in the software world: DevOps, a term first forged by Andrew Clay Shafer and Patrick Debois at the Agile 2008 conference [1]. © 1973-2011 IEEE.},
  Coden                    = {IEMRA},
  Document_type            = {Article},
  Doi                      = {10.1109/EMR.2016.2530642},
  ISSN                     = {03608581},
  Keywords                 = {Engineering; Management, Business service; Evolving datum; Greek Temple; Organizational interfaces; Organizational issues; Software products, Internet of things},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84964331231&doi=10.1109%2fEMR.2016.2530642&partnerID=40&md5=43dfdb32db46f118f6a4ba2250802043}
}

@Conference{Lwakatare20165437,
  Title                    = {Towards DevOps in the embedded systems domain: Why is it so hard?},
  Author                   = {Lwakatare, L.E. and Karvonen, T. and Sauvola, T. and Kuvaja, P. and Olsson, H.H. and Bosch, J. and Oivo, M.},
  Year                     = {2016},
  Editor                   = {Sprague R.H., Bui T.X.},
  Note                     = {cited By 3},
  Pages                    = {5437-5446},
  Publisher                = {IEEE Computer Society},
  Volume                   = {2016-March},

  Abstract                 = {DevOps is a predominant phenomenon in the web domain. Its two core principles emphasize collaboration between software development and operations, and the use of agile principles to manage deployment environments and their configurations. DevOps techniques, such as collaboration and behaviour-driven monitoring, have been used by web companies to facilitate continuous deployment of new functionality to customers. The techniques may also offer opportunities for continuous product improvement when adopted in the embedded systems domain. However, certain characteristics of embedded software development present obstacles for DevOps adoption, and as yet, there is no empirical evidence of its adoption in the embedded systems domain. In this study, we present the challenges for DevOps adoption in embedded systems using a multiple-case study approach with four companies. The contribution of this paper is to introduce the concept of DevOps adoption in the embedded systems domain and then to identify key challenges for the DevOps adoption. © 2016 IEEE.},
  Art_number               = {7427859},
  Author_keywords          = {Continuous deployment; DevOps; Embedded systems},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/HICSS.2016.671},
  ISBN                     = {9780769556703},
  ISSN                     = {15301605},
  Journal                  = {Proceedings of the Annual Hawaii International Conference on System Sciences},
  Keywords                 = {Software design; Software engineering, Continuous deployment; Development and operations; DevOps; Multiple-case study; Product improvement; Web domains, Embedded systems},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84975460866&doi=10.1109%2fHICSS.2016.671&partnerID=40&md5=7cf1760c724b7e4ecdfedb11c29b7118}
}

@Article{Lwakatare2016399,
  Title                    = {Relationship of devops to agile, lean and continuous deployment: A multivocal literature review study},
  Author                   = {Lwakatare, L.E. and Kuvaja, P. and Oivo, M.},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {399-415},
  Volume                   = {10027 LNCS},

  Abstract                 = {In recent years, the DevOps phenomenon has attaracted interest amongst practitioners and researchers in software engineering, reflecting the greater emphasis on collaboration between development and IT operations. However, despite this growing interest, DevOps is often conflated with agile and continuous deployment approaches of software development. This study compares DevOps with agile, lean and continuous deployment approaches in software development from four perspectives: origin, adoption, implementation and goals. The study also reports on the claimed effects and on the metrics of DevOps used to asses those effects. The research is based on an interpretative analysis of qualitative data from documents describing DevOps and practitioner’s responses in a DevOps workshop. Our findings indicate that the DevOps phenomenon originated from continuous deployment as an evolution of agile software development, informed by a lean principles background. It was also concluded that successful adoption of DevOps requires agile software development. © Springer International Publishing AG 2016.},
  Author_keywords          = {Agile; Continuous deployment; DevOps; Effect; Lean},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-49094-6_27},
  Editor                   = {Amasaki S., Mikkonen T., Felderer M., Abrahamsson P., Duc A.N., Jedlitschka A.},
  ISBN                     = {9783319490939},
  ISSN                     = {03029743},
  Keywords                 = {Process engineering; Software engineering, Agile; Continuous deployment; DevOps; Effect; Lean, Software design},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84999040028&doi=10.1007%2f978-3-319-49094-6_27&partnerID=40&md5=0f7db5b48f330b2ff9eb14d53531d23d}
}

@Conference{Ma2014728,
  Title                    = {A graph-based approach to assisting creation of mobile web applications},
  Author                   = {Ma, Y. and Lu, X. and Luo, Y. and Liu, X.},
  Year                     = {2014},
  Editor                   = {De Roure D., Thuraisingham B., Zhang J.},
  Note                     = {cited By 0},
  Pages                    = {728-729},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Web applications have played an important role in mobile computing since they are developed by standard web technology, easy to achieve portability and always up to date. As a widely adopted development fashion, mashup integrates data, computation and UI elements from multiple web-delivered services into a single web application, which is a promising way to develop applications for mobile devices. However, developing mobile web applications by mashup has faced two challenges: on one hand, the growing popularity of web-delivered services, especially those equipped with mobile features like LBS, increases the difficulty of finding proper services and connections between services to create situational applications; on the other hand, mobile computing yields for agile development and fast iteration to meet users everchanging requirements, imposing more burden on developers. This paper presents a graph-based approach to helping mobile developers create mobile web applications. Based on this graph model, algorithms by synthesizing different recommendation patterns are designed to assist mashup completion, such as finding the missing components, connections between them, or potentially relevant options. © 2014 IEEE.},
  Art_number               = {6928978},
  Author_keywords          = {Mobile; Recommendation; Service mashup; Web application},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICWS.2014.120},
  ISBN                     = {9781479950546},
  Journal                  = {Proceedings - 2014 IEEE International Conference on Web Services, ICWS 2014},
  Keywords                 = {Computer software portability; Graphic methods; Iterative methods; Mobile computing; Mobile devices; Social networking (online); World Wide Web, Agile development; Graph-based; Mobile; Mobile web applications; Recommendation; Service mashup; WEB application; Web technologies, Web services},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84926180494&doi=10.1109%2fICWS.2014.120&partnerID=40&md5=ed648e7582a247cfbdccb06a5c4d74fb}
}

@Article{Magdaleno2015,
  Title                    = {Collaboration optimization in software process composition},
  Author                   = {Magdaleno, A.M. and De Oliveira Barros, M. and Werner, C.M.L. and De Araujo, R.M. and Batista, C.F.A.},
  Journal                  = {Journal of Systems and Software},
  Year                     = {2015},
  Note                     = {cited By 1},
  Number                   = {C},
  Pages                    = {452-466},
  Volume                   = {103},

  Abstract                 = {Purpose: The purpose of this paper is to describe an optimization approach to maximize collaboration in software process composition. The research question is: how to compose a process for a specific software development project context aiming to maximize collaboration among team members? The optimization approach uses heuristic search algorithms to navigate the solution space and look for acceptable solutions. Design/methodology/approach: The process composition approach was evaluated through an experimental study conducted in the context of a large oil company in Brazil. The objective was to evaluate the feasibility of composing processes for three software development projects. We have also compared genetic algorithm (GA) and hill climbing (HC) algorithms driving the optimization with a simple random search (RS) in order to determine which would be more effective in addressing the problem. In addition, human specialist point-of-view was explored to verify if the composed processes were in accordance with his/her expectations regarding size, complexity, diversity, and reasonable sequence of components. Findings: The main findings indicate that GA is more effective (best results regarding the fitness function) than HC and RS in the search of solutions for collaboration optimization in software process composition for large instances. However, all algorithms are competitive for small instances and even brute force can be a feasible alternative in such a context. These SBSE results were complemented by the feedback given by specialist, indicating his satisfaction with the correctness, diversity, adherence to the project context, and support to the project manager during the decision making in process composition. Research limitations: This work was evaluated in the context of a single company and used only three project instances. Due to confidentiality restrictions, the data describing these instances could not be disclosed to be used in other research works. The reduced size of the sample prevents generalization for other types of projects or different contexts. Implications: This research is important for practitioners who are facing challenges to handle diversity in software process definition, since it proposes an approach based on context, reuse and process composition. It also contributes to research on collaboration by presenting a collaboration management solution (COMPOOTIM) that includes both an approach to introduce collaboration in organizations through software processes and a collaboration measurement strategy. From the standpoint of software engineering looking for collaborative solutions in distributed software development, free/open source software, agile, and ecosystems initiatives, the results also indicate how to increase collaboration in software development. Originality/value: This work proposes a systematic strategy to manage collaboration in software development process composition. Moreover, it brings together a mix of computer-oriented and human-oriented studies on the search-based software engineering (SBSE) research area. Finally, this work expands the body of knowledge in SBSE to the field of software process which has not been properly explored by former research. © 2014 Elsevier Inc. All rights reserved.},
  Author_keywords          = {Collaboration; SBSE; Software process},
  Coden                    = {JSSOD},
  Document_type            = {Article},
  Doi                      = {10.1016/jjss.2014.11.036},
  ISSN                     = {01641212},
  Keywords                 = {Algorithms; Computer software reusability; Decision making; Engineering research; Genetic algorithms; Heuristic algorithms; Optimization; Software engineering; Solution mining, Collaboration; Distributed software development; Heuristic search algorithms; SBSE; Search based software engineering (SBSE); Software development process; Software development projects; Software process, Software design},
  Publisher                = {Elsevier Inc.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84928007475&doi=10.1016%2fjjss.2014.11.036&partnerID=40&md5=cd317e755ec156d62309feebc4ea91f0}
}

@Article{Magdaleno2015452,
  Title                    = {Collaboration optimization in software process composition},
  Author                   = {Magdaleno, A.M. and De Oliveira Barros, M. and Werner, C.M.L. and De Araujo, R.M. and Batista, C.F.A.},
  Journal                  = {Journal of Systems and Software},
  Year                     = {2015},
  Note                     = {cited By 0},
  Pages                    = {452-466},
  Volume                   = {103},

  Abstract                 = {Purpose: The purpose of this paper is to describe an optimization approach to maximize collaboration in software process composition. The research question is: how to compose a process for a specific software development project context aiming to maximize collaboration among team members? The optimization approach uses heuristic search algorithms to navigate the solution space and look for acceptable solutions. Design/methodology/approach: The process composition approach was evaluated through an experimental study conducted in the context of a large oil company in Brazil. The objective was to evaluate the feasibility of composing processes for three software development projects. We have also compared genetic algorithm (GA) and hill climbing (HC) algorithms driving the optimization with a simple random search (RS) in order to determine which would be more effective in addressing the problem. In addition, human specialist point-of-view was explored to verify if the composed processes were in accordance with his/her expectations regarding size, complexity, diversity, and reasonable sequence of components. Findings: The main findings indicate that GA is more effective (best results regarding the fitness function) than HC and RS in the search of solutions for collaboration optimization in software process composition for large instances. However, all algorithms are competitive for small instances and even brute force can be a feasible alternative in such a context. These SBSE results were complemented by the feedback given by specialist, indicating his satisfaction with the correctness, diversity, adherence to the project context, and support to the project manager during the decision making in process composition. Research limitations: This work was evaluated in the context of a single company and used only three project instances. Due to confidentiality restrictions, the data describing these instances could not be disclosed to be used in other research works. The reduced size of the sample prevents generalization for other types of projects or different contexts. Implications: This research is important for practitioners who are facing challenges to handle diversity in software process definition, since it proposes an approach based on context, reuse and process composition. It also contributes to research on collaboration by presenting a collaboration management solution (COMPOOTIM) that includes both an approach to introduce collaboration in organizations through software processes and a collaboration measurement strategy. From the standpoint of software engineering looking for collaborative solutions in distributed software development, free/open source software, agile, and ecosystems initiatives, the results also indicate how to increase collaboration in software development. Originality/value: This work proposes a systematic strategy to manage collaboration in software development process composition. Moreover, it brings together a mix of computer-oriented and human-oriented studies on the search-based software engineering (SBSE) research area. Finally, this work expands the body of knowledge in SBSE to the field of software process which has not been properly explored by former research. © 2014 Elsevier Inc. All rights reserved.},
  Author_keywords          = {Collaboration; SBSE; Software process},
  Coden                    = {JSSOD},
  Document_type            = {Conference Paper},
  Doi                      = {10.1016/j.jss.2014.11.036},
  ISSN                     = {01641212},
  Keywords                 = {Computer software reusability; Decision making; Engineering research; Genetic algorithms; Heuristic algorithms; Solution mining, Collaboration; Distributed software development; Heuristic search algorithms; SBSE; Search-based software engineering; Software development process; Software development projects; Software process, Software design},
  Publisher                = {Elsevier Inc.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84924931380&doi=10.1016%2fj.jss.2014.11.036&partnerID=40&md5=15e3f595a4d13a6a27707dd7d9107fd9}
}

@Conference{Magues2017,
  Title                    = {Usability in agile development: A systematic mapping study},
  Author                   = {Magues, D.A. and Castro, J.W. and Acuna, S.T.},
  Year                     = {2017},
  Note                     = {cited By 0},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Background: Interest in the integration of the agile software development process (ASDP) and user-centred design (UCD) has grown over the last decade. However, there are not many papers that study this issue holistically and uncover the current state of this integration. Aim: This study sets out to answer the following research question: What is the current state of integration between agile processes and usability? Method: We conduct a systematic mapping study (SMS). A SMS is a form of systematic literature review that aims to identify and classify the research papers published about a specified issue. Results: We retrieved a total of 161 primary studies, which we categorized according to four criteria: process, practice, team and technology integration. The largest group refers to process integration with a total of 76 primary studies. Judging by the increase in the number of publications over the last decade, the integration of human-computer interaction (HCI) activities and techniques into the ASDP is an issue of notable interest. Conclusions: There are very few papers that study the literature holistically and report the current state of usability in the ASDP. Additionally, there are no formalized proposals for adopting usability techniques in ASDP. © 2016 IEEE.},
  Art_number               = {7833347},
  Author_keywords          = {Agile software development; systematic mapping study; usability; user-centred design},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/CLEI.2016.7833347},
  ISBN                     = {9781509016334},
  Journal                  = {Proceedings of the 2016 42nd Latin American Computing Conference, CLEI 2016},
  Keywords                 = {Data visualization; Human computer interaction; Mapping; Software engineering; Usability engineering; User centered design, Agile software development; Agile software development process; Human computer interaction (HCI); Systematic literature review; Systematic mapping studies; Technology Integration; usability; Usability techniques, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85013870278&doi=10.1109%2fCLEI.2016.7833347&partnerID=40&md5=d1770655a1815f542aa660d08597a34c}
}

@Conference{Magues2016,
  Title                    = {HCI usability techniques in agile development},
  Author                   = {Magues, D.A. and Castro, J.W. and Acuna, S.T.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Background: Interest in the integration of the agile software development process (ASDP) and user-centred design (UCD) has grown over the last decade. However, there are not many papers that study this issue holistically and uncover the current state of this integration. Objective: This study sets out to answer the following research question: What is the current state of integration between agile processes and usability techniques? Method: We conduct a systematic mapping study (SMS). A SMS is a form of systematic literature review that aims to identify and classify the research papers published about a specified issue. Results: We retrieved a total of 31 primary studies, suggesting that the agile development community is starting to adopt some usability techniques in its development projects. Most of the human-computer interaction (HCI) techniques that the ASDP is adopting are techniques related to requirements engineering, especially techniques for requirements elicitation and analysis. Judging by the increase in the number of publications over the last decade, the integration of HCI activities and techniques into the ASDP is an issue of notable interest. Conclusions: There are few papers that study the literature holistically and report the current state of usability in the ASDP. Additionally, the literature does not contain a general, formal and systematic proposal to help agile development teams adopt usability techniques in their development projects. © 2016 IEEE.},
  Art_number               = {7778513},
  Author_keywords          = {Agile Software Development; Usability; Usability Techniques; User-centred Design},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICA-ACCA.2016.7778513},
  ISBN                     = {9781509011476},
  Journal                  = {2016 IEEE International Conference on Automatica, ICA-ACCA 2016},
  Keywords                 = {Data visualization; Human computer interaction; Integration; Requirements engineering; Software engineering; Usability engineering; User centered design, Agile software development; Agile software development process; Human computer interaction (HCI); Requirements elicitation; Systematic literature review; Systematic mapping studies; Usability; Usability techniques, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85010433109&doi=10.1109%2fICA-ACCA.2016.7778513&partnerID=40&md5=da2b8f4edbf8ce91a57908f8de1510eb}
}

@Conference{Magües2016537,
  Title                    = {Requirements engineering related usability techniques adopted in agile development processes},
  Author                   = {Magües, D.A. and Castro, J.W. and Acuña, S.T.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {537-542},
  Publisher                = {Knowledge Systems Institute Graduate School},
  Volume                   = {2016-January},

  Abstract                 = {Context: Over the last decade there has been a growing interest in the integration of agile software development process (ASDP) and user-centred design (UCD). However, there are no papers that study which usability techniques related to requirements engineering are being adopted in the ASDP, and there are no formalized proposals for their adoption. Objective: Identify which techniques related to requirements engineering activities are being adopted in the ASDP and determine how they are being adopted. Method: We have conducted a systematic mapping study (SMS) to retrieve the literature reporting the application of usability techniques in the ASDP. We analysed these techniques using a catalogue of techniques compiled by software engineering researchers. We then determined the manner in which the techniques that are being used in the ASDP were adopted. Results: The agile community is very much interested in adopting usability techniques. The most used techniques are Personas, contextual inquiry and prototyping. Conclusions: This research offers an overview of the adoption of usability techniques related to requirements engineering in ASDPs and reports how they are being adopted. We found that some of the techniques are being adapted for adoption.},
  Author_keywords          = {Agile software development; Systematic mapping study; Usability; Usability techniques; User-centred design},
  Document_type            = {Conference Paper},
  Doi                      = {10.18293/SEKE2016-057},
  ISBN                     = {189170639X; 9781891706394},
  ISSN                     = {23259000},
  Journal                  = {Proceedings of the International Conference on Software Engineering and Knowledge Engineering, SEKE},
  Keywords                 = {Data visualization; Knowledge engineering; Mapping; Requirements engineering; Software design; Usability engineering; User centered design, Agile development; Agile software development; Agile software development process; Community IS; Contextual inquiry; Systematic mapping studies; Usability; Usability techniques, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84988373332&doi=10.18293%2fSEKE2016-057&partnerID=40&md5=6d8a521b0bcb750b3e7f6909705d9379}
}

@Conference{Mahdavi-Hezave2015229,
  Title                    = {FDMD: Feature-driven methodology development},
  Author                   = {Mahdavi-Hezave, R. and Ramsin, R.},
  Year                     = {2015},
  Editor                   = {Filipe J., Filipe J., Maciaszek L., Maciaszek L.},
  Note                     = {cited By 2},
  Pages                    = {229-237},
  Publisher                = {SciTePress},

  Abstract                 = {Situational Method Engineering (SME) is a branch of software engineering which helps develop bespoke methodologies to fit the specific characteristics of the software project at hand. As in software development, SME too involves rigorous Requirements Engineering (RE), so much so that if requirements elicitation and definition is mishandled in any way, methodology development will most likely fail as a result. In this paper, we propose a Feature-driven methodology for SME; in this SME methodology, the requirements of the target methodology are captured as Features. First introduced in the agile FDD (Feature-Driven Development) methodology, Features are fully object-oriented and provide all the benefits that the object-oriented paradigm has to offer. Due to the object-oriented nature of Features and the rest of its deliverables, our proposed Feature-Driven Methodology Development (FDMD) process is fully seamless; this also facilitates the development of tool support for the methodology which is produced by applying FDMD.},
  Author_keywords          = {Feature-driven development; Requirements engineering; Situational Method Engineering; Software development methodology},
  Document_type            = {Conference Paper},
  ISBN                     = {9789897581007},
  Journal                  = {ENASE 2015 - Proceedings of the 10th International Conference on Evaluation of Novel Approaches to Software Engineering},
  Keywords                 = {Object oriented programming; Requirements engineering; Software engineering, Feature driven development; Object oriented; Object oriented paradigm; Requirements elicitation; Situational Method Engineering; Software development methodologies; Software project; Tool support, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84933563943&partnerID=40&md5=a5a9e8d38b7a31a729948bbc9ea7866e}
}

@Conference{Mahmud2016161,
  Title                    = {Reviews on agile methods in mobile application development process},
  Author                   = {Mahmud, D.M. and Abdullah, N.A.S.},
  Year                     = {2016},
  Editor                   = {Hassan S.A., Ab. Rahman W.N., Atan R., Pa N.C., Mohd. Ali N.},
  Note                     = {cited By 0},
  Pages                    = {161-165},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {This paper examines agile methods that are created or adapted in mobile application development. From time to time new methodology has to be transformed from traditional methodology to the new era software methodology, either by adoption or adaptation. Agile method is commonly used in current software development projects. Agile characteristics are really suited well in current rapid software development demand. Mobile application is in high demand and requires fast delivery with cost and time efficiency. This paper highlights the mobile application characteristics and agile characteristics. It then examines the existing studies that adapted agile methods to suit with mobile application development process and evidence in small medium enterprise. This paper enlightens the gap in mobile application development process using agile methods. © 2015 IEEE.},
  Art_number               = {7475214},
  Author_keywords          = {agile; agile maniefesto; mobile application; mobile application development; software methodology},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/MySEC.2015.7475214},
  ISBN                     = {9781467382267},
  Journal                  = {2015 9th Malaysian Software Engineering Conference, MySEC 2015},
  Keywords                 = {Application programs; Mobile computing; Mobile telecommunication systems; Software design, agile; agile maniefesto; Mobile application development; Mobile applications; Software methodologies, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84974653220&doi=10.1109%2fMySEC.2015.7475214&partnerID=40&md5=a0d3c3cd5bfcb381b9726938ca8a502d}
}

@Article{Mahnič2015225,
  Title                    = {The capstone course as a means for teaching agile software development through project-based learning},
  Author                   = {Mahnič, V.},
  Journal                  = {World Transactions on Engineering and Technology Education},
  Year                     = {2015},
  Note                     = {cited By 2},
  Number                   = {3},
  Pages                    = {225-230},
  Volume                   = {13},

  Abstract                 = {Since most of the core software engineering courses do not pay enough attention to agile software development, a software engineering capstone course represents an appropriate place for more in-depth treatment of this topic. In this article, the evolution of the software engineering capstone course at the University of Ljubljana is described since its conception in the 2008/09 academic year till now. The course requires students to develop a quasi-real project strictly following Scrum, which is the most widespread agile method. Additionally, the course design enables the conduct of studies that contribute to empirical evidence regarding agile processes. The article explains the reasons for introducing Scrum, presents the course design, describes some examples of empirical studies that were conducted within the course, and outlines the course upgrade with lean approaches to software development. Students' opinions about the course are overwhelmingly positive, indicating that the course is interesting and beneficial to their employability and professional career. © 2015 WIETE.},
  Document_type            = {Article},
  ISSN                     = {14462257},
  Keywords                 = {Education; Employment; Software design; Software engineering; Teaching, Agile methods; Agile software development; Capstone course; Empirical studies; Engineering capstones; Professional careers; Project based learning; Software engineering course, Curricula},
  Publisher                = {World Institute for Engineering and Technology Education},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84946405125&partnerID=40&md5=dfea1c2a22ed7b46287d725c25421c4a}
}

@Article{Mahnič201577,
  Title                    = {Scrum in software engineering courses: An outline of the literature},
  Author                   = {Mahnič, V.},
  Journal                  = {Global Journal of Engineering Education},
  Year                     = {2015},
  Note                     = {cited By 4},
  Number                   = {2},
  Pages                    = {77-83},
  Volume                   = {17},

  Abstract                 = {This article provides an outline of the literature dealing with teaching Scrum in software engineering courses. The search of studies in the Scopus database revealed 23 papers that were identified as primary studies relevant to this research. These studies are classified by their main topic and their main results are presented. All studies stress that the teaching of Scrum should not be limited to traditional lectures, but some practical experience should be provided in order to strengthen comprehension and achieve deep learning. For this reason, the use of Scrum in capstone (or similar) projects requiring students to work in teams is the most widely adopted strategy, described in seven studies. Four studies describe the use of simulation games as an alternative to practical project work (and even traditional lectures). Teaching Scrum through a capstone course provides a suitable environment for in-depth analyses of students' perceptions of typical Scrum practices (discussed in four studies), but also opens some pedagogical issues, such as the assessment of individual performance and consideration of students' learning styles (three studies). The remaining studies describe general experience and recommendations, the development of teaching aids and the combination of Scrum with other process models. © WIETE 2015.},
  Author_keywords          = {Agile methods; Capstone project; Problem-based learning; Scrum; Software engineering education},
  Document_type            = {Article},
  ISSN                     = {13283154},
  Publisher                = {World Institute for Engineering and Technology Education},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84937675741&partnerID=40&md5=7d5140196e2eaacfac28ee268fcc26cb}
}

@Article{Mahnič2016278,
  Title                    = {A computerized support tool for conducting a scrum-based software engineering capstone course},
  Author                   = {Mahnič, V. and Časar, A.},
  Journal                  = {International Journal of Engineering Education},
  Year                     = {2016},
  Note                     = {cited By 2},
  Number                   = {1},
  Pages                    = {278-293},
  Volume                   = {32},

  Abstract                 = {A software engineering capstone course is often used for the introduction of agile methods like Scrum. Apart from exposing students to state-of-the-art topics, the capstone course also enables teachers to use modern ways of teaching through practical problem solving and gives researchers opportunities to conduct empirical studies with students as subjects. In order to satisfy the needs of all parties involved, a good computerized support tool is needed. The students need such a tool to manage their projects, the teachers require instruments for maintaining project requirements and monitoring student progress, while the researchers are interested in data for evidence-driven assessment of the development process. In this paper, an example of such a tool that was developed to support a Scrum-based software engineering capstone course is described. The course design, which requires students to develop a quasi-real project, is described first. Following this, a step-by-step description of the course execution is provided and the tool support of each step is illustrated. Finally, the opinions of 57 students obtained through an anonymous survey after using the tool for the first time are analyzed. The students found the tool intuitive and easy to use, providing good visualization of the project progress and making the execution of their projects simpler and more efficient. The tool gives directions on how their collaboration should proceed and prevents them from exploring their projects blindly. By visualizing the development process, it helps all parties involved to know what each team member is doing, thus preventing procrastination and "free-rider" syndrome. © 2016 TEMPUS Publications.},
  Author_keywords          = {Agile methods; Capstone course; Effort estimation; Project management; Scrum; Software engineering education},
  Document_type            = {Conference Paper},
  ISSN                     = {0949149X},
  Keywords                 = {Curricula; Education; Problem solving; Project management; Software engineering; Students, Agile methods; Capstone course; Development process; Effort Estimation; Empirical studies; Engineering capstones; Practical problems; Scrum, Teaching},
  Publisher                = {Tempus Publications},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84959323009&partnerID=40&md5=ea42c192cea732a30c06436ef26ae39a}
}

@Article{Mahnič20162121,
  Title                    = {The influence of diffusion of innovation theory factors on undergraduate students' adoption of scrum},
  Author                   = {Mahnič, V. and Hovelja, T.},
  Journal                  = {International Journal of Engineering Education},
  Year                     = {2016},
  Note                     = {cited By 0},
  Number                   = {5},
  Pages                    = {2121-2133},
  Volume                   = {32},

  Abstract                 = {Since Scrum is the most widespread agile software development method, teaching it is an important issue to prepare students for their professional careers. Scrum is often taught within the scope of a software engineering capstone course, which makes it possible for students to learn Scrum practices through practical project work. In this study, we use the Diffusion of Innovation theory (DOI) to analyze to what stage such a course enables students to assimilate the core Scrum practices and the factors that have the most impact on Scrum adoption. The study is based on the results of a survey that was conducted after each Sprint of the capstone course at the University of Ljubljana, Slovenia; the course has four Sprints and was attended by 88 undergraduates. It is shown that at the end of the course, all core Scrum practices reach either the acceptance or the routinization stage, and 11 most influential DOI factors are identified. © 2016 TEMPUS Publications.},
  Author_keywords          = {Agile software development; Capstone course; Diffusion of innovation; Scrum; Software engineering education},
  Document_type            = {Article},
  ISSN                     = {0949149X},
  Keywords                 = {Curricula; Education; Employment; Engineering education; Innovation; Software design; Software engineering; Teaching, Agile software development; Capstone course; Diffusion of innovation theory; Diffusion of innovations; Engineering capstones; Scrum; Undergraduate students; University of Ljubljana , Slovenia, Students},
  Publisher                = {Tempus Publications},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84992411228&partnerID=40&md5=0ba4f1d238fdf79d4196ad5eb2dacc85}
}

@Article{Mäkinen20161339,
  Title                    = {Improving the delivery cycle: A multiple-case study of the toolchains in Finnish software intensive enterprises},
  Author                   = {Mäkinen, S. and Leppänen, M. and Kilamo, T. and Mattila, A.-L. and Laukkanen, E. and Pagels, M. and Männistö, T.},
  Journal                  = {Information and Software Technology},
  Year                     = {2016},
  Note                     = {cited By 2},
  Pages                    = {1339-1351},
  Volume                   = {80},

  Abstract                 = {Context: Software companies seek to gain benefit from agile development approaches in order to meet evolving market needs without losing their innovative edge. Agile practices emphasize frequent releases with the help of an automated toolchain from code to delivery. Objective: We investigate, which tools are used in software delivery, what are the reasons omitting certain parts of the toolchain and what implications toolchains have on how rapidly software gets delivered to customers. Method: We present a multiple-case study of the toolchains currently in use in Finnish software-intensive organizations interested in improving their delivery frequency. We conducted qualitative semi-structured interviews in 18 case organizations from various software domains. The interviewees were key representatives of their organization, considering delivery activities. Results: Commodity tools, such as version control and continuous integration, were used in almost every organization. Modestly used tools, such as UI testing and performance testing, were more distinctly missing from some organizations. Uncommon tools, such as artifact repository and acceptance testing, were used only in a minority of the organizations. Tool usage is affected by the state of current workflows, manual work and relevancy of tools. Organizations whose toolchains were more automated and contained fewer manual steps were able to deploy software more rapidly. Conclusions: There is variety in the need for tool support in different development steps as there are domain-specific differences in the goals of the case organizations. Still, a well-founded toolchain supports speedy delivery of new software. © 2016 Elsevier B.V.},
  Author_keywords          = {Agile software development; Continuous delivery; Continuous deployment; Deployment pipeline; Software development tools},
  Coden                    = {ISOTE},
  Document_type            = {Article},
  Doi                      = {10.1016/j.infsof.2016.09.001},
  ISSN                     = {09505849},
  Keywords                 = {Acceptance tests; Societies and institutions; Software engineering, Agile software development; Artifact repositories; Continuous delivery; Continuous deployment; Continuous integrations; Multiple-case study; Semi structured interviews; Software development tools, Software design},
  Publisher                = {Elsevier},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84988001567&doi=10.1016%2fj.infsof.2016.09.001&partnerID=40&md5=c5f6390da014c8c6a3455288a0bb279a}
}

@Article{Mancin2016191,
  Title                    = {Make your enterprise agile transformation initiative an awesome success},
  Author                   = {Mancin, E.},
  Journal                  = {Communications in Computer and Information Science},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {191-202},
  Volume                   = {422},

  Abstract                 = {Organizations that want to seize market opportunities, or simply prosper in a long-term time frame, will need to accelerate their innovation and delivery while reducing time to customer feedback. Agile transformations are complex and if you are leading an Enterprise Agile Transformation initiative, then you are surely running into challenges not directly addressed by Agile Manifesto or by advices provided by expensive luminary consultants probably not agreeing each other. Enterprise Agile Transformation requires the application of agile and flexible principles through the software development life cycle, as well as within the organization, to eliminate waste and delivery cycle time and unnecessary work, focusing on delivering value. Based on IBM real experience in successful large organization transitions, this paper will focus on the key aspects of enterprise agile transformation initiative and will help you on leading your transformation initiative at your organization in order to better prepare you to achieve a final success. © Springer International Publishing Switzerland 2016.},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-27896-4_16},
  Editor                   = {Sillitti A., Ciancarini P., Succi G., Messina A.},
  ISBN                     = {9783319278940},
  ISSN                     = {18650929},
  Keywords                 = {Application programs; Computer software; Life cycle; Software design, Agile transformations; Customer feedback; Cycle time; Large organizations; Market opportunities; Software development life cycle; Time frame, Software engineering},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958280624&doi=10.1007%2f978-3-319-27896-4_16&partnerID=40&md5=008fe4b31498337b7ebf61d8000250b9}
}

@Conference{Manjunath201326,
  Title                    = {Achieving quality product in a long term software product development in healthcare application using Lean and Agile principles: Software engineering and software development},
  Author                   = {Manjunath, K.N. and Jagadeesh, J. and Yogeesh, M.},
  Year                     = {2013},
  Note                     = {cited By 4},
  Pages                    = {26-33},

  Abstract                 = {The objective of any software development is to deploy quality product with zero defects by meeting the end user expectations. There are several Software Development Life Cycle methodologies being followed to achieve this and the selection of best methodology is circumstance dependent. With our experience using Lean and Agile principles since last 4 years, in this paper we would like to explain in detail with statistics that these principles and practices can be successfully implemented in a iterative model development SDLC to achieve the matured, quality software in a long term medical imaging product. We will prove that it has positive impact on the software quality by comparing the outcome after following Lean and Agile principles with the prior results where traditional waterfall method was followed. © 2013 IEEE.},
  Art_number               = {6526379},
  Author_keywords          = {Agile; Iterative development; Lean; Software Development Life Cycle; V model; Waterfall model},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/iMac4s.2013.6526379},
  ISBN                     = {9781467350891},
  Journal                  = {Proceedings - 2013 IEEE International Multi Conference on Automation, Computing, Control, Communication and Compressed Sensing, iMac4s 2013},
  Keywords                 = {Agile; Iterative development; Lean; Software development life cycle; V-model; Waterfall model, Application programs; Communication; Computer software selection and evaluation; Iterative methods; Life cycle; Medical imaging; Product development; Signal reconstruction, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84880126284&doi=10.1109%2fiMac4s.2013.6526379&partnerID=40&md5=5c921b0ee72dd1f5bc11f8dcaf21a01f}
}

@Conference{Manoharan20161393,
  Title                    = {Shasta: Interactive reporting at scale},
  Author                   = {Manoharan, G.N.B. and Ellner, S. and Schnaitter, K. and Chegu, S. and Estrella-Balderrama, A. and Gudmundson, S. and Gupta, A. and Handy, B. and Samwel, B. and Whipkey, C. and Aharkava, L. and Apte, H. and Gangahar, N. and Xu, J. and Venkataraman, S. and Agrawal, D. and Ullman, J.D.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {1393-1404},
  Publisher                = {Association for Computing Machinery},
  Volume                   = {26-June-2016},

  Abstract                 = {We describe Shasta, a middleware system built at Google to support interactive reporting in complex user-facing applications related to Google's Internet advertising business. Shasta targets applications with challenging requirements: First, user query latencies must be low. Second, underlying transactional data stores have complex "read-unfriendly" schemas, placing significant transformation logic between stored data and the read-only views that Shasta exposes to its clients. This transformation logic must be expressed in a way that scales to large and agile engineering teams. Finally, Shasta targets applications with strong data freshness requirements, making it challenging to precompute query results using common techniques such as ETL pipelines or materialized views. Instead, online queries must go all the way from primary storage to userfacing views, resulting in complex queries joining 50 or more tables. Designed as a layer on top of Google's F1 RDBMS and Mesa data warehouse, Shasta combines language and system techniques to meet these requirements. To help with expressing complex view specifications, we developed a query language called RVL, with support for modularized view templates that can be dynamically compiled into SQL. To execute these SQL queries with low latency at scale, we leveraged and extended F1's distributed query engine with facilities such as safe execution of C++and Java UDFs. To reduce latency and increase read parallelism, we extended F1 storage with a distributed read-only in-memory cache. The system we describe is in production at Google, powering critical applications used by advertisers and internal sales teams. Shasta has significantly improved system scalability and software engineering efficiency compared to the middleware solutions it replaced. © 2016 Copyright held by the owner/author(s).},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2882903.2904444},
  ISBN                     = {9781450335317},
  ISSN                     = {07308078},
  Journal                  = {Proceedings of the ACM SIGMOD International Conference on Management of Data},
  Keywords                 = {C++ (programming language); Computational linguistics; Computer circuits; Data warehouses; Digital storage; Metadata; Middleware; Query languages; Reconfigurable hardware; Software engineering, Agile engineerings; Critical applications; Engineering efficiency; Internet advertising; Materialized view; Middleware system; System scalability; Transactional data, Search engines},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84979673824&doi=10.1145%2f2882903.2904444&partnerID=40&md5=b661a522fde61d290842ee81582ddaeb}
}

@Article{Mansor20161930,
  Title                    = {The competency of project managers in managing agile cost management},
  Author                   = {Mansor, Z. and Arshad, N.H. and Yahya, S. and Razali, R.},
  Journal                  = {Advanced Science Letters},
  Year                     = {2016},
  Note                     = {cited By 0},
  Number                   = {8},
  Pages                    = {1930-1934},
  Volume                   = {22},

  Abstract                 = {Agile cost management is seen interesting to be concerned due to enhancement of the development processes. By fixing the time, cost and requirements will help project managers to concentrate to the development processes. Therefore, the competent project manager is required to adopt with the new processes especially in managing the cost. By having certain set of competencies, the project managers able to avoid cost overrun and make sure the project will be delivered successfully. In general, the project manager competency includes providing the valuable knowledge, attitudes, skills and behavior that an individual needs to acquire to deliver superior performance. This paper aimed to investigate the competency level of project managers in managing a cost. The survey has been carried out in order to collect the data. The Rasch Measurement Model was used to analyze the data. The findings show most project managers were competent to manage cost effectively and efficiently in agile software development projects. However, the level of competent is differ based on their knowledge, attitudes, skills and behavior. In conclusion, level of competency can be categorized into competent and less competent. The categorization will help project managers themselves or the management level to test their competency toward managing cost in agile projects. © 2016 American Scientific Publishers. All rights reserved.},
  Author_keywords          = {Attitudes; Behavior; Person; Rasch measurement model; Skill},
  Document_type            = {Article},
  Doi                      = {10.1166/asl.2016.7750},
  ISSN                     = {19366612},
  Publisher                = {American Scientific Publishers},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84985018935&doi=10.1166%2fasl.2016.7750&partnerID=40&md5=31e2a0e89d0fe7bee352992a472ad412}
}

@Article{Mansor20161981,
  Title                    = {Issues and challenges of cost management in agile software development projects},
  Author                   = {Mansor, Z. and Razali, R. and Yahaya, J. and Yahya, S. and Arshad, N.H.},
  Journal                  = {Advanced Science Letters},
  Year                     = {2016},
  Note                     = {cited By 2},
  Number                   = {8},
  Pages                    = {1981-1984},
  Volume                   = {22},

  Abstract                 = {In software development project, cost management has been identified as one of the challenges aspect should be faced by the project community. Poor cost management will affect the software projects such as project delay and cost overrun. Therefore, his paper tries to look into the issues and challenges faced by the Project Manager when they manage a cost in agile software development project. In this paper, qualitative approach was employed. 10 project managers that have been dealing with cost management process were interviewed. Results from the interviews had indicated that top five issues and challenges that have been highlighted by the project managers such as lack of expertise in agile, unavailability of computerised tools, reasons for adopting agile in cost management [is this a challenge?], success factors and lack of real commitment. However, the most critical issue is the unavailability of computerised tools which lead to the ineffectiveness of cost management activities. It is concluded that nonetheless, it is important to highlight the issues and challenges of agile cost management in order to prevent cost overrun and the ineffectiveness in managing the cost. One of the important issues is the unavailability of computerised tool to help project managers in managing a cost. The computerised tool is important not only for experienced project manager but also to the new project managers. They can simply use the tool without having much experience. © 2016 American Scientific Publishers. All rights reserved.},
  Author_keywords          = {Budget; Cost overrun; Estimation; Project delay; Project manager; Qualitative},
  Document_type            = {Article},
  Doi                      = {10.1166/asl.2016.7752},
  ISSN                     = {19366612},
  Publisher                = {American Scientific Publishers},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84984940611&doi=10.1166%2fasl.2016.7752&partnerID=40&md5=07056ab6f296a203ecd34abddb21074a}
}

@Article{Mäntylä20151384,
  Title                    = {On rapid releases and software testing: a case study and a semi-systematic literature review},
  Author                   = {Mäntylä, M.V. and Adams, B. and Khomh, F. and Engström, E. and Petersen, K.},
  Journal                  = {Empirical Software Engineering},
  Year                     = {2015},
  Note                     = {cited By 11},
  Number                   = {5},
  Pages                    = {1384-1425},
  Volume                   = {20},

  Abstract                 = {Large open and closed source organizations like Google, Facebook and Mozilla are migrating their products towards rapid releases. While this allows faster time-to-market and user feedback, it also implies less time for testing and bug fixing. Since initial research results indeed show that rapid releases fix proportionally less reported bugs than traditional releases, this paper investigates the changes in software testing effort after moving to rapid releases in the context of a case study on Mozilla Firefox, and performs a semi-systematic literature review. The case study analyzes the results of 312,502 execution runs of the 1,547 mostly manual system-level test cases of Mozilla Firefox from 2006 to 2012 (5 major traditional and 9 major rapid releases), and triangulates our findings with a Mozilla QA engineer. We find that rapid releases have a narrower test scope that enables a deeper investigation of the features and regressions with the highest risk. Furthermore, rapid releases make testing more continuous and have proportionally smaller spikes before the main release. However, rapid releases make it more difficult to build a large testing community , and they decrease test suite diversity and make testing more deadline oriented. In addition, our semi-systematic literature review presents the benefits, problems and enablers of rapid releases from 24 papers found using systematic search queries and a similar amount of papers found through other means. The literature review shows that rapid releases are a prevalent industrial practice that are utilized even in some highly critical domains of software engineering, and that rapid releases originated from several software development methodologies such as agile, open source, lean and internet-speed software development. However, empirical studies proving evidence of the claimed advantages and disadvantages of rapid releases are scarce. © 2014, Springer Science+Business Media New York.},
  Author_keywords          = {Agile releases; Bugs; Builds; Mozilla; Open-source; Release model; Software testing},
  Coden                    = {ESENF},
  Document_type            = {Article},
  Doi                      = {10.1007/s10664-014-9338-4},
  ISSN                     = {13823256},
  Keywords                 = {Open source software; Open systems; Program debugging; Software design; Web browsers, Agile releases; Bugs; Builds; Mozilla; Open-source, Software testing},
  Publisher                = {Kluwer Academic Publishers},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84940719377&doi=10.1007%2fs10664-014-9338-4&partnerID=40&md5=1c1ee4066c600a8622cc168b563e5997}
}

@Conference{Mäntylä201320,
  Title                    = {On rapid releases and software testing},
  Author                   = {Mäntylä, M.V. and Khomh, F. and Adams, B. and Engström, E. and Petersen, K.},
  Year                     = {2013},
  Note                     = {cited By 10},
  Pages                    = {20-29},

  Abstract                 = {Large open and closed source organizations like Google, Facebook and Mozilla are migrating their products towards rapid releases. While this allows faster time-to-market and user feedback, it also implies less time for testing and bug fixing. Since initial research results indeed show that rapid releases fix proportionally less reported bugs than traditional releases, this paper investigates the changes in software testing effort after moving to rapid releases. We analyze the results of 312,502 execution runs of the 1,547 mostly manual system level test cases of Mozilla Fire fox from 2006 to 2012 (5 major traditional and 9 major rapid releases), and triangulated our findings with a Mozilla QA engineer. In rapid releases, testing has a narrower scope that enables deeper investigation of the features and regressions with the highest risk, while traditional releases run the whole test suite. Furthermore, rapid releases make it more difficult to build a large testing community, forcing Mozilla to increase contractor resources in order to sustain testing for rapid releases. © 2013 IEEE.},
  Art_number               = {6676873},
  Author_keywords          = {Agile releases; Bugs; Builds; Mozilla; Opensource; Release model; Software testing},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICSM.2013.13},
  Journal                  = {IEEE International Conference on Software Maintenance, ICSM},
  Keywords                 = {Agile releases; Bugs; Builds; Mozilla; Open-source, Software testing, Computer software maintenance},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84891723874&doi=10.1109%2fICSM.2013.13&partnerID=40&md5=7e6b1f2a9ad2dff87116688c2716f2ac}
}

@Conference{Manuja20141392,
  Title                    = {Moving agile based projects on Cloud},
  Author                   = {Manuja, M. and Manisha, M.},
  Year                     = {2014},
  Note                     = {cited By 3},
  Pages                    = {1392-1397},
  Publisher                = {IEEE Computer Society},

  Abstract                 = {Cost, time and quality (CTQ) have been the primary factors behind continuous advancements in the field of Software development methodologies. Waterfall model has been with the software industry for over 30 years offering a sequential and linear development approach. However, the impending issues with regards to CTQ have led to rise of agile development methodologies in last couple of decades offering incremental & iterative development, customer collaboration and reduced time to market. The new agile paradigm, on the other side, is also bringing its own challenges and risks primarily in terms of runtime infrastructure cost, network accessibility and platform availability steering towards CTQ issues in a disguised manner. With Cloud Computing gaining popularity over the last few years offering almost zero CAPEX (Capital Expenditure), reduced OPEX (Operational Expenditure), high scalability & availability, it has been considered worthwhile to explore Agile based software development on Cloud. In this article, migration of Agile based project to Cloud has been discussed along with its benefits and challenges at both the stages. While Cloud adoption is a catalyst for Agile based development, there are a few open issues to be addressed. © 2014 IEEE.},
  Art_number               = {6779530},
  Author_keywords          = {Agile Methodologies; Cloud Computing; IaaS; PaaS; SaaS; Scrum},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/IAdCC.2014.6779530},
  Journal                  = {Souvenir of the 2014 IEEE International Advance Computing Conference, IACC 2014},
  Keywords                 = {Cloud computing; Software design, Agile Methodologies; IaaS; PaaS; SaaS; Scrum, Iterative methods},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84899093701&doi=10.1109%2fIAdCC.2014.6779530&partnerID=40&md5=259a7be4a2fd88c8a3924fe3c31577be}
}

@Conference{Marczak2013,
  Title                    = {Expanding empirical studies to better understand requirements-driven collaboration},
  Author                   = {Marczak, S. and Inayat, I. and Salim, S.S.},
  Year                     = {2013},
  Editor                   = {Alencar F., Lucena M., Cysneiros Filho G., Castro J.},
  Note                     = {cited By 0},
  Publisher                = {CEUR-WS},
  Volume                   = {1005},

  Abstract                 = {Requirements engineering involves collaboration among project members. Ineffective collaboration may result in project failure. To study the collaboration of those who need to coordinate work due to interdependencies in requirements, in our previous work we have introduced the concept of requirements-driven collaboration as the collaboration that occurs during requirements engineering and have defined a framework to guide its study. The framework is based on social network theory and provides techniques to study diverse aspects that underlie collaboration driven by requirements. Two case studies were conducted to apply the framework and to reveal empirical insights about requirements-driven collaboration. The investigated projects were globally distributed, of medium-size, and used the waterfall model to guide the development lifecycle. In this paper we posit that additional case studies of projects with distinct characteristics can help us to better understand requirements-driven collaboration. We introduce our intent to study requirements-driven collaboration in agile projects as an example of our plan to further knowledge on the topic. Broader insights can be used by researchers and practitioners to reason about how tools and processes can be improved to better support collaboration throughout the development life-cycle.},
  Author_keywords          = {Agile Software Development; Coordination; Empirical Studies; Requirements-driven Collaboration; Social Network Analysis},
  Document_type            = {Conference Paper},
  ISSN                     = {16130073},
  Journal                  = {CEUR Workshop Proceedings},
  Keywords                 = {Life cycle; Requirements engineering; Social networking (online); Social sciences computing; Software engineering, Agile software development; Case-studies; Coordination; Empirical studies; Medium size; Project failures; Requirements-driven Collaboration; Waterfall model, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84922309872&partnerID=40&md5=439ab01935c68bfef24fcd1f14409a3e}
}

@Conference{Martinez201413,
  Title                    = {Echo: A middleware architecture for domain-specific UI test automation},
  Author                   = {Martinez, J. and Thomas, T. and King, T.M.},
  Year                     = {2014},
  Note                     = {cited By 0},
  Pages                    = {13-15},
  Publisher                = {Association for Computing Machinery, Inc},

  Abstract                 = {Model-driven engineering (MDE) continues to raise the level of abstraction used in software development. Software testing researchers and practitioners have been adopting MDE principles, and applying them to software testing activities. Examples include the use of domain-specific languages for functional testing and test automation. In this paper we present the design of a layered middleware architecture to support domain-specific, functional UI test automation. Building on experiences gained implementing a Selenium- based framework for a large-scale agile project, we present design ideas that raise the abstraction level in UI test automation frameworks. Design considerations are discussed to provoke thoughts and ideas on automation frameworks. Copyright 2014 ACM.},
  Author_keywords          = {Domain-specific languages; Middleware; Software architecture; Software testing; Test automation; User interfaces},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2631890.2631893},
  ISBN                     = {9781450329330},
  Journal                  = {2014 Workshop on Joining AcadeMiA and Industry Contributions to Test Automation and Model-Based Testing, JAMAICA 2014 - Proceedings},
  Keywords                 = {Abstracting; Automation; Computational linguistics; Computer programming languages; Joining; Middleware; Model checking; Problem oriented languages; Software architecture; Software design; Testing; User interfaces, Design considerations; Domain specific languages; Functional testing; Level of abstraction; Middleware architecture; Model-driven Engineering; Test Automation; Test automation frameworks, Software testing},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84942409801&doi=10.1145%2f2631890.2631893&partnerID=40&md5=580120dfa5f66ea5514ea211d228169b}
}

@Article{Martini20164,
  Title                    = {A multiple case study on the inter-group interaction speed in large, embedded software companies employing agile},
  Author                   = {Martini, A. and Pareto, L. and Bosch, J.},
  Journal                  = {Journal of Software: Evolution and Process},
  Year                     = {2016},
  Note                     = {cited By 0},
  Number                   = {1},
  Pages                    = {4-26},
  Volume                   = {28},

  Abstract                 = {The adoption of Agile Software Development in large companies is a recent phenomenon of great interest both for researchers and practitioners. Although intra-team interaction is well supported by established agile practices, the critical interaction between the agile team and other parts of the organization is still unexplored in literature. Such interactions slow down the development, hindering the achievement of business goals based on speed: short time to market, quick replication of products of a product-line, and reaction time for product evolution. We have employed a two-year long multiple-case case-study, collecting data through interviews and a survey in three large companies developing embedded software. Through a combination of qualitative and quantitative analysis, we have found strong evidence that interaction challenges between the development team and other groups in the organization hinder speed and are widespread in the organizations. This paper also identifies current practices in use at the studied companies and provides detailed guidelines for novel solutions in the investigated domain. Such practices are called boundary-spanning activities in information system research and coordination theory. We present a comparison between large embedded software companies employing agile and developing a line of products based on reused assets and agile companies developing pure software. We highlight specific contextual factors and areas where novel spanning activities are needed for mitigating the interaction challenges hindering speed. Copyright © 2015 John Wiley & Sons, Ltd.},
  Author_keywords          = {Agile Software Development; boundary-spanning activities; development speed; embedded software; inter-group interaction; software product line},
  Document_type            = {Article},
  Doi                      = {10.1002/smr.1757},
  ISSN                     = {20477481},
  Keywords                 = {Embedded software; Face recognition; Software engineering; Speed, Agile software development; Boundary spanning; Coordination theory; Information system research; Inter-group; Multiple-case study; Qualitative and quantitative analysis; Software Product Line, Software design},
  Publisher                = {John Wiley and Sons Ltd},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84956572746&doi=10.1002%2fsmr.1757&partnerID=40&md5=47ef8f873f968c785386cd31a24d639f}
}

@Book{Martini201439,
  Title                    = {Role of architects in agile organizations},
  Author                   = {Martini, A. and Pareto, L. and Bosch, J.},
  Publisher                = {Springer International Publishing},
  Year                     = {2014},
  Note                     = {cited By 2},

  Abstract                 = {Agile software development is broadly adopted in industry and works well for small-scale projects. In the context of large-scale development, however, there is a need for additional structure in the form of roles and practices, especially in the area of software architecture. In this chapter, we introduce the CAFFEA framework that defines a model for architecture governance. The framework defines three roles, i.e., chief architect, governance architect, and team architect, as well as a set of practices and responsibilities assigned to these roles. The CAFFEA framework has been developed and validated in close collaboration with several companies. © 2014 Springer International Publishing Switzerland. All rights reserved.},
  Document_type            = {Book Chapter},
  Doi                      = {10.1007/978-3-319-11283-1-4},
  ISBN                     = {9783319112831; 3319112821; 9783319112824},
  Journal                  = {Continuous software engineering},
  Pages                    = {39-50},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84930688730&doi=10.1007%2f978-3-319-11283-1-4&partnerID=40&md5=17ca8b2525f76175b71b9929d0c2fe60}
}

@Article{Matalonga2015163,
  Title                    = {AGIS: Towards an ISO9001 based tool for measuring agility [AGIS: Hacia una herramienta basada en ISO9001 para la medición de procesos ágiles]},
  Author                   = {Matalonga, S. and Rivedieu, G.},
  Journal                  = {Computacion y Sistemas},
  Year                     = {2015},
  Note                     = {cited By 0},
  Number                   = {1},
  Pages                    = {163-175},
  Volume                   = {19},

  Abstract                 = {ISO9001:2008 is probably the most widely adopted process improvement model in the world. ISO9001:2008 is a general purpose standard for service and production organizations, which established the groundwork for improving system processes in an enterprise. This standard has also been widely adopted in the software industry. On the other hand, agile development methodologies have been steadily gaining acceptance and popularity in the past decade. At a first glance, these two approaches are opposite. While agility preaches interaction above processes, ISO is a process-oriented approach to improvement. Nonetheless, both approaches share the same conundrum: both hold claims of compliance but there have been few data-backed- up success case studies. However, since ISO is a general purpose standard, its achievement is fairly attainable. In contrast, the agile development ecosystem is full of false positives that claim agility without achieving project success. This paper presents an assessment tool to measure agility based on ISO 9001:2008 process improvement principles. Our tool is capable of measuring a degree of agility aligned with the agile manifesto values. Its goal is to provide an objective measurement of agility that avoids false positives on both sides.},
  Author_keywords          = {Agile development; ISO 9001 2008; Process evaluation},
  Document_type            = {Article},
  Doi                      = {10.13053/CyS-19-1-1588},
  ISSN                     = {14055546},
  Publisher                = {Instituto Politecnico Nacional},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84927633285&doi=10.13053%2fCyS-19-1-1588&partnerID=40&md5=2a98b4117da4c81f1d9d1e539c5ada68}
}

@Article{Matalonga20131289,
  Title                    = {Factors affecting distributed agile projects: A systematic review},
  Author                   = {Matalonga, S. and Solari, M. and Matturro, G.},
  Journal                  = {International Journal of Software Engineering and Knowledge Engineering},
  Year                     = {2013},
  Note                     = {cited By 5},
  Number                   = {9},
  Pages                    = {1289-1301},
  Volume                   = {23},

  Abstract                 = {In the last decade we have witnessed a growth in outsourcing and outshoring development. Following the promise of reducing costs and round-the-clock development, software organizations have grown from local to global enterprises. In the same decade, agile software development methodologies have emerged as a viable alternative to produce software. There is a myriad of agile processes and methodologies now available for any software development organization to choose from. These agile processes follow the values signed in the Agile Manifesto that preaches the exaltation of the individual programmer, high feedback, customer interaction and just enough planning and documentation. But how does global distribution affect these values? Can agile software development be implemented under the global software development context? This paper presents a systematic literature review aimed at identifying factors that affect the adoption of agile factors in global distributed teams. Our findings show that the literature is still in its initial case study publication stage. But most notably, we have found that only a few of the factors found are related to the agile values. Even though more research is clearly needed, this can be a signal that the factors affecting team distribution has more impact on software development than the values and practices preached by the agile processes. © 2013 World Scientific Publishing Company.},
  Author_keywords          = {Agile software development; distributed software development; systematic literature review},
  Coden                    = {ISEKE},
  Document_type            = {Article},
  Doi                      = {10.1142/S021819401350040X},
  ISSN                     = {02181940},
  Keywords                 = {Artificial intelligence; Software engineering, Agile software development; Customer interaction; Distributed software development; Global distribution; Global software development; Software development organizations; Software organization; Systematic literature review, Software design},
  Publisher                = {World Scientific Publishing Co. Pte Ltd},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84899121508&doi=10.1142%2fS021819401350040X&partnerID=40&md5=c2c6c0078c66e286ff4e3ff3f13e22a5}
}

@Conference{Matthias2013,
  Title                    = {Iaris-supporting enterprise transformation using an iterative isd method},
  Author                   = {Matthias, S.},
  Year                     = {2013},
  Note                     = {cited By 0},
  Publisher                = {Association for Information Systems},

  Abstract                 = {Enterprise architecture frameworks can be used to guide the development process of an information system (IS). While these frameworks cover a comprehensive approach to IS development, most of them essentially proclaim a linear, stepwise development process. In the field of computer science, such linear, waterfall-based approaches have been replaced by so-called agile methods proclaiming an iterative development process. As these approaches are naturally only concerned with software engineering, they do not consider the business processes the software is supposed to support or the organizational structures the software is supposed to be employed in. The purpose of this paper is to propose an iterative information systems development method called iARIS. It combines the "best of both worlds" in joining the comprehensive approach to IS development of common EA frameworks with the iterative software engineering paradigm. The paper contributes to the research on enterprise transformation in proposing a method tailored to support IS development in a rapidly changing environment. The paper furthermore reports on an on-going IS development project providing insights into how iARIS can be applied. The paper thus contributes to the research on enterprise transformation in suggesting how an IS development method can be used in practice.},
  Author_keywords          = {Agile Information Systems Development; Compliance management; Iaris; Pattern matching},
  Document_type            = {Conference Paper},
  Journal                  = {ECIS 2013 - Proceedings of the 21st European Conference on Information Systems},
  Keywords                 = {Iterative methods; Management information systems; Pattern matching; Software engineering, Agile information system; Compliance management; Enterprise Architecture; Enterprise transformation; Iaris; Information systems development; Organizational structures; Software engineering paradigm, Information systems},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84905833742&partnerID=40&md5=68b8529ccfdc032b3327ea1ad0693724}
}

@Conference{Matthies2016,
  Title                    = {Agile metrics for a university software engineering course},
  Author                   = {Matthies, C. and Kowark, T. and Uflacker, M. and Plattner, H.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},
  Volume                   = {2016-November},

  Abstract                 = {Teaching agile software development by pairing lectures with hands-on projects has become the norm. This approach poses the problem of grading and evaluating practical project work as well as process conformance during development. Yet, few best practices exist for measuring the success of students in implementing agile practices. Most university courses rely on observations during the course or final oral exams. In this paper, we propose a set of metrics which give insights into the adherence to agile practices in teams. The metrics identify instances in development data, e.g. commits or user stories, where agile processes were not followed. The identified violations can serve as starting points for further investigation and team discussions. With contextual knowledge of the violation, the executed process or the metric itself can be refined. The metrics reflect our experiences with running a software engineering course over the last five years. They measure aspects which students frequently have issues with and that diminish process adoption and student engagement. We present the proposed metrics, which were tested in the latest course installment, alongside tutoring, lectures, and oral exams. © 2016 IEEE.},
  Art_number               = {7757684},
  Author_keywords          = {Assessment tools; Capstone projects; Computer engineering; Higher education; Metrics},
  Coden                    = {PFECD},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/FIE.2016.7757684},
  ISBN                     = {9781509017904},
  ISSN                     = {15394565},
  Journal                  = {Proceedings - Frontiers in Education Conference, FIE},
  Keywords                 = {Curricula; Education; Grading; Software design; Software engineering; Students; Teaching; Technical presentations, Assessment tool; Capstone projects; Computer engineering; Higher education; Metrics, Engineering education},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85006826995&doi=10.1109%2fFIE.2016.7757684&partnerID=40&md5=77f4df7bce4d42b691c25fd91c2d768c}
}

@Article{Mauro201627,
  Title                    = {AMINSEP-agile methodology implementation for a new software engineering paradigm definition. A research project proposal},
  Author                   = {Mauro, V. and Messina, A.},
  Journal                  = {Communications in Computer and Information Science},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {27-33},
  Volume                   = {422},

  Abstract                 = {The application of the “Agile” methodology to a Military Application Software production line is not to be taken for granted. The adoption of the new production style has implied the solution of multiple problems and the generation of a custom version of the basic “Scrum” theory. One of the major changes has been imposed by the need to include Military Test Beds and Military Units in the workflow. Even if the “Agile Scrum” methodology has been around for over a decade now, there are many successful implementation stories the Italian Army experience and clearly show there is more conceptual work to be done. There are a number of open issues to be tackled and a growth potential to be exploited. AMINSEP tackles the area of monitoring and measuring using noninvasive tools (Italian Army choice) necessary to keep high the product quality level and monitor criticalities. Those tools need to evolve. The evolution has to take into account the peculiar environment of the agile teams. The current tools are based on complexity metrics borne for the old fashion software factories. The collected data do not give a complete picture of the team-based code development cycle. A new set of metrics is needed to complement the existing ones. The basic concept and the structure of the research project are presented. © Springer International Publishing Switzerland 2016.},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-27896-4_3},
  Editor                   = {Sillitti A., Ciancarini P., Succi G., Messina A.},
  ISBN                     = {9783319278940},
  ISSN                     = {18650929},
  Keywords                 = {Application programs, Agile Methodologies; Code development; Complexity metrics; Growth potential; Military units; Noninvasive tools; Software engineering paradigm; Software factories, Software engineering},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958292208&doi=10.1007%2f978-3-319-27896-4_3&partnerID=40&md5=3cbf5e9ac329a47521c945750c91675c}
}

@Conference{Maxim2016,
  Title                    = {An agile software engineering process improvement game},
  Author                   = {Maxim, B.R. and Kaur, R. and Apzynski, C. and Edwards, D. and Evans, E.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},
  Volume                   = {2016-November},

  Abstract                 = {Many computing students do not receive adequate training in software quality management. Some students do not have the opportunity to practice software process improvement activities even if they do see the topics covered in their course lectures and textbooks. Serious games are gaining popularity as a means of instruction in higher education. Some excellent prescriptive software process simulation games have been created, as well as a few software engineering drill and practice games. In general, these games do not allow students to create agile process models or experiment with process improvement strategies. We are creating a serious game that will serve as a virtual learning environment to allow students to explore agile process improvement practices. Our game is designed as a single-player game where the player takes the role of software team leader and plays against an AI (artificial intelligence) opponent representing the customer's interests and needs. Players are rewarded for developing project strategies that allow for completion of projects on time, within budget, and meet the necessary software quality requirements. It is our intention to create a game with sufficiently detailed instructions to allow instructors to introduce hands on practice with agile process improvement activities without requiring additional class time. © 2016 IEEE.},
  Art_number               = {7757682},
  Author_keywords          = {Agile; Gaming; Process improvement; Scrum},
  Coden                    = {PFECD},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/FIE.2016.7757682},
  ISBN                     = {9781509017904},
  ISSN                     = {15394565},
  Journal                  = {Proceedings - Frontiers in Education Conference, FIE},
  Keywords                 = {Budget control; Computer aided instruction; Computer aided software engineering; Computer software; Computer software selection and evaluation; Education; Process engineering; Quality management; Software engineering; Students, Agile; Gaming; Process Improvement; Scrum; Software Process Improvement; Software process simulation; Software quality management; Virtual learning environments, Education computing},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85006795686&doi=10.1109%2fFIE.2016.7757682&partnerID=40&md5=2ea1eeab3a1312e3bf3e0538d6e05d32}
}

@Book{Maxim201519,
  Title                    = {An introduction to modern software quality assurance},
  Author                   = {Maxim, B.R. and Kessentini, M.},
  Publisher                = {Elsevier Inc.},
  Year                     = {2015},
  Note                     = {cited By 0},

  Abstract                 = {Software quality was at one time restricted to ensuring that a completed software product conformed to its explicitly stated requirements. For several years now, meeting customer expectations (both implicit and explicit) has become an important aspect of software quality assurance (SQA). The news media is filled with reports of failed software systems. Most of these failures can be traced to defects that could have been detected with better attention to the management of software quality. Modern end-users expect software products to be reliable, secure, and safe. Pressure to produce software systems faster has never been greater and agile methods have been proposed to accommodate uncertain and changing user requirements. It is clear that quality cannot be added to an evolving system just before its release. This chapter will look at SQA practices that are capable of accommodating change and still provide developers with some control over the quality of the resulting software products. © 2016 Elsevier Inc. All rights reserved.},
  Author_keywords          = {Agile processes; Customer satisfaction; Maintenance; Process improvement; Quality reviews; Requirement conformance; Software quality assurance; Verification and validation},
  Document_type            = {Book Chapter},
  Doi                      = {10.1016/B978-0-12-802301-3.00002-8},
  ISBN                     = {9780128025413; 9780128023013},
  Journal                  = {Software Quality Assurance: In Large Scale and Complex Software-intensive Systems},
  Pages                    = {19-46},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85017539462&doi=10.1016%2fB978-0-12-802301-3.00002-8&partnerID=40&md5=7cad590083ba512a5ba8a25f07f8dba7}
}

@Article{Mbuba2014103,
  Title                    = {Software as a Service adoption: Impact on IT workers and functions of IT department},
  Author                   = {Mbuba, F.H. and Chung Wang, W.Y.},
  Journal                  = {Journal of Internet Technology},
  Year                     = {2014},
  Note                     = {cited By 2},
  Number                   = {1},
  Pages                    = {103-113},
  Volume                   = {15},

  Abstract                 = {Software as a Service (SaaS), a type of cloud computing is based on information technology (IT) capabilities in a utility model that enhances the reliability and scalability at relatively low costs as compared to on-premise IT systems. Other benefits SaaS provides to customers include: no upfront investment cost required, elasticity of computing resources, vendor support and upgrades, agile response to markets, usage metered as utility, resource pooling the ability to add computing resources as needed. Consequently, organisations may decide to adopt SaaS model based on these potential benefits. However, these benefits may have some implications on the roles of IT workers and functions of IT department. These implications include: changing IT workers' skill sets requirements, widespread of layoffs of hardware IT workers, and IT department loses control of IT-Servers, and focuses more on data security, vendor management, as IT system support moves to cloud service provider. Similarly, IT workers believe that turning IT resource and support to a cloud service provider poses significant risks to their own jobs [1]. There is a lack of research conducted on the implications of SaaS model on IT department and associated human resource management. Thus, this paper seeks to fill this gap by examining how SaaS adoption may change IT workers' roles and tasks, and functions of IT department. Drawing on adaptive structuration theory, a modified framework is constructed to support the change dynamics from SaaS adoption. Using examples of functions of IT department in tertiary institutions, we explored sources of structures from advanced IT and the ways in which organisational and human interactions have an impact on how SaaS is appropriated and institutionalised into business processes, and brings about changes in an organisation. This paper contributes to the theory by examining the way emergent and new structures are formulated at the macro and group level of the organisational structure. Implications for researchers and practitioners are provided.},
  Author_keywords          = {Adaptive structuration theory; Cloud computing; IT outsourcing; IT workers; Organisational change; Software as a service},
  Document_type            = {Article},
  Doi                      = {10.6138/JIT.2014.15.1.10},
  ISSN                     = {16079264},
  Keywords                 = {Adaptive structuration theory; Cloud service providers; Computing resource; IT outsourcing; IT workers; Organisational change; Organisational structure; Tertiary institutions, Cloud computing; Distributed database systems; Elasticity; Human resource management; Information management; Software as a service (SaaS); Web services, Information technology},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893823019&doi=10.6138%2fJIT.2014.15.1.10&partnerID=40&md5=eb45cce3f0cc19cdc375be00ce6d018f}
}

@Conference{McHugh201312,
  Title                    = {An agile V-model for medical device software development to overcome the challenges with plan-driven software development lifecycles},
  Author                   = {Mc Hugh, M. and Cawley, O. and McCaffcry, F. and Richardson, I. and Wang, X.},
  Year                     = {2013},
  Note                     = {cited By 12},
  Pages                    = {12-19},

  Abstract                 = {Through the use of semi structured interviews with medical device software organizations it emerged that medica device software organizations are experiencing difficulties when following plan driven Software Development Life Cycles (SDLC) particularly in the area of requirements management. To attemp to resolve these issues an examination of the non-regulated industry was performed to determine if lessons learned there could be applied to the development of medical device software This examination revealed that agile methods are being widely adopted in the non-regulated software industry. To learn if agile methods could be adopted when developing medical device software a mapping study was performed which looked for instances of where agile methods have been used in regulated industries and where they have been adopted, to what success This mapping study revealed that incorporating agile practices with the existing plan driven SDLC is the most favourable choice for medical device software organizations. This research aims to develop a SDLC which has a foundation of a plan driven SDLC which incorporates agile practices which can be followed when developing regulatory compliant software. © 2013 IEEE.},
  Art_number               = {6602471},
  Author_keywords          = {A V-Model; Agile; FDA; Medical Device Software; Model; Safety Critical; V},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/SEHC.2013.6602471},
  ISBN                     = {9781467362825},
  Journal                  = {2013 5th International Workshop on Software Engineering in Health Care, SEHC 2013 - Proceedings},
  Keywords                 = {Agile; FDA; Medical Devices; Requirements management; Semi structured interviews; Software development life cycle; Software organization; V-model, Broadcasting; Health care; Life cycle; Models; Public utilities; Societies and institutions; Software design; Vanadium, Biomedical equipment},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84885217700&doi=10.1109%2fSEHC.2013.6602471&partnerID=40&md5=62b19279b2335bbdaeab0a4b9de45184}
}

@Article{McCaffery2016133,
  Title                    = {Agile medical device software development: Introducing agile practices into MDevSPICE},
  Author                   = {McCaffery, F. and Lepmets, M. and Trektere, K. and Özcan-Top, O. and Pikkarainen, M.},
  Journal                  = {International Journal on Advances in Life Sciences},
  Year                     = {2016},
  Note                     = {cited By 0},
  Number                   = {1-2},
  Pages                    = {133-142},
  Volume                   = {8},

  Abstract                 = {Medical device software is usually embedded within the overall system as one of the sub-systems. It needs to be integrated with other sub-systems such as the electrical and mechanical for a functional medical device to be developed. In order to develop a working medical device system through integrating its sub-systems, the sub-systems' requirements have to be derived from the overall medical device system requirements. The system requirements are continuously collected, analysed and built from the needs of different stakeholders such as patients, health professionals and other companies offering relevant devices, interfaces and software related to the medical device system under development. Various regulatory requirements have to be achieved for a medical device to be allowed market access. We have developed and piloted a medical device software process assessment framework called MDevSPICE® that integrates the regulatory requirements from the relevant medical device software standards. This paper describes how the MDevSPICE® framework has been designed to enable medical device software developers to produce software that will be safe and easily integrated with other sub-systems of the overall medical device. We also describe the lessons learned from piloting MDevSPICE® in the medical device industry and introduce an agile methodology together with its benefits and challenges. This paper outlines how MDevSPICE® can be extended to include agile practices to enable medical device software development to be performed in a more flexible manner. © 2016 by authors.},
  Author_keywords          = {Agile methods; Agile software development practices; Mdevspice®; Medical device risks; Medical device software; Medical device software development},
  Document_type            = {Article},
  ISSN                     = {19422660},
  Publisher                = {International Academy, Research, and Industrial Association},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84981294889&partnerID=40&md5=fabc6a8c67f7a02f73feda6ec45a3c50}
}

@Article{McCaffery2016417,
  Title                    = {Agile – is it suitable for medical device software development?},
  Author                   = {McCaffery, F. and Trektere, K. and Ozcan-Top, O.},
  Journal                  = {Communications in Computer and Information Science},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {417-422},
  Volume                   = {609},

  Abstract                 = {Medical device software is typically developed through adopting a prescribed plan driven software development lifecycle approach based upon variations of the waterfall or V-Model. Organisations wishing to satisfy regulations have to define software development processes and also that these processes have been implemented throughout the complete development lifecycle. Agile development techniques report to offer solutions within other industries that would solve challenges encountered within the medical device industry. However, there are some concerns with using agile for medical device software development in relation to satisfying the regulatory bodies. In this short paper, we highlight the issues in traditional medical device software development. Secondly, we discuss the challenges and highlight agile practices that have been successfully adopted in the medical device software industry. © Springer International Publishing Switzerland 2016.},
  Author_keywords          = {Agile software development; Medical device; Plan driven; V– model},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-38980-6_30},
  Editor                   = {Dorling A., O'Connor R.V., Clarke P.M., Rout T.},
  ISBN                     = {9783319389790},
  ISSN                     = {18650929},
  Keywords                 = {Biomedical equipment; Circuit simulation; Life cycle; Process engineering; Software engineering, Agile development; Agile software development; Medical device industry; Medical Devices; Plan driven; Regulatory bodies; Software development life cycle; Software development process, Software design},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84993949899&doi=10.1007%2f978-3-319-38980-6_30&partnerID=40&md5=f8cdcf7d52795b16c40bfa3a4ac5493c}
}

@Article{Mchugh2014504,
  Title                    = {Adopting agile practices when developing software for use in the medical domain},
  Author                   = {Mchugh, M. and McCaffery, F. and Casey, V.},
  Journal                  = {Journal of software: Evolution and Process},
  Year                     = {2014},
  Note                     = {cited By 5},
  Number                   = {5},
  Pages                    = {504-512},
  Volume                   = {26},

  Abstract                 = {Non-safety critical software developers have been reaping the benefits of adopting agile practices for a number of years. However, developers of safety critical software often have concerns about adopting agile practices. Through performing a literature review, this research has identified the perceived barriers to following agile practices when developing medical device software. A questionnaire-based survey was also conducted with medical device software developers in Ireland to determine the barriers to adopting agile practices. The survey revealed that half of the respondents develop software in accordance with a plan-driven software development lifecycle and that they believe that there are a number of perceived barriers to adopting agile practices when developing regulatory compliant software such as being contradictory to regulatory requirements, insufficient coverage of risk management activities and the lack of up-front planning. In addition, a comparison is performed between the perceived and actual barriers. Based upon the findings of the literature review and survey, it emerged that no external barriers exist to adopting agile practices when developing medical device software and the barriers that do exists are internal barriers such as getting stakeholder buy in. Copyright © 2013 John Wiley & Sons, Ltd.},
  Author_keywords          = {Agile methods; medical device software; medical mevice; plan driven; V-model; XP},
  Document_type            = {Article},
  Doi                      = {10.1002/smr.1608},
  ISSN                     = {20477481},
  Keywords                 = {Biomedical equipment; Risk management; Software design, Agile methods; Medical Devices; medical mevice; plan driven; V-model; XP, Surveys},
  Publisher                = {John Wiley and Sons Ltd},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84901039852&doi=10.1002%2fsmr.1608&partnerID=40&md5=fe6cc950e671db23f882a4cd91c8c896}
}

@Article{McHugh2014190,
  Title                    = {An agile implementation within a medical device software organisation},
  Author                   = {McHugh, M. and McCaffery, F. and Coady, G.},
  Journal                  = {Communications in Computer and Information Science},
  Year                     = {2014},
  Note                     = {cited By 0},
  Pages                    = {190-201},
  Volume                   = {477},

  Abstract                 = {Three surveys conducted over a 6 year period revealed that medical device software organisations have difficulties in the area of requirements management, namely accommodating changes in requirements. Medical device software is traditionally developed in accordance with a plan driven software development lifecycle (SDLC). These SDLCs are rigid and inflexible to changes once the requirements management stage has been completed. Agile methods are gaining momentum in non-regulated industries but as of yet, the adoption of these methods in regulated industries such as the medical device software domain remains low. This study presents an implementation of agile methods within a medical device software development organisation based in Ireland. This implementation involved integrating agile practices with a traditional plan driven SDLC. Upon completing this implementation within a medical device software development project, the organisation identified cost savings and a reduction in the rework required when introducing a change in requirements. © Springer International Publishing Switzerland 2014.},
  Author_keywords          = {Agile; AV-Model; Hybrid; IEC 62304; Medical; SDLC},
  Document_type            = {Article},
  Editor                   = {Mitasiunas A., Rout Z., O'Connor R.V., O'Connor R.V., Dorling A., Dorling A., Rout Z.},
  ISBN                     = {9783319130354},
  ISSN                     = {18650929},
  Keywords                 = {Biomedical equipment; Broadcasting; Public utilities; Requirements engineering, Agile; Hybrid; IEC 62304; Medical; SDLC, Software design},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84908510656&partnerID=40&md5=e4642a04335bea5fcff3b5b3d0004bf6}
}

@Article{McHugh2013199,
  Title                    = {Balancing Agility and Discipline in a Medical Device Software Organisation},
  Author                   = {McHugh, M. and McCaffery, F. and Fitzgerald, B. and Stol, K.-J. and Casey, V. and Coady, G.},
  Journal                  = {Communications in Computer and Information Science},
  Year                     = {2013},
  Note                     = {cited By 4},
  Pages                    = {199-210},
  Volume                   = {349 CCIS},

  Abstract                 = {Agile development techniques are becoming increasingly popular in the generic software development industry as they appear to offer solutions to the problems associated with following a plan-driven Software Development Life Cycle (SDLC). However, agile methods may not be suited to all industries or organisations. For agile methods to succeed, an organisation must be structured in a way to accommodate agile methods. Medical device software development organisations are bound by regulatory constraints and as a result face challenges when they try to completely follow an agile methodology, but can reap significant benefits by combining both agile and plan-driven SDLC such as the Waterfall or V-Model. This paper presents an analysis of a medical device software development organisation based in Ireland, which is considering moving to agile software development techniques. This includes the performing of a Home-Ground Analysis to determine how agile or disciplined the organisation currently is. Upon completion of the Home-Ground Analysis recommendations were made to the organisation as to how they could tailor their existing structure to better accommodate agile development techniques. These recommendations include adopting agile practices such as self-organising teams to promote a culture of "chaos" within the organisation. © Springer-Verlag Berlin Heidelberg 2013.},
  Author_keywords          = {Agile; Home-Ground Analysis; Medical; V-Model},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-642-38833-0_18},
  ISBN                     = {9783642388323},
  ISSN                     = {18650929},
  Keywords                 = {Biomedical equipment, Agile; Agile Methodologies; Agile software development; Home-Ground Analysis; Medical; Software development life cycle; Software organisations; V-model, Software design},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904644560&doi=10.1007%2f978-3-642-38833-0_18&partnerID=40&md5=fa321defd3928705a1516dbeabe6c494}
}

@Conference{McMahon2014,
  Title                    = {From product development to innovation},
  Author                   = {McMahon, E.},
  Year                     = {2014},
  Note                     = {cited By 0},
  Publisher                = {American Society for Engineering Management},

  Abstract                 = {Eighty percent of executives believe the future of their company depends on developing a unique superior product with a compelling value proposition (Maddock, 2011). Innovation is critical for existing companies and for forming new businesses. The focus is on disruptive innovation instead of incremental improvement and goes beyond the traditional product development model. Emphasis must be placed on the early stages of innovation, customer empathy rather than voice of the customer, and developing products and services that delight the customer. The paper mirrors my journey from teaching product development to teaching technical innovation. The paper compares the traditional product development processes with an emerging approach to technical innovation. Consideration is given to innovation within a company structure and entrepreneurship. Three of the approaches considered are Design Thinking, Agile, and the Business Model Canvas. Design Thinking is a model out of the D- School at Stanford University which focuses on the early stages of design. Agile is a process that came out of software development, and the Business Model Canvas which provides a flexible space for developing the business model. A case study addresses the early stages of innovation is included. The case study begins with observations of the aging population and nutrition and ends with a prototype and business model.},
  Author_keywords          = {Customer; Fuzzy front end; Innovation; Insights; Product development},
  Document_type            = {Conference Paper},
  Journal                  = {2014 International Annual Conference of the American Society for Engineering Management - Entrepreneurship Engineering: Harnessing Innovation, ASEM 2014},
  Keywords                 = {Design; Innovation; Sales; Software design; Software engineering, Customer; Disruptive innovations; Fuzzy front end; Incremental improvements; Insights; Technical innovation; Traditional products; Voice of the customer, Product development},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84925599687&partnerID=40&md5=2c0a4879ff7434cdc140614c8bd76526}
}

@Article{Mechtri2016533,
  Title                    = {A Scalable Algorithm for the Placement of Service Function Chains},
  Author                   = {Mechtri, M. and Ghribi, C. and Zeghlache, D.},
  Journal                  = {IEEE Transactions on Network and Service Management},
  Year                     = {2016},
  Note                     = {cited By 4},
  Number                   = {3},
  Pages                    = {533-546},
  Volume                   = {13},

  Abstract                 = {Network function virtualization (NFV) decouples software implementations of network functions from their hosts (or hardware). NFV exposes a new set of entities, the virtualized network functions (VNFs). The VNFs can be chained with other VNFs and physical network functions to realize network services. This flexibility introduced by NFV allows service providers to respond in an agile manner to variable service demands and changing business goals. In this context, the efficient establishment of service chains and their placement becomes essential to reduce capital and operational expenses and gain in service agility. This paper addresses the placement aspect of these service chains by finding the best locations and hosts for the VNFs and to steer traffic across these functions while respecting user requirements and maximizing provider revenue. We propose a novel eigendecomposition-based approach for the placement of virtual and physical network function chains in networks and cloud environments. A heuristic based on a custom greedy algorithm is also presented to compare performance and assess the capability of the eigendecomposition approach. The performance of both algorithms is compared to a multi-stage-based method from the state of the art that also addresses the chaining of network services. Performance evaluation results show that our matrix-based method, eigendecomposition of adjacency matrices, has reduced complexity and convergence times that essentially depend only on the physical graph sizes. Our proposal also outperforms the related work in provider's revenue and acceptance rate. © 2016 IEEE.},
  Art_number               = {7530847},
  Author_keywords          = {Distributed cloud environments; eigendecomposition; function placement and chaining; Virtual network function},
  Document_type            = {Article},
  Doi                      = {10.1109/TNSM.2016.2598068},
  ISSN                     = {19324537},
  Keywords                 = {Chains; Transfer functions, Adjacency matrices; Distributed clouds; Eigen decomposition; Operational expense; Reduced complexity; Scalable algorithms; Software implementation; Virtual networks, Complex networks},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84991396242&doi=10.1109%2fTNSM.2016.2598068&partnerID=40&md5=923db4e17fea7ae921cccdd460042341}
}

@Article{Medeiros2015993,
  Title                    = {Working and Playing with Scrum},
  Author                   = {Medeiros, D.B. and Neto, P.D.A.D.S. and Passos, E.B. and De Souza Araújo, W.},
  Journal                  = {International Journal of Software Engineering and Knowledge Engineering},
  Year                     = {2015},
  Note                     = {cited By 2},
  Number                   = {6},
  Pages                    = {993-1015},
  Volume                   = {25},

  Abstract                 = {Software development is sometimes considered a boring task. To avoid this fact we propose an approach based on the incorporation of game mechanics into Scrum framework, in order to change its use to a more amusing task, by taking advantage of the gamification trend. Gamification is applied to non-game applications and processes, trying to encourage people to adopt them. This work shows a suggestion of Scrum gamification together with an evaluation of the proposed approach in a case study of a software house. The use of this concept can help the software industry to increase the team productivity in a natural way. © 2015 World Scientific Publishing Company.},
  Author_keywords          = {game design; gamification; Scrum; software engineering},
  Coden                    = {ISEKE},
  Document_type            = {Article},
  Doi                      = {10.1142/S021819401550014X},
  ISSN                     = {02181940},
  Keywords                 = {Software engineering, Game design; Gamification; Scrum; Software house; Software industry; Team productivities, Software design},
  Publisher                = {World Scientific Publishing Co. Pte Ltd},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84945972508&doi=10.1142%2fS021819401550014X&partnerID=40&md5=0de66f1cfc3fb892a389cc3df88ed47b}
}

@Conference{Medeiros2015460,
  Title                    = {Requirements engineering in agile projects: A systematic mapping based in evidences of industry},
  Author                   = {Medeiros, J.D.R.V. and Alves, D.C.P. and Vasconcelos, A. and Silva, C. and Wanderley, E.},
  Year                     = {2015},
  Editor                   = {Matalonga S., Pimentel E., Brito I.S., Araujo J., Miranda J.J., Espana S., Cuadros-Vargas E., Bencomo N., Pastor O., Goulao M., Oliveira T., Condori-Fernandez N., de la Vara J.L., Kalinowski M., Olsina L., Antonelli L., Guizzardi R.},
  Note                     = {cited By 2},
  Pages                    = {460-473},
  Publisher                = {Ibero-American Conference on Software Engineering},

  Abstract                 = {Interest in the adoption of Agile methodologies has grown in recent years as a strategy to minimize problems in software development. However recent studies indicate high rates of failure also in projects that use agile processes. In this context, this research conducted an exploratory study to investigate how Requirements Engineering is used in projects that adopt agile methodologies. For this, a Systematic Mapping was performed and it identified the engineering requirements techniques that are running in the industry, the problems and limitations in projects that adopt agile methodologies. The low involvement of users and the constant changes of requirements were identified as the main challenges to be overcome. Copyright © 2015 by the authors.},
  Author_keywords          = {Agile methodologies; Requirements; Systematic mapping},
  Document_type            = {Conference Paper},
  ISBN                     = {9789972825804},
  Journal                  = {CIBSE 2015 - XVIII Ibero-American Conference on Software Engineering},
  Keywords                 = {Mapping; Requirements engineering; Software design, Agile Methodologies; Agile process; Exploratory studies; High rate; Requirements; Requirements techniques; Running-in; Systematic mapping, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84936074918&partnerID=40&md5=7f3dbeb28ef69f2a2b7e18d85aa89381}
}

@Conference{Medeiros2015859,
  Title                    = {Integration of agile practices: An approach to improve the quality of software specifications},
  Author                   = {Medeiros, J. and Vasconcelos, A. and Silva, C.},
  Year                     = {2015},
  Editor                   = {Matalonga S., Pimentel E., Brito I.S., Araujo J., Miranda J.J., Espana S., Cuadros-Vargas E., Bencomo N., Pastor O., Goulao M., Oliveira T., Condori-Fernandez N., de la Vara J.L., Kalinowski M., Olsina L., Antonelli L., Guizzardi R.},
  Note                     = {cited By 3},
  Pages                    = {859-865},
  Publisher                = {Ibero-American Conference on Software Engineering},

  Abstract                 = {Customer unavailability and insufficient requirements gathering are challenges that have compromised the adoption of agile methodologies. This research proposes an exploratory study in the industry to investigate how requirements engineering is used in agile projects. A Systematic Literature Review (SLR) was conducted and its results indicated the existence of problems in requirements engineering activities applied to agile projects. This research plan to perform a Survey with software engineers who uses agile practices, aiming to understand the perception of professionals about the best practices, challenges and limitations of the requirements engineering approaches currently used by the software industry. Then a new approach to the specification of requirements will be proposed using principles such as: Decrease constant dependence customer; Document only what is necessary to implement a requirement; Agile Practices; Quality Requirements. A experiment will be conducted to evaluate the quality and productivity of the proposed approach. Copyright © 2015 by the authors.},
  Author_keywords          = {Agile; Quality of software specifications; Quasi-experiment; Survey},
  Document_type            = {Conference Paper},
  ISBN                     = {9789972825804},
  Journal                  = {CIBSE 2015 - XVIII Ibero-American Conference on Software Engineering},
  Keywords                 = {Requirements engineering; Specifications; Surveying; Surveys, Agile; Agile Methodologies; Exploratory studies; Quality of softwares; Quality requirements; Quasi-experiments; Requirements gathering; Systematic literature review (SLR), Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84936139164&partnerID=40&md5=a29e96d77e413cb2b2a13fd1d48a38f2}
}

@Book{Mehrfard2013298,
  Title                    = {The impact of regulatory compliance on agile software processes with a focus on the FDA guidelines for medical device software},
  Author                   = {Mehrfard, H. and Hamou-Lhadj.A., Abdelwahab},
  Publisher                = {IGI Global},
  Year                     = {2013},
  Note                     = {cited By 1},

  Abstract                 = {The difficulty of complying with different regulations has become more evident as a large number of regulated businesses are mandated to follow an ever-increasing set of regulations. These regulations often drive significant changes in the way organizations operate to deliver value to their customers. This paper focuses on the impact of the Food and Drug Administration (FDA) regulations on agile software development processes, which in many ways can be considered as just another type of organizational processes. Particular focus is placed on the ability for Extreme Programming (XP) to support FDA requirements. Findings show that XP fails to meet many of the FDA guidelines for medical device software, which increases the risks of non-compliance for organizations that have adopted XP as their main software process. The results of this study can lead the work towards designing an extension to XP for FDA regulations. © 2013 by IGI Global. All rights reserved.},
  Document_type            = {Book Chapter},
  Doi                      = {10.4018/978-1-4666-4161-7.ch013},
  ISBN                     = {9781466641624; 1466641614; 9781466641617},
  Journal                  = {Frameworks for Developing Efficient Information Systems: Models, Theory, and Practice},
  Pages                    = {298-314},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84944590379&doi=10.4018%2f978-1-4666-4161-7.ch013&partnerID=40&md5=7e24530033245f5694e1bd183db48435}
}

@Conference{Meingast20131002,
  Title                    = {Agile and UX: The road to integration-The challenges of the UX practitioner in an agile environment},
  Author                   = {Meingast, M. and Packard, H. and Ballew, T. and Edwards, R. and Nordquist, E. and Sader, C. and Smith, D.},
  Year                     = {2013},
  Note                     = {cited By 3},
  Pages                    = {1002-1006},

  Abstract                 = {Adherence to an agile software development methodology has become commonplace in many organizations. However, while the focus on iteration and frequent investigation appears to readily map onto many of the values advocated by HF/UX professionals, in practice the merging of the two approaches is not always straightforward or complementary. Panel members represent a range of perspectives with regard to the adoption and integration of UX research and agile methodologies, as well as company sizes, from large technology companies to an independent consultancy. Panelists will describe their unique approaches, their transitions into the agile environment and some of the challenges, and their lessons learned when it comes to operating as HF/UX professionals within an agile development environment. Panelist will also discuss common themes, such as the criticality of working ahead of the current sprint, leaner research design, and increased collaboration across developers and research teams. Copyright 2013 by Human Factors and Ergonomics Society, Inc.},
  Coden                    = {PHFSD},
  Document_type            = {Conference Paper},
  Doi                      = {10.1177/1541931213571224},
  ISBN                     = {9780945289432},
  ISSN                     = {10711813},
  Journal                  = {Proceedings of the Human Factors and Ergonomics Society},
  Keywords                 = {Agile development environments; Agile environment; Agile Methodologies; Agile software development; Company size; Research designs; Research teams; Technology companies, Human engineering; Industry; Iterative methods; Software engineering, Research},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84889845491&doi=10.1177%2f1541931213571224&partnerID=40&md5=911d66d1156eb397a59a550da5d8ddff}
}

@Article{Méndez20172229,
  Title                    = {Change-driven development for scientific software},
  Author                   = {Méndez, M. and Tinetti, F.G.},
  Journal                  = {Journal of Supercomputing},
  Year                     = {2017},
  Note                     = {cited By 0},
  Number                   = {5},
  Pages                    = {2229-2257},
  Volume                   = {73},

  Abstract                 = {Scientific software production dates back to the days before the computer science discipline obtained its own name. Over the past 76 years, scientists have been producing software, which means that most of the modern techniques and software engineering methods available these days did not exist while part of this process was taking place. Change-driven development was born as a new approach to maintain and develop scientific software. Founded on the principles of software essence (changeability, complexity, intangibility, and conformity), integrated development tools, and automated source code transformation. This new, agile approach takes change as a working unit devised to drive the entire development process, which is performed in a four-stage cycle. One of the most interesting approaches to apply change-driven development on scientific software is to update, modernize and even parallelize sequential programs that have been written 20 or 30 years ago and are still running in production environments. This process will be thoroughly described and implemented. Two successful case studies will be presented and analyzed in depth. © 2017, Springer Science+Business Media New York.},
  Author_keywords          = {Change-driven development; High performance computing; Scientific programming},
  Coden                    = {JOSUE},
  Document_type            = {Article},
  Doi                      = {10.1007/s11227-017-1966-1},
  ISSN                     = {09208542},
  Keywords                 = {Cosine transforms, Change-driven development; High performance computing; Integrated development; Production environments; Scientific programming; Scientific softwares; Software engineering methods; Source code transformation, Software engineering},
  Publisher                = {Springer New York LLC},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85011266633&doi=10.1007%2fs11227-017-1966-1&partnerID=40&md5=e9603676fe6ae11b716af4e4d27ffcb6}
}

@Conference{Menendez2015772,
  Title                    = {Experiment report on the implementation of agile testing},
  Author                   = {Menendez, D.A. and Menendez, E.S. and Sousa, T.G.R. and Da Silva, P.C.},
  Year                     = {2015},
  Editor                   = {Latifi S., Carneiro G., Debnath N., Hashemi R., Minamoto T., Arai K., Reddy Y., Saleem K., Vieira Dias L.A., Shen F., Thuemmler C.},
  Note                     = {cited By 0},
  Pages                    = {772-773},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {The process of software testing in agile environments presents complexity due to the need to be performed at short time intervals. Currently, there is no consensus in literature of the best approach to deploy agile testing. The testing management is often one of the hardest steps to be adapted to these methods, due to the short time for deliveries, which reduces the time available for testing, as a result, it is usually relegated to the background. In order to assess the viability and possible benefits in the implementation of an agile testing process, an exploratory research was made on the deployment approaches of agile testing, successfully used in different contexts and some of these approaches have been implemented in a software development company, which uses principles of agile methods. © 2015 IEEE.},
  Art_number               = {7113577},
  Author_keywords          = {Agile development; Agile testing; Test deployment approaches},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ITNG.2015.138},
  ISBN                     = {9781479988273},
  Journal                  = {Proceedings - 12th International Conference on Information Technology: New Generations, ITNG 2015},
  Keywords                 = {Software design; Software engineering, Agile development; Agile environment; Agile methods; Agile testing; Exploratory research; Management IS; Short time intervals; Time for delivery, Software testing},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84936774409&doi=10.1109%2fITNG.2015.138&partnerID=40&md5=49c143db498034a126ba27470bea5631}
}

@Conference{Menon2015223,
  Title                    = {Architectural challenges in migrating plan-driven projects to agile},
  Author                   = {Menon, V. and Sinha, R. and MacDonell, S.},
  Year                     = {2015},
  Editor                   = {Filipe J., Filipe J., Maciaszek L., Maciaszek L.},
  Note                     = {cited By 0},
  Pages                    = {223-228},
  Publisher                = {SciTePress},

  Abstract                 = {Software development has steadily embraced agile software development methodology/method (ASDM) and has been moving away from the plan driven software development methodology (PDM) approaches like waterfall. Given the iterative nature of agile development, the integration of software architecture into the agile way has become challenging. This research identifies the challenges of having a robust architecture in projects already executed by plan driven methods and new projects likewise by conducting a literature review and a case study analysis. The ensuing analysis finds that there are three major areas: people, process and technology, in which these challenges could be mapped.},
  Author_keywords          = {Agile; Plan driven methods; Requirements engineering; Software architecture; Software development; Software development life cycle; Waterfall},
  Document_type            = {Conference Paper},
  ISBN                     = {9789897581007},
  Journal                  = {ENASE 2015 - Proceedings of the 10th International Conference on Evaluation of Novel Approaches to Software Engineering},
  Keywords                 = {Computer software; Iterative methods; Life cycle; Requirements engineering; Software architecture; Software engineering, Agile; Agile software development; Case study analysis; Literature reviews; Plan driven methods; Software development life cycle; Software development methodologies; Waterfall, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84933498639&partnerID=40&md5=3b29e5c4cbfad55d6db04cc655009df8}
}

@Article{Messina201625,
  Title                    = {A new agile paradigm for mission-critical software development},
  Author                   = {Messina, A. and Fiore, F. and Ruggiero, M. and Ciancarini, P. and Russo, D.},
  Journal                  = {CrossTalk},
  Year                     = {2016},
  Note                     = {cited By 0},
  Number                   = {6},
  Pages                    = {25-30},
  Volume                   = {29},

  Abstract                 = {The Agile paradigm, as intended in the 2001 "Agile Manifesto," brought a disruptive software development methodology. However, with regard to mission- and security-critical organizations, traditional Agile methodologies are quite ineffective because they do not clearly address issues of (1) quality and (2) security. Within the Italian Army General Staff Logistic Department, a new Agile methodology was introduced to tackle quality and security issues in a classified and mission-critical context.},
  Document_type            = {Article},
  ISSN                     = {21601577},
  Keywords                 = {Software design, Agile Methodologies; Italian Army; Mission critical; Mission critical softwares; Security issues; Security-critical; Software development methodologies, Software engineering},
  Publisher                = {U.S. Department of Defense},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84995559833&partnerID=40&md5=6ff97a455dc6424d7dfe2374e8446f1c}
}

@Book{Metzger2013164,
  Title                    = {Addressing highly dynamic changes in service- oriented systems: Towards agile evolution and adaptation},
  Author                   = {Metzger, A. and Di Nitto, E.},
  Publisher                = {IGI Global},
  Year                     = {2013},
  Note                     = {cited By 0},
  Volume                   = {1-4},

  Abstract                 = {This chapter sets out to introduce relevant foundations concerning evolution and adaptation of serviceoriented systems. It starts by sketching the historical development of software systems from monolithic and mostly static applications to highly-dynamic, service-oriented systems. Then, it provides an overview and more thorough explanation of the various kinds of changes that may need to be faced by serviceoriented systems. To understand how such changes could be addressed, the chapter introduces a reference service life-cycle model which distinguishes between evolution, viz. the manual modification of the specification and implementation of the system during design-time, and (self-)adaptation, viz. the autonomous modification of a service-oriented system during operation. Based on the discussion of the key activities prescribed by that life-cycle, the chapter elaborates on the need for agility in both adaptation and evolution of service-oriented systems. © 2014, IGI Global.},
  Document_type            = {Book Chapter},
  Doi                      = {10.4018/978-1-4666-4301-7.ch009},
  ISBN                     = {9781466643024; 1466643013; 9781466643017},
  Journal                  = {Software Design and Development: Concepts, Methodologies, Tools, and Applications},
  Pages                    = {164-177},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84944675741&doi=10.4018%2f978-1-4666-4301-7.ch009&partnerID=40&md5=20f3048fc7ebd9214ac18da59295a03d}
}

@Book{Meyer20141,
  Title                    = {Agile!: The good, the hype and the ugly},
  Author                   = {Meyer, B.},
  Publisher                = {Springer International Publishing},
  Year                     = {2014},
  Note                     = {cited By 9},

  Abstract                 = {Are you attracted by the promises of agile methods but put off by the fanaticism of many agile texts? Would you like to know which agile techniques work, which ones do not matter much, and which ones will harm your projects? Then you need Agile!: the first exhaustive, objective review of agile principles, techniques and tools. Agile methods are one of the most important developments in software over the past decades, but also a surprising mix of the best and the worst. Until now every project and developer had to sort out the good ideas from the bad by themselves. This book spares you the pain. It offers both a thorough descriptive presentation of agile techniques and a perceptive analysis of their benefits and limitations. Agile! serves first as a primer on agile development: one chapter each introduces agile principles, roles, managerial practices, technical practices and artifacts. A separate chapter analyzes the four major agile methods: Extreme Programming, Lean Software, Scrum and Crystal. The accompanying critical analysis explains what you should retain and discard from agile ideas. It is based on Meyer's thorough understanding of software engineering, and his extensive personal experience of programming and project management. He highlights the limitations of agile methods as well as their truly brilliant contributions - even those to which their own authors do not do full justice. Three important chapters precede the core discussion of agile ideas: an overview, serving as a concentrate of the entire book; a dissection of the intellectual devices used by agile authors; and a review of classical software engineering techniques, such as requirements analysis and lifecycle models, which agile methods criticize. The final chapters describe the precautions that a company should take during a transition to agile development and present an overall assessment of agile ideas. This is the first book to discuss agile methods, beyond the brouhaha, in the general context of modern software engineering. It is a key resource for projects that want to combine the best of established results and agile innovations. © Springer International Publishing Switzerland 2014. All rights are reserved.},
  Document_type            = {Book},
  Doi                      = {10.1007/978-3-319-05155-0},
  ISBN                     = {9783319051550; 3319051547; 9783319051543},
  Journal                  = {Agile!: The Good, the Hype and the Ugly},
  Pages                    = {1-170},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84930793395&doi=10.1007%2f978-3-319-05155-0&partnerID=40&md5=48d0b330908f949fe7878f61702af4a4}
}

@Article{Militello201674,
  Title                    = {Designing Colorectal Cancer Screening Decision Support: A Cognitive Engineering Enterprise},
  Author                   = {Militello, L.G. and Saleem, J.J. and Borders, M.R. and Sushereba, C.E. and Haverkamp, D. and Wolf, S.P. and Doebbeling, B.N.},
  Journal                  = {Journal of Cognitive Engineering and Decision Making},
  Year                     = {2016},
  Note                     = {cited By 3},
  Number                   = {1},
  Pages                    = {74-90},
  Volume                   = {10},

  Abstract                 = {Adoption of clinical decision support has been limited. Important barriers include an emphasis on algorithmic approaches to decision support that do not align well with clinical work flow and human decision strategies, and the expense and challenge of developing, implementing, and refining decision support features in existing electronic health records (EHRs). We applied decision-centered design to create a modular software application to support physicians in managing and tracking colorectal cancer screening. Using decision-centered design facilitates a thorough understanding of cognitive support requirements from an end user perspective as a foundation for design. In this project, we used an iterative design process, including ethnographic observation and cognitive task analysis, to move from an initial design concept to a working modular software application called the Screening & Surveillance App. The beta version is tailored to work with the Veterans Health Administration's EHR Computerized Patient Record System (CPRS). Primary care providers using the beta version Screening & Surveillance App more accurately answered questions about patients and found relevant information more quickly compared to those using CPRS alone. Primary care providers also reported reduced mental effort and rated the Screening & Surveillance App positively for usability. © 2016, Human Factors and Ergonomics Society.},
  Author_keywords          = {agile software development; cancer prevention; cognitive task analysis; ethnographic observation; health promotion},
  Document_type            = {Article},
  Doi                      = {10.1177/1555343416630875},
  ISSN                     = {15553434},
  Keywords                 = {Algorithms; Application programs; Decision support systems; Design; Diagnosis; Diseases; Health; Iterative methods; Job analysis; Monitoring; Software engineering, Agile software development; Cancer prevention; Cognitive task analysis; Ethnographic observations; Health promotion, Software design},
  Publisher                = {SAGE Publications Inc.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84960112303&doi=10.1177%2f1555343416630875&partnerID=40&md5=dcf6ec3a4bbe577a4db27bdd26237f28}
}

@Article{Mishra2016929,
  Title                    = {Software evolution in Turkey [Evolucija softvera u Turskoj]},
  Author                   = {Mishra, A. and Yazici, A. and Cetin, S.},
  Journal                  = {Tehnicki Vjesnik},
  Year                     = {2016},
  Note                     = {cited By 0},
  Number                   = {3},
  Pages                    = {929-935},
  Volume                   = {23},

  Abstract                 = {According to a recent Gartner report, Turkey is now to be considered in one of the world’s outsourcing destinations since it has secured its place in the list of top 30 countries for Information Technology (IT), and offshore services. In the last decade, the country has made excellent progress in the software sector, and this is reflected in the rise of its exports to many countries. In this article, we present an overview of advancement of Turkey’s software sector, including current trends in software process, testing, quality, and the adoption of agile methods along with techno parks and incentives provided by the government. © 2016, Strojarski Facultet. All rights reserved.},
  Author_keywords          = {Software; Software development; Software engineering education information technology; Turkey},
  Document_type            = {Article},
  Doi                      = {10.17559/TV-20150303225032},
  ISSN                     = {13303651},
  Keywords                 = {Computer software; Software engineering; Software testing, Agile methods; Gartner; Offshore services; Software Evolution; Software process; Turkey, Software design},
  Publisher                = {Strojarski Facultet},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84975266504&doi=10.17559%2fTV-20150303225032&partnerID=40&md5=12103a380713d1fe3eea76514bb39011}
}

@Book{Misra2015417,
  Title                    = {Software design},
  Author                   = {Misra, R. and Panigrahi, C.R. and Panda, B. and Pati, B.},
  Publisher                = {IGI Global},
  Year                     = {2015},
  Note                     = {cited By 0},

  Abstract                 = {This chapter on "Software Design" emphasizes the role of modeling, prototyping, and simulation in software design. The chapter introduces the principles of software design, issues and challenges. Modeling techniques used in procedural and object oriented methodologies is presented along with the Unified Modeling Language (UML). The suitability of prototyping, as a design artifact and a simulation method is briefly discussed. Software processes such as Rapid Application Development (RAD), Rational Unified Process (RUP) and Agile methodologies which influence the design process have been discussed and recommended. The chapter then deals with Design Metrics for Quality Analysis, Software Risk Analysis and Threat Modeling for design of secure software. Finally, some of the recent research topics such as Model Driven Architecture (MDA), Model Driven Development (MDD), Meta Object Facility (MOF), and Model Driven Testing (MDT) have been covered. © 2016 by IGI Global. All rights reserved.},
  Document_type            = {Book Chapter},
  Doi                      = {10.4018/978-1-4666-8823-0.ch014},
  ISBN                     = {9781466688247; 1466688238; 9781466688230},
  Journal                  = {Handbook of Research on Computational Simulation and Modeling in Engineering},
  Pages                    = {417-454},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958139738&doi=10.4018%2f978-1-4666-8823-0.ch014&partnerID=40&md5=7ba722e5a1ca652b7ccd49588211a186}
}

@Article{Misra2015214,
  Title                    = {Conceptualizing open agile software development life cycle (OASDLC) model},
  Author                   = {Misra, S.C. and Singh, V.},
  Journal                  = {International Journal of Quality and Reliability Management},
  Year                     = {2015},
  Note                     = {cited By 2},
  Number                   = {3},
  Pages                    = {214-235},
  Volume                   = {32},

  Abstract                 = {Purpose – Software development life cycle (SDLC) has always been the core methodology for any software engineer that depicts the entire development process which an organization is bound to utilize to achieve successful software. The purpose of this paper is to bring forth a conceptual model after analysing the best practices in SDLC, and extracting the best out of agile methodologies and the open source software, thereby bringing forward an optimised structure. Design/methodology/approach – The OASDLC is hypothesized specifically for “Brihaspati” project and is formulated keeping in mind the gaps and limitations posed by existing SDLC models. OASDLC is further put to test for achieving lower costs and efforts involved. The tests are further substantiated by means of hypothesis validation through execution of a survey based research. Findings – It has been observed that the present conceptual model further optimizes the efforts involved while adopting such a practice. Originality/value – This paper proposes a novel SDLC model so as to achieve a best practice for a software project. On analysing the issues involved such as tight budget and timelines, it led the authors to formulate a newer concept “Open Agile Software Development Life Cycle model” (OASDLC). © Emerald Group Publishing Limited.},
  Author_keywords          = {Agile methods; Agile SDLC; Open agile software; Open source software development; OSSDLC; SDLC; Software development life cycle},
  Document_type            = {Article},
  Doi                      = {10.1108/IJQRM-08-2013-0127},
  ISSN                     = {0265671X},
  Publisher                = {Emerald Group Publishing Ltd.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84923294337&doi=10.1108%2fIJQRM-08-2013-0127&partnerID=40&md5=bda2db9f406b5e03f67b3fd31c277170}
}

@Article{Misra2016378,
  Title                    = {Modeling privacy issues in distributed enterprise resource planning systems},
  Author                   = {Misra, S.C. and Singh, V. and Jha, N.K. and Bisui, S.},
  Journal                  = {International Journal of Communication Systems},
  Year                     = {2016},
  Note                     = {cited By 0},
  Number                   = {2},
  Pages                    = {378-401},
  Volume                   = {29},

  Abstract                 = {Summary With extensive usage and dependence on communication networks, 'privacy' issues in enterprise distributed systems have become fundamentally important. Privacy concerns have flooded the market especially in the public domain, and with the changing environment of software usage and involvement of malicious substances associated with any network, it becomes essential to safeguard and ascertain privacy among users and incorporate the same safeguard to protect privacy in software as well. The methodologies and tools architecting distributed enterprise resource planning (ERP) systems are primarily new and are vulnerable to malicious attacks. This paper aims at identifying some of critical privacy issues by collecting data from ERP practitioners. This work models variables associated with ERP with the variables of privacy to establish a robust adoption of ERP practices. Privacy issues concerning ERP are listed. Several variables associated with the development, implementation, and control of ERP are identified in the existing literature. A questionnaire instrument was distributed among a set of ERP practitioners. The response data collected thereby were analyzed statistically. Based upon the statistical analysis, an attempt has been made in the paper to make a ranking of the privacy factors. The observations are discussed in detail, and some specific conclusions have been made. Copyright © 2014 John Wiley & Sons, Ltd.},
  Author_keywords          = {adoption; control; conventional plan driven software development; development; ERP; implementation; information access; information usage; model; privacy; software development; software development life cycle},
  Coden                    = {IJCYE},
  Document_type            = {Article},
  Doi                      = {10.1002/dac.2839},
  ISSN                     = {10745351},
  Keywords                 = {Computer software; Control; Data privacy; Life cycle; Models; Network security; Resource allocation; Software design; Software engineering, adoption; development; implementation; Information access; Information usage; Software development life cycle, Enterprise resource planning},
  Publisher                = {John Wiley and Sons Ltd},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84957630685&doi=10.1002%2fdac.2839&partnerID=40&md5=78928efbacf6dff85c2c001ec1d4c138}
}

@Conference{Mocker2015,
  Title                    = {Business-driven IT transformation at Royal Philips: Shedding light on (un)rewarded complexity},
  Author                   = {Mocker, M. and Van Heck, E.},
  Year                     = {2015},
  Note                     = {cited By 0},
  Publisher                = {Association for Information Systems},

  Abstract                 = {In 2013, Royal Philips was two years into a daunting transformation. Following declining financial performance, CEO Frans van Houten aimed to turn the Dutch icon into a "high-performing company" by 2017. This case study examines the challenges of the business-driven IT transformation at Royal Philips, a diversified technology company. The case discusses three crucial issues. First, the case reflects on Philips' aim at creating value from combining locally relevant products and services while also leveraging its global scale and scope. Rewarded and unrewarded business complexity is analyzed. Second, the case identifies the need to design and align multiple elements of an enterprise (organizational, cultural, technical) to balance local responsiveness with global scale. Third, the case explains the role of IT (as an asset instead of a liability) in Philips' transformation and discusses the new IT landscape with its digital platforms, and the new practices to create effective business-IT partnerships.},
  Author_keywords          = {Agile software development; Enterprise architecture; Global business processes; IS platform; IT governance; Organizational transformation; Process standards},
  Document_type            = {Conference Paper},
  Journal                  = {2015 International Conference on Information Systems: Exploring the Information Frontier, ICIS 2015},
  Keywords                 = {Information systems; Software engineering, Agile software development; Enterprise Architecture; Global business process; IT governance; Organizational transformation; Process standards, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84964655293&partnerID=40&md5=085f6f4edc7e7b64dfb5ffa2a0cf85fd}
}

@Conference{Modi201374,
  Title                    = {Understanding collaborative practices in distributed agile development research proposal},
  Author                   = {Modi, S. and Abbott, P.},
  Year                     = {2013},
  Note                     = {cited By 0},
  Pages                    = {74-77},
  Publisher                = {IEEE Computer Society},

  Abstract                 = {Agile methodologies in software development are gaining prominence in global settings where distributed cross cultural software teams collaborate on projects, addressing the needs of dynamic business environments. However, undertaking collaborative work in distributed settings can create significant challenges, especially as a number of agile principles and practices rely on physical proximity and face-to-face interactions. An interpretative qualitative approach using case studies has been adopted to gain deeper insights into how such teams work. The analysis is being informed by theoretical concepts of awareness, common ground and boundary objects. Early findings suggest that distributed team members use multifaceted techniques, such as shared software artifacts that evolve over time to negotiate and enhance common ground for better collaborative practices to emerge. It is expected that research undertaken will provide a framework to understand this process. Practically, the research will propose guidelines for global software teams planning to adopt agile methods in distributed environments. 978-0-7695-5055-8/13 $26.00 © 2013 IEEE.},
  Art_number               = {6613453},
  Author_keywords          = {Awareness cues.; Boundary objects; Distributed collaborative work; Establishing and negotiating common ground; Globally distributed agile teams},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICGSEW.2013.16},
  ISBN                     = {9780769550558},
  Journal                  = {Proceedings - 2013 IEEE 8th International Conference on Global Software Engineering Workshops, ICGSEW 2013},
  Keywords                 = {Research; Technical presentations, Agile teams; Awareness cues; Boundary objects; Collaborative Work; Common ground, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84888247982&doi=10.1109%2fICGSEW.2013.16&partnerID=40&md5=a1c6fac873112a078ef15a1315a1423a}
}

@Conference{Moe2014,
  Title                    = {Networking in a large-scale distributed agile project},
  Author                   = {Moe, N.B. and Šmite, D. and Šblis, A. and Börjesson, A.-L. and Andréasson, P.},
  Year                     = {2014},
  Note                     = {cited By 7},
  Publisher                = {IEEE Computer Society},

  Abstract                 = {Context: In large-scale distributed software projects the expertise may be scattered across multiple locations. Goal: We describe and discuss a large-scale distributed agile project at Ericsson, a multinational telecommunications company headquartered in Sweden. The project is distributed across four development locations (one in Sweden, one in Korea and two in China) and employs 17 teams. In such a large scale environment the challenge is to have as few dependences between teams as possible, which is one reason why Ericsson introduced cross-functional feature teams - teams that are capable of taking the full responsibility for implementing one entire feature. To support such teams when solving problems, ensure knowledge sharing within the project and safeguard the quality Ericsson introduced a new role - Technical Area Responsible (TAR). Method: We conducted extensive fieldwork for 9 months at two Ericsson sites in Sweden and China. We interviewed representatives from different roles in the organization, in addition to focus groups and a survey with seven teams. Results: We describe the TAR role, and how the TARs communicate, coordinate and support the teams. Also architects support the teams, however not as closely as the TARs. We found that the TAR is usually a senior developer working halftime or fulltime in the role. We also present measures of the actual knowledge network of three Chinese and three Swedish teams and the TARs position in it. Conclusions: TARs are central in the knowledge network and act as the boundary spanners between the teams and between the sites. We learned that availability of the TARs across sites is lower than that with local TARs. We also found that the size of a team's knowledge network depends on how long the team members have been working in the company. Finally we discuss the advantages and the challenges of introducing experts in key roles in large scale distributed agile development. © 2014 Authors.},
  Art_number               = {a12},
  Author_keywords          = {boundary spanners; distributed agile; global software development; insourcing; large-scale agile; offshoring; social network analysis; technical area responsibility},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2652524.2652584},
  ISBN                     = {9781450327749},
  ISSN                     = {19493770},
  Journal                  = {International Symposium on Empirical Software Engineering and Measurement},
  Keywords                 = {Boundary spanners; distributed agile; Global software development; Insourcing; large-scale agile; Off-shoring; technical area responsibility, Social networking (online)},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84907833663&doi=10.1145%2f2652524.2652584&partnerID=40&md5=ebeb469241ce5d8c647e487cb41f096b}
}

@Article{Mohagheghi201796,
  Title                    = {An industry experience report on managing product quality requirements in a large organization},
  Author                   = {Mohagheghi, P. and Aparicio, M.E.},
  Journal                  = {Information and Software Technology},
  Year                     = {2017},
  Note                     = {cited By 0},
  Pages                    = {96-109},
  Volume                   = {88},

  Abstract                 = {Context Eliciting, managing and implementing product quality requirements (in-short quality requirements) in a large organization can be challenging when many stakeholders are involved and projects run in parallel; sometimes with varying priorities with regards to quality. In this case from a public organization in Norway, the separation between business units and the IT-department and the legacy burden are additional factors that increase the complexity of requirement management. Objective This paper presents results and experiences from three years long work with quality requirements, starting from ad-hoc handling of quality requirements in separate projects to systematic work across projects with reusable sets of requirements and processes. Method We present how quality requirements are captured and classified, as well as changes to the agile software development process as a consequence of increasing focus on product quality. Results The ISO/IEC-25010:2011 standard is tailored for better context fit and is supported by concrete requirements and a methodology that covers the life cycle of software products in both greenfield and brownfield projects. In addition, the organization had to examine the current state of existing IT-capabilities in order to establish a quality baseline for future development, and develop shared vision and roadmaps for product quality. Conclusions In our experience, stakeholders prefer an iterative and lightweight approach in eliciting and refining quality requirements. The classification model and requirement lists are used as guidelines in requirement workshops. The developed terminology, updated templates and processes are reusable in projects and generalizable to different contexts, and are well adopted by the IT and business units. © 2017 Elsevier B.V.},
  Author_keywords          = {Agile; Experience report; Maintenance; Non-functional requirements; Product quality; Technical debt},
  Coden                    = {ISOTE},
  Document_type            = {Article},
  Doi                      = {10.1016/j.infsof.2017.04.002},
  ISSN                     = {09505849},
  Keywords                 = {Concrete products; Iterative methods; Maintenance; Quality control; Software design; Software engineering, Agile; Agile software development process; Classification models; Experience report; Non-functional requirements; Public organizations; Requirement management; Technical debts, Life cycle},
  Publisher                = {Elsevier B.V.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85017398355&doi=10.1016%2fj.infsof.2017.04.002&partnerID=40&md5=2010d9084485eb95afc790b246a63452}
}

@Article{Mohanarajah2015301,
  Title                    = {An improved adaptive and dynamic hybrid agile methodology to enhance software project success deliveries},
  Author                   = {Mohanarajah, S. and Jabar, M.A.},
  Journal                  = {Journal of Theoretical and Applied Information Technology},
  Year                     = {2015},
  Note                     = {cited By 0},
  Number                   = {3},
  Pages                    = {301-325},
  Volume                   = {75},

  Abstract                 = {Context: There has been a growing interest in the usage and adaptive ramifications within the broad spectrum of agile methodologies and its current trend as an alternative to traditional methodologies has not been widely accepted. Whilst a lot of hype has been seen since its introduction in 2001 with the Agile manifesto where delivery success was promised, software practitioners still appear to be weary as unfavourable usage perceptions dominate the software industry and the transition appears to be a formidable task. Project success and failure scenarios have been researched but the factors that establish these are still widely inconclusive and elusive creating more interest and emphasis for embarking on further research. This paper highlights and investigates the relationship between agile software development methodologies and the success and failure scenarios prevalent in the software industry. Objective: To provide new success and failure causes and roots to a new adaptive and dynamic hybrid agile methodology that could further enhance software delivery success with more frequent use of agile methodologies in a reliable manner. Method: The methodology used is the Evidence-Based Software Engineering (EBSE) research and practice. Additionally, the Systematic Literature Review (SLR) method was also incorporated as it provided a rigorous review and synthesis of research results. In analysing the reviewed data, we have used the Analytical Hierarchy Process (AHP) method as it provided a clear approach in attaching priorities to recommended solutions. Results: Through a review of a set of research articles on project management history, its disciplines, its relative misunderstood and with the inconsistencies in the adoption and use of agile methodologies, it has been shown that barriers still exist and the strategies of removing these obstacles and transforming them into catalysts, while been investigated and developed, still appears to be a challenge. Agile methodologies work when a broader spectrum of perceptive adaptations and a new set of dynamic critical success factors, especially when a new methodology which incorporates these catalysts for a set of project activities is developed. Contribution: The study has contributed in proposing a new set of success and failure causes and the roots to a new agile methodology from the analysis and findings. These would be useful for researchers and software practitioners who are interested to do studies on the further adoption and use of existing agile methodologies or to tailor agile methodologies as hybrids versions in the future. Conclusion: Success and failure scenarios are the mainstream derivative constructs of project delivery studies in terms of the moving forward in achieving higher project success rate. Issues with stakeholders were the major areas of concern as success and failure contributors. Other important factors were organisational culture and methodology, which needed equal attention as gaps still prevailed and at times festered to its own disadvantage. The most interesting find was that these contributors were equally important whether we used traditionally formal methods or moved to agilitic methods. This also explains the flat success rate for software projects over the last 5 years as we probably reached a point where we have been addressing areas in terms of causes and were not specifically trying to weed out the areas independent and applicable to the software industry. We recommend that a dynamic approach both to the causes and the methodology is the answer as the software industry does not sit still in todays’ ever changing user demands and expectations. Environments with a dynamic methodology, which encompasses a dynamic set of critical success causes as its inception based on a set of dynamic success indicators, is the key answer. The dynamic success (and failure) factors, indicators and the derived methodology are recommended from our study. This we feel should be the approach for all new and future research. © 2005 - 2015 JATIT & LLS. All rights reserved.},
  Author_keywords          = {Agile methodologies; Causes; Dynamic; Factors hybrid; Failures; Project management; Success; Traditional methodologies},
  Document_type            = {Article},
  ISSN                     = {19928645},
  Publisher                = {Asian Research Publishing Network},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84930151484&partnerID=40&md5=63e7bc58508c5e044b29c8ca0550e54d}
}

@Article{Monteiro2013191,
  Title                    = {Mapping CMMI and RUP process frameworks for the context of elaborating software project proposals},
  Author                   = {Monteiro, P. and MacHado, R.J. and Kazman, R. and Lima, A. and Simões, C. and Ribeiro, P.},
  Journal                  = {Lecture Notes in Business Information Processing},
  Year                     = {2013},
  Note                     = {cited By 2},
  Pages                    = {191-214},
  Volume                   = {133 LNBIP},

  Abstract                 = {To improve quality, organizations are widely using Software Process Improvement (SPI) models and in particular CMMI. Nevertheless, Small and Medium Enterprises (SMEs) are reluctant in adopting CMMI since the complexity and size of the framework discourage its adoption. RUP is presented as a disciplined approach for assigning tasks and responsibilities within a software organization, with the aim of ensuring the production of software meeting the users' needs and in strict compliance with a predictable timetable and budget. CMMI and RUP can be used together since CMMI defines "what to do" and RUP defines "how to do". In this paper, we present the mappings between the CMMI Maturity Levels 2 and 3 process areas and the RUP activities, tasks, artifacts and roles. Our main contribution relates to the alignment of CMMI and RUP when adopted in the preliminary stage of every project: the elaboration of the project proposal. This paper also presents the assessment of the effectiveness of RUP support to the elaboration of the project proposals. © 2013 Springer-Verlag.},
  Author_keywords          = {CMMI ML 2 and ML3; Project Proposal; RUP; RUP Roles},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-642-35702-2_12},
  ISBN                     = {9783642357015},
  ISSN                     = {18651348},
  Keywords                 = {Computer software selection and evaluation; Industry, CMMI ML 2 and ML3; Maturity levels; Process framework; Project Proposal; RUP; RUP Roles; Small and medium enterprise; Software organization; Software process improvements; Software project, Software design},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84872252293&doi=10.1007%2f978-3-642-35702-2_12&partnerID=40&md5=a592487e176f3c29cd3847e0041a6f70}
}

@Article{Monteiro2014214,
  Title                    = {RUP alignment and coverage analysis of CMMI ML2 process areas for the context of software projects execution},
  Author                   = {Monteiro, P. and Machado, R.J. and Kazman, R. and Simões, C. and Ribeiro, P.},
  Journal                  = {Lecture Notes in Business Information Processing},
  Year                     = {2014},
  Note                     = {cited By 0},
  Pages                    = {214-228},
  Volume                   = {166 LNBIP},

  Abstract                 = {The simultaneous adoption of CMMI and RUP allows the definition of "what to do" (with the support of CMMI) and "how to do" (with the support of RUP) in the context of executing software development projects. In this paper, our main contribution relates to the alignment of CMMI ML2 with RUP, in the context of executing software projects and the analysis of RUP coverage. We present the alignment for CMMI ML2 process areas, incorporating priority mechanisms. The adopted case study allows the analysis of the way RUP supports CMMI ML2 process areas taking into account the proposed alignment and the theoretical coverage analyzed. For particular process areas, RUP can be considered a good approach for CMMI ML2 implementation. © Springer International Publishing Switzerland 2014.},
  Author_keywords          = {CMMI ML 2; Project execution; RUP},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-03602-1},
  ISBN                     = {9783319036014},
  ISSN                     = {18651348},
  Keywords                 = {Computer software selection and evaluation, CMMI ML 2; Coverage analysis; Process areas; Project execution; RUP; Software development projects; Software project, Alignment},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904574318&doi=10.1007%2f978-3-319-03602-1&partnerID=40&md5=072cd670d995f50565c7c6e697be59ac}
}

@Article{Moravcová2016251,
  Title                    = {“Agile adoption” in IT companies - Building a change capability by qualitative description of agile implementation in different companies},
  Author                   = {Moravcová, B. and Legény, F.},
  Journal                  = {Lecture Notes in Business Information Processing},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {251-262},
  Volume                   = {247},

  Abstract                 = {As the interest in “Agile” Adoption continues to grow, there is an increasing need for organizations to understand how to adopt it successfully. This study has as objective to identify the concerns of deployment of agile practices and provide insight into existing challenges of adopting “Agile”. First, the existing literature and case studies are reviewed. A definition of “Agile” Adoption is then formed based on the literature by breaking down the concept. The work deepens the understanding of the complex issue associated with “Agile” Adoption, contributes to the knowledge of “Agile” Adoption and improvement of the software development processes. We surveyed 5 companies, in total 200 employees. Finally, we present 25 impediments for the company’s “Agile” Adoption that were identified based on the interviews. Software companies, who plan their current strategy for “Agile” Adoption, might use the processed output. © Springer International Publishing Switzerland 2016.},
  Author_keywords          = {Agile; Challenges; Change; Change capability; Impediments},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-32689-4_19},
  Editor                   = {Novoa H., Borangiu T., Dragoicea M.},
  ISBN                     = {9783319326887},
  ISSN                     = {18651348},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84970039384&doi=10.1007%2f978-3-319-32689-4_19&partnerID=40&md5=b48d2ec840731dad90b2f6cd290582eb}
}

@Conference{Mukhtar2013820,
  Title                    = {A hybrid model for agile practices using case based reasoning},
  Author                   = {Mukhtar, M. and Motla, Y.H. and Riaz, M. and Khan, M.A. and Ahmed, M. and Abbas, M.A. and Naz, H. and Batool, A.},
  Year                     = {2013},
  Note                     = {cited By 4},
  Pages                    = {820-823},

  Abstract                 = {Agile Software Development works as the bridge that establishes the path to handle changes in the composite task of Software Development. In this research, we present a hybrid model which has been introduced for evolution of the Agile Software Development Practices by using Artificial Intelligence (AI) technique. The methods we used in this research are published reports, articles and existing case studies. Expert's response method is applied to accomplish the appraisal of this model. This model has resulted in improving the Agile Practices by using the concept of Case Based Reasoning (CBR). The model provides a guideline to the Agile Software Development regarding enhancement of Agile Practices incorporated with CBR. © 2013 IEEE.},
  Art_number               = {6615431},
  Author_keywords          = {Agile; Case Based Reasoning; Hybrid Software Engineering Process; RUP; Scrum Model; Software Engineering Practices},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICSESS.2013.6615431},
  ISBN                     = {9781467349970},
  ISSN                     = {23270586},
  Journal                  = {Proceedings of the IEEE International Conference on Software Engineering and Service Sciences, ICSESS},
  Keywords                 = {Agile; Agile practices; Agile software development; Casebased reasonings (CBR); Hybrid model; Hybrid software engineerings; RUP; Software engineering practices, Artificial intelligence; Research; Software design, Case based reasoning},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84890051546&doi=10.1109%2fICSESS.2013.6615431&partnerID=40&md5=bb598cd73d0df066ed15f71dfa59194d}
}

@Article{Munir2016684,
  Title                    = {Open innovation in software engineering: a systematic mapping study},
  Author                   = {Munir, H. and Wnuk, K. and Runeson, P.},
  Journal                  = {Empirical Software Engineering},
  Year                     = {2016},
  Note                     = {cited By 1},
  Number                   = {2},
  Pages                    = {684-723},
  Volume                   = {21},

  Abstract                 = {Open innovation (OI) means that innovation is fostered by using both external and internal influences in the innovation process. In software engineering (SE), OI has existed for decades, while we currently see a faster and broader move towards OI in SE. We therefore survey research on how OI takes place and contributes to innovation in SE. This study aims to synthesize the research knowledge on OI in the SE domain. We launched a systematic mapping study and conducted a thematic analysis of the results. Moreover, we analyzed the strength of the evidence in the light of a rigor and relevance assessment of the research. We identified 33 publications, divided into 9 themes related to OI. 17/33 studies fall in the high–rigor/high–relevance category, suggesting the results are highly industry relevant. The research indicates that start-ups have higher tendency to opt for OI compared to incumbents. The evidence also suggests that firms assimilating knowledge into their internal R&D activities, have higher likelihood of gaining financial advantages. We concluded that OI should be adopted as a complementary approach to facilitate internal innovation and not to substitute it. Further research is advised on situated OI strategies and the interplay between OI and agile practices. © 2015, Springer Science+Business Media New York.},
  Author_keywords          = {Collective innovation; Collective invention; Literature review; Open innovation; Research agenda; Software engineering; User innovation},
  Coden                    = {ESENF},
  Document_type            = {Article},
  Doi                      = {10.1007/s10664-015-9380-x},
  ISSN                     = {13823256},
  Keywords                 = {Innovation; Mapping, Innovation process; Literature reviews; Open innovation; Research agenda; Rigor and relevances; Systematic mapping studies; Thematic analysis; User innovation, Software engineering},
  Publisher                = {Springer New York LLC},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84928593330&doi=10.1007%2fs10664-015-9380-x&partnerID=40&md5=96c30e9fe5d26c0fc3fedcd5d5a8ca9d}
}

@Article{Muñoz2016123,
  Title                    = {Analysis of tools for assessing the implementation and use of agile methodologies in SMEs},
  Author                   = {Muñoz, M. and Mejia, J. and Corona, B. and Calvo-Manzano, J.A. and Feliu, T.S. and Miramontes, J.},
  Journal                  = {Communications in Computer and Information Science},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {123-134},
  Volume                   = {609},

  Abstract                 = {Nowadays, small and medium enterprises are using agile methodologies as an effort to produce software to meet the time requested by the market. However, the lack of knowledge on how to use them adequately results in their empirical adoption with an inefficient software development. In this context, a set of software tools that pretend to help SMEs in the implementation of an agile methodology have been developed. Unfortunately, most of them list a set of questions without providing the expected support. This paper aims to analyze a set of the most used software tools found in the literature in order to identify which elements are covered and focused by the software tools. Besides, this analysis allowed us to identify deficiencies in the actual tools and a set of key elements that should be taken into account to help SMEs in the correct implementation and the achievement of maturity on the use of an agile methodology. © Springer International Publishing Switzerland 2016.},
  Author_keywords          = {Agile assessing tools; Agile methodologies; Agile methodologies implementation and use; Small and medium enterprises; SMEs},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-38980-6_10},
  Editor                   = {Dorling A., O'Connor R.V., Clarke P.M., Rout T.},
  ISBN                     = {9783319389790},
  ISSN                     = {18650929},
  Keywords                 = {Circuit simulation; Computer software; Process engineering; Software engineering, Agile Methodologies; Key elements; Set of questions; Small and medium enterprise; SMEs, Software design},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84994060600&doi=10.1007%2f978-3-319-38980-6_10&partnerID=40&md5=8817c1251460fa64a2bd9c9eee4bf791}
}

@Conference{Murphy201375,
  Title                    = {Have agile techniques been the silver bullet for software development at Microsoft?},
  Author                   = {Murphy, B. and Bird, C. and Zimmermann, T. and Williams, L. and Nagappan, N. and Begel, A.},
  Year                     = {2013},
  Note                     = {cited By 11},
  Pages                    = {75-84},

  Abstract                 = {Background. The pressure to release high-quality, valuable software products at an increasingly faster rate is forcing software development organizations to adapt their development practices. Agile techniques began emerging in the mid-1990s in response to this pressure and to increased volatility of customer requirements and technical change. Theoretically, agile techniques seem to be the silver bullet for responding to these pressures on the software industry. Aims. This paper tracks the changing attitudes to agile adoption and techniques, within Microsoft, in one of the largest longitudinal surveys of its kind (2006-2012). Method. We collected the opinions of 1,969 agile and non-agile practitioners in five surveys over a six-year period. Results. The survey results reveal that despite intense market pressure, the growth of agile adoption at Microsoft is slower than would be expected. Additionally, no individual agile practice exhibited strong growth trends. We also found that while development practices of teams may be similar, some perceive and declare themselves to be following an agile methodology while others do not. Both agile and non-agile practitioners agree on the relative benefits and problem areas of agile techniques. Conclusions. We found no clear trends in practice adoption. Non-agile practitioners are less enamored of the benefits and more strongly in agreement with the problem areas. The ability for agile practices to be used by large-scale teams generally concerned all respondents, which may limit its future adoption. © 2013 IEEE.},
  Art_number               = {6681340},
  Author_keywords          = {Agile; Agile development; Interviews; Survey},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ESEM.2013.21},
  ISSN                     = {19493770},
  Journal                  = {International Symposium on Empirical Software Engineering and Measurement},
  Keywords                 = {Agile; Agile development; Agile Methodologies; Customer requirements; Development practices; Interviews; Longitudinal surveys; Software development organizations, Silver; Software design; Surveying, Surveys},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893262671&doi=10.1109%2fESEM.2013.21&partnerID=40&md5=5f9a21ade2cf9ab1a2b4d9f92c044ee7}
}

@Conference{Muthig2013178,
  Title                    = {A framework for role-based feature management in software product line organizations},
  Author                   = {Muthig, D. and Schroeter, J.},
  Year                     = {2013},
  Note                     = {cited By 2},
  Pages                    = {178-187},

  Abstract                 = {Product line engineering requires changes in approaching software development. Two main processes are to be established: creating a reusable infrastructure, and utilizing it for developing products. In practice, these two processes cannot strictly be separated as product enhancements are requested frequently by customers and a changeable infrastructure is essential to react on market needs. Thus, various approaches, such as proactive, reactive, or agile, have been introduced to handle changes. At a finer level of granularity, however, changes comprise many activities with variable duration and thus result in sets of concurrent and overlapping software development activities. This paper, therefore, investigates changes in more detail and assumes that provisioning comprehensive information on changes and respective states are crucial to organizations for keeping a software product line manageable. As features are a common notion used in software engineering to reflect customer requirements, the paper proposes a conceptual framework for managing feature information and for defining role-specific views throughout all life cycle processes. Its concepts have been derived from an industrial context. © 2013 ACM.},
  Author_keywords          = {development process support; feature information management; feature life cycle},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2491627.2491653},
  ISBN                     = {9781450319683},
  Journal                  = {ACM International Conference Proceeding Series},
  Keywords                 = {Comprehensive information; Conceptual frameworks; Customer requirements; Development activity; Development process; Feature lives; Product line engineering; Software Product Line, Computer software; Information management; Life cycle, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84883881674&doi=10.1145%2f2491627.2491653&partnerID=40&md5=5128889462ba64a4a8047ac9aebcc35d}
}

@Conference{Mwansa2014818,
  Title                    = {Migrating agile development into the cloud computing environment},
  Author                   = {Mwansa, G. and Mnkandla, E.},
  Year                     = {2014},
  Editor                   = {Kesselman C.},
  Note                     = {cited By 1},
  Pages                    = {818-825},
  Publisher                = {IEEE Computer Society},

  Abstract                 = {The emergence of cloud computing is influencing how businesses develop, re-engineer, and implement critical software applications. The cloud requires developers to elevate the importance of compliance with security policies, regulations and internal engineering standards in their software development life cycles. Cloud computing and agile development methodologies are new technologies that have come with new approaches in the way computing services are provisioned and development of quality software respectively. However, the synergy between the two is bonded with technical and non-technical challenges. In this paper, a conceptual framework is proposed to support the process of migration of South African small, medium and micro enterprises (SMMEs) who are using agile software development methodologies to cloud computing environment. © 2014 IEEE.},
  Art_number               = {6973819},
  Author_keywords          = {Agile Development Methodologies; Cloud Computing; SMMEs},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/CLOUD.2014.113},
  ISBN                     = {9781479950638},
  ISSN                     = {21596182},
  Journal                  = {IEEE International Conference on Cloud Computing, CLOUD},
  Keywords                 = {Application programs; Cloud computing; Life cycle; Regulatory compliance; Standards, Agile development methodologies; Agile software development; Cloud computing environments; Conceptual frameworks; Engineering standards; SMMEs; Software development life cycle; Technical challenges, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84919807867&doi=10.1109%2fCLOUD.2014.113&partnerID=40&md5=a5090f63e5fce265b627fea7a21a8365}
}

@Conference{Myburgh2014841,
  Title                    = {Situational software engineering Complex Adaptive responses of software development teams},
  Author                   = {Myburgh, A.B.},
  Year                     = {2014},
  Note                     = {cited By 1},
  Pages                    = {841-850},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {The Complex Adaptive Situational Model (CASM) promotes understanding of establishing conditions which enable software engineering success. Influenced by complexity science, CASM explains aspects of the state of dynamic equilibrium that is achieved under constraining influence of management and production governance. Four states of dynamic equilibrium are defined: Crafted Quality (Agile), Controlled Quality (waterfall), Managed Costs (WetAgile) and Self-Directed Quality. A band of software engineering feasibility is also described and it is suggested that successful software engineering initiatives require teams to operate in that band. The journey across the band of feasibility is explained by introducing SEMAT, with Crafted Quality amounting to applying SEMAT Essence, and Controlled Quality being achieved by introducing additional practices which satisfy the more stringent governance requirements. An enterprise is then described as a collection of CAS's, thereby setting the scene for further research into the complexities of human-driven complex adaptive systems. © 2014 Polish Information Processing Society.},
  Art_number               = {6933103},
  Document_type            = {Conference Paper},
  Doi                      = {10.15439/2014F196},
  ISBN                     = {9788360810583},
  Journal                  = {2014 Federated Conference on Computer Science and Information Systems, FedCSIS 2014},
  Keywords                 = {Quality control, Adaptive response; Complex adaptive systems; Complexity science; Dynamic equilibria; Engineering feasibility; Enterprise IS; Situational modeling; Software development teams, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84912141434&doi=10.15439%2f2014F196&partnerID=40&md5=14fb3da8bbe2cafe533ed34fc9561a38}
}

@Conference{Myklebust2014,
  Title                    = {Change impact analysis as required by safety standards, what to do?},
  Author                   = {Myklebust, T. and Stålhane, T. and Hanssen, G.K. and Haugset, B.},
  Year                     = {2014},
  Note                     = {cited By 2},
  Publisher                = {Techno-Info Comprehensive Solutions (TICS)},

  Abstract                 = {Change Impact Analysis related to safety of products and systems is used by companies in many industries and is required by several standards. The International Electrotechnical Commission (IEC) has issued several standards with requirements and guidelines for the establishment of analysis like FMECA (IEC 60812), FTA (IEC 61025), Design review (IEC 61160), HAZOP (IEC 61882), Markov (IEC 61165) and RBD (IEC 61078) but no standard for Change Impact Analysis. Based on the aforementioned standards, a literature study and experience from several projects, this paper proposes a Change Impact Analysis Report adapted to the specific characteristics of the Railway and Process industry domains. The purpose of this paper is to serve as a tool to aid manufacturers in performing a Change Impact Analysis at the appropriate level which will be approved by assessors and certification bodies. This is important since the Change Impact Analysis report is one of the main inputs to the assessor/certification body. The paper starts by presenting and clarifying relevant terms and definitions, as these differ from standard to standard. The main part of the paper structures and describes the relevant topics for a Change Impact analysis report. Using the described approach will save time and cost and reduce the risk of having to re-issue the Change Impact analysis, thus ending up with a product having hidden defects. Using the mindset from SafeScrum - a method that introduces elements from agile into safety-related software development, will result in further savings. This work is part of a series of Railway and IEC 61508 certification projects and the SUSS2 Research projects.},
  Author_keywords          = {Certification; Change Impact Analysis; EN 5012X; IEC 61508},
  Document_type            = {Conference Paper},
  Journal                  = {PSAM 2014 - Probabilistic Safety Assessment and Management},
  Keywords                 = {Accident prevention; Railroads; Safety engineering; Software design; Software engineering; Standards, Certification; Certification bodies; Change impact analysis; EN 5012X; IEC 61508; International Electrotechnical Commission; Literature studies; Safety related software, Risk assessment},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84925060922&partnerID=40&md5=d0153a4b99c0b70346b1c1ca305582af}
}

@Book{Nafchi2016165,
  Title                    = {Agile assessment methods and approaches},
  Author                   = {Nafchi, M.Z. and Gandomani, T.J.},
  Publisher                = {IGI Global},
  Year                     = {2016},
  Note                     = {cited By 0},

  Abstract                 = {Agile methods are widely used in software companies in recent years. Many software companies are replacing their traditional development methods with agile methods. Nonetheless, measuring agility that they have achieved has been a topic of debate. Software teams and companies need to know how agile they are or how much is the agility degree of their organization. Unlike traditional methods in software development, there is no standard or universal model (like CMM/CMMI) to measure maturity of agile teams and software companies. So far, only a few methods and tools have been proposed to measure the agility of software companies. The main aim of this chapter is introducing the structure and main features of the existing agile assessment methods and providing a brief discussion on drawbacks of these methods. This chapter tries to elucidate the actual position of agility measurement methods in measuring agility degree of companies who are trying to adapt to agile methods and practices. © 2016 by IGI Global. All rights reserved.},
  Document_type            = {Book Chapter},
  Doi                      = {10.4018/978-1-4666-9858-1.ch009},
  ISBN                     = {9781466698598; 1466698586; 9781466698581},
  Journal                  = {Emerging Innovations in Agile Software Development},
  Pages                    = {165-174},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84981523339&doi=10.4018%2f978-1-4666-9858-1.ch009&partnerID=40&md5=4fb32c5a6e4cbb8d3656e17bc60a7b80}
}

@Conference{Nafchi2014251,
  Title                    = {On the current agile assessment methods and approaches},
  Author                   = {Nafchi, M.Z. and Zulzalil, H. and Gandomani, T.J.},
  Year                     = {2014},
  Editor                   = {Jawawi D.N.A., Sulaiman S., Mohamad R., Sa'Adon N.A.},
  Note                     = {cited By 0},
  Pages                    = {251-254},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Agile methods are widely used in software companies in recent years. Many software companies are replacing their traditional development methods with Agile methods. Nonetheless, measuring agility that they have achieved has be topic of debate. So far, only a few methods and tools have been proposed to measure the agility of software companies who are moving to agile. The main aim of this paper is reviewing the existing agile assessment methods and providing a brief discussion on drawbacks of these methods. This paper tries to elucidate the actual position of these methods in measuring agility degree of companies who are moving to agile approach. © 2014 IEEE.},
  Art_number               = {6986023},
  Author_keywords          = {Agile assessment; Agile assessment models; Agile software development; Agile transformation; Agility assessment},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/MySec.2014.6986023},
  ISBN                     = {9781479954391},
  Journal                  = {2014 8th Malaysian Software Engineering Conference, MySEC 2014},
  Keywords                 = {Software design, Agile approaches; Agile assessments; Agile methods; Agile software development; Agile transformations; Agility assessment; Development method; Software company, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84929379099&doi=10.1109%2fMySec.2014.6986023&partnerID=40&md5=d325f9aa10602c64835cda474acfca7f}
}

@Article{Nanthaamornphong201436,
  Title                    = {Building CLiiME via test-driven development: A case study},
  Author                   = {Nanthaamornphong, A. and Carver, J.C. and Morris, K. and Michelsen, H.A. and Rouson, D.W.I.},
  Journal                  = {Computing in Science and Engineering},
  Year                     = {2014},
  Note                     = {cited By 2},
  Number                   = {3},
  Pages                    = {36-46},
  Volume                   = {16},

  Abstract                 = {The multidisciplinary nature of contemporary computational modeling impacts the development of computational science and engineering (CSE) software. Multidisciplinary efforts often require large-scale software development to serve a broad audience of developers and users. This article describes software engineering practices adopted in the Community Laser-Induced Incandescence Modeling Environment (CLiiME). The authors explain how CLiiME's design enables extension of the model. The project uses the agile methodology of test-driven development (TDD) to implement the infrastructure for a collaborative model that different researchers will use, modify, and extend. They discuss some of the software engineering practices that developers can integrate throughout the life of a project, beginning with its inception when only a few developers are contributing to the project. They also describe the mechanisms they've incorporated to allow for natural expansion of the model. © 1999-2011 IEEE.},
  Art_number               = {6774772},
  Author_keywords          = {Agile methodologies; Computational science and engineering; scientific computing; Software engineering; Test-driven development},
  Coden                    = {CSENF},
  Document_type            = {Article},
  Doi                      = {10.1109/MCSE.2014.33},
  ISSN                     = {15219615},
  Keywords                 = {Computer science; Engineering; Natural sciences computing, Agile Methodologies; Collaborative model; Computational model; Computational science and engineerings; Laser induced incandescence; Modeling environments; Software engineering practices; Test driven development, Software engineering},
  Publisher                = {IEEE Computer Society},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84903197727&doi=10.1109%2fMCSE.2014.33&partnerID=40&md5=83985b6db006725ca375498448235967}
}

@Conference{Nanthaamornphong20139,
  Title                    = {A case study: Agile development in the community laser-induced incandescence modeling environment (CLiiME)},
  Author                   = {Nanthaamornphong, A. and Morris, K. and Rouson, D.W.I. and Michelsen, H.A.},
  Year                     = {2013},
  Note                     = {cited By 7},
  Pages                    = {9-18},

  Abstract                 = {The multidisciplinary requirements of current computational modeling problems preclude the development of scientific software that is maintained and used by selected scientists. The multidisciplinary nature of these efforts requires the development of large scale software projects established with a wide developer and user base in mind. This article describes some of the software-engineering practices adopted in a scientific-software application for a laser-induced incandescence community model. The project uses an Agile and Test-Driven Development approach to implement the infrastructure for the development of a collaborative model that is to be extended, modified, and used by different researchers. We discuss some of the software-engineering practices that can be exploited through the life of a project, starting with its inception when only a hand full of developers are contributing to the project and the mechanism we have put in place in order to allow the natural expansion of the model. © 2013 IEEE.},
  Art_number               = {6615094},
  Author_keywords          = {agile development method; computational software development; software engineering; test driven development},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/SECSE.2013.6615094},
  ISBN                     = {9781467362610},
  Journal                  = {2013 5th International Workshop on Software Engineering for Computational Science and Engineering, SE-CSE 2013 - Proceedings},
  Keywords                 = {Agile development methods; Collaborative model; Computational software; Large-scale software projects; Laser induced incandescence; Modeling environments; Scientific softwares; Test driven development, Application programs, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84886666071&doi=10.1109%2fSECSE.2013.6615094&partnerID=40&md5=ef7bc1afd4953666af2f4f3c154509a5}
}

@Article{Napolitano2013,
  Title                    = {Bioinformatic pipelines in Python with Leaf},
  Author                   = {Napolitano, F. and Mariani-Costantini, R. and Tagliaferri, R.},
  Journal                  = {BMC Bioinformatics},
  Year                     = {2013},
  Note                     = {cited By 4},
  Number                   = {1},
  Volume                   = {14},

  Abstract                 = {Background: An incremental, loosely planned development approach is often used in bioinformatic studies when dealing with custom data analysis in a rapidly changing environment. Unfortunately, the lack of a rigorous software structuring can undermine the maintainability, communicability and replicability of the process. To ameliorate this problem we propose the Leaf system, the aim of which is to seamlessly introduce the pipeline formality on top of a dynamical development process with minimum overhead for the programmer, thus providing a simple layer of software structuring.Results: Leaf includes a formal language for the definition of pipelines with code that can be transparently inserted into the user's Python code. Its syntax is designed to visually highlight dependencies in the pipeline structure it defines. While encouraging the developer to think in terms of bioinformatic pipelines, Leaf supports a number of automated features including data and session persistence, consistency checks between steps of the analysis, processing optimization and publication of the analytic protocol in the form of a hypertext.Conclusions: Leaf offers a powerful balance between plan-driven and change-driven development environments in the design, management and communication of bioinformatic pipelines. Its unique features make it a valuable alternative to other related tools. © 2013 Napolitano et al; licensee BioMed Central Ltd.},
  Art_number               = {201},
  Author_keywords          = {Bioinformatic pipelines; Data analysis; Python},
  Coden                    = {BBMIC},
  Document_type            = {Article},
  Doi                      = {10.1186/1471-2105-14-201},
  ISSN                     = {14712105},
  Keywords                 = {Automated features; Changing environment; Consistency checks; Development approach; Development environment; Development process; Processing optimizations; Python, Computer software; Data reduction; Formal languages; High level languages; Pipeline codes; Pipelines, Bioinformatics, article; biology; computer program; copy number variation; methodology; biology; procedures, Computational Biology; DNA Copy Number Variations; Software, Computational Biology; DNA Copy Number Variations; Software},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84879068611&doi=10.1186%2f1471-2105-14-201&partnerID=40&md5=6b3c5264fbe35244e1a6e4b7d021665a}
}

@Conference{Nawahdah201632,
  Title                    = {Investigating students' behavior and code quality when applying pair-programming as a teaching technique in a Middle Eastern society},
  Author                   = {Nawahdah, M. and Taji, D.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {32-39},
  Publisher                = {IEEE Computer Society},
  Volume                   = {10-13-April-2016},

  Abstract                 = {Pair-programming is a software development technique that was introduced as part of Extreme Programming. In pair-programming, two developers share a computer to work together on developing one piece of code. To test Pair-programming effects on students' behavior and performance in a Middle Eastern society where some interaction restrictions are found, we devised an experiment that was carried out over an entire academic year consists of two semesters. The experiment targeted two sections per semester of an advanced computer programming course. The students of one of the sections worked in pairs during the lab sessions, applying pair-programming rules and techniques. The other section had students who worked individually, as it is the norm in most programming labs. Video recordings were recorded throughout the lab sessions, and then studied and analyzed. In addition, code samples were collected from the students to study the effect of pair-programming on the students' code quality. Through this experiment we found out that pair-programming has the potential to increase the students' confidence, their enjoyment of the course, and improved the course's completion rate. In addition, the students in the pair-programming sections showed that they were able to individually produce code of better quality than the students in the traditional section. © 2016 IEEE.},
  Art_number               = {7474527},
  Author_keywords          = {Behavior Analysis; Computer Supported Collaborative Learning; Computing Education; Pair-programming; Teaching/Learning Methodologies},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/EDUCON.2016.7474527},
  ISBN                     = {9781467386333},
  ISSN                     = {21659559},
  Journal                  = {IEEE Global Engineering Education Conference, EDUCON},
  Keywords                 = {Codes (symbols); Computer programming; Education; Engineering education; Software design; Teaching; Video recording, Behavior analysis; Computer Supported Collaborative Learning; Computing education; Pair-programming; Teaching/learning, Students},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84994574790&doi=10.1109%2fEDUCON.2016.7474527&partnerID=40&md5=d8668a91df5cac18eca063575a3a39d8}
}

@Article{Neogi2013221,
  Title                    = {Factors influencing software development process: A statistical outlook},
  Author                   = {Neogi, M.S. and Chakraborty, S. and Bhattacherjee, V.},
  Journal                  = {International Journal of Software Engineering and its Applications},
  Year                     = {2013},
  Note                     = {cited By 1},
  Number                   = {6},
  Pages                    = {221-236},
  Volume                   = {7},

  Abstract                 = {While dealing with students in solving their assignments and projects of software development we have experienced that students are ready to adopt agile process model because it is very close to their nature. It is assumed that certain concepts were already prevalent in student fraternity. The factors considered here are 'quality of code', 'preference of group work', 'regular interaction with teammate', 'responding to changes', 'early testing', and 'fast delivery of working software'. Presence of linear relationship, if any, was tested by testing the significance of correlation coefficient r using t-test while non-linearity was tested by testing the significance of correlation ratio (ν) using F-test. The overall results show that there is strong non-linear relationship among the factors. © 2013 SERSC.},
  Author_keywords          = {Agile; Correlation-ratio; F-test; Relationship; T-test},
  Document_type            = {Article},
  Doi                      = {10.14257/ijseia.2013.7.6.19},
  ISSN                     = {17389984},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84891755752&doi=10.14257%2fijseia.2013.7.6.19&partnerID=40&md5=5beeac5455ca8432444fc7a858134cbf}
}

@Conference{Netto2013575,
  Title                    = {Software bundling selection for Cloud virtual machine images},
  Author                   = {Netto, M.A.S. and Assuncao, M.D. and Renganarayana, L. and Young, C.},
  Year                     = {2013},
  Note                     = {cited By 0},
  Pages                    = {575-581},

  Abstract                 = {Organisations and end-users are increasingly using Cloud resources to take advantage of the anticipated benefits of a more cost effective and agile IT infrastructure. Virtual machines are provisioned based on a selection of available images, which often contain the operating system and the software stack required by applications. When managing an image library, some of the challenges faced by a resource provider include (i) identifying the optimal number of virtual machine images that satisfy most user requirements, and (ii) bundling software systems into images to minimise the time to provision virtual machines and ease the selection of images from an end-user's perspective. Using a traditional data centre workload, this paper proposes an algorithm for selecting software bundles for virtual machine images and examines the impact of bundle selection on the number and characteristics of resulting images. The main finding is that creating a small set of virtual machine images packed with the most popular software systems is enough to drastically reduce the time to deploy the software stack required by applications, and hence minimise the time for provisioning virtual servers in a Cloud infrastructure. © 2013 IFIP.},
  Art_number               = {6573035},
  Document_type            = {Conference Paper},
  ISBN                     = {9783901882517},
  Journal                  = {Proceedings of the 2013 IFIP/IEEE International Symposium on Integrated Network Management, IM 2013},
  Keywords                 = {Cloud infrastructures; IT infrastructures; Resource providers; Software stacks; Software systems; User requirements; Virtual machines; Virtual servers, Application programs; Network management, Computer simulation},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84883475491&partnerID=40&md5=d7083ae8248aa7574327fec65a2982ad}
}

@Book{Ng201685,
  Title                    = {Rapid agile transformation at a large IT organization},
  Author                   = {Ng, P.-W.},
  Publisher                = {IGI Global},
  Year                     = {2016},
  Note                     = {cited By 0},

  Abstract                 = {This chapter describes the agile transformation of an IT organization in China with about 4000 people including contractors. In the span of one year, 47 teams and 1700 engineers moved from traditional to agile way of working. There was a 44% reduction in development lead-time, 5% reduction in production defects and 22% reduction in production incidents. This agile transformation occurred at two levels. At the organization level, adoption speed was crucial, as we wanted to reach critical mass in rapid time with limited coaching resources. This was very much an entrepreneur startup problem, where customers in our case are teams and members in the IT organization. At the team level, a practice architecture provided a roadmap for continuous improvement. A theory-based-software-engineering approach facilitated deeper learning. Beyond the usual factors for leading successful change, this transformation exemplified the use of a startup mentality, social networks, practice architecture, simulation, gamification, and more importantly integrating theory and practice. © 2016 by IGI Global. All rights reserved.},
  Document_type            = {Book Chapter},
  Doi                      = {10.4018/978-1-4666-9858-1.ch005},
  ISBN                     = {9781466698598; 1466698586; 9781466698581},
  Journal                  = {Emerging Innovations in Agile Software Development},
  Pages                    = {85-102},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84981501992&doi=10.4018%2f978-1-4666-9858-1.ch005&partnerID=40&md5=5e896d2e3a4041e50506d36d22e3d5e6}
}

@Conference{Ng201413,
  Title                    = {Theory based software engineering with the SEMAT kernel: Preliminary investigation and experiences},
  Author                   = {Ng, P.-W.},
  Year                     = {2014},
  Note                     = {cited By 3},
  Pages                    = {13-20},
  Publisher                = {Association for Computing Machinery, Inc},

  Abstract                 = {This paper proposes an approach towards Theory Based Software Engineering (TBSE) that makes use of Essence as an underlying foundation. This proposed TBSE approach originated from our engagement to help transform a 4000 person IT organization from traditional development towards lean and agile development. Central to TBSE is describing the context of a software engineering endeavors through architecture views, and contextualizing general theories of software engineering into specific ones to recommend theoretically sound practices for process improvement. These practices create changes in existing software engineering endeavors, the results of which are used to validate and tune the specific theories. This in turn provides feedback to the general theories. The value of Essence comes by providing a structure for analyzing and organizing the context and factors of software engineering endeavors from different dimensions, namely: Stakeholders, Opportunity, Requirements, Software System, Work, Team and Way of Working. To demonstrate the viability of our proposed approach, this paper exemplifies TBSE on the Stakeholders' dimension.},
  Author_keywords          = {Agile; Alpha; Architecture view; Essence; Method; Process; SEMAT; Software engineering; Software process lines; Stakeholder engagement; Takeholders; Theory},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2593752.2593756},
  ISBN                     = {9781450328500},
  Journal                  = {3rd SEMAT Workshop on General Theories of Software Engineering, GTSE 2014 - Proceedings},
  Keywords                 = {Processing, Agile; Alpha; Architecture view; Essence; Method; SEMAT; Software process; Stakeholder engagement; Takeholders; Theory, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84942428978&doi=10.1145%2f2593752.2593756&partnerID=40&md5=e4b44bfdd8a3e797c46f8cb4bcc93809}
}

@Conference{Nidagundi201697,
  Title                    = {Introducing Lean Canvas Model Adaptation in the Scrum Software Testing},
  Author                   = {Nidagundi, P. and Novickis, L.},
  Year                     = {2016},
  Editor                   = {Ginters E., Kohlhammer J.},
  Note                     = {cited By 1},
  Pages                    = {97-103},
  Publisher                = {Elsevier B.V.},
  Volume                   = {104},

  Abstract                 = {Agile software development and software testing brought new ideas and tools in the software development industry. Day to day more and more companies are adopting an agile approach in their software development process. Scrum is a one of the agile software development mythologies. Software is developed in the iterative and incremental way and scrum provides a framework for managing the process. A software tester plays the key team member role in the scrum software development process also software tester faces key changes such as time limit to test planning, changing requirements and testing everything in sprints, changing requirements, regression testing, test automation planning and integration testing. Nowadays scrum software development adopted many tools in the framework of development, software testing as well as test planning. In recent years planning and validation purpose lean canvas are used in business and this research paper is focused on possibilities of finding the lean canvas model adaptation in scrum software testing. © 2017 The Authors.},
  Author_keywords          = {Agile software testing; Lean canvas for software testing; Scrum software testing; Software validation},
  Document_type            = {Conference Paper},
  Doi                      = {10.1016/j.procs.2017.01.078},
  ISSN                     = {18770509},
  Journal                  = {Procedia Computer Science},
  Keywords                 = {Integration testing; Software design; Software engineering, Agile approaches; Agile software development; Model Adaptation; Regression testing; Research papers; Software development process; Software validation; Test Automation, Software testing},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85016050149&doi=10.1016%2fj.procs.2017.01.078&partnerID=40&md5=c25d2bcc8ffa9a0a790f069d2df88583}
}

@Article{Nidagundi2017349,
  Title                    = {Towards utilization of a lean canvas in the testing extra-functional properties},
  Author                   = {Nidagundi, P. and Novickis, L.},
  Journal                  = {Advances in Intelligent Systems and Computing},
  Year                     = {2017},
  Note                     = {cited By 0},
  Pages                    = {349-354},
  Volume                   = {575},

  Abstract                 = {Everyday software usage is increasing with technological advancements and the deep integration of technology and human life. Moreover, software dependency also increases from day-to-day task to do it in an easy way. In a recent year software development has seen high growth in a number of tools and technology for building better software for end users. Software development adopted different approaches such as waterfall, prototyping, incremental development, iterative, spiral development, rapid application development, lightweight methodologies and other to develop software and at the same time software testing also needs to be done in the scope of time and budget. Software needs to be well tested in main functional and extra-functional properties requirements point of view. In software life cycle at some point it is important to consider the testing extra functional properties before delivering the software application to end user. It is important to create a basic level of checklist for the testing extra-functional properties to make sure the software is delivered error free. In testing, it is noticed that it is difficult to make test strategy, design tests cases in all possible way for the testing extra-functional properties. In such a scenario, the utilization of lean canvas to identify and use all testing extra-functional properties can make test planning and test design easier. It also helps to track and manage an individual tester’s or test team’s all possible testing extra-functional properties on one page. In business many years the lean canvas used only in business planning and strategy building, but well optimized lean principle adopted lean canvas board can bring many benefits for the testing extra-functional properties. © Springer International Publishing AG 2017.},
  Author_keywords          = {Software quality assurance; Software testing; Testing extra-functional properties},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-57141-6_38},
  Editor                   = {Silhavy R., Senkerik R., Kominkova Oplatkova Z., Prokopova Z., Silhavy S.},
  ISBN                     = {9783319571409},
  ISSN                     = {21945357},
  Keywords                 = {Application programs; Budget control; Computer software; Computer software selection and evaluation; Intelligent systems; Iterative methods; Planning; Quality assurance; Software design; Software engineering; Software prototyping, Extra-functional properties; Incremental development; Rapid application development; Software applications; Software dependencies; Software quality assurance; Technological advancement; Tools and technologies, Software testing},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85018721783&doi=10.1007%2f978-3-319-57141-6_38&partnerID=40&md5=e977a865c5158870b833cf8044ec755c}
}

@Article{Niemi-Grundström2014481,
  Title                    = {Developing, evaluating and managing library with agile methods},
  Author                   = {Niemi-Grundström, M.},
  Journal                  = {Library Management},
  Year                     = {2014},
  Note                     = {cited By 2},
  Number                   = {6-7},
  Pages                    = {481-485},
  Volume                   = {35},

  Abstract                 = {Purpose - Agile methods often refer to software development methodology and practices used in software industry but the elements and principles of agile methods have been used also for operational development in various organizations. In general, the agile development process means an incremental work process that promotes the importance of customer satisfaction, collaboration, communication, teamwork, good quality and planned follow-up practices. The paper aims to discuss these issues. Design/methodology/approach - This paper first presents an overview of agile methods after which it addresses the most relevant ones for developing, evaluating and managing the academic library. The paper discusses the utilization of these methods in the context of an academic library presenting the case of Tampere University of Technology Library. Findings - After a short practical experience of implementing agility into development processes, the following elements of agility can be considered the most effective and relevant: appreciating the needs of the customers, eliminating the waste, quality assurance, ability to redesign and make decisions fast and empowering the team. Practical implications - The library of Tampere Univeristy of Technology made an early adoption of the methods in its development projects during 2012. The paper refers to concrete initiatives that have already been taken to improve development processes as well as discuss the challenges when applying agile methods in order to change quite traditional working culture. Originality/value - The paper discusses what the library can achieve by adapting a fresh approach for developing, evaluating and managing its operations and how the library staff can benefit from the agile way of working. © Emerald Group Publishing Limited.},
  Author_keywords          = {Customer satisfaction; Development methods; Management; Operational development; Quality; University libraries},
  Document_type            = {Article},
  Doi                      = {10.1108/LM-02-2014-0022},
  ISSN                     = {01435124},
  Publisher                = {Emerald Group Publishing Ltd.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84928108886&doi=10.1108%2fLM-02-2014-0022&partnerID=40&md5=b48f1cc6cdf1cc6e9ce369070cf38713}
}

@Article{Nila2013308,
  Title                    = {Deployment of knowledge management in a plm environment: A software integrator case study},
  Author                   = {Nila, S. and Segonds, F. and Maranzana, N. and Crepe, D.},
  Journal                  = {IFIP Advances in Information and Communication Technology},
  Year                     = {2013},
  Note                     = {cited By 0},
  Pages                    = {308-316},
  Volume                   = {409},

  Abstract                 = {The past years have seen growing investments in the area of PLM by several industries. In today’s industrial production, PLM is an essential tool to cope with the challenges of more demanding global competition and evershortening product lifecycles. Complex products require collaboration of large specialist networks. Knowledge Management (KM) can be apprehended in two manners: the defensive manner builds the stock of knowledge to face the departures of personnel, or, the offensive manner sees in the knowledge development an advisability to generate new products. The link between PLM and KM is interesting as it can help answering “on field” problems. In this paper we first make a state of the art of knowledge and KM in a PLM context. Then we propose a methodology to deploy KM in the particular case of a software integrator. Finally, we propose an experimental protocol that will allow us to improve a tool demonstrator in an agile way. © IFIP International Federation for Information Processing 2013.},
  Author_keywords          = {Knowledge Management; Methodology; PLM; Software integrator},
  Document_type            = {Conference Paper},
  Editor                   = {Bernard A., Dutta D., Rivest L.},
  ISBN                     = {9783642415005},
  ISSN                     = {18684238},
  Keywords                 = {Competition; Complex networks; Human resource management; Knowledge management, Experimental protocols; Global competition; Industrial production; Knowledge development; Methodology; PLM; Product life cycles; Software integrators, Life cycle},
  Publisher                = {Springer New York LLC},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84925047843&partnerID=40&md5=2084fb0f378fd41caf5fe11e4909256f}
}

@Conference{Nilsen2016,
  Title                    = {Going beyond "What should we do?": An approach to implementation of innovation and entrepreneurship in the curriculum},
  Author                   = {Nilsen, E. and Monroe-White, T. and Morrison, E.F. and Weilerstein, P.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Publisher                = {American Society for Engineering Education},
  Volume                   = {2016-June},

  Abstract                 = {In the engineering disciplines, "agile" approaches are most often associated with product development, particularly in the software arena. The approach is most useful for addressing challenges that are complex, require many people, and in which there is a high degree of uncertainty about the best approach.1 This set of conditions holds true far beyond product development. One such scenario is that of planning and implementation of organizational interventions - an environment in which "strategic planning" is often the tool of choice but one which is ineffective in a networked (rather than hierarchical) context. An alternative approach described in this paper is "strategic doing". As in agile product development, the approach uses iterative cycles of implementation, learning and reflection, and improvement, with a focus on rapid experimentation and gradual scaling up of solutions. While not designed for educational settings, the use of strategic doing in such environments is growing. Some recent examples include deployment at individual universities seeking to reform their curriculum, as a technique for students to better organize teams in classes like capstone design, the transformation of academic departments, and the formation of cross-disciplinary research teams to address "grand challenges." This paper describes the process and its application to engineering education, specifically in an effort to increase the range and quality of innovation and entrepreneurship offerings for undergraduate engineering students. © American Society for Engineering Education, 2016.},
  Document_type            = {Conference Paper},
  Journal                  = {ASEE Annual Conference and Exposition, Conference Proceedings},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84983341241&partnerID=40&md5=3f666e8769b0bc2256dd25e268c56383}
}

@Book{Nilsson201497,
  Title                    = {The CIViT model in a nutshell: Visualizing testing activities to support continuous integration},
  Author                   = {Nilsson, A. and Bosch, J. and Berger, C.},
  Publisher                = {Springer International Publishing},
  Year                     = {2014},
  Note                     = {cited By 0},

  Abstract                 = {Nowadays, innovations in many products ranging from customer electronics to high-end industry electric/electronic components are driven by software. Thus, new or extended features to software and mechatronic products can be realized and deployed to the market much faster. While the use of software enables an enormous flexibility, mastering the ever-growing complexity of the resulting products to meet the quality goals required for the market is getting more and more challenging. Continuous development combined with continuous testing is a successful method that actively incorporates the customer to get feedback for the feature to be deployed early, and thus, product owners, developers, and testers can collaborate more effectively to meet the market's needs. From literature, setting up such an agile development process is clear; the individual situation in terms of organization, processes, and development and test tooling however is depending on the company-many of the aforementioned aspects have grown over the years and cannot be easily changed. In this article, we present the CIViT model, which allows companies to get an explicit understanding and overview of their current testing and integration activities. With CIViT's intuitive representation of the current status, companies are able to identify bottlenecks and derive actions points to evolve their processes, methods, and development and test tooling towards a more agile and continuous deployment-oriented organization. Thus, they will be able to develop, integrate, evaluate, and deploy new features faster to the end user, hence strengthening their own market position. © 2014 Springer International Publishing Switzerland. All rights reserved.},
  Document_type            = {Book Chapter},
  Doi                      = {10.1007/978-3-319-11283-1-8},
  ISBN                     = {9783319112831; 3319112821; 9783319112824},
  Journal                  = {Continuous software engineering},
  Pages                    = {97-106},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84930725363&doi=10.1007%2f978-3-319-11283-1-8&partnerID=40&md5=92b5d9c9856aea72e4ba33f4e124941d}
}

@Article{Nuottila201665,
  Title                    = {Challenges of adopting agile methods in a public organization},
  Author                   = {Nuottila, J. and Aaltonen, K. and Kujala, J.},
  Journal                  = {International Journal of Information Systems and Project Management},
  Year                     = {2016},
  Note                     = {cited By 0},
  Number                   = {3},
  Pages                    = {65-85},
  Volume                   = {4},

  Abstract                 = {Agile development methods are widely used among business enterprises. Since the introduction of the Agile Manifesto in 2001, several agile methods have been implemented, first in single-team set-ups and later in larger multi-team set-ups for complex Information Technology (IT) system development. However, the adoption of agile methods has been slow in the public sector. This is also reflected in the academic literature, as there are only a few studies discussing agile adoption in public organizations. This paper contributes to research on the use of agile practices specifically in the context of public organizations, and sheds light on the challenges a public organization may face while adopting these practices. The aim of this paper is to identify and categorize the challenges that may hinder efficient adoption and use of agile methods in public IT projects that include private software vendors. This research is based on a case study of a large governmental office. As a result, this paper presents several categories of identified challenges, the root causes of these challenges, and a discussion of the characteristics of these challenges for the public sector. © 2016, SciKA.},
  Author_keywords          = {Adoption of agile methods; Agile barriers; Agile challenges; Agile methods; Agile project management; Software project management},
  Document_type            = {Article},
  Doi                      = {10.12821/ijispm040304},
  ISSN                     = {21827788},
  Publisher                = {SciKA},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84992724049&doi=10.12821%2fijispm040304&partnerID=40&md5=9c4e876cf54874ec5bb60a68a950d85e}
}

@Conference{Nurdiani2014132,
  Title                    = {Towards understanding how to build strategic flexibility of an IT organization},
  Author                   = {Nurdiani, I. and Fricker, S.A. and Börstler, J.},
  Year                     = {2014},
  Note                     = {cited By 0},
  Pages                    = {132-139},
  Publisher                = {Acta Press},

  Abstract                 = {IT organizations need to react to changes in the business, the domain (e.g., regulatory issues), and the technological development. While some of these changes can be handled by adopting agile practices, others might have large, irreversible effects on the organization as a whole. While flexibility and agility have found their way into software project methodologies, IT organizations struggle with their adaptation at the organizational level. This paper presents preliminary results of a grounded-theory study aimed at understanding how experienced managers handle flexibility. The results are a rich empirical source for improving flexibility of an IT organization at the strategic level and also a good starting point for further research towards generalizing agile ideas beyond software projects.},
  Author_keywords          = {Change; Grounded theory; IT organization; Software methodologies; Strategic flexibility},
  Document_type            = {Conference Paper},
  Doi                      = {10.2316/P.2014.810-018},
  Journal                  = {Proceedings of the IASTED International Conference on Software Engineering, SE 2014},
  Keywords                 = {Engineering; Industrial engineering, Change; Grounded theory; IT organizations; Software methodologies; Strategic flexibility, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84898466072&doi=10.2316%2fP.2014.810-018&partnerID=40&md5=dadfd50e7b2e66405dffee77447ed79c}
}

@Article{deO.Melo2013523,
  Title                    = {The evolution of agile software development in Brazil: Education, research, and the state-of-the-practice},
  Author                   = {de O. Melo, C. and Santos, V. and Katayama, E. and Corbucci, H. and Prikladnicki, R. and Goldman, A. and Kon, F.},
  Journal                  = {Journal of the Brazilian Computer Society},
  Year                     = {2013},
  Note                     = {cited By 9},
  Number                   = {4},
  Pages                    = {523-552},
  Volume                   = {19},

  Abstract                 = {Agile software development methods have been increasingly adopted worldwide and became one of the mainstream software development approaches. Agile methods have also had an impact on software engineering education with universities adapting their courses to accommodate this new form of software development. Software engineering research has tried to evaluate the impact of agile methods in industrial projects and discover in which situations it is beneficial to apply such methods. However, there are almost no studies focusing on the progress of the agile movement in Brazil. In this paper, we present an overview of the evolution of the agile movement in Brazil, outlining the history of its first advocates in academia and industry. We describe existing educational initiatives, discuss the impact of the agile development on the national research, and present a report on the agile state-of-the-practice in the Brazilian IT industry. © 2013 The Brazilian Computer Society.},
  Author_keywords          = {Agile educational initiatives; Agile software development; Brazilian agile research; Brazilian agile state-of-the-practice; History of computing; Object-oriented programming},
  Document_type            = {Article},
  Doi                      = {10.1007/s13173-013-0114-x},
  ISSN                     = {01046500},
  Keywords                 = {Agile development; Agile educational initiatives; Agile movement; Agile software development; Brazilian agile state-of-the-practice; History of computing; Industrial projects; Software development approach, Education; Industry; Object oriented programming; Software design, Industrial research},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893080615&doi=10.1007%2fs13173-013-0114-x&partnerID=40&md5=5fafd27d8b95f30b61475531849f47ba}
}

@Article{O'Neill20164,
  Title                    = {The way forward: A strategy for harmonizing agile and CMMI},
  Author                   = {O'Neill, D.},
  Journal                  = {CrossTalk},
  Year                     = {2016},
  Note                     = {cited By 1},
  Number                   = {4},
  Pages                    = {4-9},
  Volume                   = {29},

  Abstract                 = {Such is the case with Agile and CMMI, two paradigms that appear to be diametrically opposite [1] ⋯ or are they perhaps coexistent or even mutually reinforcing [8]? To what extent is Agile or CMMI at the tipping point and why? On the LinkedIn blogs, the advocates of Agile or CMMI so vigorously reject the alternative explanations of the other camp that sensible discussion of coexistence of the methods seems beyond the tipping point⋯ until now. A new way of thinking put forth by Ivar Jacobson in the Software Engineering Methods and Technology (SEMAT) and the Essence Kernel [4] may supply the key to this puzzle. The purpose in preparing this paper is to demonstrate in practice the way of thinking of SEMAT and its Essence Kernel and its utility in framing the harmonization issues between two disparate approaches, the Agile method and the CMMI framework. Underlying the opportunity value proposition, expanding and accelerating the dissemination and adoption of SEMAT and its Essence Kernel will be accomplished by systematically demonstrating its application to the audience and user base of the leading frameworks and methods, thereby, engaging and involving these new audiences in SEMAT and its Essence Kernel, its way of thinking, and its way of working⋯ and yielding new converts. The largest audiences among the leading frameworks and methods are Agile and the CMMI. And so we start there with A Strategy for Harmonizing Agile and CMMI Tensions. The issue is whether Agile and CMMI harmonization is a done deal or whether Agile and CMMI harmonization is a work in progress with the heavy lifting yet to be committed to and undertaken. Let's begin.},
  Document_type            = {Article},
  Keywords                 = {Software engineering, Agile methods; ITS applications; LinkedIn; Software engineering methods; Tipping point; Value proposition; Work in progress, Social networking (online)},
  Publisher                = {U.S. Department of Defense},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84989822558&partnerID=40&md5=a38cddf0e2bea1096dff2df28ed5193e}
}

@Article{Ogawa2016,
  Title                    = {Agile development of JR east app designed to enhance customer service quality},
  Author                   = {Ogawa, T. and Matsumoto, T.},
  Journal                  = {NTT Technical Review},
  Year                     = {2016},
  Note                     = {cited By 1},
  Number                   = {7},
  Volume                   = {14},

  Abstract                 = {East Japan Railway Company (JR East) is a leader in the country's railway industry and provides passenger railway services in the Kanto, Koshinetsu, and Tohoku regions. It is also engaged in a wide variety of related business activities. In March 2014, as part of the initiative to utilize information and communication technology included in its New Management Vision formulated in 2012, JR East released JR East App, its official smartphone application. This article gives an overview of that application and describes the agile development adopted by NTT Software in creating it.},
  Author_keywords          = {Agile development; Smartphone application; Transportation operation status},
  Document_type            = {Review},
  ISSN                     = {13483447},
  Keywords                 = {Application programs; Railroads; Signal encoding; Smartphones; Transportation, Agile development; Business activities; Customer services; Information and Communication Technologies; Railway industry; Railway services; Smart-phone applications; Transportation operations, Railroad transportation},
  Publisher                = {Nippon Telegraph and Telephone Corp.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84979918641&partnerID=40&md5=ab6de440358223f8ce27a5d09bb230e9}
}

@Article{Oliveira2016422,
  Title                    = {Is scrum useful to mitigate project’s risks in real business contexts?},
  Author                   = {Oliveira, J. and Vinhas, M. and Da Costa, F. and Nogueira, M. and Ribeiro, P. and Machado, R.J.},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {422-437},
  Volume                   = {9790},

  Abstract                 = {This work aims to determine the impact of the agile methodologies usage in software development, in particular, the usefulness and impact of the adoption of Scrum in a real business scenario. The aim is thus whether the adoption and implementation of this methodology, has contributed, and to what extent, for the mitigation of the risk management of software project and for the quality of the software. In order to be possible this study was carried out an investigation, which was distributed internationally, via discussion groups of professionals, followers and supporters of this methodology. Some of the issues explored were: the impact on elicitation of requirements; communication between team’s members and the result of the development - the product. The aim is to also check if the function, role or the culture of the element is an influential factor in your opinion and attitude towards this methodology. © Springer International Publishing Switzerland 2016.},
  Author_keywords          = {Project management; Project monitoring; Risk; Scrum; Software; Utility},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-42092-9_33},
  Editor                   = {Misra S., Gervasi O., Torre C.M., Taniar D., Stankova E., Rocha A.M.A.C., Wang S., Murgante B., Apduhan B.O.},
  ISBN                     = {9783319420912},
  ISSN                     = {03029743},
  Keywords                 = {Computer software; Project management; Risk management; Risks; Software engineering; Utility programs, Agile Methodologies; Business contexts; Discussion Groups; Influential factors; Management of software projects; Project monitoring; Scrum; Utility, Software design},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84978219395&doi=10.1007%2f978-3-319-42092-9_33&partnerID=40&md5=f9c867e3e249920903557db82819ce92}
}

@Article{Olsson2014110,
  Title                    = {Methodological capabilities for emergent design},
  Author                   = {Olsson, C.M. and Eriksson, J.},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2014},
  Note                     = {cited By 0},
  Number                   = {PART 1},
  Pages                    = {110-121},
  Volume                   = {8510 LNCS},

  Abstract                 = {In this paper we revisit emergent design and review five design oriented methodologies; action research, design research, controlled experiments, participatory design and ethnographic based approaches. Based on this review, we outline implications for the use of these methodologies in conjunction with an emergent design stance. Adopting such a stance is in line with both the exploratory way in which users embrace technology and the strong acceptance that agile software development approaches have had. It is therefore, we argue, appropriate that our research methodologies are adapted to embrace this change. © 2014 Springer International Publishing.},
  Author_keywords          = {abduction; Emergent design; methodological review; opportunism},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-07233-3_11},
  ISBN                     = {9783319072326},
  ISSN                     = {03029743},
  Keywords                 = {Human computer interaction; Research; Software engineering, abduction; Agile software development; Controlled experiment; Design research; Emergent design; opportunism; Participatory design; Research methodologies, Design},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84903158166&doi=10.1007%2f978-3-319-07233-3_11&partnerID=40&md5=0c7916bc2a7e92604ffeb7ef80a55d01}
}

@Book{Olsson201415,
  Title                    = {Climbing the stairway to heaven: Evolving from agile development to continuous deployment of software},
  Author                   = {Olsson, H.H. and Bosch, J.},
  Publisher                = {Springer International Publishing},
  Year                     = {2014},
  Note                     = {cited By 3},

  Abstract                 = {Software-intensive systems companies need to evolve their practices continuously in response to competitive pressures. Based on a conceptual model presented as the Stairway to Heaven, we present the transition process when moving from traditional development towards continuous deployment of software. Our research confirms that the transition towards agile development requires a careful introduction of agile practices into the organization, a shift to small development teams, and a focus on features rather than components. The transition towards continuous integration requires an automated test suite, a main branch to which code is continually delivered, and a modularized architecture. The move towards continuous deployment requires internal and external stakeholders to be fully involved and a proactive customer with whom to explore the concept. Finally, the transition towards R&D as an innovation system requires careful ecosystem management in order to align internal business strategies with the dynamics of a competitive business ecosystem. Characteristic for all transitions is the critical alignment of internal and external processes in order to fully maximize the benefits as provided by the business ecosystem of which a company is part. © 2014 Springer International Publishing Switzerland. All rights reserved.},
  Document_type            = {Book Chapter},
  Doi                      = {10.1007/978-3-319-11283-1-2},
  ISBN                     = {9783319112831; 3319112821; 9783319112824},
  Journal                  = {Continuous software engineering},
  Pages                    = {15-27},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84930702109&doi=10.1007%2f978-3-319-11283-1-2&partnerID=40&md5=a331e6fb34525725fe054f4933d255a1}
}

@Book{Olsson201483,
  Title                    = {Customer-specific teams for agile evolution of large-scale embedded systems},
  Author                   = {Olsson, H.H. and Sandberg, A.B. and Bosch, J.},
  Publisher                = {Springer International Publishing},
  Year                     = {2014},
  Note                     = {cited By 0},

  Abstract                 = {Companies serving multiple customers or a segmented mass market often struggle with two conflicting forces. On the one hand, companies need to deploy a constant stream of new features to their customer base. On the other hand, individual customers demand rapid feedback to their request for dedicated functionality. Although the conflict of achieving scale and at the same time staying responsive to individual customers has been recognized by others, it is particularly challenging in large-scale software development. In this paper, we study the concept of customer-specific teams (CSTs) as an answer to this challenge. The CST notion builds upon agile values and is an effective means to shorten feedback loops and increase customer responsiveness, customer satisfaction, and feature quality. Also, the approach allows for more innovative feature development bringing with it new business opportunities in a market where competition is fierce. We illustrate and validate the approach in the context of one of the business units of Ericsson. © 2014 Springer International Publishing Switzerland. All rights reserved.},
  Document_type            = {Book Chapter},
  Doi                      = {10.1007/978-3-319-11283-1-7},
  ISBN                     = {9783319112831; 3319112821; 9783319112824},
  Journal                  = {Continuous software engineering},
  Pages                    = {83-93},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84930719949&doi=10.1007%2f978-3-319-11283-1-7&partnerID=40&md5=8cd5749ec0c0a05bc1fdd91db74292fd}
}

@Article{Olszewska2016258,
  Title                    = {Quantitatively measuring a large-scale agile transformation},
  Author                   = {Olszewska, M. and Heidenberg, J. and Weijola, M. and Mikkonen, K. and Porres, I.},
  Journal                  = {Journal of Systems and Software},
  Year                     = {2016},
  Note                     = {cited By 1},
  Pages                    = {258-273},
  Volume                   = {117},

  Abstract                 = {Context: Agile software development continues to grow in popularity and is being adopted by more and more organizations. However, there is a need for empirical evidence on the impact, benefits and drawbacks of an agile transformation in an organization since the cost for such a transformation in terms of money, disrupted working routines and quality of development can become considerable. Currently, such evidence exists in the form of success stores and case studies, mostly of qualitative nature. Objective: Provide a metrics model to quantitatively measure the impact of an agile transformation in a software development organization. Method: The metrics model was elicited with the use of the Goal Question Metric approach. Results: A quantitative metrics model containing eight rigorously described metrics is presented and followed by its application to evaluate an agile and lean transformation in a large international telecommunication organization with 350 employees in two sites. Conclusions: The metrics model was sensitive to the changes that occurred in the organization and revealed significant improvements in six of the eight metrics and a deterioration in one of the metrics. © 2016 Elsevier Inc. All rights reserved.},
  Author_keywords          = {Agile; Metrics; Transformation},
  Coden                    = {JSSOD},
  Document_type            = {Article},
  Doi                      = {10.1016/j.jss.2016.03.029},
  ISSN                     = {01641212},
  Keywords                 = {Software design, Agile; Agile software development; Agile transformations; Goal-question-metric approach; International telecommunications; Metrics; Software development organizations; Transformation, Software engineering},
  Publisher                = {Elsevier Inc.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84962802381&doi=10.1016%2fj.jss.2016.03.029&partnerID=40&md5=7ce0a731114ca82dc2f10b7ea05803b7}
}

@Conference{Opala2013165,
  Title                    = {An exploratory analysis of the influence of information security on the adoption of cloud computing},
  Author                   = {Opala, O.J. and Rahman, S.M.},
  Year                     = {2013},
  Note                     = {cited By 3},
  Pages                    = {165-170},

  Abstract                 = {Cloud computing is the current IT buzzword synonymous with outsourced data center management and agile solution architecture. It has the potential to improve scalability of large enterprise network delivery of services and the capability to revolutionize how data is delivered as a service. At its core, cloud computing is not a new technology but rather a new approach of distributed shared pooling of IT infrastructure linked together to offer centralized IT services on demand. The study results determined that management's perception of security, cost-effectiveness and IT compliance factors significantly influence their decisions to adopt cloud computing. The results of multiple linear regression analysis testing in this study showed that management's perception of cost-effectiveness is more significantly correlated to their decision to adopt cloud computing than security. © 2013 IEEE.},
  Art_number               = {6575261},
  Author_keywords          = {cloud security and cloud compliance; Distributed computing; infrastructure-as-a-service; software-as-a-service},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/SYSoSE.2013.6575261},
  ISBN                     = {9781467355971},
  Journal                  = {Proceedings of 2013 8th International Conference on System of Systems Engineering: SoSE in Cloud Computing and Emerging Information Technology Applications, SoSE 2013},
  Keywords                 = {Cloud securities; Exploratory analysis; infrastructure-as-a-service; IT infrastructures; Large enterprise; Multiple linear regression analysis; Outsourced datum; Software-as-a-Service, Cloud computing; Cost effectiveness; Decision making; Distributed computer systems; Information technology; Linear regression; Security of data; Systems engineering, Information management},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84883261691&doi=10.1109%2fSYSoSE.2013.6575261&partnerID=40&md5=aa940a9ddb7591bfc413caf3c6c30dca}
}

@Article{Orehovački2013149,
  Title                    = {Examining the quality in use of web 2.0 applications: A three-dimensional framework},
  Author                   = {Orehovački, T. and Kermek, D. and Granić, A.},
  Journal                  = {Communications in Computer and Information Science},
  Year                     = {2013},
  Note                     = {cited By 0},
  Number                   = {PART I},
  Pages                    = {149-153},
  Volume                   = {373},

  Abstract                 = {Quality in use plays an essential role in a wide acceptance of software applications. It includes two complementary concepts: usability and user experience. With an aim to assure the quality in use of websites, researchers have proposed various metrics, but without guidelines for their use. Additionally, research on this topic in the context of Web 2.0 applications is fairly modest. In this paper, we introduce a framework composed of three dimensions related to categories of the quality in use, functions of Web 2.0 applications, and agile software development methods. The proposed framework can be used for the classification of metrics as well as for a sound and systematic evaluation of the quality in use of Web 2.0 applications. © Springer-Verlag Berlin Heidelberg 2013.},
  Author_keywords          = {Evaluation framework; Quality in use; Web 2.0},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-642-39473-7_31},
  ISBN                     = {9783642394720},
  ISSN                     = {18650929},
  Keywords                 = {Application programs; Software engineering; World Wide Web, Agile software development; Evaluation framework; Quality in use; Software applications; Systematic evaluation; Three-dimensional frameworks; Web 2.0; Web 2.0 applications, Quality control},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84891500811&doi=10.1007%2f978-3-642-39473-7_31&partnerID=40&md5=44eb4b9315102862eb5a9f49450bdd40}
}

@Article{OsborneO'Hagan2014182,
  Title                    = {Software Development Processes for Games: A Systematic Literature Review},
  Author                   = {Osborne O'Hagan, A. and Coleman, G. and O'Connor, R.V.},
  Journal                  = {Communications in Computer and Information Science},
  Year                     = {2014},
  Note                     = {cited By 5},
  Pages                    = {182-193},
  Volume                   = {425},

  Abstract                 = {This paper describes the methodology and results from a Systematic Literature Review (SLR) of the software processes used in game development. A total of 404 papers were analyzed as part of the review and the various process models that are used in industry and academia/research are presented. Software Process Improvement (SPI) initiatives for game development are discussed. The factors that promote or deter the adoption of process models, and implementing SPI in practice are highlighted. Our findings indicate that there is no single model that serves as a best practice process model for game development and it is a matter of deciding which model is best suited for a particular game. Agile models such as Scrum and XP are suited to the knowledge intensive domain of game development where innovation and speed to market are vital. Hybrid approaches such as reuse can also be suitable for game development where the risk of the upfront investment in terms of time and cost is mitigated with a game that has stable requirements and a longer lifespan. © Springer-Verlag Berlin Heidelberg 2014.},
  Author_keywords          = {Game Development; Software Engineering; Software Process; Software Process Improvement (SPI); Systematic Literature Review (SLR)},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-662-43896-1_16},
  ISBN                     = {9783662438954},
  ISSN                     = {18650929},
  Keywords                 = {Computer science; Computers; Software engineering, Game development; Process Modeling; Software development process; Software process; Software process improvements; Speed-to-market; Systematic literature review; Systematic literature review (SLR), Software design},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84906536210&doi=10.1007%2f978-3-662-43896-1_16&partnerID=40&md5=e02fa77d8a059809639e3e0f9a47649a}
}

@Conference{Osmani201483,
  Title                    = {Choosing the most suitable model for developing a software},
  Author                   = {Osmani, S.L. and Arifi, G. and Idrizi, F.},
  Year                     = {2014},
  Note                     = {cited By 0},
  Pages                    = {83-88},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {There is a wide variety of models known that are used during the development of software. Each have its own strengths and weaknesses that based on the project team, availability of the resources, time and budget constraints, is suitable in different situations and types of projects. For choosing the most suitable model for software development the foremost thing is to know what kind of application we are developing, because this action determines the success or the failure of a project. In many cases the failure is the result of either not using a model at all or using the wrong model. This paper is dealing about different software process models by introducing and comparing three of them: waterfall, prototype and spiral model. It also indicates which one of them may be well-matched for use in various situations. © 2014 IEEE.},
  Art_number               = {7059149},
  Author_keywords          = {comparison of three model; most suitable model; Software development model},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/CICSyN.2014.30},
  ISBN                     = {9781479950768},
  Journal                  = {Proceedings - 6th International Conference on Computational Intelligence, Communication Systems and Networks, CICSyN 2014},
  Keywords                 = {Application programs; Artificial intelligence; Budget control; Software engineering, Budget constraint; Project team; Software development models; Software process models; Spiral models; Three models, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84988241380&doi=10.1109%2fCICSyN.2014.30&partnerID=40&md5=b6f237ae100db0c0be19c2a1cb5a9476}
}

@Article{Otaduy2016,
  Title                    = {User acceptance testing for Agile-developed web-based applications: Empowering customers through wikis and mind maps},
  Author                   = {Otaduy, I. and Diaz, O.},
  Journal                  = {Journal of Systems and Software},
  Year                     = {2016},
  Note                     = {cited By 0; Article in Press},

  Abstract                 = {User Acceptance Testing (UAT) involves validating software in a real setting by the intended audience. The aim is not so much to check the defined requirements but to ensure that the software satisfies the customer's needs. Agile methodologies put stringent demands on UAT, if only for the frequency at which it needs to be conducted due to the iterative development of small product releases. In this setting, traditional in-person meetings might not scale up well. Complementary ways are needed to reduce the costs of developer-customer collaboration during UAT. This work introduces a wiki-based approach where customers and developers asynchronously collaborate: developers set the UAT scaffolding that will later shepherd customers when testing. To facilitate understanding, mind maps are used to represent UAT sessions. To facilitate engagement, a popular mind map editor, FreeMind, is turned into an editor for FitNesse, the wiki engine in which these ideas are borne out. The approach is evaluated through a case study involving three real customers. First evaluations are promising. Though at different levels of completeness, the three customers were able to complete a UAT. Customers valued asynchronicity, mind map structuredness, and the transparent generation of documentation out of the UAT session. © 2017.},
  Author_keywords          = {Agile development; Test automation; User acceptance testing},
  Coden                    = {JSSOD},
  Document_type            = {Article in Press},
  Doi                      = {10.1016/j.jss.2017.01.002},
  ISSN                     = {01641212},
  Keywords                 = {Iterative methods; Sales; Scaffolds; Schematic diagrams; Software testing; Web services, Agile development; Agile Methodologies; Customer collaboration; Iterative development; Product release; Test Automation; User acceptance testing; Web-based applications, Acceptance tests},
  Publisher                = {Elsevier Inc.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85009477583&doi=10.1016%2fj.jss.2017.01.002&partnerID=40&md5=a3b5961af49a1917d3f85e30afc0d8c4}
}

@Conference{Oyetoyan2016548,
  Title                    = {An empirical study on the relationship between software security skills, usage and training needs in agile settings},
  Author                   = {Oyetoyan, T.D. and Cruzes, D.S. and Jaatun, M.G.},
  Year                     = {2016},
  Note                     = {cited By 1},
  Pages                    = {548-555},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Organizations recognize that protecting their assets against attacks is an important business. However, achieving what is adequate security requires taking bold steps to address security practices within the organization. In the Agile software development world, security engineering process is unacceptable as it runs counter to the agile values. Agile teams have thus approached software security activities in their own way. To improve security within agile settings requires that management understands the current practices of software security activities within their agile teams. In this study, we use survey to investigate software security usage, competence, and training needs in two agile organizations. We find that (1) The two organizations perform differently in core software security activities but are similar when activities that could be leveraged for security are considered (2) regardless of cost or benefit, skill drives the kind of activities that are performed (3) Secure design is expressed as the most important training need by all groups in both organizations (4) Effective software security adoption in agile setting is not automatic, it requires a driver. © 2016 IEEE.},
  Art_number               = {7784618},
  Author_keywords          = {Agile software development; Empirical study; Software security; Software security activities},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ARES.2016.103},
  ISBN                     = {9781509009909},
  Journal                  = {Proceedings - 2016 11th International Conference on Availability, Reliability and Security, ARES 2016},
  Keywords                 = {Human resource management; Security systems; Societies and institutions; Software engineering, Agile organizations; Agile software development; Current practices; Empirical studies; Secure designs; Security engineering; Security Practice; Software security, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85015274736&doi=10.1109%2fARES.2016.103&partnerID=40&md5=5ef64d37ced6fea3b573869ee3ac81d2}
}

@Article{Ozcan-Top2013130,
  Title                    = {Assessment of Agile Maturity Models: A Multiple Case Study},
  Author                   = {Ozcan-Top, O. and Demirörs, O.},
  Journal                  = {Communications in Computer and Information Science},
  Year                     = {2013},
  Note                     = {cited By 8},
  Pages                    = {130-141},
  Volume                   = {349 CCIS},

  Abstract                 = {Agile methods are welcomed by software community in recent years. The move from traditional methods to agile methods is not straightforward. Software organizations need assistance to achieve transition from traditional software development approaches to agile approaches and to improve their agile capability. During the last few years several agile maturity models/frameworks are developed to guide organizations in agile process improvement and agile adoption. In this study, we assess the strengths and weaknesses of agile maturity models/frameworks from agile process assessment and agile process improvement perspectives. To assess the models we have applied the models in a selected software organization. We discuss the strengths and weakness of each model and provide suggestions for their utilization. © Springer-Verlag Berlin Heidelberg 2013.},
  Author_keywords          = {Agile Assessment Models; Agile Maturity Frameworks; Agile Maturity Models; Agile Process Maturity},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-642-38833-0_12},
  ISBN                     = {9783642388323},
  ISSN                     = {18650929},
  Keywords                 = {Computer science; Computers, Agile assessments; Agile Maturity Frameworks; Agile process; Maturity model; Multiple-case study; Software community; Software development approach; Software organization, Software design},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904614192&doi=10.1007%2f978-3-642-38833-0_12&partnerID=40&md5=1f6ec73b6630e7451df765dace2aa0d4}
}

@Conference{Ozkan2016111,
  Title                    = {Risks, challenges and issues in a possible scrum and COBIT marriage},
  Author                   = {Ozkan, N.},
  Year                     = {2016},
  Editor                   = {Pasala A., Sun J., Reddy Y.R., Bahulkar A.},
  Note                     = {cited By 0},
  Pages                    = {111-118},
  Publisher                = {IEEE Computer Society},
  Volume                   = {2016-May},

  Abstract                 = {Today's turbulent business environment is compelling software development providers to face several challenges. As a response to this case, adoption of Scrum methods is increasing. COBIT, on the other side, has domination in information technology (IT) and is a de-facto standard providing an IT governance model with international set of generally accepted IT control objectives. Considered the coverage of SCRUM and COBIT (version 4.1 in this case), a coexistence of them in a same organization has a possibility of emergence for organizations that want to use SRCUM in their COBIT environments. While a rationalized, engineering-based approach has dominated software development almost since its inception and has a co-occurrence and similarities with COBIT, melting COBIT and Scrum in an organization is very new and can be an intriguing subject. This study holds the aim of shedding light on organizations by focusing on the identification of risks, challenges and issues of Scrum implementation within a COBIT environment. This study works as a risk map for organizations that have opportunity to tailor COBIT. It also exhibits a list of challenges for organizations that must fully comply with COBIT framework. © 2015 IEEE.},
  Art_number               = {7467290},
  Author_keywords          = {Agile; COBIT; Scrum; Software development},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/APSEC.2015.29},
  ISBN                     = {9781467396448},
  ISSN                     = {15301362},
  Journal                  = {Proceedings - Asia-Pacific Software Engineering Conference, APSEC},
  Keywords                 = {Maps; Societies and institutions; Software engineering, Agile; Business environments; COBIT; Control objectives; De facto standard; Identification of risks; Scrum; Shedding light, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84974717497&doi=10.1109%2fAPSEC.2015.29&partnerID=40&md5=5e760624e434b42aeffa52ec09e07b10}
}

@Article{Ozkaya201317,
  Title                    = {Architecting for large scale agile software development: A risk-driven approach},
  Author                   = {Ozkaya, I. and Gagliardi, M. and Nord, R.L.},
  Journal                  = {CrossTalk},
  Year                     = {2013},
  Note                     = {cited By 0},
  Number                   = {3},
  Pages                    = {17-22},
  Volume                   = {26},

  Abstract                 = {In this paper, we present lessons we learned while working with a large program, helping it to modernize its very large transaction-based system that operates 24x7, while adopting agile software development. We focus on two agile architecting methods we used that provide rapid feedback on the state of agile team support: architecture-centric risk factors for adoption of agile development at scale and incremental architecture evaluations.},
  Document_type            = {Article},
  Keywords                 = {Agile development; Agile software development; Agile teams; Architecture evaluation; Architecture-centric; Large programs; Rapid feedback; Risk factors, Feedback, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84880913739&partnerID=40&md5=3341d5126c8f3b9433e506e488dcff59}
}

@Article{Paasivaara20141556,
  Title                    = {Communities of practice in a large distributed agile software development organization - Case Ericsson},
  Author                   = {Paasivaara, M. and Lassenius, C.},
  Journal                  = {Information and Software Technology},
  Year                     = {2014},
  Note                     = {cited By 13},
  Number                   = {12},
  Pages                    = {1556-1577},
  Volume                   = {56},

  Abstract                 = {Context Communities of practice - groups of experts who share a common interest or topic and collectively want to deepen their knowledge - can be an important part of a successful lean and agile adoption in particular in large organizations. Objective In this paper, we present a study on how a large organization within Ericsson with 400 persons in 40 Scrum teams at three sites adopted the use of Communities of Practice (CoP) as part of their transformation from a traditional plan-driven organization to lean and agile. Methods We collected data by 52 semi-structured interviews on two sites, and longitudinal non-participant observation of the transformation during over 20 site visits over a period of two years. Results The organization had over 20 CoPs, gathering weekly, bi-weekly or on a need basis. CoPs had several purposes including knowledge sharing and learning, coordination, technical work, and organizational development. Examples of CoPs include Feature Coordination CoPs to coordinate between teams working on the same feature, a Coaching CoP to discuss agile implementation challenges and successes and to help lead the organizational continuous improvement, an end-to-end CoP to remove bottlenecks from the flow, and Developers CoPs to share good development practices. Success factors of well-functioning CoPs include having a good topic, passionate leader, proper agenda, decision making authority, open community, supporting tools, suitable rhythm, and cross-site participation when needed. Organizational support include creating a supportive atmosphere and providing a suitable infrastructure for CoPs. Conclusions In the case organization, CoPs were initially used to support the agile transformation, and as part of the distributed Scrum implementation. As the transformation progressed, the CoPs also took on the role of supporting continuous organizational improvements. CoPs became a central mechanism behind the success of the large-scale agile implementation in the case organization that helped mitigate some of the most pressing problems of the agile transformation. © 2014 The Authors. Published by Elsevier B.V.},
  Author_keywords          = {Communities of practice; Large-scale agile software development; Scaling agile},
  Coden                    = {ISOTE},
  Document_type            = {Article},
  Doi                      = {10.1016/j.infsof.2014.06.008},
  ISSN                     = {09505849},
  Keywords                 = {Human resource management; Knowledge acquisition; Metadata; Software design, Agile software development; Communities of Practice; Continuous improvements; Organizational development; Organizational improvement; Organizational support; Scaling agile; Semi structured interviews, Knowledge management},
  Publisher                = {Elsevier},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84906312680&doi=10.1016%2fj.infsof.2014.06.008&partnerID=40&md5=8871e976fe069485529a634f8dfa50c0}
}

@Article{Paasivaara201473,
  Title                    = {Supporting a large-scale lean and agile transformation by defining common values},
  Author                   = {Paasivaara, M. and Väättänen, O. and Hallikainen, M. and Lassenius, C.},
  Journal                  = {Lecture Notes in Business Information Processing},
  Year                     = {2014},
  Note                     = {cited By 2},
  Pages                    = {73-82},
  Volume                   = {199},

  Abstract                 = {This paper describes how a rapidly growing distributed product development organization at Ericsson used ”Value Workshops” to align the different sites and teams when adopting agile and lean software development. The workshops were held at two main sites, and involved people from four sites. During the workshops, the teams worked on common values: their interpretation and behavioral implications, using a tree metaphor. The workshops were viewed as very valuable in creating a common organizational identity, and it was considered important to continue the work and reinforce the values to make them drive behavior in daily work. © Springer International Publishing Switzerland 2014.},
  Author_keywords          = {Agile software development; Large-scale agile; Value workshop},
  Document_type            = {Article},
  ISSN                     = {18651348},
  Keywords                 = {Product development, Agile software development; Agile transformations; Distributed product development; Ericsson; Large-scale agile; Lean software development; Organizational identities; Value workshop, Software design},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84917708476&partnerID=40&md5=1e9541e09be2f2961423fd770ef9462e}
}

@Conference{Paliotta2015186,
  Title                    = {The quality of your code is the quality of your brand - And it's time to pay attention to software testing},
  Author                   = {Paliotta, J.},
  Year                     = {2015},
  Note                     = {cited By 1},
  Pages                    = {186-193},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},
  Volume                   = {2015-December},

  Abstract                 = {Competition in the automotive industry is intense, and successful companies must constantly innovate by introducing new technology to differentiate and improve their brands. As a result, today's vehicles have evolved from a mechanical device into an integrated machine with embedded software powering performance in all major systems including: engine control, power train, suspension, braking, and entertainment. Consider a few of these incredible statistics: today's vehicles have more computer processing power than NASA's early spacecraft. An "average modern high end car" has more lines of code than an F-35 Joint Strike Fighter. And finally, many automobiles actually have an addressable IP address. These technological improvements are driving brand success stories, as modern consumers' experiences are shaped more by the software than the hardware. A strong brand can create significant value in the automotive industry as a focus on integrated technology helps to drive brand loyalty and value. According to Interbrand's 15th annual Best Global Brands Report, the collective value of the automotive brands appearing on the Global Brands ranking increased 14.6 percent. Three out of the five "Top Risers" listed were from the automotive sector, making the 15th annual report a record-breaking one for the auto industry. However, statistics also show that more than 50 percent of auto recalls are now due to software bugs, not mechanical issues. With an industry average of 5-10 bugs per thousand lines of code, the errors can pile up fast. As automobiles evolve from mechanical to software devices, automakers must rethink fundamental product development principles, including moving from a sequential, compartmentalized design process to a more agile approach, with higher degrees of collaboration between self-directed, cross-functional teams. This paper will outline why software quality needs to be at the top of the list for automotive OEMs looking to preserve - and elevate - their brand status. For quality to improve, continuous integration and continuous software testing are a necessity. While software testing has traditionally been viewed as a development expense, we will explain that when developed properly, software tests are an asset similar to source code that should provide value over the entire product life cycle. Well-designed tests allow regressions to be caught prior to product release, and lead to a reduction in branch damage and costs associated with product recalls. © 2015 IEEE.},
  Art_number               = {7356487},
  Author_keywords          = {road vehicles; software quality testing; software reliability; software testing; vehicle safety},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/AUTEST.2015.7356487},
  ISBN                     = {9781479981892},
  Journal                  = {AUTOTESTCON (Proceedings)},
  Keywords                 = {Automobiles; Automotive industry; Braking performance; Codes (symbols); Competition; Computer software selection and evaluation; Embedded systems; Fighter aircraft; Integration testing; Life cycle; Magnetic levitation vehicles; Marketing; NASA; Piles; Product design; Program debugging; Safety testing; Software reliability; Vehicles, Computer processing power; Continuous integrations; F-35 Joint Strike Fighter; Integrated technologies; Road vehicles; Software Quality; Technological improvements; Vehicle safety, Software testing},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84959909648&doi=10.1109%2fAUTEST.2015.7356487&partnerID=40&md5=9e19029bbf4a6440c1fce6ef2e6b4354}
}

@Article{Palomino201757,
  Title                    = {Agile practices adoption in CMMI organizations: A systematic literature review},
  Author                   = {Palomino, M. and Dávila, A. and Melendez, K. and Pessoa, M.},
  Journal                  = {Advances in Intelligent Systems and Computing},
  Year                     = {2017},
  Note                     = {cited By 0},
  Pages                    = {57-67},
  Volume                   = {537},

  Abstract                 = {In the recent years, the adoption of agile frameworks and methodologies in Software Development Organizations (SDO) has grown up considerably. Unfortunately, there are scenarios where agile practices can’t cover alone all the needs; for instance, software projects with a large level of required formal documentation or large, complex software projects; similarly, this kind of situations happen frequently in a context of CMMI organizations. The aim of this study is identify and analyze the most used agile practices that are used in combination with CMMI within SDO. To accomplish this, a systematic literature review has been performed according to relevant guidelines. This study has identified practices related Daily Meeting and Product Backlog management from Scrum framework as most common agile practices used in combination with CMMI. In addition, we could identify that there are specific benefits of implementing practices from both approaches. © Springer International Publishing AG 2017.},
  Author_keywords          = {Agile practice; Agile software development; CMMI},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-48523-2_6},
  Editor                   = {Rocha A., Pena A., Mejia J., San Feliu T., Munoz M.},
  ISBN                     = {9783319485225},
  ISSN                     = {21945357},
  Keywords                 = {Application programs; Societies and institutions; Software engineering, Agile practices; Agile software development; CMMI; Complex software; Formal documentation; Software development organizations; Software project; Systematic literature review, Software design},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84992455483&doi=10.1007%2f978-3-319-48523-2_6&partnerID=40&md5=7f43864cdc9b20de5f259c7c30fb31ef}
}

@Conference{Panda2015772,
  Title                    = {Empirical Validation of Neural Network Models for Agile Software Effort Estimation based on Story Points},
  Author                   = {Panda, A. and Satapathy, S.M. and Rath, S.K.},
  Year                     = {2015},
  Editor                   = {Lobiyal D.K., Soni A.K.},
  Note                     = {cited By 0},
  Pages                    = {772-781},
  Publisher                = {Elsevier},
  Volume                   = {57},

  Abstract                 = {Now-a-days agile software development process has become famous in industries and substituting the traditional methods of software development. However, an accurate estimation of effort in this paradigm still remains a dispute in industries. Hence, the industry must be able to estimate the effort necessary for software development using agile methodology efficiently. For this, different techniques like expert opinion, analogy, disaggregation etc. are adopted by researchers and practitioners. But no proper mathematical model exists for this. The existing techniques are ad-hoc and are thus prone to be incorrect. One popular approach of calculating effort of agile projects mathematically is the Story Point Approach (SPA). In this study, an effort has been made to enhance the prediction accuracy of agile software effort estimation process using SPA. For doing this, different types of neural networks (General Regression Neural Network (GRNN), Probabilistic Neural Network (PNN), Group Method of Data Handling (GMDH) Polynomial Neural Network and Cascade-Correlation Neural Network) are used. Finally performance of the models generated using various neural networks are compared and analyzed. © 2015 The Authors. Published by Elsevier B.V.},
  Author_keywords          = {Agile Software Development; Cascade Correlation Neural Network; General Regression Neural Network; GMDH Polynomial Neural Network; Probabilistic Neural Network; Software Effort Estimation; Story Point Approach},
  Document_type            = {Conference Paper},
  Doi                      = {10.1016/j.procs.2015.07.474},
  ISSN                     = {18770509},
  Journal                  = {Procedia Computer Science},
  Keywords                 = {Data handling; Estimation; Neural networks; Software engineering, Agile software development; Cascade correlation neural networks; General regression neural network; Point approach; Polynomial neural networks; Probabilistic neural networks; Software effort estimation, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84944072308&doi=10.1016%2fj.procs.2015.07.474&partnerID=40&md5=5651577c48607bcfb5ed1266a76ff45e}
}

@Conference{Pandey2013227,
  Title                    = {Towards widespread SDN adoption: Need for synergy between photonics and SDN within the data center},
  Author                   = {Pandey, V.},
  Year                     = {2013},
  Note                     = {cited By 3},
  Pages                    = {227-228},

  Abstract                 = {This paper looks at the use of photonics in future data center networks and stresses the need for SDN Controller and concepts - programmability, virtualization and end-to-end optimization - to control, manage and automate these elements to enable an optimized, elastic and agile data center. © 2013 IEEE.},
  Art_number               = {6614478},
  Author_keywords          = {hybrid packet-optical switches; network virtualization; overlays; silicon photonics; Software Defined Networking (SDN); traffic engineering},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/PHOSST.2013.6614478},
  ISBN                     = {9781467350600},
  Journal                  = {2013 IEEE Photonics Society Summer Topical Meeting Series, PSSTMS 2013},
  Keywords                 = {Data center networks; Data centers; Network virtualization; Programmability; Silicon photonics; Software defined networking (SDN); Traffic Engineering; Virtualizations, Highway engineering; Optimization; Pavement overlays; Virtual reality, Photonics},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84887476876&doi=10.1109%2fPHOSST.2013.6614478&partnerID=40&md5=a6a08b9117bd00f100ff35da9a6b0221}
}

@Book{Pang2014414,
  Title                    = {Legacy software integration in service-driven environments: An intelligent agent-based framework},
  Author                   = {Pang, C.-Y.},
  Publisher                = {IGI Global},
  Year                     = {2014},
  Note                     = {cited By 0},
  Volume                   = {2},

  Abstract                 = {Maintaining and upgrading legacy systems is one of the challenges many enterprises face today. Despite their obsolescence, legacy systems continue to provide a competitive advantage by supporting unique business processes and acting as a repository for invaluable knowledge and historical data. However, enterprises would prefer to develop their applications with modern software technology instead of continuing to develop in the mainframe but leverage existing business processes and data from their legacy systems. This chapter presents an architectural framework and implementation methodology of a Central Intelligent Agent that is responsible for legacy integration. The framework uses an Enterprise Service Bus for service integration and agents to handle services. The Central Intelligent Agent uses a Prologstyle rule-based engine and context awareness for service handling and a complementary service agent on the mainframe side for legacy integration. The underlying framework provides a full set of functions to integrate legacy COBOL applications as services into the system without any programming effort in COBOL. The proposed technique enables fast prototyping and rapid development in an agile development process. It also facilitates legacy migration through successive and iterative processes. © 2014, IGI Global.},
  Document_type            = {Book Chapter},
  Doi                      = {10.4018/978-1-4666-6178-3.ch017},
  ISBN                     = {9781466661790; 146666178X; 9781466661783},
  Journal                  = {Handbook of Research on Architectural Trends in Service-Driven Computing},
  Pages                    = {414-438},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84945998605&doi=10.4018%2f978-1-4666-6178-3.ch017&partnerID=40&md5=442a5f90f64df35f5765de78a83547b9}
}

@Article{Papatheocharous2014855,
  Title                    = {Empirical evidence and state of practice of software agile teams},
  Author                   = {Papatheocharous, E. and Andreou, A.S.},
  Journal                  = {Journal of Software: Evolution and Process},
  Year                     = {2014},
  Note                     = {cited By 6},
  Number                   = {9},
  Pages                    = {855-866},
  Volume                   = {26},

  Abstract                 = {The paper provides an in depth analysis of empirical evidence on the state of practice within the agile domain obtained through a survey conducted in 2012. The context of focus is agile software processes and teams and the particular topics of interest revolve around three axes: (i) communication; (ii) project management; and (iii) quality assurance and validation. The aim of the survey is to deliver the current levels of agile adoption and practices as these are recorded in the responses of professionals in IT services and the software industry. The goal of the survey is to provide evidence-based assessment of the level of agile adoption by software development organizations, in relation to the general profile of the respondents (country of origin, business sectors, roles, etc.) and compared with different types of practices followed, such as agile techniques adopted, team organization and communication techniques, and project management. Particular patterns and trends are identified in the survey connecting the use of the agile paradigm with the aforementioned practices and investigating its relation with the roles of the respondents and the business strategies of their organizations. Copyright © 2014 John Wiley & Sons, Ltd. Copyright © 2014 John Wiley & Sons, Ltd.},
  Author_keywords          = {adoption; agile methods; software development; state of practice; survey; teams},
  Document_type            = {Conference Paper},
  Doi                      = {10.1002/smr.1664},
  ISSN                     = {20477481},
  Keywords                 = {Copyrights; Human resource management; Project management; Quality assurance; Software design; Surveying; Surveys, adoption; Agile methods; Agile software process; Communication techniques; Software development organizations; State of practice; Team organizations; teams, Software engineering},
  Publisher                = {John Wiley and Sons Ltd},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84979944518&doi=10.1002%2fsmr.1664&partnerID=40&md5=239f2c3730fbfc5543a2507fa29f3347}
}

@Conference{Parizi2014246,
  Title                    = {Hidden facilitators of agile transition: Agile coaches and agile champions},
  Author                   = {Parizi, R.M. and Gandomani, T.J. and Nafchi, M.Z.},
  Year                     = {2014},
  Editor                   = {Jawawi D.N.A., Sulaiman S., Mohamad R., Sa'Adon N.A.},
  Note                     = {cited By 0},
  Pages                    = {246-250},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Prevalence of Agile methods in software companies is increasing. Software companies need to employ these methods to overcome the inherent challenges of traditional methods. However, transitioning to Agile approach is a topic of debate and needs to be supported by appropriate facilitators. Conducting a large-scale research study, revealed the most important Agile transition facilitators. This paper solely presents two hidden facilitators of Agile transition, Agile coaches and Agile champions, which rarely have been taken into consideration. Both of these facilitators directly impress the people involved in the transition. People-intensive nature of Agile methods and critical role of the people in the transition process reflect the importance of these facilitators when a software company is in the transition process. This study showed that considering these facilitators when can highly impress the success of the transition and revealed the real responsibilities of Agile coaches and Agile champions when transitioning to Agile. © 2014 IEEE.},
  Art_number               = {6986022},
  Author_keywords          = {Agile champions; Agile coaches; Agile software development; Agile transformation; Agile transition; Grounded Theory; Software Engineering},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/MySec.2014.6986022},
  ISBN                     = {9781479954391},
  Journal                  = {2014 8th Malaysian Software Engineering Conference, MySEC 2014},
  Keywords                 = {Software design, Agile champions; Agile coaches; Agile software development; Agile transformations; Agile transition; Grounded theory, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84929298422&doi=10.1109%2fMySec.2014.6986022&partnerID=40&md5=893221673cb3aa4793a8203e18c58819}
}

@Conference{Park2016,
  Title                    = {Direct tasking operation design for SpaceEye-X system},
  Author                   = {Park, S.-B. and Pyo, S. and Lee, S. and Yun, J. and Lee, H.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Publisher                = {American Institute of Aeronautics and Astronautics Inc, AIAA},

  Abstract                 = {SpaceEye-X is a half-meter resolution remote sensing satellite system in development by Satrec Initiative. The 400-kg small satellite system is designed to have agile and flexible mission operation performance as well as the user-friendly feature that many advanced remote sensing systems have adopted, such as Direct Tasking capability.Direct Tasking capability of SpaceEye-X system enables the owner to share satellite resources with their trusted customers for a designated period. The customer can command imaging and download missions to the satellite using their own G/S with a pre-assigned authentication & encryption keys. The direct tasking function is carefully designed to provide satellite owner to maintain satellite security from their customers. The direct tasking function is implemented on a space-grade RT series FPGA, which is located at TMTC (Telemetry and Telecommand) module. Telecommand packets between owner and customer are distinguished by using a MAP ID(Multiplexer access point Identification) of authentication layer in CCSDS protocol. OBC(On-Board Computer) Software processes differently by classifying owner’s telecommands and customer’s telecommands through a MAP ID. Authentication keys are applied to both MAP ID separately, so that a customer cannot violate owner’s authorities. Currently, direct tasking function can support one customer only, but responding to customer needs, it can be flexibly extended upto 28 customers. In this paper, it will be described that sequence of Direct Tasking, examples of operation strategy, H/W design of direct tasking block in TMTC and features of security method. © 2016, American Institute of Aeronautics and Astronautics Inc, AIAA. All rights reserved.},
  Document_type            = {Conference Paper},
  ISBN                     = {9781624104268},
  Journal                  = {14th International Conference on Space Operations, 2016},
  Keywords                 = {Authentication; Communication satellites; Design; Remote sensing; Satellites; Space optics, Mission operations; Onboard computers; Operation strategy; Remote sensing satellites; Remote sensing system; Satellite resources; Software process; Telemetry and telecommand, Sales},
  Page_count               = {5},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84979980616&partnerID=40&md5=72c18479fd27657b190b0b393f0aa8b9}
}

@Article{Parsons2014717,
  Title                    = {Influences on regression testing strategies in agile software development environments},
  Author                   = {Parsons, D. and Susnjak, T. and Lange, M.},
  Journal                  = {Software Quality Journal},
  Year                     = {2014},
  Note                     = {cited By 3},
  Number                   = {4},
  Pages                    = {717-739},
  Volume                   = {22},

  Abstract                 = {Regression testing is a well-established practice in software development, but in recent years it has seen a change of status and emphasis with the increasing popularity of agile methods, which stress the central role of regression testing in maintaining software quality. The objectives of this article are to investigate regression testing strategies in agile development teams and identify the factors that can influence the adoption and implementation of this practice. We have used a mixed methods approach to our research, beginning with an analysis of the literature to identify research themes related to the adoption of regression testing techniques under agile methodologies, from which we developed an analytical framework for the study. This was followed by three exploratory case studies that we used to exercise the main elements of the framework, develop some key themes of interest, and devise a questionnaire for the final stage of the study, an on-line survey to explore the main issues identified in the case studies across different contexts. Within our specific sample, our results suggest that organizational maturity is a key factor in effective regression testing practices and that the adoption of such practices is helped by a coherent testing philosophy and change management processes. We also found that the return on investment in automated regression testing was positive for our respondents and that adopting these practices in the context of agile methods had been a relatively painless process for the organizations in our survey. We conclude that investing in regression testing tools and processes is likely to be beneficial for organizations. However, further work is needed in assessing how organizational culture impacts on the quality process and the financial outcomes for commercial software development organizations. © 2013, Springer Science+Business Media New York.},
  Author_keywords          = {Agile software development; Exploratory case study; Regression testing strategy; Survey},
  Document_type            = {Article},
  Doi                      = {10.1007/s11219-013-9225-z},
  ISSN                     = {09639314},
  Keywords                 = {Computer software selection and evaluation; Planning; Regression analysis; Societies and institutions; Software design; Surveying; Surveys, Agile software development; Automated regression testing; Change management process; Commercial software development; Exploratory case studies; Organizational cultures; Regression testing; Regression testing techniques, Software testing},
  Publisher                = {Kluwer Academic Publishers},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84920253354&doi=10.1007%2fs11219-013-9225-z&partnerID=40&md5=69f5ecfebb6769e5f5d9d15203060e06}
}

@Conference{Parvez2013113,
  Title                    = {Efficiency factor and risk factor based user case point test effort estimation model compatible with agile software development},
  Author                   = {Parvez, A.W.M.M.},
  Year                     = {2013},
  Note                     = {cited By 3},
  Pages                    = {113-118},
  Publisher                = {IEEE Computer Society},

  Abstract                 = {In software outsourcing industry, to win a contract, outsourcing companies need to consider the price that they will introduce to customers. Therefore, estimation has played an important role in any type of software project and as well as for test projects. Particularly, the estimation of testing has been more critical and magnitude as companies need to present or bid their prices on the project to win the outsourcing contract. Wrong estimation can negatively affect the company sales in both ways. On the one side, the profit margin could be reduced or hurt when the bidding is less than that real effort. On the other side, the company could lose the project when the bidding is higher than that of competitors. Therefore, it is extremely necessary to apply economic and systematic estimation model or process to enhance the accuracy in estimation. The integration of highly skilled workforce and accurate test effort estimation software will provide significant benefits to companies. Up to now, there are various existing models of test effort estimation, yet use case point estimation is one of the most popular models in the agile software development industry. The present paper aims to investigate the use case point estimation model. Following the analysis, we have developed two important elements namely, efficiency and risk factor based on a new layer in the model developed by us. The benefit of the new model is to increase the performance and effectiveness of the use case point estimation model. © 2013 IEEE.},
  Art_number               = {6676222},
  Author_keywords          = {agile development; efficiency factor; Outsourcing; risk factor; Software estimation; use case point estimation},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICITEED.2013.6676222},
  Journal                  = {Proceedings - 2013 International Conference on Information Technology and Electrical Engineering: "Intelligent and Green Technologies for Sustainable Development", ICITEE 2013},
  Keywords                 = {Efficiency; Electrical engineering; Estimation; Industry; Information technology; Outsourcing; Software design, Agile development; Efficiency factor; Risk factors; Software estimation; Use case points, Software testing},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84898951497&doi=10.1109%2fICITEED.2013.6676222&partnerID=40&md5=bbb940b8ebdde43b52c66de72a6fae30}
}

@Article{Paschke2015185,
  Title                    = {Aspect OntoMaven - aspect-oriented ontology development and configuration with OntoMaven},
  Author                   = {Paschke, A. and Schaefermeier, R.},
  Journal                  = {Lecture Notes in Business Information Processing},
  Year                     = {2015},
  Note                     = {cited By 1},
  Pages                    = {185-196},
  Volume                   = {228},

  Abstract                 = {In agile ontology-based software engineering projects support for modular reuse of ontologies from large existing remote repositories, ontology project life cycle management, and transitive dependency management are important needs. The contribution of this paper is a new design artifact called OntoMaven combined with a unified approach to ontology modularization, aspect-oriented ontology development, which was inspired by aspect-oriented programming. OntoMaven adopts the Apache Maven-based development methodology and adapts its concepts to knowledge engineering for Maven-based ontology development and management of ontology artifacts in distributed ontology repositories. The combination with aspect-oriented ontology development allows for fine-grained, declarative configuration of ontology modules. © Springer International Publishing Switzerland 2015.},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-26762-3_17},
  Editor                   = {Abramowicz W.},
  ISBN                     = {9783319267616},
  ISSN                     = {18651348},
  Keywords                 = {Computer software reusability; Information systems; Life cycle; Modular construction; Software engineering, Development methodology; Ontology development; Ontology modularization; Ontology repositories; Project life cycle; Remote repositories; Software engineering projects; Unified approach, Aspect oriented programming},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84952649742&doi=10.1007%2f978-3-319-26762-3_17&partnerID=40&md5=152948ebab32853e4369f4c571e524bb}
}

@Conference{Patara2014,
  Title                    = {An adaptable patient-centric electronic health record system for personalized home care},
  Author                   = {Patara, F. and Vicario, E.},
  Year                     = {2014},
  Note                     = {cited By 2},
  Publisher                = {IEEE Computer Society},

  Abstract                 = {The increasing ageing of population and the prevalence of chronic diseases push the adoption of home care processes that can delay or discontinue the access to hospitalization and specialized structures. To this end, ICT plays a crucial enabling role providing a growing ecosystem of diagnostic and monitoring devices, communication networks, and information management applications. As a part of this, advanced software architectures provide means for effective integration and management of clinical data produced by a variety of sources and accessed by a variety of actors involved in the care process. We describe the software architecture of an Electronic Health Record (EHR) system that exploits the Reflection architectural pattern to allow agile tailoring for the needs of different medical specialties. We then show how this adaptability can be further exploited to face a number of challenging requirements posed by the context of home care, including: patient-centric personalization of the record structure; user-adapted content presentation; automated support for compliance verification; systems medicine connection of clinical observations pertaining to different specialties; integration of users observations and data streams acquired from remote monitoring devices. © 2014 IEEE.},
  Art_number               = {6825237},
  Author_keywords          = {adaptable systems; Electronic Health Record (EHR) system; Home care; personalized medicine; Reflection architectural pattern},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ISMICT.2014.6825237},
  ISBN                     = {9781479948567},
  ISSN                     = {2326828X},
  Journal                  = {International Symposium on Medical Information and Communication Technology, ISMICT},
  Keywords                 = {Bioinformatics; Communication systems; Compliance control; Information technology; Records management; Software architecture, Adaptable system; Architectural pattern; Electronic Health Record(EHR) System; Home care; Personalized medicines, Information management},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84903291750&doi=10.1109%2fISMICT.2014.6825237&partnerID=40&md5=7c1704073aa8e5685c5b8003d28729f2}
}

@Article{Payne2014546,
  Title                    = {StatBase: library statistics made easy},
  Author                   = {Payne, A. and Curtis, J.},
  Journal                  = {Library Hi Tech},
  Year                     = {2014},
  Note                     = {cited By 1},
  Number                   = {3},
  Pages                    = {546-559},
  Volume                   = {32},

  Abstract                 = {Purpose: The purpose of this paper is to detail a Library open source software (OSS) development project resulting in the launch of StatBase, a statistical gathering and data visualization tool, so that organizations can adopt a locally managed alternative to costly data aggregation tools.
Design/methodology/approach: This case study is based on a literature review, Agile development framework, and user experience modeling. The software solution features a Joomla framework with contributed modules and open source architecture.
Findings: This case study demonstrates the creation and practical implementation of a scalable OSS platform for data management and analysis.
Practical implications: Provides a frame of reference and methodology for libraries, both public and academic, seeking to implement a web-based resource to gather, organize, and interpret statistical metrics via a centralized, lightweight, open source architecture.
Originality/value: This case study provides a detailed scope and step-by-step technology process description by which an organization can adopt or model the StatBase solution for business metrics. © Emerald Group Publishing Limited.},
  Author_keywords          = {Data analysis; Design and development; Library management; Public libraries; Systems analysis; Technology led strategy},
  Document_type            = {Article},
  Doi                      = {10.1108/LHT-04-2014-0031},
  ISSN                     = {07378831},
  Publisher                = {Emerald Group Publishing Ltd.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84907247207&doi=10.1108%2fLHT-04-2014-0031&partnerID=40&md5=f04851f28aa6a3d380d7d063d08ed15f}
}

@Article{Pecchia2016103,
  Title                    = {Expressing, managing, and validating user stories: Experiences from the market},
  Author                   = {Pecchia, C. and Trincardi, M. and Di Bello, P.},
  Journal                  = {Communications in Computer and Information Science},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {103-111},
  Volume                   = {422},

  Abstract                 = {Agile methodologies for software development favor customer involvement and thus a rapid feedback cycle on realized product increments. Such involvement is implemented in the activities around requirements (elicitation, analysis, development, management, change, validation), which in turn are often sustained by—and expressed in—“user story” format. This paper aims to show our experience in developing software system representing functional requirements mainly with “user stories,” and capturing also nonfunctional requirements (e.g., availability, security) in demanding domains. This paper starts defining what a user story is, how we write and test it, and what are main differences compared to “traditional” documented requirements and use cases. Then, it focuses on techniques we use for splitting and grooming, and how we transform a linear backlog into a multidimensional Story Map that help us to manage size and complexity. © Springer International Publishing Switzerland 2016.},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-27896-4_9},
  Editor                   = {Sillitti A., Ciancarini P., Succi G., Messina A.},
  ISBN                     = {9783319278940},
  ISSN                     = {18650929},
  Keywords                 = {Application programs; Mathematical transformations; Software design, Agile Methodologies; Functional requirement; It focus; Non-functional requirements; Rapid feedback; Software systems; User stories, Software engineering},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958244967&doi=10.1007%2f978-3-319-27896-4_9&partnerID=40&md5=dfede4235bbb444f36e17a33e2a1f6a3}
}

@Article{Peldzius2013223,
  Title                    = {Usage of Multiple Process Assessment Models},
  Author                   = {Peldzius, S. and Ragaisis, S.},
  Journal                  = {Communications in Computer and Information Science},
  Year                     = {2013},
  Note                     = {cited By 5},
  Pages                    = {223-234},
  Volume                   = {349 CCIS},

  Abstract                 = {Organizations seek to obtain benefit from different process capability frameworks - the most popular ones as ISO/IEC 15504 and CMMI and the new ones as Enterprise SPICE - but every assessment is expensive both financially and time-wise. Furthermore, new assessment is required when a new process assessment model's version is released. In order to define and/or improve their software process, organizations choose different Software Development Methodologies. It is important for the organization to know what capability/maturity of the process a chosen methodology could ensure. In order to solve these problems, Transitional Process Assessment Model (TPAM) [1] has been proposed. It should enable the transformation of assessment results according to one Process Assessment Model to other models and determines what capability/maturity according to different Process Assessment Models a chosen methodology could ensure. The requirements for TPAM and its implementation principles have been introduced in [1]. This article presents the development of TPAM and supporting tool. The ideas of Enterprise SPICE integration into TPAM are outlined also. © Springer-Verlag Berlin Heidelberg 2013.},
  Author_keywords          = {Agile methodologies; CMMI; Enterprise SPICE; ISO/IEC 15504; models mapping; transitional process assessment model},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-642-38833-0_20},
  ISBN                     = {9783642388323},
  ISSN                     = {18650929},
  Keywords                 = {Industry; Standards, Agile Methodologies; CMMI; ISO/IEC 15504; Multiple process; Process assessments; Process capabilities; Software development methodologies; Transitional process, Software design},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904657808&doi=10.1007%2f978-3-642-38833-0_20&partnerID=40&md5=b43d0cbb31f0ad0966df6e38f6d4f492}
}

@Book{Penmetsa201619,
  Title                    = {Agile testing},
  Author                   = {Penmetsa, J.R.},
  Publisher                = {Springer Singapore},
  Year                     = {2016},
  Note                     = {cited By 0},

  Abstract                 = {In recent times, software development has to be flexible and dynamic due to ever-changing customer needs and high competitive pressure. This competitive pressure increases the importance of Agile methods in software development and testing practices. Traditional testing methods treat development and testing as a two-team two-step process. The process discovers bugs in software at later stage of development. Further, the process frequently leads to an internal division between teams. Agile testing combines test and development teams around the principles of collaboration, transparency, flexibility, and retrospection. This testing enables the organization to be nimble about uncertain priorities and requirements. It helps to achieve higher quality in software products. This chapter with a brief introduction on Agile-based software engineering deals with Agile-based testing. Agile testing focuses on test-first approaches, continuous integration (CI), and build-test-release engineering practices. The chapter also explains advantages and disadvantages of Agile testing practices. The process is explained with an example. © Springer Science+Business Media Singapore 2017.},
  Author_keywords          = {Agile testing; Continuous improvement; Team collaboration; Test engineering; Testing in parallel},
  Document_type            = {Book Chapter},
  Doi                      = {10.1007/978-981-10-1415-4_2},
  ISBN                     = {9789811014154; 9789811014147},
  Journal                  = {Trends in Software Testing},
  Pages                    = {19-33},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85018895548&doi=10.1007%2f978-981-10-1415-4_2&partnerID=40&md5=a1f020fbb2944d61a1cef76586e39ccc}
}

@Book{Pérez2013215,
  Title                    = {Bridging User Stories and Software Architecture: A Tailored Scrum for Agile Architecting},
  Author                   = {Pérez, J. and Díaz, J. and Garbajosa, J. and Yagüe, A.},
  Publisher                = {Elsevier Inc.},
  Year                     = {2013},
  Note                     = {cited By 0},

  Abstract                 = {Agile architecting is a key issue to scale agile to develop large software systems. This chapter describes a set of mechanisms that make agile architecting feasible. These mechanisms are smoothly integrated in a tailored Scrum for agile architecting by (1) defining product requirements in terms of features by using feature pools and feature trees to provide the portfolio and roadmap visions of a product, (2) designing highly flexible architecture called working architecture, (3) bridging user stories and software architecture through features and design decisions as traceability mechanisms, and (4) systematically assisting agile practitioners by conducting change impact a. nalysis of features through various iterations of the agile process. This tailored Scrum for agile architecting has been successfully put into practice to develop several projects, which have been deployed in a software factory set up in collaboration between the Technical University of Madrid (UPM) and the company Indra. In this chapter, one of these projects is used to illustrate how this tailored Scrum has been applied and how it can be adopted. © 2014 Elsevier Inc. All rights reserved.},
  Author_keywords          = {Agile architecting; Change impact analysis; Features; Scrum; Traceability; Working architecture},
  Document_type            = {Book Chapter},
  Doi                      = {10.1016/B978-0-12-407772-0.00008-3},
  ISBN                     = {9780124077720},
  Journal                  = {Agile Software Architecture: Aligning Agile Processes and Software Architectures},
  Pages                    = {215-241},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84902431013&doi=10.1016%2fB978-0-12-407772-0.00008-3&partnerID=40&md5=b63a30ddb01c8ac27248b2ea55df6750}
}

@Conference{Pérez-Castillo2013516,
  Title                    = {ANDRIU. A technique for migrating graphical user interfaces to android},
  Author                   = {Pérez-Castillo, R. and Guzmán, D.I.G.-R. and Gómez-Cornejo, R. and Fernandez-Ropero, M. and Piattini, M.},
  Year                     = {2013},
  Note                     = {cited By 4},
  Number                   = {January},
  Pages                    = {516-519},
  Publisher                = {Knowledge Systems Institute Graduate School},
  Volume                   = {2013-January},

  Abstract                 = {Nowadays, pervasive environments force maintainers to provide agile solutions for migrating legacy information systems to mobile applications. While business knowledge can be easily reused in tier-based modularized systems, the migration of user interface tiers to a mobile application entails a bigger (but usually ignored) challenge. This paper presents AndrIU, a reverse engineering tool based on static analysis of source code for transforming user interface tiers from desktop applications to mobile ones. AndrIU has been specially developed for migrating traditional systems to Android applications. AndrIU is generic and extensible since it manages all the embedded knowledge in a common, standard repository according to the Knowledge Discovery Metamodel. This metamodel represents legacy knowledge in a platform-independent way. The main advantage is that AndrIU is designed to be extended for different migrations to others mobile platforms. Copyright © 2013 by Knowledge Systems Institute Graduate School.},
  Author_keywords          = {Android; Migration; User interface},
  Document_type            = {Conference Paper},
  ISSN                     = {23259000},
  Journal                  = {Proceedings of the International Conference on Software Engineering and Knowledge Engineering, SEKE},
  Keywords                 = {Android (operating system); Graphical user interfaces; Knowledge engineering; Legacy systems; Mobile computing; Mobile telecommunication systems; Reverse engineering; Software engineering; Static analysis, Android; Android applications; Desktop applications; Legacy information systems; Migration; Pervasive environments; Platform independent; Reverse engineering tools, User interfaces},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84937718550&partnerID=40&md5=37d949cbc197c5b996ea1362100defed}
}

@Article{Perkusich2016,
  Title                    = {Assisting the continuous improvement of Scrum projects using metrics and Bayesian networks},
  Author                   = {Perkusich, M. and Gorgônio, K.C. and Almeida, H. and Perkusich, A.},
  Journal                  = {Journal of Software: Evolution and Process},
  Year                     = {2016},
  Note                     = {cited By 0; Article in Press},

  Abstract                 = {Scrum is a simple process to understand, but hard to adopt. Therefore, there is a need for resources to assist on its adoption. In this paper, we present the process followed to build a Bayesian network to assist on the assessment of the quality of the software process in the context of Scrum projects. The model provides data to help Scrum Masters lead the improvement of business value delivery of Scrum teams. The process is divided into 2 phases. In the first phase, we built the Bayesian network based on expert knowledge extracted from the literature and experts. We used a top-down approach and reasoning to define the key metrics necessary to build the models and their relationships. In the second phase, we updated the Bayesian network based on limitations of the first version. We validated the Bayesian network inferences with 10 simulated scenarios. Comparing both versions, for all scenarios, we improved the accuracy of the inferences. Therefore, we concluded that the Bayesian networks adequately represent Scrum projects from the viewpoint of the Scrum Master. Finally, the model built is in conformance with agile methods tailoring and can be adapted to any Scrum team. © 2016 John Wiley & Sons, Ltd.},
  Author_keywords          = {Agile methods; Bayesian networks; Continuous improvement; KaizenScrum},
  Document_type            = {Article in Press},
  Doi                      = {10.1002/smr.1835},
  ISSN                     = {20477481},
  Keywords                 = {Computer software, Agile methods; Bayesian Network inference; Business value; Continuous improvements; Expert knowledge; KaizenScrum; nocv1; Software process; Top down approaches, Bayesian networks},
  Publisher                = {John Wiley and Sons Ltd},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85005950370&doi=10.1002%2fsmr.1835&partnerID=40&md5=7200a27569205ce5806980b0b895c01e}
}

@Conference{Petrasch2013147,
  Title                    = {Introduction of Scrum in a software development project of the ContiTech AG [Einführung von scrum in einem software-entwicklungsprojekt der contitech AG]},
  Author                   = {Petrasch, R. and Franzke, T. and Rongviriyapanich, S.},
  Year                     = {2013},
  Editor                   = {Fazal-Baqaie M., Hanser E., Mikusz M.},
  Note                     = {cited By 0},
  Pages                    = {147-156},
  Publisher                = {Gesellschaft fur Informatik (GI)},
  Volume                   = {P-224},

  Document_type            = {Conference Paper},
  ISBN                     = {9783885796183},
  ISSN                     = {16175468},
  Journal                  = {Lecture Notes in Informatics (LNI), Proceedings - Series of the Gesellschaft fur Informatik (GI)},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84922335376&partnerID=40&md5=a2098ef36db13b8bfa4cdc79845d5bfa}
}

@Conference{Pham20151,
  Title                    = {Large pages and lightweight memory management in virtualized environments: Can you have it both ways?},
  Author                   = {Pham, B. and Vesel, J. and Loh, G.H. and Bhattacharjee, A.},
  Year                     = {2015},
  Note                     = {cited By 5},
  Pages                    = {1-12},
  Publisher                = {IEEE Computer Society},
  Volume                   = {05-09-December-2015},

  Abstract                 = {Large pages have long been used to mitigate address translation overheads on big-memory systems, particularly in virtualized environments where TLB miss overheads are severe. We show, however, that far from being a panacea, large pages are used sparingly by modern virtualization software. This is because large pages often preclude lightweight memory management, which can outweigh their Translation Lookaside Buffer (TLB) benefits. For example, they reduce opportunities to deduplicate memory among virtual machines in overcommitted systems, interfere with lightweight memory monitoring, and hamper the agility of virtual machine (VM) migrations. While many of these problems are particularly severe in overcommitted systems with scarce memory resources, they can (and often do) exist generally in cloud deployments. In response, virtualization software often (though it doesn't have to) splinters guest operating system (OS) large pages into small system physical pages, sacrificing address translation performance for overall system-level benefits. We introduce simple hardware that bridges this fundamental conflict, using speculative techniques to group contiguous, aligned small page translations such that they approach the address translation performance of large pages. Our Generalized Large-page Utilization Enhancements (GLUE) allow system hypervisors to splinter large pages for agile memory management, while retaining almost all of the TLB performance of unsplintered large pages. © 2015 ACM.},
  Author_keywords          = {speculation; TLB; virtual memory; virtualization},
  Coden                    = {PSMIE},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2830772.2830773},
  ISBN                     = {9781450340342},
  ISSN                     = {10724451},
  Journal                  = {Proceedings of the Annual International Symposium on Microarchitecture, MICRO},
  Keywords                 = {Computer architecture; Computer system firewalls; Java programming language; Virtual reality, Address translation; Guest operating systems; speculation; Translation lookaside buffer; Virtual memory; Virtualization software; Virtualizations; Virtualized environment, Buffer storage},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84959876132&doi=10.1145%2f2830772.2830773&partnerID=40&md5=93cc00581ae54c71df01ccb122a1c7e5}
}

@Article{Pham2016150,
  Title                    = {Spectrally efficient emission mask shaping for OFDM cognitive radios},
  Author                   = {Pham, T.H. and Fahmy, S.A. and McLoughlin, I.V.},
  Journal                  = {Digital Signal Processing: A Review Journal},
  Year                     = {2016},
  Note                     = {cited By 2},
  Pages                    = {150-161},
  Volume                   = {50},

  Abstract                 = {Orthogonal Frequency Division Multiplexing has been widely adopted in recent years due to its inherent spectral efficiency and robustness to impulsive noise and fading. For cognitive radio applications in particular, it can enable flexible and agile spectrum allocation, yet suffers from spectral leakage in the form of large side lobes, leading to inter-channel interference unless mitigated carefully. Hence, recent OFDM-based standards such as IEEE 802.11p for vehicular communication and IEEE 802.11af for TV whitespace reuse impose strict spectrum emission mask limits to combat adjacent channel interference. Stricter masks allow channels to operate closer together, improving spectral efficiency at the cost of implementation difficulty. Meeting these strict limits is a significant challenge for implementing both 802.11p and 802.11af, yet remains an important requirement for enabling cost-effective systems. This paper proposes a novel method that embeds baseband filtering within a cognitive radio architecture to meet the specification for the most stringent 802.11p and 802.11af masks, while allowing up to ten additional active 802.11af sub-carriers to occupy a single basic channel without violating SEM specifications. The proposed method, performed at baseband, relaxes otherwise strict RF filter requirements, allowing the RF subsystem to be implemented using much less stringent 802.11a designs, resulting in cost reductions. © 2015 Elsevier Inc. All rights reserved.},
  Author_keywords          = {Cognitive radio; IEEE 802.11; Inter-channel interference; OFDM; Software defined radio},
  Coden                    = {DSPRE},
  Document_type            = {Article},
  Doi                      = {10.1016/j.dsp.2015.12.008},
  ISSN                     = {10512004},
  Keywords                 = {Cost effectiveness; Cost reduction; Costs; Efficiency; Fading (radio); Frequency division multiplexing; Impulse noise; Orthogonal frequency division multiplexing; Radio systems; Signal interference; Software radio; Specifications; Standards, Adjacent channel interference; Cost effective systems; IEEE 802.11s; Implementation difficulties; Interchannel interference; Software-defined radios; Spectrum emission mask; Vehicular communications, Cognitive radio},
  Publisher                = {Elsevier Inc.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84960485777&doi=10.1016%2fj.dsp.2015.12.008&partnerID=40&md5=bc096e7fa5ad066358ef41ada9dcabd5}
}

@Article{Poligadu201426,
  Title                    = {An innovative measurement programme for agile governance},
  Author                   = {Poligadu, A. and Moloo, R.K.},
  Journal                  = {International Journal of Agile Systems and Management},
  Year                     = {2014},
  Note                     = {cited By 0},
  Number                   = {1},
  Pages                    = {26-60},
  Volume                   = {7},

  Abstract                 = {Lack of governance is common in agile organisations. It is very hard to introduce good measurement and metrics programme in agile teams as resistance is usually high since people think agile is too much documentation. Constant evolution and adaptation is required in agile environment. This study proposes a measurement framework based on industry best practices while innovating on the way the programme is designed and institutionalised. The programme ran for at least 20 weeks on four projects. A number of field analysis were done on different attributes of the software and the software process. Data about the process, the product and resource was collected and analysed. Implementation of the Agile Measure Programme was very fast. A project took three weeks to start getting the first result. Data monitoring took about two weeks to set up. The programme could be ported to other projects in minutes. Improvements in the development lifecycle were noticeable in some cases moving from a UCL/LCL of 3σ to 1σ. Team productivity has increased by more than 30%. Decision making was made easier for management. Perceived situations were now based on data, providing less intuitive thinking. Copyright © 2014 Inderscience Enterprises Ltd.},
  Author_keywords          = {Agile governance; Metrics and measurements},
  Document_type            = {Article},
  Doi                      = {10.1504/IJASM.2014.059153},
  ISSN                     = {17419174},
  Publisher                = {Inderscience Enterprises Ltd.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84930394643&doi=10.1504%2fIJASM.2014.059153&partnerID=40&md5=277cb75fb7b31fbb8fb73b80682ccf4f}
}

@Conference{Poller20172489,
  Title                    = {Can security become a routine? A study of Organizational change in an agile software development group},
  Author                   = {Poller, A. and Kocksch, L. and Türpe, S. and Epp, F.A. and Kinder-Kurlanda, K.},
  Year                     = {2017},
  Note                     = {cited By 0},
  Pages                    = {2489-2503},
  Publisher                = {Association for Computing Machinery},

  Abstract                 = {Organizational factors influence the success of security initiatives in software development. Security audits and developer training can motivate development teams to adopt security practices, but their interplay with organizational structures and routines remains unclear. We studied how security consultancy affected organizational routines in a software development group. Security consultants tested their product, reported vulnerabilities, and delivered a security training. We followed the group during and after consultancy events. As a result of the consultancy, group members improved their understanding of security issues, but could not effect a change of routines within the given organizational structure. They handled vulnerabilities in a stabilization routine without changes in feature development, where security remained intangible. Interestingly, group members acknowledged an unfulfilled need for change but defended the structure inhibiting change. Security initiatives need to consider this interplay of structure and situated practice, and manage change in addition to providing expertise and tools. Copyright © 2017 ACM.},
  Author_keywords          = {Agile development; It security; Organizational change; Organizational factors; Organizational routines; Penetration test; Scrum; Security training; Software development; Software development teams; Structure-and-agency duality},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2998181.2998191},
  ISBN                     = {9781450343350},
  Journal                  = {Proceedings of the ACM Conference on Computer Supported Cooperative Work, CSCW},
  Keywords                 = {Computer software; Computer supported cooperative work; Groupware; Interactive computer systems; Management science; Security of data; Security systems; Software engineering; Software testing, Agile development; IT security; Organizational change; Organizational factors; Organizational routines; Penetration test; Scrum; Security training; Software development teams, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85014761847&doi=10.1145%2f2998181.2998191&partnerID=40&md5=bd3fa5052a47ccb4a6dc454bd74cb270}
}

@Article{Pope-Ruark2015112,
  Title                    = {Introducing Agile Project Management Strategies in Technical and Professional Communication Courses},
  Author                   = {Pope-Ruark, R.},
  Journal                  = {Journal of Business and Technical Communication},
  Year                     = {2015},
  Note                     = {cited By 3},
  Number                   = {1},
  Pages                    = {112-133},
  Volume                   = {29},

  Abstract                 = {Technical and professional communicators spend a good deal of time managing teams and documentation projects, and their organizations are increasingly introducing new project management practices. This article introduces Agile project management strategies that were created in software development environments, exploring how these iterative strategies can complement the traditional linear project management approaches that are taught in technical and professional communication (TPC) programs. To do so, the author presents a brief history of Agile, a case study of how the author applied specific Agile strategies in a grant writing course, and a comprehensive set of tips for implementing Agile in other TPC courses. © The Author(s) 2014.},
  Author_keywords          = {Agile; collaboration; curriculum; pedagogy; project management},
  Document_type            = {Article},
  Doi                      = {10.1177/1050651914548456},
  ISSN                     = {10506519},
  Publisher                = {SAGE Publications Inc.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84912089842&doi=10.1177%2f1050651914548456&partnerID=40&md5=a744ece7861aac9c999a3f16348d6266}
}

@Conference{Porrawatpreyakorn2013140,
  Title                    = {A knowledge transfer framework for supporting the transition to agile development of web application in the Thai telecommunications industry},
  Author                   = {Porrawatpreyakorn, N. and Chutimaskul, W. and Quirchmayr, G. and Sodanil, M.},
  Year                     = {2013},
  Note                     = {cited By 0},
  Pages                    = {140-148},

  Abstract                 = {Agile software development methods are often applied in volatile software development environments typically perceived as being difficult to tackle by traditional methods. Yet, only a minority of organizations is able to transfer to agile development effectively. This paper proposes a knowledge transfer framework supporting the transition to agile development with guidance on how to put knowledge transfer into action. In this framework, a knowledge transfer process consists of six components (i.e., problems, antecedents, knowledge, mechanisms, knowledge application, and outcomes) and flows through four distinct stages (i.e., Initiation, Implementation, Ramp-up, and Integration). In each stage, components interact with each other multi-directionally and play an important role depending on the stage's functionality. A set of knowledge transfer activities in each stage is also specified which aligns with agile ways, especially Scrum. The description of the application of the developed framework and lessons learned conclude the paper. © 2013 ACM.},
  Author_keywords          = {Agile; Agile Transition; Knowledge Transfer},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2539150.2539163},
  ISBN                     = {9781450321136},
  Journal                  = {ACM International Conference Proceeding Series},
  Keywords                 = {Agile; Agile development; Agile software development; Agile Transition; Knowledge application; Knowledge transfer; Software development environment; Telecommunications industry, Information retrieval; Software design; Telecommunication industry; Web services, Knowledge management},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84896886995&doi=10.1145%2f2539150.2539163&partnerID=40&md5=806e336c95a7a923ac63fe89cd3c034a}
}

@Article{Poston2015748,
  Title                    = {Vision 2020: The future of software quality management and impacts on global user acceptance},
  Author                   = {Poston, R. and Calvert, A.},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2015},
  Note                     = {cited By 1},
  Pages                    = {748-760},
  Volume                   = {9191},

  Abstract                 = {This paper explores the future evolution of software quality management (SQM), testing, and global user acceptance approaches keeping in mind the evolution in software and technology quality management in general, including new technologies and the increasing adoption of new software development life cycle methodologies such as Agile and Scaled Agile. These evolutions are forcing quality organizations to change the way they approach software quality processes, including increased outsourcing of development, and the need to update traditional testing and user acceptance testing approaches which lag behind with manual and invasive techniques. User acceptance as we know it today must evolve. This discussion about evolution should deemphasize the role of the end user in “testing” and emphasize the end user’s role in acceptance, adoption, and ability to influence the quality and usability of software much further upstream in the development life cycle. User acceptance teams should increase their role in user experience, the development of usability standards, non-invasive automation techniques gathering usage data, etc. All of these mechanisms should increase the ability of the end user to influence product quality and enhance the user experience and acceptance. Perceptions of end user’s participation in user acceptance events need to be transformed away from just another cycle of software testing. User acceptance should not be about testing, but about validating that the end user needs and expectations have been met. All testing and other quality processes should be completed and defects corrected before the end user is engaged in the process of “accepting” the deliverable. Thus, this effort will explore the future of SQM and its impacts on global user acceptance. We will discuss how organizations involve users throughout the development life cycle to facilitate adoption, user experience, and usability of new technologies. This discussion will be embedded in the use of futuristic new technologies and development methodologies. To explore these notions, this study gathers input from technology visionaries about best practices approaches for facilitating SQM and user acceptance throughout the development life cycle. © Springer International Publishing Switzerland 2015.},
  Author_keywords          = {Global user acceptance; Software development life cycle; Software quality management; User acceptance testing},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-20895-4_70},
  Editor                   = {Nah F.F.-H., Tan C.-H.},
  ISBN                     = {9783319208947},
  ISSN                     = {03029743},
  Keywords                 = {Ability testing; Computer software; Computer software selection and evaluation; Human computer interaction; Life cycle; Quality management; Software design; Software engineering; Software testing, Automation techniques; Development methodology; Invasive techniques; Software development life cycle; Software Quality; Software quality management; User acceptance; User acceptance testing, Acceptance tests},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84947247101&doi=10.1007%2f978-3-319-20895-4_70&partnerID=40&md5=bc6c3f8343c4a97b826e530cd40483da}
}

@Article{Poth20161000,
  Title                    = {Effectivity and economical aspects for agile quality assurance in large enterprises},
  Author                   = {Poth, A.},
  Journal                  = {Journal of Software: Evolution and Process},
  Year                     = {2016},
  Note                     = {cited By 0},
  Number                   = {11},
  Pages                    = {1000-1004},
  Volume                   = {28},

  Abstract                 = {The transition from a classical to an agile software development procedure needs a structured and strategic roll out to realize the expected benefits of the transition phase. Quality assurance as part of the software development has also to be designed to realize its targets of the agile transition for adequate project and program quality assurance. Besides effectivity the economic aspects have to be implemented also in a value-driven agile product quality assurance. This tension between effectivity and economy will be shown on the example of the Volkswagen group IT. The transition is mapped to the SPI Manifesto to demonstrate the currency in 2009 of the established values and principles for software process improvement. Copyright © 2016 John Wiley & Sons, Ltd.},
  Author_keywords          = {agile software development; agile transition; quality assurance; quality management; quality risk mitigation},
  Document_type            = {Article},
  Doi                      = {10.1002/smr.1823},
  ISSN                     = {20477481},
  Keywords                 = {Economic and social effects; Economics; Quality assurance; Quality management; Software engineering, Agile software development; agile transition; Economic aspects; Economical aspects; Large enterprise; Quality risks; Software Process Improvement; Volkswagen groups, Software design},
  Publisher                = {John Wiley and Sons Ltd},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84996520490&doi=10.1002%2fsmr.1823&partnerID=40&md5=74bee19fec10326eb2f105b9ea6ff8ad}
}

@Conference{Potineni20131884,
  Title                    = {ScrumTutor: A web-based interactive tutorial for Scrum Software development},
  Author                   = {Potineni, S. and Bansal, S.K. and Amresh, A.},
  Year                     = {2013},
  Note                     = {cited By 2},
  Pages                    = {1884-1890},

  Abstract                 = {In a traditional software engineering class, students are typically engaged in theoretical lectures followed by homework assignments or a project. Use of hands-on training and laboratory activities using real-world projects is more likely to produce students with a higher level of achievement and more confidence in the course material. If every topic or technique introduced in the course has a corresponding hands-on activity that demonstrates an application or use of the concept in the industry, students better understand the need for the technique and the learning environment is more interactive, engaging, and interesting to students. This paper presents a project called ScrumTutor that aims at providing an engaging learning experience of Scrum Software development process through a web-based Interactive tutorial. It is designed and developed for undergraduate students in introductory Software Engineering courses. This software tool introduces its users to modern software engineering methodology used these days in the software industry known as Agile Software Development that includes the Scrum framework for managing software projects or products. © 2013 IEEE.},
  Art_number               = {6637469},
  Author_keywords          = {Agile Software Development; Scrum; Software Engineering Education; Web-based interactive tutorial},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICACCI.2013.6637469},
  ISBN                     = {9781467362153},
  Journal                  = {Proceedings of the 2013 International Conference on Advances in Computing, Communications and Informatics, ICACCI 2013},
  Keywords                 = {Agile software development; Interactive tutorials; Learning environments; Scrum; Software development process; Software engineering course; Software engineering methodologies; Undergraduate students, Computer aided instruction; Information science; Software design; Software engineering; Teaching; Websites, Students},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84891909820&doi=10.1109%2fICACCI.2013.6637469&partnerID=40&md5=ea1c84d7aad9f1774a93ed4d4bfabdd8}
}

@Article{Prata201492,
  Title                    = {An agile digital radio system for UHF white spaces},
  Author                   = {Prata, A. and Oliveira, A.S.R. and Carvalho, N.B.},
  Journal                  = {IEEE Microwave Magazine},
  Year                     = {2014},
  Note                     = {cited By 3},
  Number                   = {1},
  Pages                    = {92-97},
  Volume                   = {15},

  Abstract                 = {In recent years, we have experienced an impressive spread of mobile communications as well as the emergence of new communication protocols. This lead to an overutilization of some spectrum bands, while the utilization of other bands is sometimes minimal or insignificant. The exploration of the white spaces concept, which represents the unused portions of the spectrum, mainly due to the shutdown of analog TV transmissions, has arisen as a solution for spectrum reuse. Currently, the electromagnetic spectrum is statically allocated, associating each technology to a particular frequency band, which leads to an inefficient use of the spectrum. Thus, it would be advantageous to change the way the electromagnetic spectrum is accessed, adopting a dynamic access paradigm-dynamic spectrum access (DSA). However, for this to be possible, in addition to regulatory changes, it is necessary that the radio physical layer becomes flexible and adaptable, enabling the efficient configuration of various parameters such as transmit frequency and power, modulation, and bandwidth, among others. The well-known concepts or paradigms of software defined radio (SDR) and cognitive radio (CR) are precisely the key to meeting these requirements. Based on these concepts, it will be possible to build a smart, adaptable, efficient, self-aware, and self-learning radio that could easily implement the DSA paradigm [1]. © 2000-2012 IEEE.},
  Art_number               = {6717169},
  Coden                    = {IEMMF},
  Document_type            = {Article},
  Doi                      = {10.1109/MMM.2013.2288809},
  ISSN                     = {15273342},
  Keywords                 = {Electromagnetic spectra; Mobile communications; Physical layers; Regulatory change; Software-defined radios; Spectrum access; Spectrum bands; Transmit frequency, Color television; Digital radio; Electromagnetism; Frequency bands; Network layers, Radio systems},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893627000&doi=10.1109%2fMMM.2013.2288809&partnerID=40&md5=168437d903f87eeb496dbc3be9b1975d}
}

@Conference{Prior20131579,
  Title                    = {Use of an agile bridge in the development of assistive technology},
  Author                   = {Prior, S. and Waller, A. and Black, R. and Kroll, T.},
  Year                     = {2013},
  Note                     = {cited By 2},
  Pages                    = {1579-1588},

  Abstract                 = {Engaging with end users in the development of assistive technologies remains one of the major challenges for researchers and developers in the field of accessibility and HCI. Developing usable software systems for people with complex disabilities is problematic, software developers are wary of using user-centred design, one of the main methods by which usability can be improved, due to concerns about how best to work with adults with complex disabilities, in particular Severe Speech and Physical Impairments (SSPI) and how to involve them in research. This paper reports on how the adoption of an adapted agile approach involving the incorporation of a user advocate on the research team helped in meeting this challenge in one software project and offers suggestions for how this could be used by other development teams. Copyright © 2013 ACM.},
  Author_keywords          = {Agile methodology; Assistive technology; Severe Speech and Physical Impairments; User centred design},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2470654.2466210},
  ISBN                     = {9781450318990},
  Journal                  = {Conference on Human Factors in Computing Systems - Proceedings},
  Keywords                 = {Agile Methodologies; Assistive technology; Development teams; Physical impairments; Software developer; Software project; Software systems; User centred design, Data visualization; Human computer interaction; Research, Handicapped persons},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84877940428&doi=10.1145%2f2470654.2466210&partnerID=40&md5=7d1966e54337a13aaac66e563d7694bc}
}

@Conference{Przybylek20161539,
  Title                    = {Adopting collaborative games into Open Kanban},
  Author                   = {Przybylek, A. and Olszewski, M.K.},
  Year                     = {2016},
  Editor                   = {Ganzha M., Paprzycki M., Maciaszek L.},
  Note                     = {cited By 0},
  Pages                    = {1539-1543},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {The crucial element of any agile project is people. Not surprisingly, principles and values such as 'espect for people', 'Communication and Collaboration', 'Lead using a team approach', and 'Learn and improve continuously' are an integral part of Open Kanban. However, Open Kanban has not provided any tools or techniques to aid the human side of software development. Moreover, as a Lean initiative, it is not as comprehensively defined process as Scrum or XP. Accordingly, inexperienced Kanban teams may feel a bit lost. To deal with these challenges, we propose an extension to Open Kanban, which contains a set of 12 collaborative games. The feedback received from three Kanban teams who leveraged our extension in commercial projects, indicates that the adopted games improved participants' communication, commitment, motivation and creativity. © 2016 Polish Information Processing Society.},
  Art_number               = {7733456},
  Document_type            = {Conference Paper},
  Doi                      = {10.15439/2016F509},
  ISBN                     = {9788360810903},
  Journal                  = {Proceedings of the 2016 Federated Conference on Computer Science and Information Systems, FedCSIS 2016},
  Keywords                 = {Information systems; Software engineering, Collaborative games; Commercial projects; Communication and collaborations; Integral part, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85007200853&doi=10.15439%2f2016F509&partnerID=40&md5=7dc569122c4b5ef539e7f9f3a37be7f4}
}

@Article{Radhakrishnan2015432,
  Title                    = {XSOFT: A generic software teaching and learning model},
  Author                   = {Radhakrishnan, P. and Kanmani, S. and Nandhini, M.},
  Journal                  = {Computer Applications in Engineering Education},
  Year                     = {2015},
  Note                     = {cited By 0},
  Number                   = {3},
  Pages                    = {432-442},
  Volume                   = {23},

  Abstract                 = {The attitude of software learning by students relies on transforming the Learning Model consistently into Software Development Model. The effort and time taken for development of different phases of software, has few issues, in particular, the principles and practices to be followed in academia. To address these issues, a generic software teaching and learning model called eXtreme Software Teaching (XSOFT) is proposed by integrating the essence of the Extreme Programming (XP) method with COSMIC FFP (Common Software Measurement Integration Consortium Full Function Point) Standards. The effectiveness of this proposed model was tested on real time projects assigned to students as a realistic study by selecting them with equal skill and knowledge on programming. They were divided into two groups, such as Pair Programmers and Solo Programmers. The performances of these groups are measured with respect to the trade in person-days using XSOFT. The empirical results show that the assessment of person-days are less on pair programming than solo programming and effective programming skill is found with pair programmers. In addition, the robustness of this model are confirmed by the results of another real time project as case study. © 2014 Wiley Periodicals, Inc.},
  Author_keywords          = {COSMIC FFP; extreme programming; learning; pair programming; software development; solo programming; teaching},
  Coden                    = {CAPEE},
  Document_type            = {Article},
  Doi                      = {10.1002/cae.21613},
  ISSN                     = {10613773},
  Keywords                 = {Computer programming; Software engineering; Students; Teaching, COSMIC FFP; EXtreme Programming; Full function points; learning; Pair-programming; Principles and practices; Software development models; Teaching and learning, Software design},
  Publisher                = {John Wiley and Sons Inc.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84927616269&doi=10.1002%2fcae.21613&partnerID=40&md5=f8c8fc233e00b3a9eb76ca2407cccc40}
}

@Conference{Raith2014630,
  Title                    = {Media supported workspaces in agile software development: Doctoral symposium paper},
  Author                   = {Raith, F. and Lindermeier, R.},
  Year                     = {2014},
  Editor                   = {Chang C.K., Hurson A., McMillin B., Gao Y., Yoshida K., Okabe Y., Matskin M., Seceleanu C.},
  Note                     = {cited By 0},
  Pages                    = {630-633},
  Publisher                = {IEEE Computer Society},

  Abstract                 = {The use of software tools has become a common practice in global software engineering to handle requirements and to exchange project status amongst distributed teams and stakeholders. In context of agile software development the replacement of paper-based media (e.g. Task Board) with software tools results in heavily decreased collaboration and transparency within agile teams. Since the number of agile projects in global context increases, it is necessary to find an adequate solution to share project status without influencing the underlying agile process in a negative way. The proposed research project investigates why the replacement of paper-based media has such strong influence on group work in agile teams. Thereby, the focus of research is on the agile Task Board as the most important example for paper-based media of agile workspaces. With help of these findings we will develop a conceptual and technical solution, based on optical tracking of a paper-based Task Board, to share project status amongst stakeholders. The paper introduces the current state of the art, corresponding research questions, the entire research methods and current progress of our research. © 2014 IEEE.},
  Art_number               = {6899279},
  Author_keywords          = {Agile Development; Distributed Development; Informative Workspace; Task Board},
  Coden                    = {PSICD},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/COMPSAC.2014.46},
  ISSN                     = {07303157},
  Journal                  = {Proceedings - International Computer Software and Applications Conference},
  Keywords                 = {Application programs; Computer software; Engineering research; Software design, Agile development; Agile software development; Distributed development; Focus of researches; Global software engineering; Informative workspace; Task Board; Technical solutions, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84928607669&doi=10.1109%2fCOMPSAC.2014.46&partnerID=40&md5=8d48e3e190a3db667efb4fa6cece78f7}
}

@Conference{Rajkumar2016,
  Title                    = {DevOps culture and its impact on cloud delivery and software development},
  Author                   = {Rajkumar, M. and Pole, A.K. and Adige, V.S. and Mahanta, P.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {DevOps presents a significant broader perspective in delivering software solutions. The perception of DevOps being a mere tool has been formulated into a change in culture, paradigms in automation, clarity in measuring risks and facilitating ease of sharing. DevOps has been responsible for companies to move from a monolithic pace of software releases to an agile mindset. This paper discovers the significance of DevOps and tries to explore the process of transformation from a legacy method and onto the impact of the change on overall architecture and software scale out. The transformation from a legacy mindset to agile mindset requires a formidable change to the organizational setup. The journey of adoption of such a culture requires various degrees of effort and techniques. In this paper, we cover the concepts, adoption strategies and the impact of such adoption strategies. © 2016 IEEE.},
  Art_number               = {7578902},
  Author_keywords          = {Agile; Culture; DevOps; Leadership},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICACCA.2016.7578902},
  ISBN                     = {9781509006731},
  Journal                  = {Proceedings - 2016 International Conference on Advances in Computing, Communication and Automation, ICACCA 2016},
  Keywords                 = {Automation; Cell culture; Risk perception, Agile; DevOps; Leadership; Software release; Software solution, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84995451736&doi=10.1109%2fICACCA.2016.7578902&partnerID=40&md5=3282db067114afd5aa72fb778af07ec0}
}

@Conference{Raju201344,
  Title                    = {Kanban pull and flow - A transparent workflow for improved quality and productivity in software developmet},
  Author                   = {Raju, H.K. and Krishnegowda, Y.T.},
  Year                     = {2013},
  Note                     = {cited By 0},
  Number                   = {645 CP},
  Pages                    = {44-51},
  Publisher                = {Institution of Engineering and Technology},
  Volume                   = {2013},

  Abstract                 = {In software industry, there has been a significant focus shift from sequential waterfall model to iterative agile/scrum methods to continuous lean software development in the last several years. Traditional waterfall model is the dominant project management paradigm, agile methodology is direct response to waterfall model, and lean is recent one. In practice, when software companies make an attempt to adopt agile/scrum methods, the team is unwilling to alter their way of doing the day-to-day work. The mismatch between the processes makes the team very difficult to accept the new approach and ultimately regress to their former process - waterfall model. On the other hand, flowbased Kanban offers an opportunity to build on what is already working well and gradually makes the transformation to better process. Kanban is based on lean principles. There have been a lot of attempts for making Kanban suitable for software development process.},
  Author_keywords          = {Agile methodologies; Kanban; Scrum; Software development; Visualization; Waterfall model; Work-in-progress; Workflow},
  Document_type            = {Conference Paper},
  Doi                      = {10.1049/cp.2013.2233},
  ISBN                     = {9781849198424},
  Journal                  = {IET Conference Publications},
  Keywords                 = {Communication; Flow visualization; Project management; Software design; Software engineering, Agile Methodologies; Kanban; Scrum; Waterfall model; Work-in-progress; Workflow, Iterative methods},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84903277373&doi=10.1049%2fcp.2013.2233&partnerID=40&md5=ad0c70eb596125d87cda0c64826853c7}
}

@Conference{Rakshith2013381,
  Title                    = {An improvised prespective to agile methodology},
  Author                   = {Rakshith, H.P. and Patil, A.P.},
  Year                     = {2013},
  Note                     = {cited By 4},
  Pages                    = {381-384},

  Abstract                 = {In last few years, anecdotal evidence of mostly positive experiences with the implementation of agile development has emerged from various case studies. This enables data gathering from a larger sample of organizations, to learn about the factors driving the adoption and use of agile practices, and their benefits and challenges as perceived by early adopters of this software development methodology. From the studies it's discovered that present agile methodologies have some unsuitable practices. These practices can be revisited and thus a new model for agile methodology is proposed in this paper, which increases the productivity. © 2013 IEEE.},
  Art_number               = {6650204},
  Author_keywords          = {agile; analyzers; Snoopers},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICSEngT.2013.6650204},
  ISBN                     = {9781479910304},
  Journal                  = {Proceedings - 2013 IEEE 3rd International Conference on System Engineering and Technology, ICSET 2013},
  Keywords                 = {agile; Agile development; Agile Methodologies; Agile practices; Anecdotal evidences; Positive experiences; Snoopers; Software development methodologies, Analog differential analyzers; Systems engineering, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84891069008&doi=10.1109%2fICSEngT.2013.6650204&partnerID=40&md5=d41831bed995650a07a7507bc8093caa}
}

@Conference{Ralph2013,
  Title                    = {Complexity, process and agility in small development teams: An exploratory case study},
  Author                   = {Ralph, P. and Narros, J.E.},
  Year                     = {2013},
  Note                     = {cited By 0},
  Publisher                = {Pacific Asia Conference on Information Systems},

  Abstract                 = {The extensive prescriptive literature on software and information systems development methods routinely recommends more methodical, plan-driven approaches for more complex projects and more agile, adaptive approaches for less complex projects. This paper presents a revelatory case study in which a team with no imposed method successfully used a more methodical, plan-driven approach for a simple project and a more adaptive, amethodical approach for a more complex project. Furthermore, the team explicitly and intentionally transitioned a less methodical, more adaptive process to cope with the increasing complexity of the second project. This pattern directly contradicts the dominant narrative advocated in methods literature. The paper adopts the theory of complex adaptive systems to analyze and understand the observed pattern and deconstruct the dominant narrative.},
  Author_keywords          = {Agility; Complex adaptive systems; Information systems development; Software engineering},
  Document_type            = {Conference Paper},
  Journal                  = {Proceedings - Pacific Asia Conference on Information Systems, PACIS 2013},
  Keywords                 = {Adaptive systems; Management information systems; Software engineering, Adaptive approach; Adaptive process; Agility; Complex adaptive systems; Complex projects; Development teams; Exploratory case studies; Information systems development, Information systems},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84928484947&partnerID=40&md5=102ebfe920b32ec1c94079e6bcb35cae}
}

@Conference{Ramadani2015134,
  Title                    = {Secure Software Engineering for Agile Methodology: Preliminary Investigation},
  Author                   = {Ramadani, L. and Utama, N.I.},
  Year                     = {2015},
  Note                     = {cited By 0},
  Pages                    = {134-139},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Secure engineering is relatively more popular for software development methodologies which use standard SDLC such as waterfall, prototyping, etc. However, for agile methodologies (such as extreme programming, scrum, etc.), the adoption of secure engineering is still a debate among academics and practitioners since it potentially alter the nature of agile. This paper tries to investigate farthest works of the adaptation of secure engineering to agile methods, and to compile best propositions on how to conduct agile software development by still adhering security principles. From the review, addition/recruitment of security engineer into team is the most appreciated, while the modification of agile methodology and project management is not really favored by practitioners. This paper will be a starting point of further study to fill research/knowledge gap which is provided in this paper. © 2015 IEEE.},
  Art_number               = {7224607},
  Author_keywords          = {agile methodology; Secure software; software engineering},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICCTIM.2015.7224607},
  ISBN                     = {9781479962112},
  Journal                  = {2015 2nd International Conference on Computing Technology and Information Management, ICCTIM 2015},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84959478836&doi=10.1109%2fICCTIM.2015.7224607&partnerID=40&md5=1b791659f971cea494da2314853601fe}
}

@Conference{Ramos20141417,
  Title                    = {EXtreme enterprise architecture planning},
  Author                   = {Ramos, H. and Vasconcelos, A.},
  Year                     = {2014},
  Note                     = {cited By 1},
  Pages                    = {1417-1419},
  Publisher                = {Association for Computing Machinery},

  Abstract                 = {When developing enterprise architectures, in the same way as software products, companies have to deal a constant growth on the clients demand for faster results, while facing, at the same time, a big uncertainty on the requirements surrounding the project. This paper tries to investigate the similarities between the difficulties faced in both industries of EA and software development, and propose an extension to Enterprise Architecture Planning methodology [1], by introducing "agile" characteristics into it as a way to address the problems identified. Copyright 2014 ACM.},
  Author_keywords          = {Agile; Business model; Cycles; Enterprise Architecture; Enterprise Architecture Planning; Extreme Programming; Iterations; Methodology; Partitioning; Processes; Reference model; Scrum; Software Development},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2554850.2555130},
  ISBN                     = {9781450324694},
  Journal                  = {Proceedings of the ACM Symposium on Applied Computing},
  Keywords                 = {Computation theory; Processing; Software engineering, Agile; Business modeling; Cycles; Enterprise Architecture; Enterprise architecture planning; EXtreme Programming; Iterations; Methodology; Partitioning; Reference modeling; Scrum, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84905638818&doi=10.1145%2f2554850.2555130&partnerID=40&md5=fb24a0454ddccf6a3418466cea2a1c7c}
}

@Conference{Ramos2014376,
  Title                    = {Extreme enterprise architecture planning (XEAP): Extrapolating agile characteristics to the development of enterprise architectures},
  Author                   = {Ramos, H. and Vasconcelos, A.},
  Year                     = {2014},
  Note                     = {cited By 0},
  Pages                    = {376-383},
  Publisher                = {SciTePress},
  Volume                   = {3},

  Abstract                 = {When developing enterprise architectures, in the same way as software products, companies have to deal a constant growth on the clients demand for faster results, while facing, at the same time, a big uncertainty on the requirements surrounding the project. This paper tries to investigate the similarities between the difficulties faced in both industries of enterprise architecture (EA) and software development, and propose an extension to an existent EA development methodology, in order to address those difficulties using particular agile software development methodologies characteristics. This new extension tries to introduce agile characteristics such as several iterations, solution partitioning and constant client feedback in order to deliver faster results and have a bigger capacity of response to the change of requirements, when compared with the standard methodologies. To do so, the first iteration is based on a reference model and the next ones follow the Enterprise Architecture Planning (EAP) methodology steps and are adaptable to the business itself. After presenting our proposal we make the demonstration of the methodology developed, applying it to a real-world problem of local organization called Cascais Ambiente, responsible for the maintenance of the environmental health in Cascais city.},
  Author_keywords          = {Agile; Business Model; Cycles; Enterprise Architecture; Enterprise Architecture Planning; Extreme Programming; Iterations; Macro-Processes; Methodology; Partitioning; Processes; Reference Model; Scrum; Software Development; Sub-Processes; TOGAF ADM},
  Document_type            = {Conference Paper},
  ISBN                     = {9789897580291},
  Journal                  = {ICEIS 2014 - Proceedings of the 16th International Conference on Enterprise Information Systems},
  Keywords                 = {Industry; Information systems; Models; Processing; Software design; Software engineering, Agile; Business modeling; Cycles; Enterprise Architecture; Enterprise architecture planning; EXtreme Programming; Iterations; Macro-Processes; Methodology; Partitioning; Reference modeling; Scrum; Sub-Processes, Iterative methods},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84902342317&partnerID=40&md5=e6578c9da9e25775748369b51da51113}
}

@Article{Rana2016849,
  Title                    = {Supply chain strategies and responsiveness: A study on retail chain stores},
  Author                   = {Rana, S.M.S. and Osman, A. and Abdul Manaf, A.H. and Solaiman, M. and Abdullah, M.S.},
  Journal                  = {International Business Management},
  Year                     = {2016},
  Note                     = {cited By 0},
  Number                   = {6},
  Pages                    = {849-857},
  Volume                   = {10},

  Abstract                 = {This study aims at empirically analyzing the impacts of supply chain strategies in influencing the retail supply chain responsiveness. For the purpose of the study, the researchers collected the data with a structured questionnaire from 115 outlets managers of some selected retail chain stores in Bangladesh. Collected data were analyzed using Partial Least Squares Method with smart PLS Software Version 2.0M3. The present study has shown some meaningful findings regarding the determinants of retail supply chain performance. Firstly, it is found in the study that agile supply chain strategy is the most pivotal factor influencing retail supply chain responsiveness. The lean strategy was also found to be a contributor to the retail supply chain responsiveness but insignificant while hybrid strategy was found to exhort very weak influence in increasing the responsiveness of retail supply chain. The findings of this study can benefit the supply chain managers involved in retailing. From this study, retail managers can know which strategy they should adopt to bring forth substantial advantage for the companies by maintaining responsiveness in their supply chain. With the application of supply chain strategy, retailers can make a wise decision to increase organizational performance and to remain responsive to customer preferences. This study is one of the novelties in supply chain management research because it explored the influence of supply chain strategies as the determinants of retail supply chain responsiveness. © Medwell Journals, 2016.},
  Author_keywords          = {Bangladesh; PLS; Responsiveness; Retail chain stores; Supply chain strategies},
  Document_type            = {Article},
  Doi                      = {10.3923/ibm.2016.849.857},
  ISSN                     = {19935250},
  Publisher                = {Medwell Journals},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84953791168&doi=10.3923%2fibm.2016.849.857&partnerID=40&md5=2044524d1b21cb291fc0cfabd668a1f9}
}

@Conference{Rathod2015,
  Title                    = {Test orchestration a framework for Continuous Integration and Continuous deployment},
  Author                   = {Rathod, N. and Surve, A.},
  Year                     = {2015},
  Note                     = {cited By 1},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Theenterprises follow Agile Software Development methodology to because business requirements changes frequently. InAgile Software Developmentmethodology, it is essential to continuously integrate the component into a main trunk of a project to test the new component of the system. Then test all the component of the project; this happens frequently so it needs to streamlineprocesses to orchestrate the tests. So it is difficult to manage the software development life cycle for those changes and maintain the software code quality. To maintain the product quality it is essential to integrate the product component and need to deploy a product on pre-production environment and test the product. Hence the need for Continuous Integration and Continuous Delivery process for software product. The popularization of DevOps, and cloud computing has revolutionized the software delivery process- making it faster and affordable for business to release their software continuously. Hence Enterprises need for reliable and predictable delivery process of software. The objective of the paper is to design an effective framework for automated testing and deployment to help to automate the code analysis, test selection, test scheduling, environment provisioning, test execution,results analysis and deployment pipeline. Test orchestration framework typically very complicated to develop such pipeline to make software reliable, and bug free. For environment provisioning can be provided through virtualization and cloud computing. © 2015 IEEE.},
  Art_number               = {7087120},
  Author_keywords          = {Agile Software Development; Cloud Computing; Continious Deployment (CD); ContinuousIntegration (CI); Delivery Pipeline; DevOps; Test Oracle; Test Orchestration},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/PERVASIVE.2015.7087120},
  ISBN                     = {9781479962723},
  Journal                  = {2015 International Conference on Pervasive Computing: Advance Communication Technology and Application for Society, ICPC 2015},
  Keywords                 = {Cloud computing; Computer software; Life cycle; Pipeline codes; Pipelines; Scheduling; Software design; Software engineering; Testing; Ubiquitous computing, Agile software development; Continious Deployment (CD); ContinuousIntegration (CI); DevOps; Test oracles, Software testing},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84929237628&doi=10.1109%2fPERVASIVE.2015.7087120&partnerID=40&md5=9c07f374de01dc3a7d9e56aa15cead0b}
}

@Article{Ray2013684,
  Title                    = {Security considerations for the spiral development model},
  Author                   = {Ray, L.L.},
  Journal                  = {International Journal of Information Management},
  Year                     = {2013},
  Note                     = {cited By 0},
  Number                   = {4},
  Pages                    = {684-686},
  Volume                   = {33},

  Abstract                 = {Security measures have been well established within the waterfall development life cycle model. However, more software projects are using the spiral development life cycle model. Software developers and project managers can easily forget about adapting security measures. The spiral model uses iterative steps that can create changes in each phase of software development process. This will challenge security to ensure the application has few flaws or vulnerabilities that could be exploited. Failure to impose the right security measures at each of these phases can open up vulnerabilities for hackers to exploit and prove costly in patching. This paper will explore areas where security can be engaged within each iteration step of the spiral development model. This way security can continue protection of the software product as it becomes ready for deployment. The paper will help organizations realize where to deploy security measures to reduce vulnerabilities in the software application. © 2013 Elsevier Ltd. All rights reserved.},
  Author_keywords          = {Risk; Software development; Spiral development life},
  Coden                    = {IJMAE},
  Document_type            = {Article},
  Doi                      = {10.1016/j.ijinfomgt.2013.03.003},
  ISSN                     = {02684012},
  Keywords                 = {Life cycle model; Security considerations; Software applications; Software developer; Software development process; Software products; Software project; Spiral development, Life cycle; Personal computing; Risks; Software engineering, Application programs},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84878554755&doi=10.1016%2fj.ijinfomgt.2013.03.003&partnerID=40&md5=547ec2a45686f639adbe0841f9bf8846}
}

@Conference{Razavi2014216,
  Title                    = {Agile development in large and distributed environments: A systematic literature review on organizational, managerial and cultural aspects},
  Author                   = {Razavi, A.M. and Ahmad, R.},
  Year                     = {2014},
  Editor                   = {Jawawi D.N.A., Sulaiman S., Mohamad R., Sa'Adon N.A.},
  Note                     = {cited By 1},
  Pages                    = {216-221},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Agile Software Development has been around for more than a decade. Over this period, the focus of applications, problems and consequently research themes has been changed dramatically. However, the main efforts have been arguably yielded to employ agile development in large and distributed environments. This imposes sophisticated needs to deal with e.g. project definition and management in such environments, as well as techniques and methods for communication, coordination, collaboration, etc., and even, the resulting cultural and organizational problems. This paper provides a systematic literature review in which main problems and themes of agile software development in large organizations, systems or projects and/or in distributed teams and environments have been sought and classified. The source of data is limited to IEEE publishing whether conferences or journals, and from 2005 onward. The results show that the major problems chronologically began with issues of cultural readiness, method implementation/adoption and project management, and then for the most recent years, the emphasis has been mainly switched to quality management as well as communication and collaboration mechanisms. Meanwhile, the results also reveal that indeed large organizations are even more eager and pioneer to transition to agile development due to their high degrees of cost as well as competitiveness. This fact paves the way to use their valuable, early experiences for other large as well as medium and small teams and organizations particularly those who have not switched yet. The study ends up with a few predictions for the future of agile development research themes in large and distributed environments. © 2014 IEEE.},
  Art_number               = {6986017},
  Author_keywords          = {Agile Methods; Agile Software Development; Distributed Teams; Global Environments; Large Organizations; Offshore Development; Systematic Literature Review},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/MySec.2014.6986017},
  ISBN                     = {9781479954391},
  Journal                  = {2014 8th Malaysian Software Engineering Conference, MySEC 2014},
  Keywords                 = {Project management; Quality management; Reviews; Societies and institutions; Software design, Agile methods; Agile software development; Distributed teams; Global environment; Large organizations; Offshore development; Systematic literature review, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84929323656&doi=10.1109%2fMySec.2014.6986017&partnerID=40&md5=af1cff7437e47847c360a0d530aa71a0}
}

@Book{Razavi2016175,
  Title                    = {Agile software development challenges in implementation and adoption: Focusing on large and distributed settings - past experiences, emergent topics},
  Author                   = {Razavi, A.M. and Ahmad, R.},
  Publisher                = {IGI Global},
  Year                     = {2016},
  Note                     = {cited By 0},

  Abstract                 = {The first part of this chapter presents the results of a systematic literature review on Agile Software Development (ASD) challenges as are reported in implementation and adoption cases. The data only considers the concrete evidences of surfaced problems mainly according to work experience and case study articles. The results are analyzed so that types, nature and intensity of the problems are determined and, compared to each other, within three major classifications of "large organizations", "distributed settings" and "both large and distributed environments". The analysis reveals that, in ASD, common organizational and managerial issues have been replaced by communication and collaboration problems. The second part uses the results of the part one as a frame of analysis to render more interpretations e.g. signifying that non-agility preconceptions are the root of a majority of problematic projects. Besides, mediating between agile projects and traditional forms of management, and, economic governance are two major rival approaches that are emerging in response to these challenges. © 2016 by IGI Global. All rights reserved.},
  Document_type            = {Book Chapter},
  Doi                      = {10.4018/978-1-4666-9858-1.ch010},
  ISBN                     = {9781466698598; 1466698586; 9781466698581},
  Journal                  = {Emerging Innovations in Agile Software Development},
  Pages                    = {175-207},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84981506669&doi=10.4018%2f978-1-4666-9858-1.ch010&partnerID=40&md5=d46add4d6e2f55448eab6c149e86ee90}
}

@Article{Razzak2016746,
  Title                    = {Transition from plan-driven to agile: An action research},
  Author                   = {Razzak, M.A.},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {746-750},
  Volume                   = {10027 LNCS},

  Abstract                 = {Nowadays, many individuals and teams involved on projects are already using agile development techniques as part of their daily work. However, we have much less experience in how to scale and manage agile practices in distributed software development. At this level, there is an increasing need to standardize best practices to avoid reinvention and miscommunication across artifacts and processes. So, the emerging growth of frameworks i.e.; Scaled Agile Framework (SAFe R ®) in industry requires an academic attention because SAFe R ® does not cover all aspects of agility required in a distributed environment context. Early adopter of SAFe R ® also reported that, geographically distributed teams experience lower productivity due to lack of alignment and solid program execution. On the other hand, Global Teaming Model (GTM) places particular emphasis on the organization and management of globally distributed development teams, it does not specify how to develop software using Agile and Lean principles. Furthermore, the GTM recommended practices are normative, and do not prescribe how to implement the practice. Thus, we hypothesize that combining SAFe R ® practices, together with GTM recommendations will provide practitioners with a framework of implementable practices. © Springer International Publishing AG 2016.},
  Author_keywords          = {Agile; Global software development; Global teaming model; Scaled agile framework},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-49094-6_64},
  Editor                   = {Amasaki S., Mikkonen T., Felderer M., Abrahamsson P., Duc A.N., Jedlitschka A.},
  ISBN                     = {9783319490939},
  ISSN                     = {03029743},
  Keywords                 = {Human resource management; Process engineering; Software engineering, Agile; Distributed development teams; Distributed environments; Distributed software development; Geographically distributed teams; Global software development; Organization and management; Scaled agile framework, Software design},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84998706977&doi=10.1007%2f978-3-319-49094-6_64&partnerID=40&md5=5c3b8335e88ab6e5ac43bdeab84638bb}
}

@Conference{Razzak201661,
  Title                    = {An empirical study on lean and agile methods in global software development},
  Author                   = {Razzak, M.A.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {61-64},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Nowadays, many individuals and teams involved on projects are already using agile development techniques as part of their daily work. However, we have much less experience in how to scale and manage agile practices in distributed software development. Distributed and global development-that requiring attention to many technical, organizational, and cultural issues as the teams interact to cooperatively delivery the solution. Alongside, very large team sizes, teams of teams, and more complex management structures forcing additional attention to coordination and management. At this level, there is an increasing need to standardize best practices to avoid reinvention and miscommunication across artifacts and processes. Complexity issues in enterprise software delivery can have significant impact on the adoption of agile approaches. As a consequence, agile strategies will typically need to be evaluated, tailored, and perhaps combined with traditional approaches to suit the particular context. The characteristics of software products and software development processes open up new possibilities that are different from those offered in other domains to achieve leanness and flexibility. Whilst Lean principles are universal, a further understanding of the techniques required to apply such principles from a software development angle. Thus, the aim of this research is to identify, how can combination of Lean and Agile practices facilitate to scale and manage distributed software development. © 2016 IEEE.},
  Art_number               = {7579487},
  Author_keywords          = {Agile; Global Software Development; Lean Software Development; Scaling agile},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICGSEW.2016.22},
  ISBN                     = {9781509036257},
  Journal                  = {Proceedings - 11th IEEE International Conference on Global Software Engineering Companion Proceedings, ICGSEW 2016},
  Keywords                 = {Coordination reactions; Enterprise software; Human resource management; Software engineering, Agile; Coordination and management; Distributed software development; Global software development; Lean software development; Scaling agile; Software development process; Traditional approaches, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84994651172&doi=10.1109%2fICGSEW.2016.22&partnerID=40&md5=9bc2076a555c7deac693f0642b71f5d0}
}

@Conference{Razzak20141431,
  Title                    = {Knowledge sharing in distributed agile projects: Techniques, strategies and challenges},
  Author                   = {Razzak, M.A. and Ahmed, R.},
  Year                     = {2014},
  Note                     = {cited By 3},
  Pages                    = {1431-1440},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Knowledge management (KM) is essential for success in global software development. Software organizations are now managing knowledge in innovative ways to increase productivity. In agile software development, collaboration and coordination depend on the communication, which is the key to success. To maintain effective collaboration and coordination in distributed agile projects, practitioners need to adopt different types of knowledge sharing techniques and strategies. There are also few studies that focus on knowledge sharing in distributed agile projects. This research identified the knowledge sharing techniques and strategies applied by the practitioners in distributed agile projects. Challenges faced by the practitioners during knowledge sharing in distributed agile projects are also identified and discussed. © 2014 Polish Information Processing Society.},
  Art_number               = {6933185},
  Author_keywords          = {agile; distributed; Global software development; knowledge management; knowledge sharing},
  Document_type            = {Conference Paper},
  Doi                      = {10.15439/2014F280},
  ISBN                     = {9788360810583},
  Journal                  = {2014 Federated Conference on Computer Science and Information Systems, FedCSIS 2014},
  Keywords                 = {Knowledge management; Software design, agile; Agile software development; distributed; Global software development; Knowledge-sharing; Software organization, Project management},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84912141679&doi=10.15439%2f2014F280&partnerID=40&md5=47d6085944a52c67facd4e27fe455886}
}

@Article{Razzak2015107,
  Title                    = {Knowledge management in distributed agile software development projects},
  Author                   = {Razzak, M.A. and Bhuiyan, T. and Ahmed, R.},
  Journal                  = {IFIP Advances in Information and Communication Technology},
  Year                     = {2015},
  Note                     = {cited By 0},
  Pages                    = {107-131},
  Volume                   = {469},

  Abstract                 = {Knowledge management (KM) is essential for success in global software development. Software organizations are now managing knowledge in innovative ways to increase productivity. In agile software development, collaboration and coordination depend on the communication, which is the key to success. To maintain effective collaboration and coordination in distributed agile projects, practitioners need to adopt different types of knowledge sharing techniques and strategies. There are also few studies that focus on knowledge sharing in distributed agile projects. This research investigates the knowledge sharing techniques and strategies applied by the practitioners in distributed agile projects. In addition to that, challenges faced by the practitioners during knowledge sharing in distributed agile projects are also identified and discussed. © IFIP International Federation for Information Processing 2015},
  Author_keywords          = {Agile; Distributed; Global software development; Knowledge management; Knowledge sharing},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-28868-0_7},
  Editor                   = {Owoc M.L., Mercier-Laurent E., Boulanger D.},
  ISBN                     = {9783319288673},
  ISSN                     = {18684238},
  Keywords                 = {Artificial intelligence; Information management; Project management; Software design; Software engineering, Agile; Agile software development; Agile software development projects; Distributed; Global software development; Knowledge-sharing; Software organization, Knowledge management},
  Publisher                = {Springer New York LLC},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958978124&doi=10.1007%2f978-3-319-28868-0_7&partnerID=40&md5=f444de9c87503db931e28ff55ed86c1b}
}

@Conference{Reveco2014,
  Title                    = {Implementing kanban for agile process management within the aLMA Software Operations Group},
  Author                   = {Reveco, J. and Mora, M. and Shen, T.-C. and Soto, R. and Sepulveda, J. and Ibsen, J.},
  Year                     = {2014},
  Note                     = {cited By 1},
  Publisher                = {SPIE},
  Volume                   = {9152},

  Abstract                 = {After the inauguration of the Atacama Large Millimeter/submillimeter Array (ALMA), the Software Operations Group in Chile has refocused its objectives to: (1) providing software support to tasks related to System Integration, Scientific Commissioning and Verification, as well as Early Science observations; (2) testing the remaining software features, still under development by the Integrated Computing Team across the world; and (3) designing and developing processes to optimize and increase the level of automation of operational tasks. Due to their different stakeholders, each of these tasks presents a wide diversity of importances, lifespans and complexities. Aiming to provide the proper priority and traceability for every task without stressing our engineers, we introduced the Kanban methodology in our processes in order to balance the demand on the team against the throughput of the delivered work. The aim of this paper is to share experiences gained during the implementation of Kanban in our processes, describing the difficulties we have found, solutions and adaptations that led us to our current but still evolving implementation, which has greatly improved our throughput, prioritization and problem traceability. © 2014 SPIE.},
  Art_number               = {91521M},
  Author_keywords          = {agile; ALMA; Kanban; software support},
  Coden                    = {PSISD},
  Document_type            = {Conference Paper},
  Doi                      = {10.1117/12.2055646},
  ISBN                     = {9780819496201},
  ISSN                     = {0277786X},
  Journal                  = {Proceedings of SPIE - The International Society for Optical Engineering},
  Keywords                 = {Astronomy; Verification, agile; ALMA; Atacama Large Millimeter/sub-millimeter Array (ALMA); Integrated computing; Kanban; Level of automations; Software support; System integration, Software testing},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84906901601&doi=10.1117%2f12.2055646&partnerID=40&md5=ee4f3f94a09b3581fdef1c8321f9d681}
}

@Book{Rico2013269,
  Title                    = {Supporting Agile Software Development and Deployment in the Cloud: A Multitenant, Multitarget Architecture},
  Author                   = {Rico, A. and Noguera, M. and Garrido, J.L. and Benghazi, K. and Chung, L.},
  Publisher                = {Elsevier Inc.},
  Year                     = {2013},
  Note                     = {cited By 1},

  Abstract                 = {Running a dedicated instance of a software application can be burdensome to a customer if it involves a large amount of memory and processing overhead or a licensing fee or if the customer is a small company. Multitenancy (MT) architectures (MTAs) allow for multiple customers (i.e., tenants) to be consolidated into the same operational system, hence reducing the overhead via amortization over several customers. Lately, MTAs are drawing increasing attention because MT is regarded as an essential attribute of cloud computing and its new software delivery model, Software as a Service. In a moment of debate about the coexistence between architecture and agility, we introduce in this chapter a multitenancy, multitarget architecture (MT2A). MT2As are an evolution of traditional MTAs that reduce the various overhead by providing multiple services instead of a single service. In MT2As, there are new components added to the corresponding MTAs to manage the (now possibly) multiple services. MT2A is intended to support traditional agile development, as well as rapid deployment, by enabling the reuse of common components of the architecture. In this chapter, we also present an implementation of the architecture through an MT2 system called Globalgest. © 2014 Elsevier Inc. All rights reserved.},
  Author_keywords          = {Agility; Cloud computing; Multitenancy; Software architecture; Software as a service},
  Document_type            = {Book Chapter},
  Doi                      = {10.1016/B978-0-12-407772-0.00010-1},
  ISBN                     = {9780124077720},
  Journal                  = {Agile Software Architecture: Aligning Agile Processes and Software Architectures},
  Pages                    = {269-288},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84902428870&doi=10.1016%2fB978-0-12-407772-0.00010-1&partnerID=40&md5=12cf49834d5b1f6c40400326ab7adf20}
}

@Book{Rikkilä2013132,
  Title                    = {Agile, lean, and service- oriented development, continuum, or chasm},
  Author                   = {Rikkilä, J.},
  Publisher                = {IGI Global},
  Year                     = {2013},
  Note                     = {cited By 3},
  Volume                   = {1-4},

  Abstract                 = {A fad, hype, and a paradigm shift are often the words that are used about the agile, lean, and now also about service-oriented development. What starts as a step in evolution, grows into a mass movement in Internet and social media, and results in an avalanche of books, training, and consultancy services. Each proponent tries to differentiate from others with extreme statements of own superiority and blames of others' shortcomings. Only a next fad, hype, or paradigm shift seems to be able to override the previous. This chapter looks through the fad, hype, or paradigm shift statements and describes the principles of the agile and lean approaches to the software development. Then it introduces the service orientation that is expected to be the next major shift. If it will overshadow the agile and lean excitement in the software industry, is discussed at the end of the chapter. In addition, this chapter looks into the past in order to find a continuum between these topics till today and to the future. Further some chasms in this continuum are identified, where a new idea has made a major shift and consequently has become a major force in the field. The service orientation in the software development is in the early phase of its lifecycle. The question is: will it still go through some chasm until it settles for large use, or is it already through all of adaptations and ready to be the next wave of evolution, or the next fad, hype and paradigm shift in software industry? The last part of this chapter proposes one more adaptation that creates continuum from the agile and lean approaches but brings up also the revitalization of architecting and design methodologies. © 2014, IGI Global.},
  Document_type            = {Book Chapter},
  Doi                      = {10.4018/978-1-4666-4301-7.ch008},
  ISBN                     = {9781466643024; 1466643013; 9781466643017},
  Journal                  = {Software Design and Development: Concepts, Methodologies, Tools, and Applications},
  Pages                    = {132-163},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84944399176&doi=10.4018%2f978-1-4666-4301-7.ch008&partnerID=40&md5=890d6f53eacf3f331e26be7fa4a1d500}
}

@Conference{Rindell2015236,
  Title                    = {Securing scrum for VAHTI},
  Author                   = {Rindell, K. and Hyrynsalmi, S. and Leppänen, V.},
  Year                     = {2015},
  Editor                   = {Sievi-Korte O., Makinen E., Nummenmaa J.},
  Note                     = {cited By 1},
  Pages                    = {236-250},
  Publisher                = {CEUR-WS},
  Volume                   = {1525},

  Abstract                 = {Software security is a combination of security methods, techniques and tools, aiming to promote data confidentiality, integrity, usability, availability and privacy. In order to achieve concrete and measurable levels of software security, several international, national and industry-level regulations have been established. Finnish governmental security standard collection, VAHTI, is one of the most extensive example of these standards. This paper presents a selection of methods, tools, techniques and modifications to Scrum software development method to achieve the levels of security compliant with VAHTI instructions for software development. These comprise of security-specific modifications and additions to Scrum roles, modifications to sprints, and inclusion of special hardening sprints and spikes to implement the security items in the product backlog. Security requirements are transformed to security stories, abuse cases and other security-related tasks. Definition of done regarding the VAHTI requirements on is established and the steps to achieve it are described.},
  Author_keywords          = {Agile; Scrum; Security standards; Software security; VAHTI},
  Document_type            = {Conference Paper},
  ISSN                     = {16130073},
  Journal                  = {CEUR Workshop Proceedings},
  Keywords                 = {Computational linguistics; Computer software; Software engineering, Agile; Scrum; Security standards; Software security; VAHTI, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84962566408&partnerID=40&md5=d2688ac4dd557cfd0a878b901b1cb9fb}
}

@Article{Rivero20171,
  Title                    = {DataMock: An Agile Approach for Building Data Models from User Interface Mockups},
  Author                   = {Rivero, J.M. and Grigera, J. and Distante, D. and Montero, F. and Rossi, G.},
  Journal                  = {Software and Systems Modeling},
  Year                     = {2017},
  Note                     = {cited By 0; Article in Press},
  Pages                    = {1-28},

  Abstract                 = {In modern software development, much time is devoted and much attention is paid to the activity of data modeling and the translation of data models into databases. This has motivated the proposal of different approaches and tools to support this activity, such as semiautomatic approaches that generate data models from requirements artifacts using text analysis and sets of heuristics, among other techniques. However, these approaches still suffer from important limitations, including the lack of support for requirements traceability, the poor support for detecting and solving conflicts in domain-specific requirements, and the considerable effort required for manually checking the generated models. This paper introduces DataMock, an Agile approach that enables the iterative building of data models from requirements specifications, while supporting traceability and allowing inconsistencies detection in data requirements and specifications. The paper also describes how the approach effectively allows improving traceability and reducing errors and effort to build data models in comparison with traditional, state-of-the-art, data modeling approaches. © 2017 Springer-Verlag Berlin Heidelberg},
  Author_keywords          = {Agile methods; Annotations; Data modeling; Mockups; Model-driven development; Requirements engineering; Requirements traceability},
  Document_type            = {Article in Press},
  Doi                      = {10.1007/s10270-017-0586-9},
  ISSN                     = {16191366},
  Keywords                 = {Data structures; Information analysis; Iterative methods; Requirements engineering; Software design; Software engineering; Specifications; User interfaces, Agile approaches; Agile methods; Annotations; Data requirements; Model driven development; Requirements specifications; Requirements traceability; State of the art, Mockups},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85012902060&doi=10.1007%2fs10270-017-0586-9&partnerID=40&md5=7b1e0ba5b79b9a40e2edac90c94e4474}
}

@Article{Rivero20137,
  Title                    = {MockAPI: An agile approach supporting api-first web application development},
  Author                   = {Rivero, J.M. and Heil, S. and Grigera, J. and Gaedke, M. and Rossi, G.},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2013},
  Note                     = {cited By 4},
  Pages                    = {7-21},
  Volume                   = {7977 LNCS},

  Abstract                 = {In the last years, agile development methodologies have been widely adopted. However, they still lack support for API requirements while, at the same time, public RESTful APIs are fueling a rapid growth of web applications providing services built on other services. On the other hand, whereas Model-Driven Development techniques successfully increase the productivity in the development of data-intensive web applications, they lack the agility required when developing heterogeneous web applications with frequent requirement changes. In this paper we introduce MockAPI, an approach based on annotating user interface mockups that combines the advantages of agile approaches and Model-Driven Development. We introduce a metamodel for annotations and demonstrate how to derive running API prototypes as starting point for agile development. RESTful API best practices and API-first development are introduced into the agile process. The MockAPI approach defines a set of constraints to accelerate the development of web applications. We also show the results of a brief validation applying MockAPI to popular web sites. © 2013 Springer-Verlag Berlin Heidelberg.},
  Author_keywords          = {Agile Development; API; Model-Driven Development; Prototyping},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-642-39200-9_4},
  ISBN                     = {9783642391996},
  ISSN                     = {03029743},
  Keywords                 = {Agile approaches; Agile development; Agile development methodologies; API; Data-intensive web applications; Model driven development; Requirement change; Web application development, Applications; Software prototyping; User interfaces, World Wide Web},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84880883758&doi=10.1007%2f978-3-642-39200-9_4&partnerID=40&md5=2dfaf9e8f3905310bbe54e95ad09e10e}
}

@Article{Rivero2014494,
  Title                    = {An extensible, Model-driven and end-user centric approach for API building},
  Author                   = {Rivero, J.M. and Heil, S. and Grigera, J. and Luna, E.R. and Gaedke, M.},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2014},
  Note                     = {cited By 0},
  Pages                    = {494-497},
  Volume                   = {8541},

  Abstract                 = {The implementation of APIs in new applications is becoming a mandatory requirement due to the increasing use of cloud-based solutions, the necessity of integration with ubiquitous applications (like Facebook or Twitter) and the need to facilitate multi-platform support from scratch in the development. However, there is still no theoretically sound process for defining APIs (starting from end-user requirements) or their productive development and evolution, which represents a complex task. Moreover, high-level solutions intended to boost productivity of API development (usually based on Model-Driven Development methodologies) are often difficult to adapt to specific use cases and requirements. In this paper we propose a methodology that allows capturing requirements related to APIs using end-user-friendly artifacts. These artifacts allow quickly generating a first running version of the API with a specific architecture, which facilitates introducing refinements in it through direct coding, as is commonly accomplished in code-based Agile processes. © Springer International Publishing Switzerland 2014.},
  Author_keywords          = {Agile Development; API; Model-Driven Development; Prototyping},
  Document_type            = {Article},
  ISSN                     = {03029743},
  Keywords                 = {Artificial intelligence; Computers; Software prototyping, Agile development; API; End user requirements; Mandatory requirement; Model driven development; Multi-platform; New applications; Ubiquitous application, Social networking (online)},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84921810134&partnerID=40&md5=036383cf29dc65bd6cfca2e8eeb98d55}
}

@Article{Rizvi2015723,
  Title                    = {A systematic review of distributed Agile software engineering},
  Author                   = {Rizvi, B. and Bagheri, E. and Gasevic, D.},
  Journal                  = {Journal of Software: Evolution and Process},
  Year                     = {2015},
  Note                     = {cited By 4},
  Number                   = {10},
  Pages                    = {723-762},
  Volume                   = {27},

  Abstract                 = {The combination of Agile methods and distributed software development via remote teams represents an emerging approach to address the challenges such as late feedback, slow project timelines, and high cost, typically associated with software development projects. However, when projects are implemented using an Agile model with distributed human resources, there are a number of challenges that need to be considered and mitigated. The objectives of our work are multifold. First, we would like to understand the reasons and conditions that lead to the adoption of distributed Agile software engineering (DASE) practices. Second, we would like to investigate and find out the most important risks that threaten a DASE approach and what mitigation strategies exist to address them. Finally, we would like to highlight which of the available approaches among the existing Agile methodologies has been successfully adopted by the community. We intend to solidify our findings by exploring the strength of the evidence that has been reported in the literature. We carried out a systematic literature review of DASE techniques and approaches. This systematic literature review found time zone difference, knowledge of resources, lack of infrastructure, missing roles, and responsibilities as being the primary challenges that needed to be addressed. © 2015 John Wiley and Sons, Ltd.},
  Author_keywords          = {Agile; distributed Agile software engineering; empirical results; surveys and field studies; systematic literature review},
  Document_type            = {Review},
  Doi                      = {10.1002/smr.1718},
  ISSN                     = {20477481},
  Keywords                 = {Software design, Agile; Agile software engineering; empirical results; Field studies; Systematic literature review, Software engineering},
  Publisher                = {John Wiley and Sons Ltd},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84943150691&doi=10.1002%2fsmr.1718&partnerID=40&md5=0755283c77b45d85cc526c42a9641f6c}
}

@Article{Rodriguez2016202,
  Title                    = {Measuring the Impact of Agile Coaching on Students' Performance},
  Author                   = {Rodriguez, G. and Soria, A. and Campo, M.},
  Journal                  = {IEEE Transactions on Education},
  Year                     = {2016},
  Note                     = {cited By 1},
  Number                   = {3},
  Pages                    = {202-209},
  Volume                   = {59},

  Abstract                 = {Nowadays, considerable attention is paid to agile methods as a means to improve management of software development processes. The widespread use of such methods in professional contexts has encouraged their integration into software engineering training and undergraduate courses. Although several research efforts have focused on teaching Scrum through simulating a software development project, they covered only the learning of programming practices within a Scrum team. Furthermore, few studies tackle nontechnical skills other than the development practices themselves. The work presented here introduces an original Scrum-based training model enhanced with agile coaching to maximize student performance. This was validated by a case study on a capstone project in a Scrum course. This paper summarizes the positive results of introducing agile coaching, which resulted in approximately 22% more coverage of software engineering practices. In addition, a survey data showed that, compared to students who did not receive coaching, coached students gained valuable insight into the internalization of Scrum, problem solving, and guidance by means of checkpoint meetings. © 2016 IEEE.},
  Art_number               = {7372484},
  Author_keywords          = {Agile coaching; capstone project; Scrum; software engineering education; Teaching/learning strategies},
  Coden                    = {IEEDA},
  Document_type            = {Article},
  Doi                      = {10.1109/TE.2015.2506624},
  ISSN                     = {00189359},
  Keywords                 = {Education; Personnel training; Problem solving; Software design; Students; Teaching, Development practices; Learning-of-programming; Non-technical skills; Software development process; Software development projects; Software engineering practices; Software engineering training; Undergraduate Courses, Software engineering},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84953240401&doi=10.1109%2fTE.2015.2506624&partnerID=40&md5=4da9b8fc71064a5ab730dd8c81e271cd}
}

@Article{Rodriguez2015147,
  Title                    = {Virtual Scrum: A teaching aid to introduce undergraduate software engineering students to Scrum},
  Author                   = {Rodriguez, G. and Soria, Á. and Campo, M.},
  Journal                  = {Computer Applications in Engineering Education},
  Year                     = {2015},
  Note                     = {cited By 8},
  Number                   = {1},
  Pages                    = {147-156},
  Volume                   = {23},

  Abstract                 = {Teaching agile practices is becoming a priority in Software engineering curricula as a result of the increasing use of agile methods (AMs) such as Scrum in the software industry. Limitations in time, scope, and facilities within academic contexts hinder students' hands-on experience in the use of professional AMs. To enhance students' exposure to Scrum, we have developed Virtual Scrum, an educational virtual world that simulates a Scrum-based team room through virtual elements such as blackboards, a Web browser, document viewers, charts, and a calendar. A preliminary version of Virtual Scrum was tested with a group of 45 students running a capstone project with and without Virtual Scrum support. Students' feedback showed that Virtual Scrum is a viable and effective tool to implement the different elements in a Scrum team room and to perform activities throughout the Scrum process. © 2013 Wiley Periodicals, Inc.},
  Author_keywords          = {Agile methodologies; Scrum; Software engineering education; Virtual worlds},
  Coden                    = {CAPEE},
  Document_type            = {Article},
  Doi                      = {10.1002/cae.21588},
  ISSN                     = {10613773},
  Keywords                 = {Curricula; E-learning; Education; Engineering education; Interactive computer graphics; Software engineering; Virtual reality, Agile Methodologies; Capstone projects; Educational virtual worlds; Scrum; Software engineering curricula; Software industry; Undergraduate software engineering; Virtual worlds, Students},
  Publisher                = {John Wiley and Sons Inc.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84920929226&doi=10.1002%2fcae.21588&partnerID=40&md5=8cd95d2503ebaf50e39496655ebca8b0}
}

@Conference{Rodríguez20144770,
  Title                    = {Combining lean thinking and agile methods for software development a case study of a finnish provider of wireless embedded systems},
  Author                   = {Rodríguez, P. and Partanen, J. and Kuvaja, P. and Oivo, M.},
  Year                     = {2014},
  Note                     = {cited By 6},
  Pages                    = {4770-4779},
  Publisher                = {IEEE Computer Society},

  Abstract                 = {Lean Software Development has attracted a great deal of attention during last years. However, it remains unclear how Lean is implemented in a domain that fundamentally differs from the automotive industry in which it originated. This study provides empirical evidence of how Lean can be combined with Agile methods to enhance software development processes. A case study was conducted at Elektrobit Wireless Segment, which has used Agile from 2007 and began to adopt Lean in 2010. Our findings evidence numerous compatibilities between Lean and Agile. In addition to well-established practices in Agile, Lean thinking has brought new elements to software development such as Kanban and work-in-progress limits, a "pull" and "less waste" oriented culture, and a stronger emphasis on transparency and collaborative development. Scaling flexibility, business management involvement and waste reduction were found as challenges, whilst setting up teams, self-organization and empowerment appeared easier to achieve. © 2014 IEEE.},
  Art_number               = {6759188},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/HICSS.2014.586},
  ISBN                     = {9781479925049},
  ISSN                     = {15301605},
  Journal                  = {Proceedings of the Annual Hawaii International Conference on System Sciences},
  Keywords                 = {Automotive industry; Human resource management; Systems science, Business management; Collaborative development; Lean software development; Self organizations; Software development process; Waste reduction; Wireless embedded systems; Work-in-progress, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84902292296&doi=10.1109%2fHICSS.2014.586&partnerID=40&md5=4d8d87893fd38622bbfc96bc89212cd1}
}

@Article{Roelich2014662,
  Title                    = {Improving the policy application of footprint indicators to support Europe's transition to a one planet economy: The development of the EUREAPA tool},
  Author                   = {Roelich, K. and Owen, A. and Thompson, D. and Dawkins, E. and West, C.},
  Journal                  = {Science of the Total Environment},
  Year                     = {2014},
  Note                     = {cited By 6},
  Number                   = {1},
  Pages                    = {662-667},
  Volume                   = {481},

  Abstract                 = {Environmentally extended multi-regional input-output (EE-MRIO) models provide us with a wealth of data relating to consumption-based environmental impacts at a national level. The results can identify the categories of consumption and sectors of production that contribute most to environmental impact allowing policy makers to prioritise intervention into particular areas. However, these data are not readily accessible to policy makers and civil society, making it difficult to extract and communicate the important messages it contains.The web-based tool - EUREAPA - was created as a usable, task-oriented interface to improve access to environmental and economic data held within a complex EE-MRIO model and make it more relevant to policy makers and civil society. The project team of scientists and IT specialists used an iterative, agile and participatory approach to engage potential end-users in the specification and testing of the tool.The engagement process identified two principal functions that were essential for the EUREAPA tool: viewing data and creating scenarios. The viewing data function allows users to analyse the wealth of data held within the model and present results from a range of perspectives. This helps to understand the causes of environmental pressure and identify priorities for policy intervention. The scenario function helps to communicate how changes in consumption and production might affect the future environmental impact of citizens of the EU, and facilitates long-term planning.Through this dialogue process the project has been able to ensure EUREAPA is relevant, user-friendly and fit-for-purpose. It is intended that EUREAPA will be adopted by policy makers and civil society as an important policy planning and assessment aid in the complex field of sustainable consumption and production. © 2013 Elsevier B.V.},
  Author_keywords          = {Agile software development; Carbon footprint; Ecological footprint; Input-Output analysis; Policy analysis; Water footprint},
  Coden                    = {STEVA},
  Document_type            = {Article},
  Doi                      = {10.1016/j.scitotenv.2013.10.084},
  ISSN                     = {00489697},
  Keywords                 = {Carbon footprint; Data processing; Decision making; Software engineering; Tools, Agile software development; Ecological footprint; Input output analysis; Policy analysis; Water footprint, Environmental impact, accessibility; civil society; consumption behavior; ecological footprint; environmental impact assessment; environmental planning; input-output analysis; Internet; policy analysis; policy implementation; policy making, article; carbon footprint; computer analysis; computer program; environmental economics; environmental impact; environmental planning; environmental protection; Europe; internet sex; priority journal; process development, Europe, Agile software development; Carbon footprint; Ecological footprint; Input-Output analysis; Policy analysis; Water footprint, Carbon Footprint; Conservation of Natural Resources; Environmental Policy; Europe; European Union; Internet; Software},
  Publisher                = {Elsevier},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84897958031&doi=10.1016%2fj.scitotenv.2013.10.084&partnerID=40&md5=a7aac81a4c28aa78105aa3c243ead946}
}

@Conference{Rogers2015199,
  Title                    = {Manual testing's newfound place in the automated testing world},
  Author                   = {Rogers, G.P. and Miles, P.},
  Year                     = {2015},
  Note                     = {cited By 0},
  Pages                    = {199-202},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},
  Volume                   = {2015-December},

  Abstract                 = {A comprehensive automated testing suite has been touted for years as an integral part of a software program's overall quality assurance strategy. One particular classification of tests - functional tests for web applications - is frequently automated, perhaps being the centerpiece of automated testing efforts. However, the build-out of an automated testing suite is expensive, requiring specialized software, frameworks, and staff who typically possess programming knowledge. Indeed, it is common to have roles such as that of a Test Automation Engineer or Software Developer In Test (SDET) on Agile teams these days, supplementing traditional Quality Analysts. With regard to web application tests, however, the calculus on whether or not to automate these tests is changing. Enter on-demand services - they have become available to perform manual testing as needed, without introducing delay, and are often many times faster than equivalent automated tests. These on-demand services feature test scripts written in natural language, which are executed by trained external testers when prompted, such that feedback is rapidly provided on the results of the testing. In this article, we'll explore these on-demand services (which can also be referred to as Testing as a Service) and provide business and financial analysis illustrating when this approach may complement or be a better alternative to building an automated testing suite for web-based applications. © 2015 IEEE.},
  Art_number               = {7356489},
  Author_keywords          = {Automatic testing; Computer errors; Error analysis; Man machine systems; Software testing; System testing; Testing},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/AUTEST.2015.7356489},
  ISBN                     = {9781479981892},
  Journal                  = {AUTOTESTCON (Proceedings)},
  Keywords                 = {Automatic testing; Automation; Calculations; Computer testing; Error analysis; Interactive computer systems; Man machine systems; Quality assurance; Software engineering; Testing; World Wide Web, Computer errors; Financial analysis; On-demand services; Programming knowledge; Specialized software; System testing; Testing as a services; Web-based applications, Software testing},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84959888013&doi=10.1109%2fAUTEST.2015.7356489&partnerID=40&md5=17aba0ba617964ef86ad06d77ba03f57}
}

@Conference{Romano2015774,
  Title                    = {Project management using the scrum agile method: A case study within a small enterprise},
  Author                   = {Romano, B.L. and Da Silva, A.D.},
  Year                     = {2015},
  Editor                   = {Latifi S., Carneiro G., Debnath N., Hashemi R., Minamoto T., Arai K., Reddy Y., Saleem K., Vieira Dias L.A., Shen F., Thuemmler C.},
  Note                     = {cited By 2},
  Pages                    = {774-776},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {This paper tackles the use of the Scrum agile method within a Brazilian small business enterprise. It provides monitoring activities for software project management. It involves the use of human, financial, and temporal resources during a project development, increasing the rate of its successful deliveries. In order to enable the Scrum adoption, the following four distinct steps were defined: infrastructure set up, team training, Scrum agile deployment, and deployment refinement. An analysis of its main results was obtained from the application of a survey to all project stakeholders. The major improvements were identified since the first sprints, mainly involving communication, team motivation, and adaptation agility, during the chosen case study within a small enterprise. © 2015 IEEE.},
  Art_number               = {7113578},
  Author_keywords          = {Agile method; Project management; Scrum; Small enterprises},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ITNG.2015.139},
  ISBN                     = {9781479988273},
  Journal                  = {Proceedings - 12th International Conference on Information Technology: New Generations, ITNG 2015},
  Keywords                 = {Agile deployments; Agile methods; Monitoring activities; Project development; Project stakeholders; Scrum; Small enterprise; Software project management, Project management},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84936803783&doi=10.1109%2fITNG.2015.139&partnerID=40&md5=cd0d436437f3ef6edfa9fc4983053ebc}
}

@Conference{Romney2013,
  Title                    = {The agility, flexibility and efficiency of hypervisors in engineering education},
  Author                   = {Romney, G.W. and Sinha, B.R. and Dey, P.P. and Amin, M.N.},
  Year                     = {2013},
  Note                     = {cited By 0},
  Publisher                = {IEEE Computer Society},

  Abstract                 = {Virtualization, as a process, differs from the Hypervisor that is the software that makes the process possible. By the proper utilization of hypervisors agility, flexibility and efficiency may be gained in engineering hands-on education. Layered accreditation and certification impose additional challenges on engineering and cyber security programs. Consequently, there is an extra degree of oversight, assessment and thoroughness required in curricula in order to meet all standards. At National University only through the use of virtualization is it possible to add hands-on experience in a one-month delivery of a full semester of instruction per course. The use of virtualization through private and public cloud delivery as well as on a student's personal computer makes this possible. The employment of multi-factor authentication and a VPN provides the necessary security for students who are dispersed all over the world. The collaborative synergy of Computer Science, Information Technology and Cyber Security disciplines has made the creation of a dynamically morphing virtual lab possible. The teaching efficiencies gained by using virtualization are significant: 1) the lab exercises do not impact the student's base laptop configuration, 2) the immediate exercise is made available for completion, 3) the synergy of having assignments and labs intermixed throughout the teaching cycle reinforce one another, and 4) the versatility and ability of the instructor to introduce new concepts literally dynamically helps maintain current courseware. © 2013 IEEE.},
  Art_number               = {6671036},
  Author_keywords          = {Agile; cloud; cyber security; online; Parallels; Virtual Box; virtualization; VMware},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ITHET.2013.6671036},
  ISBN                     = {9781479900862},
  Journal                  = {2013 12th International Conference on Information Technology Based Higher Education and Training, ITHET 2013},
  Keywords                 = {Accreditation; Clouds; Efficiency; Information technology; Personal computers; Security of data; Virtual reality, Agile; Cyber security; online; Parallels; Virtual Box; Virtualizations; VMware, Students},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893440673&doi=10.1109%2fITHET.2013.6671036&partnerID=40&md5=b1db4f306c0d003e80b186b595e78a87}
}

@Conference{Rong2014185,
  Title                    = {Are we ready for software process selection, tailoring, and composition?},
  Author                   = {Rong, G.},
  Year                     = {2014},
  Note                     = {cited By 1},
  Pages                    = {185-186},
  Publisher                = {Association for Computing Machinery},

  Abstract                 = {Software projects are performed in different contexts and, thus, require a context-specific selection and adoption of adequate methods. The suitable selection and tailoring, however, still constitute a challenging task. For this, in this paper, we discuss several issues concerning process definition and adoption, and motivate more research regarding the improvement of evidence-based method selection and adoption for the respective context. © 2014 Author.},
  Author_keywords          = {Agile Method; Method; Multi-dimensional Perspective; Software Process},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2600821.2600854},
  ISBN                     = {9781450327541},
  Journal                  = {ACM International Conference Proceeding Series},
  Keywords                 = {Computer applications, Agile methods; Evidence-based; Method; Multi-dimensional Perspective; Process definition; Software process; Software project, Computer programming},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84902436209&doi=10.1145%2f2600821.2600854&partnerID=40&md5=f71b737ab0d92a160a2376e56a424817}
}

@Article{Rong2014267,
  Title                    = {Application of agile methods in embedded systems development: A systematic review},
  Author                   = {Rong, G.-P. and Liu, T.-Y. and Xie, M.-J. and Chen, J.-Y. and Zhang, H. and Chen, D.-X.},
  Journal                  = {Ruan Jian Xue Bao/Journal of Software},
  Year                     = {2014},
  Note                     = {cited By 0},
  Number                   = {2},
  Pages                    = {267-283},
  Volume                   = {25},

  Abstract                 = {With the rapid development of technology, the application area of embedded systems continues to broaden. This makes the development of embedded systems facing increased pressure of quality, cost and cycle time. On the other hand, agile methods have been more and more adopted in traditional software projects. Many studies indicated that agile methods have significant values to adapt to changing requirements, increasing the productivity and the quality of the final product. Therefore, the application of agile methods in embedded systems development naturally has drawn attentions from researchers and practitioners. This paper applies systematic reviews to systematically understand the application status of agile methods in embedded system development. Through reviewing and analyzing 49 literatures since Agile Manifesto has been announced, this study tries to answer the following three questions: 1) In different types of embedded systems development, what is the overall application status of agile methods; 2) What characteristics of embedded systems are suitable to apply agile methods; 3) How to improve current agile methods (practices) to better adapt to the development of embedded systems. The study shows that, although there are some differences in the degree of application, agile methods have been applied in the development of different types of embedded system developments. However, the traditional agile methods also need to be appropriately revised to adapt to the characteristics of different types of embedded development projects. © Copyright 2014, Institute of Software, the Chinese Academy of Sciences. All rights reserved.},
  Author_keywords          = {Adoption status; Agile method; Embedded system development; Systematic literature review},
  Coden                    = {RUXUE},
  Document_type            = {Article},
  Doi                      = {10.13328/j.cnki.jos.004539},
  ISSN                     = {10009825},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84894731125&doi=10.13328%2fj.cnki.jos.004539&partnerID=40&md5=64cbd30618863e1cf1c4a869a264ebb2}
}

@Conference{Rossi201612,
  Title                    = {Continuous deployment of mobile software at facebook (showcase)},
  Author                   = {Rossi, C. and Shibley, E. and Su, S. and Beck, K. and Savor, T. and Stumm, M.},
  Year                     = {2016},
  Editor                   = {Su Z., Zimmermann T., Cleland-Huang J.},
  Note                     = {cited By 0},
  Pages                    = {12-23},
  Publisher                = {Association for Computing Machinery},
  Volume                   = {13-18-November-2016},

  Abstract                 = {Continuous deployment is the practice of releasing software updates to production as soon as it is ready, which is receiv-ing increased adoption in industry. The frequency of updates of mobile software has traditionally lagged the state of prac-tice for cloud-based services for a number of reasons. Mobile versions can only be released periodically. Users can choose when and if to upgrade, which means that several different releases coexist in production. There are hundreds of An-droid hardware variants, which increases the risk of having errors in the software being deployed. Facebook has made significant progress in increasing the frequency of its mobile deployments. Over a period of 4 years, the Android release has gone from a deployment ev-ery 8 weeks to a deployment every week. In this paper, we describe in detail the mobile deployment process at FB. We present our findings from an extensive analysis of software engineering metrics based on data collected over a period of 7 years. A key findings is that the frequency of deployment does not directly affect developer productivity or software quality. We argue that this findings is due to the fact that increasing the frequency of continuous deployment forces improved release and deployment automation, which in turn reduces developer workload. Additionally, the data we present shows that dog-fooding and obtaining feedback from alpha and beta customers is critical to maintaining release quality. © 2016 ACM.},
  Author_keywords          = {Agile Development; Continuous Delivery; Continuous Deployment; Mobile Code Testing; Software Release},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2950290.2994157},
  ISBN                     = {9781450342186},
  Journal                  = {Proceedings of the ACM SIGSOFT Symposium on the Foundations of Software Engineering},
  Keywords                 = {Computer software selection and evaluation; Social networking (online); Software engineering, Agile development; Continuous Delivery; Continuous Deployment; Mobile codes; Software release, Software testing},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84997531239&doi=10.1145%2f2950290.2994157&partnerID=40&md5=a4035eda4cbc0c0a1de916ebf48473a9}
}

@Conference{Rossi2016194,
  Title                    = {UML-based model-driven REST API development},
  Author                   = {Rossi, D.},
  Year                     = {2016},
  Editor                   = {Krempels K.-H., Majchrzak T.A., Monfort V., Traverso P.},
  Note                     = {cited By 0},
  Pages                    = {194-201},
  Publisher                = {SciTePress},
  Volume                   = {1},

  Abstract                 = {In the last few years we have witnessed the expansion of REST APIs as a method to implement machineto-machine interactions in open distributed systems. Recently REST APIs can also be found in several B2B and enterprise scenarios that were previously reserved to alternative technologies such as SOAP-based Web Services. Despite that, the development of REST-based solutions has remained mostly inspired by agile approaches with no or limited explicit modeling artifacts produced during the development process. This clashes with software development methods in which modeling artifacts are expected to be available for all developed software. Another problem is related to the resource-based nature of these APIs that miss standardized methods to discover and understand their capabilities akin to what object-oriented interfaces can do for objects and services. In this paper we propose a model-driven approach to REST API development; this approach is composed by two main steps: (i) UML modeling of the API using specific profiles and (ii) a model transformation that exploits RAML, a recent RESTful API modeling language, as an intermediate notation that can be used to automatically produce documentation and code for various languages/platforms. Copyright © 2016 by SCITEPRESS - Science and Technology Publications, Lda. All rights reserved.},
  Author_keywords          = {Model-driven development; REST; UML; Web Services},
  Document_type            = {Conference Paper},
  ISBN                     = {9789897581861},
  Journal                  = {WEBIST 2016 - Proceedings of the 12th International Conference on Web Information Systems and Technologies},
  Keywords                 = {Application programming interfaces (API); Computational linguistics; Information systems; Modeling languages; Object oriented programming; Software design; Websites; World Wide Web, Alternative technologies; Machine-to-machine interactions; Model driven development; Object-oriented interfaces; Open distributed systems; REST; SOAP-based Web services; Software development methods, Web services},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84979732771&partnerID=40&md5=9758e3952229bb8d18ab550e10a91658}
}

@Conference{Rotella201460,
  Title                    = {Predicting release quality},
  Author                   = {Rotella, P. and Chulani, S.},
  Year                     = {2014},
  Note                     = {cited By 0},
  Pages                    = {60-61},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Identifying correlations between in-process development and test metrics is key in anticipating subsequent reliability performance in the field. For several years now at Cisco, our primary measure of field reliability has been Software Defects Per Million Hours (SWDPMH), and this metric has been goaled on a yearly basis for over 100 product families. A key reason SWDPMH is considered to be of critical importance is that we see a high correlation between SWDPMH and Software Customer Satisfaction (SW CSAT) over a wide spectrum of products and feature releases. Therefore it is important to try to anticipate SWDPMH for new releases before the software is released to customers, for several reasons: Early warning that a major feature release is likely to experience substantial quality problems in the field may allow for remediation of the release during, or even prior to, function and system testing Prediction of SWDPMH enables better planning for subsequent maintenance releases and rollout strategies Calculating the tradeoffs between SWDPMH and feature volume provides guidance concerning acceptable feature content, test effort, release cycle timing, and other key parameters affecting feature releases. Our efforts over the past two years have been to enhance our ability to predict SWDPMH in the field. Toward this end, we have developed predictive models, tested the models with a broad range of feature and maintenance releases, and have provided guidance to development, test, and release management teams on how to improve the chances of achieving best-in-class levels of SWDPMH. This work is ongoing, but several models are currently used in a production mode for more than 40 product families, with good results. In this paper we will show correlations with SWDPMH of feature release sequences for 16 product families. We will also show the models' applicability to maintenance release sequences, features, and Business Unit contributions to feature releases. We will also show the models' performance characteristics with agile releases, hybrid agile/waterfall releases, and traditional waterfall releases. © 2014 IEEE.},
  Art_number               = {6983802},
  Author_keywords          = {Customer experience; Reliability modeling; Software products; Software releases; Testing metrics},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ISSREW.2014.116},
  ISBN                     = {9781479973774},
  Journal                  = {Proceedings - IEEE 25th International Symposium on Software Reliability Engineering Workshops, ISSREW 2014},
  Keywords                 = {Customer satisfaction; Forecasting; Human resource management; Maintenance; Reliability; Sales; Software testing, Customer experience; Reliability model; Software products; Software release; Testing metrics, Software reliability},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84922638202&doi=10.1109%2fISSREW.2014.116&partnerID=40&md5=45885ca86bb5d99acf4bdae7650ef2f7}
}

@Book{Ruhe20141,
  Title                    = {Software project management in a changing world},
  Author                   = {Ruhe, G. and Wohlin, C.},
  Publisher                = {Springer-Verlag Berlin Heidelberg},
  Year                     = {2014},
  Note                     = {cited By 1},

  Abstract                 = {By bringing together various current directions, Software Project Management in a Changing World focuses on how people and organizations can make their processes more change-adaptive. The selected chapters closely correspond to the project management knowledge areas introduced by the Project Management Body of Knowledge, including its extension for managing software projects. The contributions are grouped into four parts, preceded by a general introduction. Part I "Fundamentals" provides in-depth insights into fundamental topics including resource allocation, cost estimation and risk management. Part II "Supporting Areas" presents recent experiences and results related to the management of quality systems, knowledge, product portfolios and global and virtual software teams. Part III "New Paradigms" details new and evolving software-development practices including agile, distributed and open and inner-source development. Finally, Part IV "Emerging Techniques" introduces search-based techniques, social media, software process simulation and the efficient use of empirical data and their effects on software-management practices. This book will attract readers from both academia and practice with its excellent balance between new findings and experience of their usage in new contexts. Whenever appropriate, the presentation is based on evidence from empirical evaluation of the proposed approaches. For researchers and graduate students, it presents some of the latest methods and techniques to accommodate new challenges facing the discipline. For professionals, it serves as a source of inspiration for refining their project-management skills in new areas. © 2014 Springer-Verlag Berlin Heidelberg. All rights are reserved.},
  Document_type            = {Book},
  Doi                      = {10.1007/978-3-642-55035-5},
  ISBN                     = {9783642550355; 3642550347; 9783642550348},
  Journal                  = {Software Project Management in a Changing World},
  Pages                    = {1-477},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84930743948&doi=10.1007%2f978-3-642-55035-5&partnerID=40&md5=9cdb126192d9c2898d2bd56a22d97157}
}

@Book{Sacks20141,
  Title                    = {Pro website development and operations: Streamlining devops for large-scale websites},
  Author                   = {Sacks, M.},
  Publisher                = {Apress Media LLC},
  Year                     = {2014},
  Note                     = {cited By 0},
  Volume                   = {9781430239703},

  Abstract                 = {Pro Website Development and Operations gives you the experience you need to create and operate a large-scale production website. Large-scale websites have their own unique set of problems regarding their design-problems that can get worse when agile methodologies are adopted for rapid results. Managing large-scale websites, deploying applications, and ensuring they are performing well often requires a full scale team involving the development and operations sides of the company-two departments that don't always see eye to eye. When departments struggle with each other, it adds unnecessary complexity to the work, and that result shows in the customer experience. Pro Website Development and Operations shows you how to streamline the work of web development and operations - incorporating the latest insights and methodologies of DevOps - so that your large-scale website is up and running quickly, with little friction and extreme efficiency between divisions. This book provides critical knowledge for any developer engaged in delivering the business and software engineering goals required to create and operate a large-scale production website. It addresses how developers can collaborate effectively with business and engineering teams to ensure applications are smoothly transitioned from product inception to implementation, and are properly deployed and managed. Pro Website Development and Operations provides unique insights into how systems, code, and process can all work together to make large-scale website development and operations ultra-efficient. Copyright © 2012 by Matthew Sacks. All rights are reserved.},
  Document_type            = {Book},
  Doi                      = {10.1007/978-1-4302-3970-3},
  ISBN                     = {9781430239703; 1430239697; 9781430239697},
  Journal                  = {Pro Website Development and Operations: Streamlining DevOps for Large-Scale Websites},
  Pages                    = {1-105},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84926400229&doi=10.1007%2f978-1-4302-3970-3&partnerID=40&md5=a85ab1c1c952a2e1402d2a427bd6d091}
}

@Conference{Sadi2014,
  Title                    = {Analyzing the evolution of software development: From creative chaos to software ecosystems},
  Author                   = {Sadi, M.H. and Yu, E.},
  Year                     = {2014},
  Note                     = {cited By 6},
  Publisher                = {IEEE Computer Society},

  Abstract                 = {As a software organization matures and expands, it often evolves through different styles of organization, for example, beginning with creative chaos as a start-up, then introducing disciplined processes to raise quality, and later regaining agility through light-weight practices. Recently, many firms join collaborative networks to develop software products and platforms for a shared market, constituting "Software Ecosystems". At each stage of evolution, the software organization aims to overcome critical challenges faced in its earlier stages, while balancing business, organizational, social, and technical forces of change. To illustrate how the evolutionary trajectory of a software development firm is shaped by various interacting forces, we draw upon a longitudinal case study taken from the literature. We use the i* strategic actors modeling framework to help analyze the forces that trigger the transition from one organizational configuration to another. © 2014 IEEE.},
  Art_number               = {6861055},
  Author_keywords          = {Agile Development; Creative Chaos; Evolution; Modeling & Analysis; Product Line Engineering; Software Development Organization; Software Ecosystems; Strategic Actors; Waterfall},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/RCIS.2014.6861055},
  ISBN                     = {9781479923939},
  ISSN                     = {21511349},
  Journal                  = {Proceedings - International Conference on Research Challenges in Information Science},
  Keywords                 = {Ecosystems; Information science, Agile development; Evolution; Product line engineering; Software development organizations; Software ecosystems; Strategic Actors; Waterfall, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84906773400&doi=10.1109%2fRCIS.2014.6861055&partnerID=40&md5=527f292830051459cd8459a3755fb441}
}

@Conference{Sadighi2014629,
  Title                    = {Accounting system on cloud: A case study},
  Author                   = {Sadighi, M.},
  Year                     = {2014},
  Note                     = {cited By 0},
  Pages                    = {629-632},
  Publisher                = {IEEE Computer Society},

  Abstract                 = {Nowadays, cloud computing has become a relatively popular approach between those businesses that would like to be agile, flexible and provident. For these purposes many companies have started to transfer all or parts of their business processes to the cloud platform. In this paper cloud migration process of a sample company has been studied through a case which is a company. Since current accounting software in this company can't be responder to the changes anymore, management boards have decided to deploy it on the cloud. This paper aims at providing an analysis of the difficulties of company's traditional accounting system, reviewing factors affecting migration and finally as a conclusion suggesting the best cloud deployment and service models complying with company requirements. © 2014 IEEE.},
  Art_number               = {6822273},
  Author_keywords          = {Accounting software; Cloud computing; Cloud computing accounting software; Cloud migration},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ITNG.2014.26},
  ISBN                     = {9781479931873},
  Journal                  = {ITNG 2014 - Proceedings of the 11th International Conference on Information Technology: New Generations},
  Keywords                 = {Cloud computing; Information technology, Accounting system; Business Process; Cloud deployments; Cloud migrations; Cloud platforms; Service Model, Industry},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84903483152&doi=10.1109%2fITNG.2014.26&partnerID=40&md5=84ad26de439afa0d38e267fda44d8438}
}

@Book{Saeed2013142,
  Title                    = {Lean development: A tool for knowledge management in software development process},
  Author                   = {Saeed, S. and Alsmadi, I. and Khawaja, F.M.},
  Publisher                = {IGI Global},
  Year                     = {2013},
  Note                     = {cited By 0},

  Abstract                 = {Software development is a complex activity, which is human intensive in nature. In order to build quality software systems, organizations need to follow mature software development practices, which are continually improved. As a result, the concept of software development process emerged, which highlighted a systematic set of activities required to develop a software system. Recently, agile development methodologies have provided a rich set of innovative software development approaches, aiming to optimize the software process. In order to be successful in adopting these approaches, a thorough understanding of their implementation procedures is required. In this chapter, we took a look at the lean development approach to understand how its principles pave the way in fostering knowledge management initiatives in software process development. © 2013, IGI Global.},
  Document_type            = {Book Chapter},
  Doi                      = {10.4018/978-1-4666-3658-3.ch009},
  ISBN                     = {9781466636583},
  Journal                  = {Business Strategies and Approaches for Effective Engineering Management},
  Pages                    = {142-150},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84898244953&doi=10.4018%2f978-1-4666-3658-3.ch009&partnerID=40&md5=a11f9c8d9545a9f5641350c0ad96e532}
}

@Article{Sägesser201368,
  Title                    = {Introducing an iterative life-cycle model at credit suisse IT Switzerland},
  Author                   = {Sägesser, K. and Joseph, B. and Grau, R.},
  Journal                  = {IEEE Software},
  Year                     = {2013},
  Note                     = {cited By 1},
  Number                   = {2},
  Pages                    = {68-73},
  Volume                   = {30},

  Abstract                 = {Credit Suisse IT Switzerland decided to introduce an iterative life-cycle model (ILCM) based on the Rational Unified Process (RUP), a de facto industry standard, in addition to the well-established waterfall life-cycle model (WLCM). Such a large-scale change management initiative involves risks, challenges, and an organizational mindset shift. The Credit Suisse project carefully considered issues such as the gap between RUP and CMMI, process vocabulary, best practices, development and maintenance effort, training, and company culture as a precursor to the change. The activities to deploy the model throughout the organization were coordinated in collaboration with actual practitioners toward creating awareness, managing knowledge, and managing resistance factors to effect the required mindset change. © 1984-2012 IEEE.},
  Art_number               = {6216346},
  Author_keywords          = {iterative software development; Rational Unified Process; RUP; software development life cycle; software development process management},
  Coden                    = {IESOE},
  Document_type            = {Article},
  Doi                      = {10.1109/MS.2012.74},
  ISSN                     = {07407459},
  Keywords                 = {Change management; Industry standards; Maintenance efforts; Rational Unified Process; Resistance factors; RUP; Software development life cycle; Software development process, Software design, Life cycle},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84879289970&doi=10.1109%2fMS.2012.74&partnerID=40&md5=32a34964f1741087566adebb4670a986}
}

@Article{delSagrado2015577,
  Title                    = {Multi-objective ant colony optimization for requirements selection},
  Author                   = {del Sagrado, J. and del Águila, I.M. and Orellana, F.J.},
  Journal                  = {Empirical Software Engineering},
  Year                     = {2015},
  Note                     = {cited By 8},
  Number                   = {3},
  Pages                    = {577-610},
  Volume                   = {20},

  Abstract                 = {The selection of a set of requirements between all the requirements previously defined by customers is an important process, repeated at the beginning of each development step when an incremental or agile software development approach is adopted. The set of selected requirements will be developed during the actual iteration. This selection problem can be reformulated as a search problem, allowing its treatment with metaheuristic optimization techniques. This paper studies how to apply Ant Colony Optimization algorithms to select requirements. First, we describe this problem formally extending an earlier version of the problem, and introduce a method based on Ant Colony System to find a variety of efficient solutions. The performance achieved by the Ant Colony System is compared with that of Greedy Randomized Adaptive Search Procedure and Non-dominated Sorting Genetic Algorithm, by means of computational experiments carried out on two instances of the problem constructed from data provided by the experts. © 2013, Springer Science+Business Media New York.},
  Author_keywords          = {Ant colony optimization; Next release problem; Search based software engineering; Software requirements},
  Coden                    = {ESENF},
  Document_type            = {Article},
  Doi                      = {10.1007/s10664-013-9287-3},
  ISSN                     = {13823256},
  Keywords                 = {Algorithms; Artificial intelligence; Genetic algorithms; Heuristic algorithms; Iterative methods; Multiobjective optimization; Optimization; Search engines; Software design; Software engineering, Agile software development; Ant Colony Optimization algorithms; Greedy randomized adaptive search procedure; Meta-heuristic optimization techniques; Next release problems; Non- dominated sorting genetic algorithms; Search-based software engineering; Software requirements, Ant colony optimization},
  Publisher                = {Kluwer Academic Publishers},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84929523263&doi=10.1007%2fs10664-013-9287-3&partnerID=40&md5=cdaef3b812f5281c0c747f9b7b5acd51}
}

@Conference{Sainath2013877,
  Title                    = {Improving the efficiency of software development through Software Augmentation Isochronism model},
  Author                   = {Sainath, P. and Kishor Kumar Reddy, C. and Syed, O.A. and Venugopal, S.},
  Year                     = {2013},
  Note                     = {cited By 0},
  Pages                    = {877-882},
  Publisher                = {IEEE Computer Society},

  Abstract                 = {Software is a generic term for organized collections of computer data and instructions; it is amalgamation of machine understandable instructions that preside over the processor of computer to perform itemized operations. The importance of software accompanies the effect of its malleability towards software development life cycle. Antecedent models such as Prototyping model, Incremental model, waterfall model, Transformation model, RAD model, Spiral model Model, Agile models and so on were found to be more efficient during its inception phase which later leaded to have some barricades such as risk factor, cost factor, time complexity and so on. The present research emphasizes a new model i.e. Software Augmentation Isochronism model in order to perturb those barricades present with the previous approaches. This paper clenches a prominent model with features such as classified exigency, bilateral databases, mini marketing, testimonial access and significant testing methodologies in order to produce efficient software which decreases the risk factors and decreases the costs to develop the software and thus finally provides a complete complacency and thesis of assurance between customer and company. © 2013 IEEE.},
  Art_number               = {6823558},
  Author_keywords          = {Agile model; Exigency; Process models; Software; Testimonial access; Testing},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICGCE.2013.6823558},
  ISBN                     = {9781467361255},
  Journal                  = {Proceedings of the 2013 International Conference on Green Computing, Communication and Conservation of Energy, ICGCE 2013},
  Keywords                 = {Communication; Computer software; Metals; Software design; Testing, Agile modeling; Exigency; Incremental modeling; Process model; Software development life cycle; Testimonial access; Testing methodology; Transformation model, Software testing},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84903274790&doi=10.1109%2fICGCE.2013.6823558&partnerID=40&md5=da63df32571233c1d36bec5f254fc6c1}
}

@Article{Salleh20141,
  Title                    = {A window into the emergence of agile software development landscape in Indonesia},
  Author                   = {Salleh, N. and Al-Kautsar, E. and Hoda, R. and Asmawi, A.l.},
  Journal                  = {International Journal of Advances in Soft Computing and its Applications},
  Year                     = {2014},
  Note                     = {cited By 2},
  Number                   = {1},
  Pages                    = {1-17},
  Volume                   = {6},

  Abstract                 = {Since the introduction of the Agile Manifesto over a decade ago, software industries around the world have started to change their software development process from traditional to Agile methods. A number of research studies conducted in Asia Pacific countries such as Malaysia, India, and New Zealand have provided valuable insight into Agile adoption and practice in these countries. However, very little is known about the state of Agile adoption in Indonesia. This study aims to investigate the adoption of Agile methods among 21 software practitioners in Indonesia using survey method. This includes the perceptions and level of awareness in using Agile methods as well as the challenges in adopting these methods. We found that major challenges revolved around the people, organizational and customer related issues. Findings from this study can be used as evidence about Agile adoption and practice in Indonesia and as a roadmap for future Agile-focused research studies. © SCRG Publication, 2014.},
  Author_keywords          = {Agile adoption; Agile software development; Awareness; challenges; Indonesia},
  Document_type            = {Article},
  ISSN                     = {20748523},
  Publisher                = {International Center for Scientific Research and Studies},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84923003551&partnerID=40&md5=d75c3732a070354fabcdfb9440f2acb2}
}

@Conference{Salovaara20133505,
  Title                    = {Software developers' online chat as an intra-firm mechanism for sharing ephemeral knowledge},
  Author                   = {Salovaara, A. and Tuunainen, V.K.},
  Year                     = {2013},
  Note                     = {cited By 2},
  Pages                    = {3505-3523},
  Volume                   = {4},

  Abstract                 = {Knowledge sharing is crucial for companies in knowledge-intensive domains, but poses challenges for firms operating in a project-based manner. One domain facing this challenge is agile software business, which is based on autonomous teams and where the technological progress poses a consta/it need to update programmers' knowledge. One solution to the challenge is to use various social media tools, platforms and electronic tools for knowledge sharing. We present a case study on a 150-person software company where so-called frontend developers have adopted Skype chat os their favored knowledge-sharing medium. Analysis of almost 16 000 chat messages from a 17-month period, with 4 749 messages analyzed on a content level, shows several uses of this simple medium for sharing ephemeral programming-related knowledge that becomes quickly outdated. Our findings contribute to a better understanding of online chat as a knowledge-sharing tool and provide implications for research on knowledge sharing frameworks. © (2013) by the AIS/ICIS Administrative Office All rights reserved.},
  Author_keywords          = {Computer-mediated communication (CMC); Ephemeral knowledge; Knowledge Sharing; Skype chat; Software development},
  Document_type            = {Conference Paper},
  ISBN                     = {9781629934266},
  Journal                  = {International Conference on Information Systems (ICIS 2013): Reshaping Society Through Information Systems Design},
  Keywords                 = {Computer-mediated communication; Ephemeral knowledge; Knowledge-sharing; Skype chat; Social media tools; Software company; Software developer; Technological progress, Information systems; Knowledge management; Social networking (online); Software engineering; Tools, Industry},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84897790699&partnerID=40&md5=a02ac27cdd3b243a9a89aa2562d60045}
}

@Article{Samadi201612310,
  Title                    = {Software-defined optical network for metro-scale geographically distributed data centers},
  Author                   = {Samadi, P. and Wen, K. and Xu, J. and Bergman, K.},
  Journal                  = {Optics Express},
  Year                     = {2016},
  Note                     = {cited By 13},
  Number                   = {11},
  Pages                    = {12310-12320},
  Volume                   = {24},

  Abstract                 = {The emergence of cloud computing and big data has rapidly increased the deployment of small and mid-sized data centers. Enterprises and cloud providers require an agile network among these data centers to empower application reliability and flexible scalability. We present a software-defined inter data center network to enable on-demand scale out of data centers on a metro-scale optical network. The architecture consists of a combined space/wavelength switching platform and a Software-Defined Networking (SDN) control plane equipped with a wavelength and routing assignment module. It enables establishing transparent and bandwidth-selective connections from L2/L3 switches, on-demand. The architecture is evaluated in a testbed consisting of 3 data centers, 5-25 km apart. We successfully demonstrated end-to-end bulk data transfer and Virtual Machine (VM) migrations across data centers with less than 100 ms connection setup time and close to full link capacity utilization. © 2016 Optical Society of America.},
  Document_type            = {Article},
  Doi                      = {10.1364/OE.24.012310},
  ISSN                     = {10944087},
  Keywords                 = {Data transfer; Fiber optic networks; Network architecture, Application reliabilities; Bulk data transfer; Connection setup; Data center networks; Distributed data; Routing assignment; Software defined networking (SDN); Virtual machines, Big data},
  Publisher                = {OSA - The Optical Society},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84973626385&doi=10.1364%2fOE.24.012310&partnerID=40&md5=2423a73d93c1cba9d770a836572e2106}
}

@Article{Santos2016480,
  Title                    = {Using scrum together with UML models: A collaborative university-industry R\&D software project},
  Author                   = {Santos, N. and Fernandes, J.M. and Sameiro Carvalho, M. and Silva, P.V. and Fernandes, F.A. and Rebelo, M.P. and Barbosa, D. and Maia, P. and Couto, M. and Machado, R.J.},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {480-495},
  Volume                   = {9789},

  Abstract                 = {Conducting research and development (R&D) software projects, in an environment where both industry and university collaborate, is challenging due to many factors. In fact, industrial companies and universities have generally different interests and objectives whenever they collaborate. For this reason, it is not easy to manage and negotiate the industrial companies’ interests, namely schedules and their expectations. Conducting such projects in an agile framework is expected to decrease these risks, since partners have the opportunity to frequently interact with the development team in short iterations and are constantly aware of the characteristics of the system under development. However, in this type of collaborative R&D projects, it is often advantageous to include some waterfall practices, like upfront requirements modeling using UML models, which are not commonly used in agile processes like Scrum, in order to better prepare the implementation phase of the project. This paper presents some lessons learned that result from experience of the authors in adopting some Scrum practices in a R&D project, like short iterations, backlogs, and product increments, and simultaneously using UML models, namely use cases and components. © Springer International Publishing Switzerland 2016.},
  Author_keywords          = {Agile; Research projects; Scrum; UML},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-42089-9_34},
  Editor                   = {Gervasi O., Apduhan B.O., Taniar D., Torre C.M., Wang S., Misra S., Murgante B., Stankova E., Rocha A.M.A.C.},
  ISBN                     = {9783319420882},
  ISSN                     = {03029743},
  Keywords                 = {Artificial intelligence; Computer science; Computers, Agile; Development teams; Industrial companies; Requirements Models; Research and development; Scrum; Software project; University industries, Unified Modeling Language},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84978224440&doi=10.1007%2f978-3-319-42089-9_34&partnerID=40&md5=9d8f1e0afd86d09db44439167556d826}
}

@Conference{Santos2017242,
  Title                    = {Adopting logical architectures within agile projects},
  Author                   = {Santos, N. and Machado, R.J. and Ferreira, N.},
  Year                     = {2017},
  Editor                   = {Paulk M., Brito M.A., Amaral V., Machado R.J., Goulao M.},
  Note                     = {cited By 0},
  Pages                    = {242-247},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Agile Software Development (ASD) is a movement that emerged in the late 1990's and since then has been increasingly adopted by organizations. They are successful in projects characterized by rapid changes, small teams and small cycles. Implementing the same agile philosophy but with an increase of complexity, i.e., large-scale agile (LSA) development, are sometimes criticized of not being as effective as typical ASD, requiring additional concerns and the need to address new research challenges. This PhD research proposes an approach for embedding architecture design in agile development, first in early analysis and then during the iterations and by properly providing the mechanisms to deal with the changes in requirements. The main result is a method for adopting logical architectures, Four-Step-Rule-Set (4SRS), properly adapted to ASD contexts, to be used as complementary approaches to an ASD lifecycle, so that ASD teams can use that information as input for delivering the working software. © 2016 IEEE.},
  Art_number               = {7814556},
  Author_keywords          = {agile development; architecture design; large-scale agile; software logical architectures},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/QUATIC.2016.059},
  ISBN                     = {9781509035816},
  Journal                  = {Proceedings - 2016 10th International Conference on the Quality of Information and Communications Technology, QUATIC 2016},
  Keywords                 = {Software design, Agile development; Agile software development; Architecture designs; large-scale agile; Logical architecture; Research challenges; Rule set, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85013815726&doi=10.1109%2fQUATIC.2016.059&partnerID=40&md5=37e4fa59f8baad53ed6d51edbe5bfeef}
}

@Conference{Santos20144729,
  Title                    = {The influence of organizational factors on inter-team knowledge sharing effectiveness in agile environments},
  Author                   = {Santos, V. and Goldman, A. and Filho, H. and Martins, D. and Cortés, M.},
  Year                     = {2014},
  Note                     = {cited By 2},
  Pages                    = {4729-4738},
  Publisher                = {IEEE Computer Society},

  Abstract                 = {Agile software development is known by focusing on interaction among team members to share knowledge. However, little guidance is provided to encourage interaction across agile teams. Based on a preliminary conceptual model, this paper examines influencing factors, such as organizational strategy, and communication flow and channels, regarding inter-team knowledge sharing (KS) effectiveness in agile environments. We analyze the characteristics and the influence of the mentioned factors through a survey research method. Data was gathered from seven Brazilian agile software organizations. We employed statistical analysis techniques, e.g., structural equation modeling and cross-table analysis, to analyze the results. Within the surveyed companies, organizational strategy reflects on moderate commitment towards knowledge. KS practices are carried out to an acceptable standard. Extensive communication flow and the use of several channels denote that agile companies are also fostering interaction across teams. We found strong relationship between these factors and the companies' experience on agile methods. As companies continue on an agile adoption program, they growingly focus on long-term goals and consider knowledge as strategic resource. However, they still need to improve strategy alignment to all organization levels. Thus, we recommend that agile companies consider these factors when striving on this endeavor. © 2014 IEEE.},
  Art_number               = {6759183},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/HICSS.2014.581},
  ISBN                     = {9781479925049},
  ISSN                     = {15301605},
  Journal                  = {Proceedings of the Annual Hawaii International Conference on System Sciences},
  Keywords                 = {Communication; Industry; Software engineering; Surveys; Systems science, Agile environment; Agile software development; Knowledge-sharing; Organizational factors; Organizational strategy; Strategic resource; Strategy alignment; Structural equation modeling, Knowledge management},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84902280907&doi=10.1109%2fHICSS.2014.581&partnerID=40&md5=de6636fa7aa851d03e02ce253f462a89}
}

@Conference{Sanz2015239,
  Title                    = {Automated model-based testing based on an agnostic-platform modeling language},
  Author                   = {Sanz, C. and Salas, A. and De Miguel, M. and Alonso, A. and De La Puente, J.A. and Benac, C.},
  Year                     = {2015},
  Editor                   = {Hammoudi S., Pires L.F., Desfray P., Filipe J., Filipe J.},
  Note                     = {cited By 0},
  Pages                    = {239-246},
  Publisher                = {SciTePress},

  Abstract                 = {Currently multiple Domain Specific Languages (DSLs) are used for model-driven software development, in some specific domains. Software development methods, such as agile development, are test-centered, and their application in model-based frameworks requires model support for test development. We introduce a specific language to define generic test models, which can be automatically transformed into executable tests for particular testing platforms. The resulting test models represent the test plan for applications also built according to a model-based approach. The approach presented here includes some customisations for the application of the developed languages and transformation tools for some specific testing platforms. These languages and tools have been integrated with some specific DSL designed for software development. Copyright © 2015 SCITEPRESS - Science and Technology Publications.},
  Author_keywords          = {Agile development; Automated testing; Model-based testing},
  Document_type            = {Conference Paper},
  ISBN                     = {9789897580833},
  Journal                  = {MODELSWARD 2015 - 3rd International Conference on Model-Driven Engineering and Software Development, Proceedings},
  Keywords                 = {Application programs; Computational linguistics; Computer programming languages; Model checking; Modeling languages; Problem oriented languages; Software engineering; Software testing; Testing, Agile development; Automated testing; Model based approach; Model based testing; Model-Driven Software Development; Software development methods; Specific languages; Transformation tools, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84939528171&partnerID=40&md5=aeb1af13310f8bedb119ea14245d0b93}
}

@Article{Sarhan2016239,
  Title                    = {Enhancing agile software development process using learn, information, change and progress activities},
  Author                   = {Sarhan, S. and Abu El Soud, M. and Bakry, N.},
  Journal                  = {International Review on Computers and Software},
  Year                     = {2016},
  Note                     = {cited By 1},
  Number                   = {3},
  Pages                    = {239-248},
  Volume                   = {11},

  Abstract                 = {Agile software development methodology is an incremental software development methodology, that provides a fast and simple way of software developing based on the customer involvement which grantee project quality and customer satisfaction. In spite of these advantages but agile still suffers from shortage in handling requirements change during the system building which causes more time and money also the difficulty in arranging the user story which causes belated risk detection. In this paper we have introduced a set of activities called LICP (Learn–Information–Change-Progress), where each activity endorses the agile principles and rules to help the team in enhancing his performance, achieving customer satisfaction and reducing time and cost. The proposed activities were evaluated using two methods building SMS application using scrum methodology enhanced with the LICP activities and a questionnaire filled by 30 different positions employees in 3 different companies working in the software development field. The evaluation results indicate the effectiveness of LICP activities in enhancing the scrum methodology performance through the earlier risk detection, better handling of user stories changes and enhancing team communication and learning ability. © 2016 Praise Worthy Prize S.r.l. - All rights reserved.},
  Author_keywords          = {Agile; Scrum; Spiral model; User story; Waterfall model},
  Document_type            = {Article},
  Doi                      = {10.15866/irecos.v11i3.8895},
  ISSN                     = {18286003},
  Publisher                = {Praise Worthy Prize},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84970021179&doi=10.15866%2firecos.v11i3.8895&partnerID=40&md5=7d7d4718de2305b30c64d452e5dc7c11}
}

@Article{Saridis20161618,
  Title                    = {Lightness: A Function-Virtualizable Software Defined Data Center Network with All-Optical Circuit/Packet Switching},
  Author                   = {Saridis, G.M. and Peng, S. and Yan, Y. and Aguado, A. and Guo, B. and Arslan, M. and Jackson, C. and Miao, W. and Calabretta, N. and Agraz, F. and Spadaro, S. and Bernini, G. and Ciulli, N. and Zervas, G. and Nejabati, R. and Simeonidou, D.},
  Journal                  = {Journal of Lightwave Technology},
  Year                     = {2016},
  Note                     = {cited By 3},
  Number                   = {7},
  Pages                    = {1618-1627},
  Volume                   = {34},

  Abstract                 = {Modern high-performance data centers are responsible for delivering a huge variety of cloud applications to the end-users, which are increasingly pushing the limits of the currently deployed computing and network infrastructure. All-optical dynamic data center network (DCN) architectures are strong candidates to overcome those adversities, especially when they are combined with an intelligent software defined control plane. In this paper, we report the first harmonious integration of an optical flexible hardware framework operated by an agile software and virtualization platform. The LIGHTNESS deeply programmable all-optical circuit and packet switched data plane is able to perform unicast/multicast switch-over on-demand, while the powerful software defined networking (SDN) control plane enables the virtualization of computing and network resources creating a virtual data center and virtual network functions (VNF) on top of the data plane. We experimentally demonstrate realistic intra DCN with deterministic latencies for both unicast and multicast, showcasing monitoring, and database migration scenarios each of which is enabled by an associated network function virtualization element. Results demonstrate a fully functional complete unification of an advanced optical data plane with an SDN control plane, promising more efficient management of the next-generation data center compute and network resources. © 2015 IEEE.},
  Art_number               = {7359113},
  Author_keywords          = {Data Center Networking; Multicast; Network Function Virtualization; Optical Circuit Switching; Optical Packet Switching; Software Defined Networking; Virtual Data Center; Virtual Network Function},
  Coden                    = {JLTED},
  Document_type            = {Article},
  Doi                      = {10.1109/JLT.2015.2509476},
  ISSN                     = {07338724},
  Keywords                 = {Distributed computer systems; Multicasting; Next generation networks; Reconfigurable hardware; Software defined networking; Telecommunication traffic; Transfer functions; Virtual reality, Data center networkings; Optical circuit switching; Optical packet switching; Virtual data centers; Virtual networks; Virtualizations, Information management},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84963772224&doi=10.1109%2fJLT.2015.2509476&partnerID=40&md5=a9b1e9d8d998773f242314eaec5e300c}
}

@Article{SathishKumar20141994,
  Title                    = {An optimized agile estimation plan using harmony search algorithm},
  Author                   = {Sathish Kumar, C. and Anitha Kumari, A. and Srinivasa Perumal, R.},
  Journal                  = {International Journal of Engineering and Technology},
  Year                     = {2014},
  Note                     = {cited By 0},
  Number                   = {5},
  Pages                    = {1994-2001},
  Volume                   = {6},

  Abstract                 = {Agile Software development methodology is most emerging in software development, there has been a significant contribution from many researchers towards estimating the size, cost, schedule, effort and duration. However, the approaches reported in the literature lack in considering the evolution of biological systems for better optimization in agile. Here Agile Estimation Plan method determines the story size but the velocity is not properly defined and Harmony Search algorithm is adopted and modified in improvisation process towards agile to calculate the better velocity for each end of the iteration plan. This method help to improve the optimization while compare with normal agile process. The experimental results show how the harmony agile process is better than the normal agile process and it shows the efficiency of the method.},
  Author_keywords          = {Agile software development; Harmony search; Optimization; Swarm intelligence},
  Document_type            = {Article},
  ISSN                     = {23198613},
  Publisher                = {Engg Journals Publications},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84920665547&partnerID=40&md5=40edd7400524b24ee1f28881c9f1667e}
}

@Conference{Saxena2016851,
  Title                    = {A recent trends in software defined networking (SDN) security},
  Author                   = {Saxena, M. and Kumar, R.},
  Year                     = {2016},
  Editor                   = {Hoda M.N.},
  Note                     = {cited By 0},
  Pages                    = {851-855},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Software defined networking (SDN) has established a new method for creating and administering networks. It is a new architecture which has been designed to enable more agile and cost effective networks. It promotes separation of data plane and control plane. Thereby enabling network switches in the data plane to act as packet forwarding devices. It also uses logical centralized software to control the entire network behavior. SDN introduces new vulnerabilities that are not present in traditional networks such as communication bottlenecks between control plane and data plane. Current research in SDN follows several identifiable trends that are related to the state of deployment of SDN technologies. In this paper, SDN architecture, its salient features along with recent security aspects have been highlighted. © 2016 IEEE.},
  Art_number               = {7724385},
  Author_keywords          = {Application layer; Control layer; Infrastructure layer; Open Networking Foundation; OpenFlow; SDN; Security},
  Document_type            = {Conference Paper},
  ISBN                     = {9789380544199},
  Journal                  = {Proceedings of the 10th INDIACom; 2016 3rd International Conference on Computing for Sustainable Global Development, INDIACom 2016},
  Keywords                 = {Cost effectiveness; Network architecture; Software defined networking, Application layers; Control layers; Infrastructure layer; Open networking; Openflow; Security, Network layers},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84997272207&partnerID=40&md5=ca96921d3dda53006714397674a58bc1}
}

@Conference{Scarborough2016,
  Title                    = {Case study: Microservice evolution and software lifecycle of the XSEDE user portal API},
  Author                   = {Scarborough, W. and Arnold, C. and Dahan, M.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Publisher                = {Association for Computing Machinery},
  Volume                   = {17-21-July-2016},

  Abstract                 = {The XSEDE User Portal (XUP) [1] is a web interface providing a set of user specific XSEDE services and documentation to a diverse audience. The XUP architecture started out depending on monolithic services provided by large Java libraries, but continues to evolve to use an application programming interface (API) [2] powered by a set of microservices [3]. The goal is to have the XUP API provide development and deployment environments that are agile, sustainable, and capable of handling feature changes. In making this transition, we have developed guidelines for API services that balance complexity and reuse needs with flexibility requirements. In doing so, we have also created our own set of best practices on how to convert to using microservices. In this paper we will use the XSEDE User Portal API development as a case study to explain our rationale, approach, and experiences in working with microservices in a real production environment to provide better and more reliable science services for end users.},
  Art_number               = {a47},
  Author_keywords          = {API; Microservices; XSEDE user portal},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2949550.2949655},
  ISBN                     = {9781450347556},
  Journal                  = {ACM International Conference Proceeding Series},
  Keywords                 = {Big data; Java programming language, Best practices; Feature changes; Java library; Microservices; Production environments; Software life cycles; User portals; Web interface, Application programming interfaces (API)},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84989195972&doi=10.1145%2f2949550.2949655&partnerID=40&md5=6af0648817ab8cae31b517ac6f172c6f}
}

@Conference{Scharf2013159,
  Title                    = {Scrum in a software engineering course: An in-depth praxis report},
  Author                   = {Scharf, A. and Koch, A.},
  Year                     = {2013},
  Note                     = {cited By 8},
  Pages                    = {159-168},

  Abstract                 = {Working in a team for a limited period of time and to deliver a high quality product are some of the skills students should gain during their studies at the university. Therefore universities should offer software engineering courses teaching agile methodologies broadly used in the industry as well. These courses need to simulate a real world working environment introducing agile methods like XP or Scrum. We present the design of our Scrum based undergraduate course Software Engineering 1, provide in-depth information about important course details and also give recommendations for tools we find useful. Unlike other software engineering courses we have a large staff of up to 11 supervisors allowing us to simulate close to real world working conditions. We provide every team with a tutor who is responsible for observing his team and answer questions. Additional research assistants are playing the role of customers. © 2013 IEEE.},
  Art_number               = {6595247},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/CSEET.2013.6595247},
  ISBN                     = {9781467351409},
  ISSN                     = {10930175},
  Journal                  = {Software Engineering Education Conference, Proceedings},
  Keywords                 = {Agile Methodologies; Agile methods; High-quality products; Software engineering course; Undergraduate Courses; Working environment, Curricula; Engineering education; Students; Teaching; Technical presentations, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84884946888&doi=10.1109%2fCSEET.2013.6595247&partnerID=40&md5=920af18e8bd66253fcbf658a801dc442}
}

@Conference{Schmidt20133660,
  Title                    = {Team adaptability in agile information systems development},
  Author                   = {Schmidt, C.T. and Kude, T. and Tripp, J. and Heinzl, A. and Spohrer, K.},
  Year                     = {2013},
  Note                     = {cited By 0},
  Pages                    = {3660-3670},
  Volume                   = {4},

  Abstract                 = {While agile development methods have enjoyed widespread adoption, literature has lagged behind in the development of theory to explain its impact on team performance. In this paper, we develop a theoretical model to explain the impact of agile software development on the performance of information systems development (ISD) teams. We first propose a new construct "ISD team agility" which we conceptualize along the iterativeness and collaborativeness of conducting fundamental activities of software development. Based on team adaptability theory as well as on empirical exploration, we then develop a model that explains the impact of ISD team agility on team performance. Central team aspects of adaptive teams are proposed to be directly and indirectly influenced by team agility and, therefore, help us explain the effects of agile ISD on team performance. This research project intends to quantitatively test the model using data from professional software developers. © (2013) by the AIS/ICIS Administrative Office All rights reserved.},
  Author_keywords          = {Agile Software Development; Shared Mental Models; Team Adaptability; Team Performance},
  Document_type            = {Conference Paper},
  ISBN                     = {9781629934266},
  Journal                  = {International Conference on Information Systems (ICIS 2013): Reshaping Society Through Information Systems Design},
  Keywords                 = {Agile development methods; Agile information system; Agile software development; Information systems development; Professional software; Shared mental model; Team Adaptability; Team performance, Management information systems; Software design; Software testing, Information systems},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84897755941&partnerID=40&md5=8b69c73b2a2da0e5db148e0536bb887f}
}

@Conference{Scholtz2015,
  Title                    = {Systematic composition of web-based applications with focus on security},
  Author                   = {Scholtz, A. and Wild, S. and Gaedke, M.},
  Year                     = {2015},
  Editor                   = {Steinbauer M., Indrawan-Santiago M., Anderst-Kotsis G., Khalil I.},
  Note                     = {cited By 0},
  Publisher                = {Association for Computing Machinery, Inc},

  Abstract                 = {With increasing complexity of web-based applications, traditional engineering from scratch becomes an effortful matter with security aspects dificult to oversee. By composing applications from reusable building blocks, component-based web engineering approaches promise to reduce time to market while providing exibility to changing conditions. Yet, they face a trade off between developing software in an agile fashion and establishing a solid security foundation. To mitigate risks of successful attacks, web engineers must however ensure security during the entire lifetime of web-based applications. This paper therefore presents WAM++ which combines well with existing methodology and assists engineers in designing web-based applications with a strong emphasis on security. Based on the theoretical foundation from prior work, we introduce a vocabulary to describe both the architecture of web-based applications and involved services. Furthermore, we support engineers by an online diagraming tool and showcase a prototypical implementation of WAM++ in an existing identity management platform. © 2015 ACM.},
  Art_number               = {85},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2837185.2837250},
  ISBN                     = {9781450334914},
  Journal                  = {17th International Conference on Information Integration and Web-Based Applications and Services, iiWAS 2015 - Proceedings},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84967188629&doi=10.1145%2f2837185.2837250&partnerID=40&md5=fb35f63f8d56cf152785ee0ccde61866}
}

@Conference{Sedano2016,
  Title                    = {Sustainable Software Development through Overlapping Pair Rotation},
  Author                   = {Sedano, T. and Ralph, P. and Péraire, C.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Publisher                = {IEEE Computer Society},
  Volume                   = {08-09-September-2016},

  Abstract                 = {Context: Conventional wisdom says that team disruptions (like team churn) should be avoided. However, we have observed software development projects that succeed despite high disruption. Objective: The purpose of this paper is to understand how to develop software effectively, even in the face of team disruption. Method: We followed Constructivist Grounded Theory. The primary researcher conducted participant-observation of several projects at Pivotal (a software development company), and interviewed 21 software engineers, interaction designers, and product managers. The researcher iteratively sampled and analyzed the collected data until achieving theoretical saturation. Results: This paper introduces a descriptive theory of Sustainable Software Development. The theory encompasses principles, policies, and practices aiming at removing knowledge silos and improving code quality (including discoverability and readability), hence leading to development sustainability. Limitations: While the results are highly relevant to the observed projects at Pivotal, the outcomes may not be transferable to other software development organizations with different software development cultures. Conclusion: The theory refines and extends the understanding of Extreme Programming by adding a few principles, policies, and practices (like the unique Overlapping Pair Rotation practice) and aligning these principles, policies, and practices towards the business goal of sustainability.},
  Art_number               = {a19},
  Author_keywords          = {Code ownership; Extreme Programming; Grounded Theory; Sustainable software development},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2961111.2962590},
  ISBN                     = {9781450344272},
  ISSN                     = {19493770},
  Journal                  = {International Symposium on Empirical Software Engineering and Measurement},
  Keywords                 = {Iterative methods; Software engineering; Sustainable development, Code ownership; EXtreme Programming; Grounded theory; Participant observations; Product manager; Software development organizations; Software development projects; Sustainable softwares, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84991584268&doi=10.1145%2f2961111.2962590&partnerID=40&md5=1640a4ff32d91ce21529cd2e1511bb4b}
}

@Conference{Senapathi2014,
  Title                    = {An empirical investigation of the factors affecting agile usage},
  Author                   = {Senapathi, M. and Srinivasan, A.},
  Year                     = {2014},
  Note                     = {cited By 1},
  Publisher                = {Association for Computing Machinery},

  Abstract                 = {Context: Although agile software development (ASD) method use has grown dramatically in recent years, there is lack of empirical evidence for their effective use and predicted improvements in software development. This suggests that there is an imprecise understanding of their use and practice in organisations beyond the adoption phase. There is a lack of clarity on what 'usage' or 'effectiveness' mean in the context of ASD. In particular, the relationship between agile usage and agile effectiveness has not been investigated. Objective: To study the factors that impact usage of ASD methods and analyse the relationship between post-adoption use of ASD methods, i.e. agile usage and the results effectively achieved in terms of improvements in development outcomes, i.e. agile effectiveness. Method: An agile usage model of post-adoption or continued agile usage is tested using a survey instrument. The study employs variance-based or partial least squares structural equation modelling (PLS-SEM) implemented in SmartPLS version 2.0. Special attention is given to the quality of the measures used by developing reliable and valid measures of study variables. Results: The results from a partial least squares (PLS) analysis shows that relative advantage and agile coach significantly influence the usage of agile methods. Results also support the thesis that agile usage as measured by intensity and extent of agile method use significantly impacts agile effectiveness. Conclusions: The overall contribution of this research is to improve the effectiveness of ASD methods by increasing the likelihood that ASD methods will be effectively used and sustained beyond the adoption phase. Copyright 2014 ACM.},
  Art_number               = {a10},
  Author_keywords          = {Agile effectiveness; Agile usage; Survey research},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2601248.2601253},
  ISBN                     = {9781450324762},
  Journal                  = {ACM International Conference Proceeding Series},
  Keywords                 = {Least squares approximations; Software design, Agile effectiveness; Agile software development; Agile usage; Empirical investigation; Partial least square (PLS); Partial least squares analysis; Structural equation modelling; Survey research, Surveys},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84905459741&doi=10.1145%2f2601248.2601253&partnerID=40&md5=0be0c9ab9c4fa3bdb7af36fd316a5ecf}
}

@Conference{Senapathi2013119,
  Title                    = {Sustained agile usage: A systematic literature review},
  Author                   = {Senapathi, M. and Srinivasan, A.},
  Year                     = {2013},
  Note                     = {cited By 8},
  Pages                    = {119-124},

  Abstract                 = {Context: Agile methodologies (AM) emerged as a popular alternative to formalized methods, and have gained widespread acceptance in both the academic and industrial contexts. While most research has focused on their early stages of adoption and use, there is little evidence that agile methodologies have been effectively used beyond the adoption stage. Objective: The objective of this paper is to gain a comprehensive understanding of the various factors that impact the sustained usage of agile methods. Method: We performed a systematic literature review to identify empirical studies relating to agile usage. We followed the guidelines provided for conducting systematic literature reviews in software engineering [1, 2] using the following distinct stages: 1) protocol development and the search strategy, 2) exclusion process, 3) data extraction, and 4) data synthesis. Results: Our review identified nine critical factors viz., Management Support, Attitude, Motivation, Team Composition, Training, Agile Mindset, Technical Competence and Expertise, Agile Engineering Practices, and Methodology Champion. Conclusions: Our review highlights the significance of nine critical factors that impact sustained usage of AM in organizations. Our findings also indicate that the right balance and combination of various factors with an emphasis on continuous improvement will be crucial for achieving true agile sustainability in organizations. Copyright 2013 ACM.},
  Author_keywords          = {Agile usage; Critical factors; Sustained agile usage},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2460999.2461016},
  ISBN                     = {9781450318488},
  Journal                  = {ACM International Conference Proceeding Series},
  Keywords                 = {Agile Methodologies; Agile usage; Continuous improvements; Critical factors; Protocol development; Sustained agile usage; Systematic literature review; Technical competence, Search engines, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84877257656&doi=10.1145%2f2460999.2461016&partnerID=40&md5=c41327aed3adae3faf8ba9159123ead3}
}

@Conference{Seyam2015460,
  Title                    = {Enhancing usability through agility: Pair programming for a practice-oriented integration approach},
  Author                   = {Seyam, M.},
  Year                     = {2015},
  Editor                   = {Smari W.W., Natarian J., McQuay W., Nygard M.},
  Note                     = {cited By 3},
  Pages                    = {460-463},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {In many of today's small companies and startups, software development teams consist of small number of developers who can sometimes perform the roles of designers as part of their tasks. This leads to development processes that may not give enough attention to the importance of UX/UI design for the product under development. Moreover, such small teams may lack the required organization skills that help them manage how they work together. As a result, such teams usually face problems with delivering the 'right' product, as well as not being able to follow a sustainable development process. In a similar context, CS students in programming classes are facing almost the same problems of small teams in industry. To tackle these problems, many researchers and practitioners have proposed integrating practices from agile and UX design methods to help developers emphasize the UX requirements and be able to organize their work environment. Despite the differences in how they approach their goals, both agile and UX teams seek user satisfaction by providing working and usable software. In our research, we explore how such integration can be a good fit for both CS students and software developers. We begin by showing our proposed set of practices that can be directly applied by developers. We also show how we will proceed by focusing on Pair Programming (PP) as an agile practice that promotes a collaborative work environment, which we will study its impact on students who build user interfaces in a Mobile Software Development course. Using PP in a class sitting will help us evaluate how agile practices that emphasize collaborative workspaces work with UX design, as well as introducing an adaptive and collaborative teaching approach that can be used in CS programming labs. © 2015 IEEE.},
  Art_number               = {7210467},
  Author_keywords          = {collaboration in education; collaborative software development; Frameworks for collaboration},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/CTS.2015.7210467},
  ISBN                     = {9781467376464},
  Journal                  = {2015 International Conference on Collaboration Technologies and Systems, CTS 2015},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84959465912&doi=10.1109%2fCTS.2015.7210467&partnerID=40&md5=136ef34283b4530560ac4ee467bfe231}
}

@Conference{Seyam2016,
  Title                    = {Teaching mobile application development through lectures, interactive tutorials, and pair programming},
  Author                   = {Seyam, M. and McCrickard, D.S. and Niu, S. and Esakia, A. and Kim, W.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},
  Volume                   = {2016-November},

  Abstract                 = {Research suggests that different teaching styles and multiple exposures of different styles to material can aid in the learning process. While there are guidelines for identifying the best teaching style for material, new and evolving areas can present unique challenges. The emerging area of mobile software development, which combines aspects of software, hardware, and interpersonal interaction, captures many such challenges; e.g., understanding how to develop for multiple screen sizes, designing for GPS time lag, dealing with unreliable sensor data. Teaching these challenging materials seemed well suited for multiple approaches that leveraged different learning styles. This paper examines three teaching approaches employed in ten teaching modules across two semesters of a mobile software development course. The approaches included lectures, interactive tutorials, and Pair Programming. Lectures were used to introduce topics and explore underlying theories of development. The lectures included time for questions from and for the students, but otherwise did not have an active learning component. Two active learning approaches used in the class were interactive tutorials and Pair Programming. Interactive tutorials presented applied development approaches, then explored their use in an individual-based hands-on demos. Pair Programming is an agile software development practice, used in both industry and education, which enforces a role-based approach to learning new programming concepts. Homeworks were used to assess learning, and surveys reflected student satisfaction. Results show areas of promise and of concern with regard to the learning styles. It seems that repetition of topics is important for mastery of the topics. Foundational theories seem well suited for lectures, while programming concepts work better in active learning situations. Additional learning took place through office hours, online question forums, and individual and group online exploration. The findings suggest specific approaches to teaching challenging and unique mobile software development topics as well as a general approach to identifying ways to distribute learning objectives across lectures, interactive tutorials, and Pair Programming sessions. © 2016 IEEE.},
  Art_number               = {7757533},
  Author_keywords          = {Computer science education; Mobile application development; Pair programming},
  Coden                    = {PFECD},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/FIE.2016.7757533},
  ISBN                     = {9781509017904},
  ISSN                     = {15394565},
  Journal                  = {Proceedings - Frontiers in Education Conference, FIE},
  Keywords                 = {Artificial intelligence; Computer programming; Education; Education computing; Engineering education; Mobile computing; Mobile telecommunication systems; Software engineering; Students; Teaching, Agile software development; Computer Science Education; Development approach; Interactive tutorials; Mobile application development; Pair-programming; Programming concepts; Student satisfaction, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85006817475&doi=10.1109%2fFIE.2016.7757533&partnerID=40&md5=0a3c7496a52328f47daad254c96f0bd5}
}

@Conference{Seyam2015124,
  Title                    = {Collaborating on mobile app design through pair programming: A practice-oriented approach overview and expert review},
  Author                   = {Seyam, M. and McCrickard, S.},
  Year                     = {2015},
  Editor                   = {Smari W.W., Natarian J., McQuay W., Nygard M.},
  Note                     = {cited By 3},
  Pages                    = {124-131},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {In many of today's small companies and startups, developers may not give enough attention to the importance of UX/UI design for the product under development. Moreover, such small teams may lack the required organization skills that help them to collaborate and work together. As a result, such teams usually face problems with delivering the 'right' product, as well as not being able to follow a sustainable development process. In a similar context, CS students in programming classes are facing almost the same problems of small teams in industry. To tackle these problems, various approaches for integrating agile development methods and UX design methods have been proposed to help developers carefully consider the UX requirements, and to be able to organize their work environment. In this paper, we explore how such integration can be a good fit for both CS students and software developers, especially for those who work on mobile development. We present our proposed set of integration guidelines, and then we focus on Pair Programming (PP) as an agile practice that promotes a collaborative work environment. The expert reviews conducted in this paper helped us exlore how PP can be introduced to CS students (and later, to developers in the market) to support collaborative work environments. Moreover, Using PP in class provides an adaptive and collaborative teaching approach that can be used in CS programming labs. We also discuss the pitfalls that can affect developers during PP sessions, and how to avoid such negative effects. We conclude by providing a set of recommended practices that can be applied to introduce PP for developers in both academic and industrial contexts. © 2015 IEEE.},
  Art_number               = {7210412},
  Author_keywords          = {agile methods; collaboration in education; collaborative software development; Frameworks for collaboration; pair programming; UX design},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/CTS.2015.7210412},
  ISBN                     = {9781467376464},
  Journal                  = {2015 International Conference on Collaboration Technologies and Systems, CTS 2015},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84959508580&doi=10.1109%2fCTS.2015.7210412&partnerID=40&md5=a7c8e706d52e7d1ca133bfaea1899a08}
}

@Article{Shahabuddin2016,
  Title                    = {Integration testing prior to unit testing: A paradigm shift in object oriented software testing of agile software engineering},
  Author                   = {Shahabuddin, S.M. and Prasanth, Y.},
  Journal                  = {Indian Journal of Science and Technology},
  Year                     = {2016},
  Note                     = {cited By 1},
  Number                   = {20},
  Volume                   = {9},

  Abstract                 = {Objectives: The main objective of the paper is to investigate the paradigm shift in software testing with hypothesis "integration testing should precede unit testing for cultural transformation resulting in economic governance". Methods: The research method employed is real time as the authors involved in the development process in two reputed software companies. We considered five projects namely Vehicle Monitoring System (VMS), Easy Subcontracting (EZSUB), Key to Engineering (K2ENGG), Electronic Material List (EMLIST), and Feedback Database (FBDB). They are developed in Agile methodology. We observed the testing time with traditional approach and also the proposed approach which puts integration testing prior to unit testing. Findings: Our research in association with leading software development companies revealed that integration testing prior to unit testing has significant impact on accelerating and transforming to increased agility. Thus the hypothesis is tested and proved to be positive. This new approach in testing will go a long way in achieving agility at scale with increased success rate. Our findings can be summarized as follows. Integration testing prior to unit testing can take software enterprises towards agility at scale. The new paradigm shift can cause cultural transformation from traditional approach to economic governance through agile methods. It also could improve in various parameters such as time-to deliver products, efficiency in software development and delivery process, increased personnel morale and increased client satisfaction besides achieving high success rate in the context focusing agility at scale. The proposed approach resulted in performance improvement in all five projects. The average percentage increase in productivity and delivery for VMS is 27.62%, EZSUB 27.74%, K2ENGG 31.29%, EMLIST 30.83% and FBDB 33.33%. Application: To our knowledge it is our first empirical study that threw light on the paradigm shift in object oriented software testing with different case studies.},
  Art_number               = {91223},
  Author_keywords          = {Agile software engineering; Integration testing; Object oriented software testing; Unit testing},
  Document_type            = {Article},
  Doi                      = {10.17485/ijst/2016/v9i20/91223},
  ISSN                     = {09746846},
  Publisher                = {Indian Society for Education and Environment},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84974622163&doi=10.17485%2fijst%2f2016%2fv9i20%2f91223&partnerID=40&md5=cff2ce08356e4bd42b70744f080632ed}
}

@Conference{Shamugam2016,
  Title                    = {Software defined networking challenges and future direction: A case study of implementing SDN features on OpenStack private cloud},
  Author                   = {Shamugam, V. and Murray, I. and Leong, J.A. and Sidhu, A.S.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Number                   = {1},
  Publisher                = {Institute of Physics Publishing},
  Volume                   = {121},

  Abstract                 = {Cloud computing provides services on demand instantly, such as access to network infrastructure consisting of computing hardware, operating systems, network storage, database and applications. Network usage and demands are growing at a very fast rate and to meet the current requirements, there is a need for automatic infrastructure scaling. Traditional networks are difficult to automate because of the distributed nature of their decision making process for switching or routing which are collocated on the same device. Managing complex environments using traditional networks is time-consuming and expensive, especially in the case of generating virtual machines, migration and network configuration. To mitigate the challenges, network operations require efficient, flexible, agile and scalable software defined networks (SDN). This paper discuss various issues in SDN and suggests how to mitigate the network management related issues. A private cloud prototype test bed was setup to implement the SDN on the OpenStack platform to test and evaluate the various network performances provided by the various configurations.},
  Art_number               = {012003},
  Document_type            = {Conference Paper},
  Doi                      = {10.1088/1757-899X/121/1/012003},
  ISSN                     = {17578981},
  Journal                  = {IOP Conference Series: Materials Science and Engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84968546926&doi=10.1088%2f1757-899X%2f121%2f1%2f012003&partnerID=40&md5=a262fa231f1c7bb3ba25f4a0be0ecb70}
}

@Book{Shannon20131165,
  Title                    = {Improving lean, service- oriented software development at codeweavers ltd},
  Author                   = {Shannon, P. and Barrett, P. and Kidd, N. and Knight, C. and Wessel, S.},
  Publisher                = {IGI Global},
  Year                     = {2013},
  Note                     = {cited By 0},
  Volume                   = {3-4},

  Abstract                 = {Following a successful adoption of lean and agile practices, the development team at Codeweavers Ltd has furthered its approach to service-oriented software development for the motor finance and insurance industry. Through iteratively inspecting and adapting their processes over the last twelve months, the team members have seen a change from their Kanban-style single piece flow to multiple work cells developing with separate swim lanes on a work in progress board and within fixed length iterations. The arrival of strong competition to their market led to a positive shift towards customer service and interaction with increased attention on lean planning and agility. This chapter reports on improvement in software craftsmanship with a focus on quality, largely achieved by the use of service-oriented architecture, combined with increased use of mocking for unit-testing. The perspective taken is from software team members, and in the chapter, the developers chart their own observations, improvements, and failures over the course of a year. © 2014, IGI Global.},
  Document_type            = {Book Chapter},
  Doi                      = {10.4018/978-1-4666-4301-7.ch057},
  ISBN                     = {9781466643024; 1466643013; 9781466643017},
  Journal                  = {Software Design and Development: Concepts, Methodologies, Tools, and Applications},
  Pages                    = {1165-1178},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84944686099&doi=10.4018%2f978-1-4666-4301-7.ch057&partnerID=40&md5=88df408dc97a61795b95adb910b3ef33}
}

@Article{Sharma20169283,
  Title                    = {An empirical approach to measure agility for secure agile development using fuzzy analytic hierarchy process and artificial neural network},
  Author                   = {Sharma, A. and Bawa, R.K.},
  Journal                  = {International Journal of Control Theory and Applications},
  Year                     = {2016},
  Note                     = {cited By 0},
  Number                   = {19},
  Pages                    = {9283-9290},
  Volume                   = {9},

  Abstract                 = {The requirement for fast and lean software delivery from the today's industry leads to adoption of agile development approaches over other conventional approaches. The Dynamic and competitive environment leads to rapid change of customer requirements which has also boosted the use of agile approach as it has merits like simplified documents and fast release which further leads to maximizing effectiveness and productivity. However, from security point of view it is very difficult to decide whether to use an agile approach for a given project or not, as there is no well defined empirical decision making process. This paper provides a roadmap for taking decision using Fuzzy Analytic Hierarchy Process and Artificial Neural Network approach by calculating Global Agility Indicator and in case it is selected, it further provides Local Agility Indicator to decide among popular Agile Development methods like Extreme Programming, Scrum, Feature-driven Development, Crystal Clear, Dynamic Software Development Method and Lean development. The fuzzy AHP deals with the inability of AHP to deal with the subjectiveness in the pair wise comparison process. In order to compensate the decision maker's uncertainty, it takes into account a range of values instead of a single crisp value. Further Artificial Neural Network with back propagation approach is used to train the network and producing correct results even for inconsistent input. By taking such a systematic approach for development, it inherently addresses the major concern of security on projects using agile approach. © International Science Press.},
  Author_keywords          = {Agile Development; Agile Security; ANN; Crystal Clear; DSDM; FDD; Fuzzy Analytic Hierarchy Process; Global Agility Indicator; Local Agility Indicator; Scrum; XP},
  Document_type            = {Article},
  ISSN                     = {09745572},
  Publisher                = {Serials Publications},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85010991979&partnerID=40&md5=9684e3b3f1662a717c6200cbeb761150}
}

@Book{Sharma20131,
  Title                    = {A roadmap for software engineering for the cloud: Results of a systematic review},
  Author                   = {Sharma, A. and Maurer, F.},
  Publisher                = {IGI Global},
  Year                     = {2013},
  Note                     = {cited By 1},
  Volume                   = {1-4},

  Abstract                 = {This chapter presents the results of a systematic review from existing literature in software engineering for cloud-based applications and describes what the research community thinks about the effects of introducing cloud computing into a software development process. In this systematic review, the authors describe the challenges cloud computing poses for software development. They particularly investigate whether agile methodologies are beneficial or not in developing software that will be deployed in the cloud. In their results, they found that industry practitioners in their blogs and self-reported reviews indicate that agile development and cloud computing goes well together and that further investigation is required to confirm this claim. © 2014, IGI Global.},
  Document_type            = {Book Chapter},
  Doi                      = {10.4018/978-1-4666-4301-7.ch001},
  ISBN                     = {9781466643024; 1466643013; 9781466643017},
  Journal                  = {Software Design and Development: Concepts, Methodologies, Tools, and Applications},
  Pages                    = {1-16},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84944683134&doi=10.4018%2f978-1-4666-4301-7.ch001&partnerID=40&md5=cf7936f24f7c0fa22c17035c6e48f093}
}

@Article{Sharma201632,
  Title                    = {Agile 5 using high maturity CMMI practices to improve agile processes and achieve predictable results},
  Author                   = {Sharma, D. and Narula, N. and Lee, D. and Leishman, T.R.},
  Journal                  = {CrossTalk},
  Year                     = {2016},
  Note                     = {cited By 0},
  Number                   = {4},
  Pages                    = {32-35},
  Volume                   = {29},

  Abstract                 = {In this article we will share a case-study of our experience combining Scrum and CMMI Level 5, what we refer to as "Agile 5", to significantly improve the delivery rate of product capabilities while maintaining a high level of quality and employee satisfaction. We will also share the pain experienced during our journey of blending these industry best practices and the lessons we learned.},
  Document_type            = {Article},
  Keywords                 = {Crosstalk; Human computer interaction; Software engineering, Agile process; Best practices; Employee satisfaction; Level 5, Blending},
  Publisher                = {U.S. Department of Defense},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84989943917&partnerID=40&md5=f01ee1282979223c5acd7c3e327eb588}
}

@Conference{Sharma201528,
  Title                    = {Communication understandability enhancement in GSD},
  Author                   = {Sharma, S. and Kaur, P. and Kaur, U.},
  Year                     = {2015},
  Editor                   = {Kumar B., Singh G., Jassi J.S.},
  Note                     = {cited By 0},
  Pages                    = {28-33},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Global software development (GSD) is becoming a common practice in today's world and it has brought significant changes to software development industries. Majority of the software development companies are adopting Global Software Development (GSD) to get benefits like reduced development cost, better quality product and access to skilled labor etc. However along with various benefits many challenges related to communication, coordination and control are also involved in globally distributed projects as compared to co-located projects. Mitigation of these Global Software Development challenges by themselves is not an easy task. Agile Software Development can be beneficial with respect to GSD as it emphasize on customer collaboration, interaction between individuals, continuous requirement gathering, delivering of the software with in time and budget constraints etc. There are also certain differences accompanied with the benefits of merger between agile and Global software development like communication, cultural and time zone differences, trust and knowledge management. This research study aims to look at current empirical evidence regarding challenges faced in a particular GSD context and mitigation strategies to deal with these challenges both from the perspectives of literature and industry and to develop a framework that helps to mitigate these GSD challenges. © 2015 IEEE.},
  Art_number               = {7154962},
  Author_keywords          = {Automatic Spell Correction; Communication issues; Global Software Development; Regional languages},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ABLAZE.2015.7154962},
  ISBN                     = {9781479984336},
  Journal                  = {2015 1st International Conference on Futuristic Trends in Computational Analysis and Knowledge Management, ABLAZE 2015},
  Keywords                 = {Budget control; Computational methods; Knowledge management; Quality control; Software engineering, Agile software development; Coordination and Control; Customer collaboration; Development industry; Distributed projects; Global software development; Mitigation strategy; Requirement gathering, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84941207292&doi=10.1109%2fABLAZE.2015.7154962&partnerID=40&md5=05d21bbcb1ec0ac3c35d17557f5b827b}
}

@Article{Sharma2015342,
  Title                    = {Thinking cloud-enabled adept and agile supply chain for SMEs: A conceptual study},
  Author                   = {Sharma, S. and Shah, B.},
  Journal                  = {International Journal of Business Information Systems},
  Year                     = {2015},
  Note                     = {cited By 0},
  Number                   = {3},
  Pages                    = {342-365},
  Volume                   = {19},

  Abstract                 = {Cloud computing sustains the rising era of internet technologies through service paradigm for software, platform and infrastructure. This article explores the role of information technology (IT) and cloud enabled services to improve triumph and productivity of supply chain. The concept discusses how small and medium scale enterprises (SMEs) can achieve adept and agile supply chain by expediency of on-demand and on-premise cloud model. The hybrid cloud supports information system as 'platform as a service', supply chain functional applications as 'software as a service' and other resources like storage, processing capabilities and data centres in the form of 'infrastructure as a service'. The performance metrics are compared with existing collaborative planning, forecasting and replenishment (CPFR) benchmark model. An industrial case represents feasibility of the proposed model with improved performance, security and costs. It also discusses how SMEs can adopt this model to optimise value chain, IT resources and response time. Copyright © 2015 Inderscience Enterprises Ltd.},
  Author_keywords          = {Cloud computing; Collaborative planning forecasting and replenishment; CPFR; Customer relationship; E-commerce; Enterprise resource planning; ERP; Supplier relationship},
  Document_type            = {Article},
  Doi                      = {10.1504/IJBIS.2015.069724},
  ISSN                     = {17460972},
  Publisher                = {Inderscience Enterprises Ltd.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84930466964&doi=10.1504%2fIJBIS.2015.069724&partnerID=40&md5=74a0b483ed2fc13d6b451ce70ad9f2d5}
}

@Conference{Sharma201674,
  Title                    = {An automated contextual collaboration approach for distributed agile delivery},
  Author                   = {Sharma, V.S. and Kaulgud, V.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {74-77},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {The Agile way of developing and delivering software systems is gaining mainstream adoption due to the imperatives of a quickly changing technical landscape, business requirements and customer expectations. To truly leverage the power of Agile, big organizations need to be able to utilize distributed teams effectively. However, Agile delivery relies hugely on collaboration among team members and this can become a stumbling block among such geographically dispersed teams. Moreover, in such large projects the development and process layer needs to be monitored for any problematic patterns or events that could potentially cause the Sprints to fail. Here, we describe an automated approach which allows for contextual collaboration in such distributed Agile projects. The approach captures important events from the process and the development environment and uses a rule based approach to then automatically create awareness regarding them to appropriate roles in the project. Every team member receives an actionable feed in a MyContext pane which then leads the team member to navigate to an Activity centric context where collaboration specific to that activity can take place. This approach has been implemented in a process guidance and awareness workbench that we are piloting within our organization. © 2015 IEEE.},
  Art_number               = {7426640},
  Author_keywords          = {Contextual Collaboration; Distributed Agile},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ASEW.2015.24},
  ISBN                     = {9781467397759},
  Journal                  = {Proceedings - 2015 30th IEEE/ACM International Conference on Automated Software Engineering Workshops, ASEW 2015},
  Keywords                 = {Automation; Software engineering; Technical presentations, Automated approach; Business requirement; Contextual collaboration; Customer expectation; Development environment; Distributed Agile; Geographically dispersed teams; Rule-based approach, Air navigation},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84964510388&doi=10.1109%2fASEW.2015.24&partnerID=40&md5=69bc65abb1a939f39de9cc826bae0b92}
}

@Conference{Sharp201410,
  Title                    = {Overcoming challenges in collaboration between research and practice: The agile research network},
  Author                   = {Sharp, H. and Plonka, L. and Taylor, K. and Gregory, P.},
  Year                     = {2014},
  Note                     = {cited By 1},
  Pages                    = {10-13},
  Publisher                = {Association for Computing Machinery, Inc},

  Abstract                 = {There is wide acceptance in the software engineering field that industry and research can gain significantly from each other and there have been several initiatives for encouraging collaboration between the two. However there are some often-quoted challenges in this kind of collaboration. For example, that the timescales of research and practice are incompatible, that research is not seen as relevant for practice, and that research demands a different kind of rigour than practice supports. These are complex challenges that are not always easy to overcome. For the last year we have been using an approach designed to address some of these challenges and to bridge the gap between research and practice, specifically in the agile software development arena. So far we have collaborated successfully with two partners and have investigated two practitioner-driven challenges with agile. In this short paper we will introduce the approach, how it addresses the collaboration challenges between research and practice, and describe the lessons learned from our experience. Copyright 2014 ACM.},
  Author_keywords          = {Action research; Agile; Collaboration; Project management},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2593850.2593859},
  ISBN                     = {9781450328593},
  Journal                  = {1st International Workshop on Software Engineering Research and Industrial Practices, SER and IPs 2014 - Proceedings},
  Keywords                 = {Complex networks; Project management; Software design, Action research; Agile; Agile software development; Collaboration; Research networks; Time-scales, Industrial research},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84907886021&doi=10.1145%2f2593850.2593859&partnerID=40&md5=432b44ecc5486a2854b464dcf242b6a5}
}

@Conference{Shastri201757,
  Title                    = {Does the 'project manager' still exist in agile software development projects?},
  Author                   = {Shastri, Y. and Hoda, R. and Amor, R.},
  Year                     = {2017},
  Editor                   = {Murphy G.C., Reeves S., Potanin A., Dietrich J.},
  Note                     = {cited By 0},
  Pages                    = {57-64},
  Publisher                = {IEEE Computer Society},

  Abstract                 = {The project manager has been a ubiquitous feature of traditional software development projects. However, agile software development (ASD) methods which emphasize selforganizing teams and rapid response to change have done away with the project manager's title. New job titles such as the scrum master and product owner have been introduced instead. It is unclear as to what extent the 'project manager' is still encountered in the agile software industry. An online survey was posted out to agile special interest groups on popular social media platforms to discover the frequency of the job title 'project manager' in agile projects. Analysis of the 97 responses from 31 countries around the world revealed that: a) the title of project manager is still widely used (67%); b) there is a correlation between the team size and presence of project manager such that there is a higher probability the project manager will be present in teams of 5-10 members and those over 25 members; and c) there is an inverse correlation between the co-location of a team and presence of project manager. Further research is needed to better understand why the project manager continues to be present on ASD projects and how their role may have changed. © 2016 IEEE.},
  Art_number               = {7890571},
  Author_keywords          = {Agile project management; Agile software development; Project manager; Software project management},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/APSEC.2016.019},
  ISBN                     = {9781509055753},
  ISSN                     = {15301362},
  Journal                  = {Proceedings - Asia-Pacific Software Engineering Conference, APSEC},
  Keywords                 = {Employment; Human resource management; Managers; Software design; Software engineering, Agile project management; Agile software development; Agile software development projects; Project managers; Social media platforms; Software development projects; Software project management; Special interest groups, Project management},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85018482692&doi=10.1109%2fAPSEC.2016.019&partnerID=40&md5=b5baaf1b65ad69db98b30995644e2702}
}

@Conference{Shawky2014109,
  Title                    = {Traditional vs agile development: A comparison using chaos theory},
  Author                   = {Shawky, D.M.},
  Year                     = {2014},
  Editor                   = {Mellor S., Cardoso J., Cardoso J., Holzinger A., Cordeiro J., Cordeiro J., van Sinderen M.},
  Note                     = {cited By 2},
  Pages                    = {109-114},
  Publisher                = {SciTePress},

  Abstract                 = {Agile software development describes those methods with iterative and incremental development. This development method came into view to overcome the drawbacks of traditional development methods. Although agile development methods have become very popular since the introduction of the Agile Manifesto in 2001, however, there is an ongoing debate about the strengths and weakness of these methods in comparison with traditional ones. In this paper, a new dimension for the comparison between the two methods is presented. We postulate that, since both methods are based mainly on human activity, the two methods can be modeled using Chaos Theory. Source codes that are produced by the two methods in subsequent versions are characterized by a set of software metrics. Modeling and analysis of these metrics are performed using the Chaos Theory. Initial results show that the metrics sequences of both methods are chaotic sequences. Furthermore, agile methods produce more chaotic metrics sequences. However, is being chaotic a good or a bad feature? We argue that sometimes being chaotic is not a weakness, on the contrary, it is a strength. Copyright © 2014 SCITEPRESS - Science and Technology Publications.},
  Author_keywords          = {Agile development; Chaos theory; Software metrics; Waterfall method},
  Document_type            = {Conference Paper},
  ISBN                     = {9789897580376},
  Journal                  = {ICSOFT-PT 2014 - Proceedings of the 9th International Conference on Software Paradigm Trends},
  Keywords                 = {Algorithms; Gesture recognition; Iterative methods; Software design, Agile development; Agile development methods; Agile software development; Development method; Iterative and incremental development; Model and analysis; Software metrics; Waterfall methods, Chaos theory},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84908882810&partnerID=40&md5=764bb745c5e5092e3caa326a9da7bad1}
}

@Conference{Shenvi2014,
  Title                    = {Navigating the maze - Journey towards an optimal},
  Author                   = {Shenvi, A.A.},
  Year                     = {2014},
  Note                     = {cited By 0},
  Publisher                = {Association for Computing Machinery},

  Abstract                 = {Medical software development poses an interesting challenge from the process and Quality Management System (QMS) perspective. Being software, on one hand there are several process models/frameworks available in the industry practice, all claiming to be the ultimate pinnacle and this list gets supplemented as more research happens in the area of software engineering. On the other hand, healthcare is a regulated industry governed by region specific regulations. These regulations are not standardized across the globe which makes it quite challenging for a medical device manufacturer to abide by the corresponding country specific regulations where the product is going to be launched. For e.g. US is regulated by Quality Systems requirements of FDA and 510(k) approval process, Europe is governed by CE marking and ISO 13485 standard, China has its SFDA requirements whereas Japan follows PAL regulations. With the software content in the medical device increasing and number of recalls/ field issues in medical products being traced to software, the regulators are becoming increasingly stricter when it comes to processes that govern design and development of medical software. Although there are many similarities in all these standards/models as the genesis of all of them is the PDCA (Plan-Do-Check-Act) approach, there are subtle important differences as well because each is optimized for a certain purpose. If regulatory standards are more focused on product safety and risk management, the CMMI ® is more oriented towards continuous improvements. There is also lot of utility in the techniques proposed by the Agile and the Six-Sigma methodologies but then by itself these cannot become the complete Quality System. The situation is further aggravated by the fact that every stakeholder has different expectation from the software project teams for e.g. a project manager may want to follow iterative strategy to manage project risks better but the regulators on the other hand may expect documentation/evidences in a water-fall like manner, the top management may expect the team to adhere to all possible standards/models whereas the project team would want to follow as minimum requirements as possible and so on. This paper has tried to depict the challenges and dilemmas faced by medical software development teams because of availability of various models/standards/frameworks and the corresponding pros and cons of each. To navigate through this maze, it starts first by looking at the process landscape with the purpose of these various models/standards, and then tries to analyze the comparisons that have been done amongst the various models/standards in a number of published technical papers. Based on the experience of using some of these, the paper presents the insight in the form of propositions and recommends QMS architecture - both structural and operational that can be used by any medical software teams. The QMS based on the proposed structure has led to effort savings, stood the test of time in satisfying majority of the stakeholder needs and simultaneously not compromised on the regulatory aspects. The positive trends on the various performance indicators stand a testimony to the successful implementation of an optimal process framework for regulated medical software. Copyright 2014 ACM.},
  Author_keywords          = {Medical device; Quality management system; Regulations},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2590748.2590769},
  ISBN                     = {9781450327763},
  Journal                  = {ACM International Conference Proceeding Series},
  Keywords                 = {Biomedical equipment; Broadcasting; Iterative methods; Product design; Public utilities; Quality management; Risk management; Software design, Continuous improvements; Design and Development; Medical device manufacturers; Medical Devices; Performance indicators; Quality management systems; Regulations; Six-Sigma methodology, Human resource management},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84902590623&doi=10.1145%2f2590748.2590769&partnerID=40&md5=c86b986e33a1be34c0bfa1037f34dfba}
}

@Conference{Sherman201571,
  Title                    = {Toward defining the role of the software architect},
  Author                   = {Sherman, S. and Hadar, I.},
  Year                     = {2015},
  Note                     = {cited By 2},
  Pages                    = {71-76},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Software architecture is integral part of the software development; however, its integration in the development process has become more challenging with the transition from traditional to agile development methods, and with the architects becoming much more than technological experts responsible for high-level design. Some attention has been paid in recent years to the role of the architect, seeking a contemporary and comprehensive definition of this role. This paper reports on the results of an online survey, with the participation of 104 software architects, aimed at defining the soft aspects of the software architect's role. The results reveal that architects perform a variety of human-centered activities such as mentoring, leadership, reviewing and management,. Moreover, in the contexts of mentoring and leadership, software architects strive to do more than they currently do. © 2015 IEEE.},
  Art_number               = {7166091},
  Author_keywords          = {communication; leadership; mentoring; soft skills; Software architect},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/CHASE.2015.17},
  ISBN                     = {9781479919345},
  Journal                  = {Proceedings - 8th International Workshop on Cooperative and Human Aspects of Software Engineering, CHASE 2015},
  Keywords                 = {Communication; Software architecture; Software engineering, Agile development methods; Development process; High-level design; leadership; mentoring; Online surveys; Soft skills; Software architects, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84946036221&doi=10.1109%2fCHASE.2015.17&partnerID=40&md5=890f57f0a4fef2a98081574550c93af4}
}

@Article{Sherman2014219,
  Title                    = {What do software architects think they (should) do? Research in progress},
  Author                   = {Sherman, S. and Unkelos-Shpigel, N.},
  Journal                  = {Lecture Notes in Business Information Processing},
  Year                     = {2014},
  Note                     = {cited By 2},
  Pages                    = {219-225},
  Volume                   = {178 LNBIP},

  Abstract                 = {Software architecture is an integral part of software development, and has become more complex, with the transition from traditional to agile development methods. Hence, the architect's tasks in the software development project must be well defined. Though there was some amount of empirical research addressing architects' perceptions, most of the research in the area of software architecture addressed this topic theoretically. Perception, being a part of, and having an effect on, cognitive processes and decision making, is explored in this research in order to gain a deeper understanding of what tasks architects find to be included in their role and responsibility. Thus far, 8 indepth interviews were conducted in various hi-tech firms, followed by distributing an on-line questionnaire, with the response of 12 architects. The obtained results demonstrate several differences between the role of the architect, as defined in literature, and the way architects perceive their role. © Springer International Publishing Switzerland 2014.},
  Author_keywords          = {Cognition; Perceptions; Software architecture},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-07869-4},
  ISBN                     = {9783319078687},
  ISSN                     = {18651348},
  Keywords                 = {Information systems; Research; Sensory perception; Software architecture; Software design; Surveys; Systems engineering, Agile development methods; Cognition; Cognitive process; Empirical research; In-depth interviews; Online questionnaire; Software architects; Software development projects, Architecture},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904550356&doi=10.1007%2f978-3-319-07869-4&partnerID=40&md5=38d889724c735d8acd25aa5d3ec62980}
}

@Conference{Shongwe2015702,
  Title                    = {Knowledge management in small software organisations: A South African perspective},
  Author                   = {Shongwe, M.M.},
  Year                     = {2015},
  Editor                   = {Garlatti A., Massaro M.},
  Note                     = {cited By 0},
  Pages                    = {702-708},
  Publisher                = {Academic Conferences Limited},

  Abstract                 = {Software organisations have been experiencing software project failures since the beginning of software development. These failures include among others, abandoned and runaway projects, cost overruns, and low quality software. The Standish Group CHAOS report and the ITWeb report indicate that less than 50% of all projects are successful. Lack of skills and failure to learn are some reasons why projects fail. Many intervention strategies have been tried by software organisations to address this issue. Such strategies include software process improvement (SPI) models and new software development methodologies such as agile methods. These intervention strategies don't seem to be working because software development projects continue to fail. To address this issue, software organisations are turning to knowledge management (KM). This is because software development is a knowledge intensive task. KM is a series of processes that seek to acquire, create, capture and store, transfer and apply knowledge to organisational routines and processes. KM is believed to increase efficiency thus improving the software development process. This study investigated KM practices in 10 software organisations in the province of KwaZulu-Natal, South African. Interviews were conducted with 10 software project managers to determine if software organisations in South Africa have adopted KM and whether KM has improved performance. The results reveal seven KM activities; knowledge acquisition, creation, storage, organisation, transfer, application and learning. Learning indicates improved performance. The study concluded that South African software organisations practice KM and that KM has helped them perform their duties better. The study recommends that software organisations collect and store knowledge in central repositories so that it becomes easy to manage and access, implement knowledge organisation and retrieval strategies for easy knowledge identification, retrieval and dissemination.},
  Author_keywords          = {Knowledge management; Knowledge management lifecycle; Software development; Software development failure; Software organisations; South Africa},
  Document_type            = {Conference Paper},
  ISBN                     = {9781910810460},
  ISSN                     = {20488963},
  Journal                  = {Proceedings of the European Conference on Knowledge Management, ECKM},
  Keywords                 = {Knowledge management; Planning; Societies and institutions; Software engineering, Knowledge identification; Knowledge intensive tasks; Software development methodologies; Software development process; Software development projects; Software organisations; Software process improvements; South Africa, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85006716613&partnerID=40&md5=8f7450d8e605434810ec36ff6554f62c}
}

@Article{Shrivastava20171339,
  Title                    = {A risk management framework for distributed agile projects},
  Author                   = {Shrivastava, S.V. and Rathod, U.},
  Journal                  = {Information and Software Technology},
  Year                     = {2017},
  Note                     = {cited By 0},
  Pages                    = {1339-1351},
  Volume                   = {85},

  Abstract                 = {Context Distributed agile development (DAD) approach has been adopted by the software companies for cost and time benefits. However, it causes significant challenges considering the contradicting nature of the agile and distributed development. Objective The objective of this study is to develop a risk management framework that comprises the perceived risks in DAD projects, their causes and the methods used in industry for managing those risks. Method This work is an extension of an exploratory study, wherein, DAD practitioners reported the risks they face in projects and the methods they use for managing those risks. The identified risks were further categorized based on their relevance to different aspects of DAD projects. In this extension, industry practitioners ranked the risks for their impact on DAD projects and rated the methods for the frequency of their use in projects. As the number of risks under each category was large for ranking, they were grouped under the risk areas within each category. The ranking of risk categories, risk areas and risk factors for their impact on DAD projects manifests their importance. The framework includes ranked risks, their causes and the risk management approaches. It was partially implemented in live projects in three different companies and was found to be beneficial. Results The perceived impact of the risk categories, ‘Group Awareness’, ‘External Stakeholder Collaboration’ and ‘Software Development Life Cycle’ on DAD projects has been found to be high and caused by the properties of Distributed Software Development (DSD). The partial validation of the framework in three companies reported the elimination of majority of risk factors and/or reduction in their impact. Conclusion DAD projects provide significant benefits but hold substantial risks due to the contradiction between distributed development and agile practices. The reported framework could effectively minimize the DAD risks in practice. © 2017 Elsevier B.V.},
  Author_keywords          = {Agile Software Development; Distributed Agile Development (DAD); Distributed Software Development (DSD); Risk factor classification; Risk management framework in distributed agile development},
  Coden                    = {ISOTE},
  Document_type            = {Article},
  Doi                      = {10.1016/j.infsof.2016.12.005},
  ISSN                     = {09505849},
  Keywords                 = {Computer software; Life cycle; Project management; Risks; Software design; Software engineering, Agile development; Agile software development; Distributed development; Distributed software development; External stakeholders; Risk factors; Risk management framework; Software development life cycle, Risk management},
  Publisher                = {Elsevier B.V.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85009204967&doi=10.1016%2fj.infsof.2016.12.005&partnerID=40&md5=b82f249896bcdfa3c8e372ee0df043c0}
}

@Article{Shrivastava2015373,
  Title                    = {Categorization of risk factors for distributed agile projects},
  Author                   = {Shrivastava, S.V. and Rathod, U.},
  Journal                  = {Information and Software Technology},
  Year                     = {2015},
  Note                     = {cited By 14},
  Pages                    = {373-387},
  Volume                   = {58},

  Abstract                 = {Context: Organizations combine agile approach and Distributed Software Development (DSD) in order to develop better quality software solutions in lesser time and cost. It helps to reap the benefits of both agile and distributed development but pose significant challenges and risks. Relatively scanty evidence of research on the risks prevailing in distributed agile development (DAD) has motivated this study. Objective: This paper aims at creating a comprehensive set of risk factors that affect the performance of distributed agile development projects and identifies the risk management methods which are frequently used in practice for controlling those risks. Method: The study is an exploration of practitioners' experience using constant comparison method for analyzing in-depth interviews of thirteen practitioners and work documents of twenty-eight projects from thirteen different information technology (IT) organizations. The field experience was supported by extensive research literature on risk management in traditional, agile and distributed development. Results: Analysis of qualitative data from interviews and project work documents resulted into categorization of forty-five DAD risk factors grouped under five core risk categories. The risk categories were mapped to Leavitt's model of organizational change for facilitating the implementation of results in real world. The risk factors could be attributed to the conflicting properties of DSD and agile development. Besides that, some new risk factors have been experienced by practitioners and need further exploration as their understanding will help the practitioners to act on time. Conclusion: Organizations are adopting DAD for developing solutions that caters to the changing business needs, while utilizing the global talent. Conflicting properties of DSD and agile approach pose several risks for DAD. This study gives a comprehensive categorization of the risks faced by the practitioners in managing DAD projects and presents frequently used methods to reduce their impact. The work fills the yawning research void in this field. © 2014 Elsevier B.V. All rights reserved.},
  Author_keywords          = {Agile software development (ASD); Distributed Agile Development (DAD); Distributed Software Development (DSD); Leavitt's' model; Risk factor classification; Risk management in distributed agile development},
  Coden                    = {ISOTE},
  Document_type            = {Review},
  Doi                      = {10.1016/j.infsof.2014.07.007},
  ISSN                     = {09505849},
  Keywords                 = {Research and development management; Risk management; Societies and institutions; Software design, Agile development; Agile software development; Developing solutions; Distributed development; Distributed software development; In-depth interviews; Organizational change; Risk factors, Risk assessment},
  Publisher                = {Elsevier},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84914176705&doi=10.1016%2fj.infsof.2014.07.007&partnerID=40&md5=4784bfcc7159bfa7789dc45cca28f258}
}

@Conference{Sihuay2015295,
  Title                    = {Factors in the adoption of agile methods in software development process: Systematic review of the literature [Factores en la adopción de métodos ágiles en el proceso de desarrollo de software: Revisión sistemática de la literatura]},
  Author                   = {Sihuay, M. and Dávila, A. and Pessoa, M.},
  Year                     = {2015},
  Editor                   = {Matalonga S., Pimentel E., Brito I.S., Araujo J., Miranda J.J., Espana S., Cuadros-Vargas E., Bencomo N., Pastor O., Goulao M., Oliveira T., Condori-Fernandez N., de la Vara J.L., Kalinowski M., Olsina L., Antonelli L., Guizzardi R.},
  Note                     = {cited By 0},
  Pages                    = {295-308},
  Publisher                = {Ibero-American Conference on Software Engineering},

  Document_type            = {Conference Paper},
  ISBN                     = {9789972825804},
  Journal                  = {CIBSE 2015 - XVIII Ibero-American Conference on Software Engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84936101977&partnerID=40&md5=0c2c11d92ad236c54bfb9feff2bf1d98}
}

@Article{Sikka2016219,
  Title                    = {A survey on challenges in software development during the adoption of agile environment},
  Author                   = {Sikka, C. and Dhir, S. and Hooda, M.},
  Journal                  = {Advances in Intelligent Systems and Computing},
  Year                     = {2016},
  Note                     = {cited By 2},
  Pages                    = {219-224},
  Volume                   = {413},

  Abstract                 = {In the recent years, agile development has received increasing interest in software development organization. Agile adoption has lead to increase in productivity and has better outcome than the traditional software development methods. However, agile adoption also come with challenges which can adversely affect the project. In this paper, the challenges of agile implementation and its solutions are discussed. © Springer Science+Business Media Singapore 2016.},
  Author_keywords          = {Agile methodology; Challenges; Complexities; Methods; Success and failure rate},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-981-10-0419-3_26},
  Editor                   = {Saini H.S., Sayal R., Rawat S.S., Rawat S.S.},
  ISBN                     = {9789811004179},
  ISSN                     = {21945357},
  Keywords                 = {Computer software; Software engineering, Agile Methodologies; Challenges; Complexities; Failure rate; Methods, Software design},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84961226859&doi=10.1007%2f978-981-10-0419-3_26&partnerID=40&md5=cdded660e55f9d1bd535a7e873720412}
}

@Conference{Silva2014139,
  Title                    = {A reference model for agile quality assurance: Combining agile methodologies and maturity models},
  Author                   = {Silva, F.S. and Soares, F.S.F. and Peres, A.L. and De Azevedo, I.M. and Pinto, P.P. and De Lemos Meira, S.R.},
  Year                     = {2014},
  Editor                   = {da Silva A.R., da Silva A.R., Machado R.J., Brito M.A.},
  Note                     = {cited By 4},
  Pages                    = {139-144},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {The area of Quality Assurance (QA) is a challenge for many software development organizations that want to implement maturity models level rating, like Capability Maturity Model Integration (CMMI), together with agile methodologies. This study aims to present AgileQA-RM, an Agile Quality Assurance Reference Model to help organizations in QA implementation. The model proposition considers results of a systematic literature review about CMMI and agile, and a case study about QA in an organization with CMMI and agile. The methodology for model evaluation started with a check of its process areas adherence with other maturity models and with agile practices and activities. A survey based on expert opinion was also performed. Five maturity levels and eighteen process areas compose AgileQA-RM. Each process area has mandatory purpose, expected results and informative work products. Initial model assessments indicates that it can contribute to help organizations assessing its current situation about agile QA practices and supporting quality improvement through adoption of agile QA practices. © 2014 IEEE.},
  Art_number               = {6984105},
  Author_keywords          = {agile methodologies; CMMI; maturity models; quality assurance},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/QUATIC.2014.25},
  ISBN                     = {9781479961337},
  Journal                  = {Proceedings - 2014 9th International Conference on the Quality of Information and Communications Technology, QUATIC 2014},
  Keywords                 = {Quality assurance; Societies and institutions; Software design, Agile Methodologies; Capability maturity model integration; CMMI; Maturity model; Quality improvement; Reference modeling; Software development organizations; Systematic literature review, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84921027020&doi=10.1109%2fQUATIC.2014.25&partnerID=40&md5=1d567ba845e5a053fce36be40d2722ad}
}

@Article{Silva2014,
  Title                    = {FOCUS: An alignment-free model to identify organisms in metagenomes using non-negative least squares},
  Author                   = {Silva, G.G.Z. and Cuevas, D.A. and Dutilh, B.E. and Edwards, R.A.},
  Journal                  = {PeerJ},
  Year                     = {2014},
  Note                     = {cited By 19},
  Number                   = {1},
  Volume                   = {2014},

  Abstract                 = {One of the major goals in metagenomics is to identify the organisms present in a microbial community fromunannotated shotgun sequencing reads. Taxonomic profiling has valuable applications in biological and medical research, including disease diagnostics. Most currently available approaches do not scale well with increasing data volumes, which is important because both the number and lengths of the reads provided by sequencing platforms keep increasing. Here we introduce FOCUS, an agile composition based approach using non-negative least squares (NNLS) to report the organisms present in metagenomic samples and profile their abundances. FOCUS was tested with simulated and real metagenomes, and the results show that our approach accurately predicts the organisms present in microbial communities. FOCUS was implemented in Python. The source code and web-sever are freely available at http://edwards.sdsu.edu/FOCUS. © 2014 Silva et al.},
  Art_number               = {e425},
  Author_keywords          = {K-mer; Metagenomes; Modeling},
  Document_type            = {Article},
  Doi                      = {10.7717/peerj.425},
  ISSN                     = {21678359},
  Keywords                 = {article; bacterium; Bifidobacterium; cell phagocytosis; controlled study; data analysis software; Enterococcus; focus; fungus; gene sequence; human; jackknife test; metagenome; microbial community; microbial genome; mouth disease; Neisseria; nonhuman; population abundance; predictive value; regression analysis; sequence alignment; simulation; Streptococcus; Veillonella},
  Publisher                = {PeerJ Inc.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84903837939&doi=10.7717%2fpeerj.425&partnerID=40&md5=e63874a2a5b7e013fb5f78a1d934c98b}
}

@Article{Silva2017,
  Title                    = {General guidelines for biomedical software development},
  Author                   = {Silva, L.B. and Jimenez, R.C. and Blomberg, N. and Luis Oliveira, J.},
  Journal                  = {F1000Research},
  Year                     = {2017},
  Note                     = {cited By 0},
  Volume                   = {6},

  Abstract                 = {Most bioinformatics tools available today were not written by professional software developers, but by people that wanted to solve their own problems, using computational solutions and spending the minimum time and effort possible, since these were just the means to an end. Consequently, a vast number of software applications are currently available, hindering the task of identifying the utility and quality of each. At the same time, this situation has hindered regular adoption of these tools in clinical practice. Typically, they are not sufficiently developed to be used by most clinical researchers and practitioners. To address these issues, it is necessary to re-think how biomedical applications are built and adopt new strategies that ensure quality, efficiency, robustness, correctness and reusability of software components. We also need to engage end-users during the development process to ensure that applications fit their needs. In this review, we present a set of guidelines to support biomedical software development, with an explanation of how they can be implemented and what kind of open-source tools can be used for each specific topic. © 2017 Silva LB et al.},
  Art_number               = {273},
  Author_keywords          = {Agile; Bioinformatics; Biomedical software; Guidelines; Software development},
  Document_type            = {Article},
  Doi                      = {10.12688/f1000research.10750.1},
  ISSN                     = {20461402},
  Keywords                 = {bioinformatics; consensus development; human; physician; scientist; software},
  Publisher                = {Faculty of 1000 Ltd},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85017333173&doi=10.12688%2ff1000research.10750.1&partnerID=40&md5=56800cf6653bbac525be891a0fa090bd}
}

@Article{Singh201523,
  Title                    = {Agile in global software engineering: An exploratory experience},
  Author                   = {Singh, A. and Singh, K. and Sharma, N.},
  Journal                  = {International Journal of Agile Systems and Management},
  Year                     = {2015},
  Note                     = {cited By 8},
  Number                   = {1},
  Pages                    = {23-38},
  Volume                   = {8},

  Abstract                 = {It has always been argued that the two practices (distribution + agile) are actually incompatible. Introduction of agile methodologies in distributed field raises new challenges for development infrastructures to support collaboration and knowledge sharing in software development. Agile in a distributed setting does not mean step-by-step implementation of a particular agile methodology. It means collaboration among distributed teams to collate processes that follow agile principles and put together a methodology that works for them. This paper finds out different parameters for applicability of agile in distributed environment. Consequent upon the extensive literature review, a set of 43 factors were finalised. Factor analysis is used to factorising the minimising factors. After analysing eight broad factors are identified. The empirical analysis validates some long-held beliefs, it also provides some surprises. The findings agree with many of the 12 principles of agile practices laid down in the agile manifesto. The other three auxiliary factors identified also support several manifesto practices. On the other hand, the study findings fail to support several common assumptions about agile success factors. Copyright © 2014 Inderscience Enterprises Ltd.},
  Author_keywords          = {Agile software development; Applicability of agile; Distributed development; Knowledge sharing},
  Document_type            = {Article},
  Doi                      = {10.1504/IJASM.2015.068607},
  ISSN                     = {17419174},
  Publisher                = {Inderscience Enterprises Ltd.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84930412744&doi=10.1504%2fIJASM.2015.068607&partnerID=40&md5=b5ccd06a950affa7476e96bbebf41d35}
}

@Article{Singh2014297,
  Title                    = {Agile knowledge management: a survey of Indian perceptions},
  Author                   = {Singh, A. and Singh, K. and Sharma, N.},
  Journal                  = {Innovations in Systems and Software Engineering},
  Year                     = {2014},
  Note                     = {cited By 5},
  Number                   = {4},
  Pages                    = {297-315},
  Volume                   = {10},

  Abstract                 = {This paper is a pivot step to find out the level of KM adoption of Indian software organizations which are using agile practices for software development. After reviewing the literature it was found although many practitioners believe that KM practices are embodied in agile methodologies but it is not documented efficiently. Survey was used to take perception of agile organizations. KM practices are grouped into seven factors and respondents are taken from Indian software industry. Organizations are divided into different demographics: size, core area, type. Different statistical tests are used to conclude outputs of the questionnaire. It is found that Indian software industry working with agile practices lacks in providing any formal head for KM positioning. Learning and sharing through discussion forms is the most used practices among all respondents of organizations, whereas least accepted practice is dependent upon documents for transfer of knowledge. Indian organizations also lack in appointing a formal head who can provide guidelines for agile practice. © 2014, Springer-Verlag London.},
  Author_keywords          = {Agile software development; Extreme programming; KM practices; Knowledge management; Knowledge sharing; Scrum},
  Document_type            = {Article},
  Doi                      = {10.1007/s11334-014-0237-z},
  ISSN                     = {16145046},
  Keywords                 = {Knowledge management; Societies and institutions; Surveys, Agile software development; EXtreme Programming; KM practices; Knowledge-sharing; Scrum, Software design},
  Publisher                = {Springer-Verlag London Ltd},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84920254536&doi=10.1007%2fs11334-014-0237-z&partnerID=40&md5=b8239a5ecec96d9ca913d28c841beef9}
}

@Conference{Singhto2016,
  Title                    = {An experience in blending the traditional and Agile methodologies to assist in a small software development project},
  Author                   = {Singhto, W. and Denwattana, N.},
  Year                     = {2016},
  Note                     = {cited By 1},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Agile methodology has been adopted for many software development projects, due to its ability to deal with changing product requirements, while Traditional methods are better suited to dealing with projects that have clearly defined requirements. Because of the differences in the two methodologies and their diverse approaches to solving development problems, it is necessary to understand their individual approaches in order for the benefits to be compared and synthesized. This study is necessary to understand the differences and diversities of the two methodologies using the checklist table to select and adopt the appropriate methodology for particular development projects. Results of this study not only provide positive answers but also offer suggestions for better integration. © 2016 IEEE.},
  Art_number               = {7748914},
  Author_keywords          = {Agile; Combined Agile and Traditional; Project mangement; SMEs; Traditional},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/JCSSE.2016.7748914},
  ISBN                     = {9781509020331},
  Journal                  = {2016 13th International Joint Conference on Computer Science and Software Engineering, JCSSE 2016},
  Keywords                 = {Blending; Computer software; Software design, Agile; Combined Agile and Traditional; Project mangement; SMEs; Traditional, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85006839744&doi=10.1109%2fJCSSE.2016.7748914&partnerID=40&md5=9c1e1bdee93bf349d5dc889d7197a1fc}
}

@Conference{SivaNageswaraRao2014,
  Title                    = {Extreme Programming for service-based application development architecture},
  Author                   = {Siva Nageswara Rao, G. and Krishna, C.V.P. and Rao, K.R.},
  Year                     = {2014},
  Editor                   = {Mishra D.K., Sheikh R.},
  Note                     = {cited By 1},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {The Rational Unified Process is a complete software-development process framework that comes with several out-of-the-box instances. The process of developing of new software product versions has speed up rapidly. The necessity of flexible and particularly prompt responses to the changes triggered off genesis of new technologies, software architectures and methodologies. The Service Oriented Architecture (SBA) allows defining services operation environment, web services then form one of the available technologies for SBA realization. The software development limits the possibilities of adapting the development process to the changes and up-to-date requests. This problem might be solved by adoption of Extreme Programming (XP). © 2014 IEEE.},
  Art_number               = {7056955},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/CSIBIG.2014.7056955},
  ISBN                     = {9781479930630},
  Journal                  = {Proceedings of the 2014 Conference on IT in Business, Industry and Government: An International Conference by CSI on Big Data, CSIBIG 2014},
  Keywords                 = {Information services; Software design; Software engineering; Web services, Development process; EXtreme Programming; Rational Unified Process; Service based applications; Software development process; Software products; Speed up, Service oriented architecture (SOA)},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84946686562&doi=10.1109%2fCSIBIG.2014.7056955&partnerID=40&md5=f2ba440d2a1e31a499dc3effb3ca1c61}
}

@Conference{Sixsmith20142247,
  Title                    = {Project management in practice: Views from the Trenches},
  Author                   = {Sixsmith, A. and Mooney, G. and Freeburn, C.},
  Year                     = {2014},
  Editor                   = {Soliman K.S.},
  Note                     = {cited By 0},
  Pages                    = {2247-2257},
  Publisher                = {International Business Information Management Association, IBIMA},

  Abstract                 = {Software development has endured radical change with the introduction of agile methods for creating software solutions. This change has prompted new considerations of how software creation should be managed. While agile methods have changed software development processes, it would be premature to assume that has also induced modification in higher-level project management processes. Software development lifecycles (SDLC) and project management lifecycles (PLC), while associated, are not the same thing and it is still unclear to what degree the overarching project management tasks, tools or techniques must change or adapt to meet the needs of undertaking successful agile projects. This exploratory pilot study investigated agile methods used to manage software projects and was conducted via an online survey and restricted to a specific sample audience with significant project experience and with background in both traditional and agile development methods. The results indicate that traditional project management phases and techniques are adapted to fit with agile. However, as the discipline evolves the potential exists for a pure agile project management framework to surface -one that can be applied to better suit the needs of the management of agile projects as well as projects beyond the realm of software development.},
  Author_keywords          = {Agile Practices; IT projects; Project Life Cycle; Traditional Methods},
  Document_type            = {Conference Paper},
  ISBN                     = {9780986041938},
  Journal                  = {Proceedings of the 24th International Business Information Management Association Conference - Crafting Global Competitive Economies: 2020 Vision Strategic Planning and Smart Implementation},
  Keywords                 = {Information management; Life cycle; Management science; Project management; Software design, Agile development methods; Agile practices; Agile project management; IT project; Project life cycle; Project management process; Software development process; Traditional Methods, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84926161419&partnerID=40&md5=6c49baa9cda1d03cca0130c88e6b4768}
}

@Article{Šmite2016,
  Title                    = {Software teams and their knowledge networks in large-scale software development},
  Author                   = {Šmite, D. and Moe, N.B. and Šablis, A. and Wohlin, C.},
  Journal                  = {Information and Software Technology},
  Year                     = {2016},
  Note                     = {cited By 0; Article in Press},

  Abstract                 = {Context: Large software development projects involve multiple interconnected teams, often spread around the world, developing complex products for a growing number of customers and users. Succeeding with large-scale software development requires access to an enormous amount of knowledge and skills. Since neither individuals nor teams can possibly possess all the needed expertise, the resource availability in a team's knowledge network, also known as social capital, and effective knowledge coordination become paramount. Objective: In this paper, we explore the role of social capital in terms of knowledge networks and networking behavior in large-scale software development projects. Method: We conducted a multi-case study in two organizations, Ericsson and ABB, with software development teams as embedded units of analysis. We organized focus groups with ten software teams and surveyed 61 members from these teams to characterize and visualize the teams' knowledge networks. To complement the team perspective, we conducted individual interviews with representatives of supporting and coordination roles. Based on survey data, data obtained from focus groups, and individual interviews, we compared the different network characteristics and mechanisms that support knowledge networks. We used social network analysis to construct the team networks, thematic coding to identify network characteristics and context factors, and tabular summaries to identify the trends. Results: Our findings indicate that social capital and networking are essential for both novice and mature teams when solving complex, unfamiliar, or interdependent tasks. Network size and networking behavior depend on company experience, employee turnover, team culture, need for networking, and organizational support. A number of mechanisms can support the development of knowledge networks and social capital, for example, introduction of formal technical experts, facilitation of communities of practice and adequate communication infrastructure. Conclusions: Our study emphasizes the importance of social capital and knowledge networks. Therefore, we suggest that, along with investments into training programs, software companies should also cultivate a networking culture to strengthen their social capital, a known driver of better performance. © 2017.},
  Author_keywords          = {Agile; Case study; Cross-functional; Empirical; Feature teams; Intellectual capital; Knowledge networks; Large-scale software development; Social capital; Teams},
  Coden                    = {ISOTE},
  Document_type            = {Article in Press},
  Doi                      = {10.1016/j.infsof.2017.01.003},
  ISSN                     = {09505849},
  Keywords                 = {Complex networks; Human resource management; Investments; Knowledge management; Personnel training; Software engineering; Surveys, Agile; Cross-functional; Empirical; Feature teams; Intellectual capital; Knowledge networks; Social capitals; Teams, Software design},
  Publisher                = {Elsevier B.V.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85010957499&doi=10.1016%2fj.infsof.2017.01.003&partnerID=40&md5=d74a12c2b661195187da2dffc67dad2f}
}

@Article{Šmite201771,
  Title                    = {Software teams and their knowledge networks in large-scale software development},
  Author                   = {Šmite, D. and Moe, N.B. and Šāblis, A. and Wohlin, C.},
  Journal                  = {Information and Software Technology},
  Year                     = {2017},
  Note                     = {cited By 0},
  Pages                    = {71-86},
  Volume                   = {86},

  Abstract                 = {Context Large software development projects involve multiple interconnected teams, often spread around the world, developing complex products for a growing number of customers and users. Succeeding with large-scale software development requires access to an enormous amount of knowledge and skills. Since neither individuals nor teams can possibly possess all the needed expertise, the resource availability in a team's knowledge network, also known as social capital, and effective knowledge coordination become paramount. Objective In this paper, we explore the role of social capital in terms of knowledge networks and networking behavior in large-scale software development projects. Method We conducted a multi-case study in two organizations, Ericsson and ABB, with software development teams as embedded units of analysis. We organized focus groups with ten software teams and surveyed 61 members from these teams to characterize and visualize the teams’ knowledge networks. To complement the team perspective, we conducted individual interviews with representatives of supporting and coordination roles. Based on survey data, data obtained from focus groups, and individual interviews, we compared the different network characteristics and mechanisms that support knowledge networks. We used social network analysis to construct the team networks, thematic coding to identify network characteristics and context factors, and tabular summaries to identify the trends. Results Our findings indicate that social capital and networking are essential for both novice and mature teams when solving complex, unfamiliar, or interdependent tasks. Network size and networking behavior depend on company experience, employee turnover, team culture, need for networking, and organizational support. A number of mechanisms can support the development of knowledge networks and social capital, for example, introduction of formal technical experts, facilitation of communities of practice and adequate communication infrastructure. Conclusions Our study emphasizes the importance of social capital and knowledge networks. Therefore, we suggest that, along with investments into training programs, software companies should also cultivate a networking culture to strengthen their social capital, a known driver of better performance. © 2017 The Authors},
  Author_keywords          = {Agile; Case study; Cross-functional; Empirical; Feature teams; Intellectual capital; Knowledge networks; Large-scale software development; Social capital; Teams},
  Coden                    = {ISOTE},
  Document_type            = {Article},
  Doi                      = {10.1016/j.infsof.2017.01.003},
  ISSN                     = {09505849},
  Keywords                 = {Complex networks; Human resource management; Investments; Knowledge management; Personnel training; Software engineering; Surveys, Agile; Cross-functional; Empirical; Feature teams; Intellectual capital; Knowledge networks; Social capitals; Teams, Software design},
  Publisher                = {Elsevier B.V.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85015413181&doi=10.1016%2fj.infsof.2017.01.003&partnerID=40&md5=dc9f55f8f5843d3158874b51514f8568}
}

@Article{Socha20131033,
  Title                    = {Applying agile software principles and practices for fast automotive development},
  Author                   = {Socha, D. and Folsom, T.C. and Justice, J.},
  Journal                  = {Lecture Notes in Electrical Engineering},
  Year                     = {2013},
  Note                     = {cited By 0},
  Number                   = {VOL. 8},
  Pages                    = {1033-1045},
  Volume                   = {196 LNEE},

  Abstract                 = {This paper addresses lightweight designs both in terms of materials and processes. The study is based on the WIKISPEED SGT01 car, which was an entrant in the Progressive Insurance Automotive X-Prize contest to produce a full-sized road-legal car getting 100+ mi/gal (2.25 L/100 km). The 638 kg car is built from aluminum and composites. Agile Methods were introduced for software projects and give product cycle times measured in weeks, not years. Good software design demands modules that are loosely coupled and can be tested apart from the entire system. These principles have led to a modular automotive design. On the WIKISPEED car, major subassemblies such as suspension, motor, and body can be replaced in the time it takes to change a flat tire. The wheels and suspension bolt to the chassis and can be repositioned or replaced. The composite body bolts to the chassis and allows exchange of external shells. The same car can be a race car today and a pick-up truck tomorrow. This modularity allows for rapid iterations and experimentations during development, testing, and after purchase. A midengine design ensures that the center of gravity is well-positioned no matter what engine is used. Production does not use metal stamping, molds, or autoclaves. © Springer-Verlag 2013.},
  Author_keywords          = {Agile development; Distributed design; Fuel efficiency; Lightweight materials; Modularity},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-642-33738-3_8},
  ISBN                     = {9783642337376},
  ISSN                     = {18761100},
  Keywords                 = {Automobile suspensions; Chassis; Gravitation, Agile development; Distributed design; Fuel efficiency; Lightweight materials; Modularity, Suspensions (components)},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84903650205&doi=10.1007%2f978-3-642-33738-3_8&partnerID=40&md5=ed03817d82ce56023cf4ada052e26ec5}
}

@Article{SohelRana201594,
  Title                    = {Determinants of supply chain performance: A strategic point of view},
  Author                   = {Sohel Rana, S.M. and Osman, A. and Bahari, A.B. and Solaiman, M.},
  Journal                  = {International Journal of Supply Chain Management},
  Year                     = {2015},
  Note                     = {cited By 0},
  Number                   = {3},
  Pages                    = {94-102},
  Volume                   = {4},

  Abstract                 = {With the application of supply chain strategy, retailers can make a wise decision to increase supply chain performance. This study is one of the novelties in supply chain management research because it aimed at empirically analyzing the influence of supply chain strategies as the determinants of retail supply chain performance. For the purpose of the study, data were collected with a structured questionnaire from 115 mangers of some selected retail chain stores in Bangladesh. Collected data were analyzed using Partial Least Squares method with smart PLS software version 2.0M3. The present study has shown some meaningful findings regarding the determinants of retail supply chain performance. Firstly, it is found in the study that agile supply chain strategy is the most pivotal factor influencing retail supply chain performance. The lean strategy was also found to be a contributor to the retail supply chain performance while hybrid strategy was found to exhort very weak influence in increasing the performance of retail supply chain. The findings of this study can benefit the supply chain managers involved in retailing. From this study retail managers can know which strategy they should adopt to bring forth substantial advantage for the companies by maintaining their supply chain in a better way. © ExcelingTech Pub, UK.},
  Author_keywords          = {Efficiency and retail chain stores; Responsiveness; Supply chain strategies},
  Document_type            = {Article},
  ISSN                     = {20513771},
  Publisher                = {ExcelingTech Publishers},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84949760817&partnerID=40&md5=fd9dbdf5d7bce64938505875787ce2ec}
}

@Conference{Sojeva2017,
  Title                    = {Spatial-Aware Iterative integration of crisis management information systems},
  Author                   = {Sojeva, B. and Xie, J.},
  Year                     = {2017},
  Editor                   = {Duro R., Pielorz J., Preinerstorfer A.},
  Note                     = {cited By 0},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Information systems are playing increasingly more important role in modern crisis management process. An integrated system with capabilities like foresight, prediction and decision support capabilities can provide substantial addedvalue for decision makers on both tactical and policy-making levels. It is however a challenging task to seamlessly integrate various systems with dedicated functionalities on functional and technical aspects, especially when these systems are developed independently from each other with substantially different design rationale and software technology. In this paper, an iterative system integration approach is proposed by harmonising serviceoriented, model-driven and agile system development. Several design principles and best practices from the software engineering community are adopted to facilitate the integration task. In addition, extra attention is paid to provide enhanced support for integrating spatial data into the crisis management workflow. This approach aims to provide a pragmatic system integration methodology to integrate crisis management information systems in a more effective and efficient fashion.},
  Art_number               = {07857233},
  Author_keywords          = {Disaster management; Geographical information system; Service-oriented architecture; System integration},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICT-DM.2016.7857233},
  ISBN                     = {9781509052349},
  Journal                  = {Proceedings of the 2016 3rd International Conference on Information and Communication Technologies for Disaster Management, ICT-DM 2016},
  Keywords                 = {Decision making; Decision support systems; Disaster prevention; Disasters; Geographic information systems; Information services; Iterative methods; Management information systems; Service oriented architecture (SOA); Software engineering, Design Principles; Disaster management; Engineering community; Integrated systems; Iterative integration; Prediction and decision; Software technology; System integration, Information management},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85015989126&doi=10.1109%2fICT-DM.2016.7857233&partnerID=40&md5=c4863a4b158cd4e0c5b75b817ee107b7}
}

@Conference{Sommer20141278,
  Title                    = {Scrum integration in stage-gate models for collaborative product development - A case study of three industrial manufacturers},
  Author                   = {Sommer, A.F. and Slavensky, A. and Thuy Nguyen, V. and Steger-Jensen, K. and Dukovska-Popovska, I.},
  Year                     = {2014},
  Note                     = {cited By 1},
  Pages                    = {1278-1282},
  Publisher                = {IEEE Computer Society},

  Abstract                 = {The relevance of collaborative Product Development (PD) is rising with the decrease of product life cycles combined with growing customer demands. Industrial manufacturers now experience competition in the global market where differentiation is necessary for survival. Hence, in order to differentiate from low-cost competitors and increase PD performance, some industrial manufacturers now seek competitive advantage by experimenting with new ways for collaborative PD. This includes integrating customer-focused agile process models like Scrum from the software industry into their existing PD models. Thus, instead of replacing traditional stage-gate models, agile methods are currently integrated in existing PD models generating hybrid solution for collaborative PD. This paper includes a study of three industrial cases that have successfully integrated Scrum into the stage-gate process model for collaborative PD. The paper introduces the three functional hybrid models, including the impact on PD performance, PD roles and customer collaboration. © 2013 IEEE.},
  Art_number               = {6962616},
  Author_keywords          = {Collaborative product development; performance; Scrum implementation; Stage-gate model},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/IEEM.2013.6962616},
  ISBN                     = {9781479909865},
  ISSN                     = {21573611},
  Journal                  = {IEEE International Conference on Industrial Engineering and Engineering Management},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84914171108&doi=10.1109%2fIEEM.2013.6962616&partnerID=40&md5=bac7a0b697d5d19741a924856f41a082}
}

@Article{Spreckelsen2013,
  Title                    = {Can social semantic web techniques foster collaborative curriculum mapping in medicine?},
  Author                   = {Spreckelsen, C. and Finsterer, S. and Cremer, J. and Schenkat, H.},
  Journal                  = {Journal of Medical Internet Research},
  Year                     = {2013},
  Note                     = {cited By 3},
  Number                   = {8},
  Volume                   = {15},

  Abstract                 = {Background: Curriculum mapping, which is aimed at the systematic realignment of the planned, taught, and learned curriculum is considered a challenging and ongoing effort in medical education. Second-generation curriculum managing systems foster knowledge management processes including curriculum mapping in order to give comprehensive support to learners, teachers and administrators. The large quantity of custom-built software in this field indicates a shortcoming of available IT tools and standards. Objective: The project reported here aims at the systematic adoption of techniques and standards of the Social Semantic Web to implement collaborative curriculum mapping for a complete medical model curriculum. Methods: A semantic MediaWiki (SMW)-based Web application has been introduced as a platform for the elicitation and revision process of the Aachen Catalogue of Learning Objectives (ACLO). The semantic wiki uses a domain model of the curricular context and offers structured (form-based) data entry, multiple views, structured querying, semantic indexing, and commenting for learning objectives ("LOs"). Semantic indexing of learning objectives relies on both a controlled vocabulary of international medical classifications (ICD, MeSH) and a folksonomy maintained by the users. An additional module supporting the global checking of consistency complements the semantic wiki. Statements of the Object Constraint Language define the consistency criteria. We evaluated the application by a scenario-based formative usability study, where the participants solved tasks in the (fictional) context of 7 typical situations and answered a questionnaire containing Likert-scaled items and free-text questions. Results: At present, ACLO contains roughly 5350 operational (ie, specific and measurable) objectives acquired during the last 25 months. The wiki-based user interface uses 13 online forms for data entry and 4 online forms for flexible searches of LOs and all the forms are accessible by standard Web browsers. The formative usability study yielded positive results (median rating of 2 ("good") in all 7 general usability items) and produced valuable qualitative feedback, especially concerning navigation and comprehensibility. Although not asked to, the participants (n=5) detected critical aspects of the curriculum (similar learning objectives addressed repeatedly and missing objectives), thus proving the system's ability to support curriculum revision. Conclusions: The SMW-based approach enabled an agile implementation of computer-supported knowledge management. The approach, based on standard Social Semantic Web formats and technology, represents a feasible and effectively applicable compromise between answering to the individual requirements of curriculum management at a particular medical school and using proprietary systems.},
  Art_number               = {e169},
  Author_keywords          = {Curriculum mapping; Medical education; Semantic Web; Social Web},
  Document_type            = {Article},
  Doi                      = {10.2196/jmir.2623},
  ISSN                     = {14388871},
  Keywords                 = {article; cooperation; curriculum; curriculum mapping; Internet; medical education; organization and management; semantic web; Social Web; medical education; organization and management, curriculum mapping; medical education; Semantic Web; Social Web, Cooperative Behavior; Curriculum; Education, Medical; Internet, Cooperative Behavior; Curriculum; Education, Medical; Internet},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84883376043&doi=10.2196%2fjmir.2623&partnerID=40&md5=a135205a789012fa47447aae350ecf28}
}

@Book{Staron2014209,
  Title                    = {Dashboards for Continuous Monitoring of Quality for Software Product under Development},
  Author                   = {Staron, M. and Meding, W. and Hansson, J. and Höglund, C. and Niesel, K. and Bergmann, V.},
  Publisher                = {Elsevier Inc.},
  Year                     = {2014},
  Note                     = {cited By 0},

  Abstract                 = {Modern software development often uses Agile and Lean principles which focus on the customer's requirement for continuous delivery of new functionality. These principles are applied to both small software products developed by one team and to large ones developed by programs consisting of over ten teams. As the Agile and Lean principles often prescribe the empowerment of the teams, a number of new challenges in monitoring and controlling software quality appear. One such challenge is to provide a comprehensive and succinct visualization of the progress of software development and the progress of quality assurance.In this chapter, we explain how to develop and use dashboard for monitoring of software development progress and discuss the quality of software architectures under development. We present a case study of three companies-Ericsson, Volvo Car Corporation, and Saab Electronic Defense Systems-that have implemented such dashboards. The presented dashboards support the companies in monitoring the release readiness of their products, the quality of the software, or the progress of development. We present a number of elements that make dashboards successful and show how the specifics of each company are reflected in the design of the dashboards.We conclude the chapter with recommendations for companies willing to adopt similar dashboards and list additional readings for researchers and practitioners interested in exploring the subject further. © 2014 Elsevier Inc. All rights reserved.},
  Author_keywords          = {Dashboards; Indicators; ISO 15939; Performance measurement; Software metrics},
  Document_type            = {Book Chapter},
  Doi                      = {10.1016/B978-0-12-417009-4.00008-9},
  ISBN                     = {9780124171688; 9780124170094},
  Journal                  = {Relating System Quality and Software Architecture},
  Pages                    = {209-229},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84942241263&doi=10.1016%2fB978-0-12-417009-4.00008-9&partnerID=40&md5=7b0acbe932ce11c2eeb8fd379c47f297}
}

@Conference{Stavru2013219,
  Title                    = {Challenges of model-driven modernization: An agile perspective},
  Author                   = {Stavru, S. and Krasteva, I. and Ilieva, S.},
  Year                     = {2013},
  Note                     = {cited By 2},
  Pages                    = {219-230},

  Abstract                 = {Software organizations are nowadays facing increased demand for modernizing their legacy software systems using up-to-date technologies. The combination of Model-Driven Development and delivery models like Cloud and Software as a Service have become a very promising approach for software modernization that possesses a lot of advantages, including great deal of automation and reuse of system functionality. However, the use of such new and immature technologies is very challenging and requires a comprehensive methodology for their seamless application within the software modernization projects. When developing such methodology, questions on whether agile methods and techniques should be incorporated and what could be the benefits and implications from that become of particular interest. To help answering these questions, the paper evaluates the potential of agile methods and techniques to address the challenges of Model-Driven Modernization. The challenges are extracted through a systematic review of the existing body of literature on Model-Driven Development and Software Modernization, and the evaluation is conducted through the Delphi technique. As a result, a ranked list of applicable agile techniques is proposed and suggestions for their use in Model-Driven Modernization are made.},
  Author_keywords          = {Agile software development; Model-Driven Development; Model-Driven Modernization; Software migration; Software modernization; Systematic review},
  Document_type            = {Conference Paper},
  ISBN                     = {9789898565426},
  Journal                  = {MODELSWARD 2013 - Proceedings of the 1st International Conference on Model-Driven Engineering and Software Development},
  Keywords                 = {Agile software development; Model driven development; Model-driven; Software migration; Software modernization; Systematic Review, Application programs; Computer software reusability; Modernization, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84878026705&partnerID=40&md5=f567550019a0bb04d66dd2420d968bde}
}

@Article{Stavru201377,
  Title                    = {Challenges for migrating to the service cloud paradigm: An agile perspective},
  Author                   = {Stavru, S. and Krasteva, I. and Ilieva, S.},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2013},
  Note                     = {cited By 1},
  Pages                    = {77-91},
  Volume                   = {7652 LNCS},

  Abstract                 = {Migrating to the Service Cloud Paradigm implies the migration of legacy software systems to a service-oriented architecture with deployment in the cloud. Although this specific software modernization paradigm promises numerous strategic and operational advantages, it poses also many complex organizational and technical challenges, among which is the lack of mature processes, methods and techniques. This paper examines the questions of whether agile methods and techniques could be scaled to fit the migration to the Service Cloud Paradigm and how they could help overcoming the challenges of software modernization in this specific context. The research methodology presented here first extracts the challenges of the migration to Service Cloud Paradigm through a systematic literature review and then, using expert judgment, evaluates how different agile techniques, taken from Scrum and Extreme Programming (XP), could address the identified challenges. As a result, a ranked list of applicable agile techniques is presented and suggestions for their adoption in software modernization projects are drawn. © 2013 Springer-Verlag.},
  Author_keywords          = {Agile Software Development; Cloud Computing; Service-Oriented Architecture; Software Migration; Software Modernization},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-642-38333-5_10},
  ISBN                     = {9783642383328},
  ISSN                     = {03029743},
  Keywords                 = {Agile software development; Expert judgment; EXtreme Programming; Research methodologies; Software migration; Software modernization; Systematic literature review; Technical challenges, Cloud computing; Information services; Service oriented architecture (SOA); Software engineering; Systems engineering; World Wide Web, Modernization},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84891341695&doi=10.1007%2f978-3-642-38333-5_10&partnerID=40&md5=0fe5b17e127ae6abe71e18ac6413a15a}
}

@Conference{Sterbenz2013,
  Title                    = {Diverse infrastructure and architecture for datacenter and cloud resilience},
  Author                   = {Sterbenz, J.P.G. and Kulkarni, P.},
  Year                     = {2013},
  Note                     = {cited By 0},

  Abstract                 = {Internet and web services have seen widespread adoption in recent years and are now tightly integrated into society's daily activities. An important emerging part of the Internet is clouds that provide low-cost configurable computing resources, allowing businesses to reduce their hardware, software, and personnel costs. Increasingly, enterprises now use such cloud resources to host web applications. While clouds provide an excellent business model, most existing public and private cloud infrastructures are based on monocultures that allow attackers to focus their efforts on a single hardware/software platform and facilitates the rapid spreading of successful attacks. In this invited paper, we describe a methodology and mech- anisms that make clouds and hosted applications considerably more resilient to attacks and correlated failures by introducing diversity at every level of the cloud: physical interconnect, network components, processor platforms, storage management, virtual machine monitors, operating systems, and application processes. Our goal is to defend against attacks by continuing to operate correctly even when part of the infrastructure fails and to substantially raise the difficulty of executing a successful attack by requiring the attacker to simultaneously target different hardware and software choices. Furthermore, by geographically spreading applications among different datacenters using diverse network connections (in service provider and access medium - wired vs. wireless), the cloud will be resilient against physical infrastructure attacks and large-scale disasters. © 2013 IEEE.},
  Art_number               = {6614125},
  Author_keywords          = {datacenter cloud network; diverse agile; moving-target defence; resilient survivable fault-tolerant},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICCCN.2013.6614125},
  ISBN                     = {9781467357746},
  ISSN                     = {10952055},
  Journal                  = {Proceedings - International Conference on Computer Communications and Networks, ICCCN},
  Keywords                 = {Cloud networks; Configurable computing; diverse agile; Fault-tolerant; Hardware and software; Large-scale disasters; Moving targets; Virtual machine monitors, Fault tolerant computer systems; Hardware; Internet; Telephone systems; Web services, Computer hardware},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84891403332&doi=10.1109%2fICCCN.2013.6614125&partnerID=40&md5=3edbc3e19cf033a7b2c34ad5502452a7}
}

@Conference{Stettina2015,
  Title                    = {Is there an agile handover? An empirical study of documentation and project handover practices across agile software teams},
  Author                   = {Stettina, C.J. and Kroon, E.},
  Year                     = {2015},
  Note                     = {cited By 2},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {The growing use of agile and lean methods has heated the discussion on efficiency and sustainability of software engineering processes. During project handovers, for example, loss of knowledge has been indicated and critics of agile methods point at a lack of documentation. In this paper we take the perspective of patterns of human action, looking at the actions the teams take and the artifacts they use during a software project handover. Our results from 30 teams in small to large size projects cover the perceptions of a variety of roles and indicate that the adoption is a learning process in three interdependent phases: Environment, System and Architecture. The participants in our study perceived the biggest gaps in the usefulness of available design and requirements documentation. Based on our findings we suggest that documentation artifacts should rather support the learning process and that including maintenance staff in the development process significantly helps improving the handover. © 2013 IEEE.},
  Art_number               = {7352703},
  Author_keywords          = {Agile project management; agile teams; empirical study; knowledge sharing; organizational management and coordination; process improvement; software development},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ITMC.2013.7352703},
  ISBN                     = {9781467373838},
  Journal                  = {2013 International Conference on Engineering, Technology and Innovation, ICE 2013 and IEEE International Technology Management Conference, ITMC 2013},
  Keywords                 = {Engineering research; Industrial management; Learning systems; Management science; Project management; Software design; Software engineering; Sustainable development, Agile project management; Agile teams; Empirical studies; Knowledge-sharing; Organizational management and coordinations; Process Improvement, Human resource management},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84962252003&doi=10.1109%2fITMC.2013.7352703&partnerID=40&md5=e62f4e03da687e9aed157ce762567eb4}
}

@Conference{Stiti2015,
  Title                    = {Virtual openflow-based SDN Wi-Fi access point},
  Author                   = {Stiti, O. and Braham, O. and Pujolle, G.},
  Year                     = {2015},
  Note                     = {cited By 0},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {With cloud services and mobile devices remodeling how we live, work and play, people expect Wi-Fi to be both fast and reliable. For ICT, facing the fast growing mobility demand needs a more agile WLAN. Software Defined Networking (SDN) offers programmability, a logically centralized control model, and a flow-based paradigm that is perfectly designed for highly scalable mobile and Wi-Fi networks. Our approach provides an agile and cost-effective communications platform for addressing these challenges, while attaining the high degree of scalability, security, and flexibility needed to support a diverse complement of services. In our work we developed a solution that allows clients to instantiate and deploy virtual OpenFlow Wi-Fi Access Points (AP) and virtual SDN controllers on the fly. By this technic, virtual instances are isolated and fully scalable for creating our SDN. Our goal is to create an architecture that is both ergonomic and flexible in order to meet the need for connection and client mobility. © 2015 IEEE.},
  Art_number               = {7347190},
  Author_keywords          = {Mobility; OpenFlow AP; Wi-Fi; Wireless SDN},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/GIIS.2015.7347190},
  ISBN                     = {9781467377072},
  Journal                  = {2015 Global Information Infrastructure and Networking Symposium, GIIS 2015},
  Keywords                 = {Carrier mobility; Cost effectiveness; Mobile devices, Centralized control; Cost effective; Degree of scalability; Fully scalable; Openflow; Programmability; Software defined networking (SDN); Wi-fi access points, Wi-Fi},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84963768441&doi=10.1109%2fGIIS.2015.7347190&partnerID=40&md5=7fd7fed82c67ed0a5c641804b69437a1}
}

@Conference{Stojanov2015446,
  Title                    = {A Maturity Model for Scaling Agile Development},
  Author                   = {Stojanov, I. and Turetken, O. and Trienekens, J.J.M.},
  Year                     = {2015},
  Note                     = {cited By 2},
  Pages                    = {446-453},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Although the agile software development approaches have gained wide acceptance in practice, the concerns regarding the scalability and integration of agile approaches in traditional system development organizations have remained. The difficulty of adopting agile practices increases when there is a need to scale these practices. Scaled Agile Framework (Safe) has emerged as a solution to address some of these concerns. Despite few encouraging results of Safe adoption, case studies indicate several challenges of Safe adoption. Currently, there is a lack of a well-structured gradual approach for implementing and establishing Safe. Before and during Safe adoption, organizations require a uniform model for assessing the current state and progress, and for establishing a roadmap for the initiative. To address this need, we developed a maturity model for adopting agile and Safe practices. Taking an existing agile maturity model as the basis, we extended the model with practices that are key to scaling agile practices for the Safe. The model is developed and refined using a Delphi study. Subsequently, a case study was conducted in a large organization where the model was applied to assess the maturity level of the organization in adopting Safe. © 2015 IEEE.},
  Art_number               = {7302487},
  Author_keywords          = {Agile software development; Delphi study; maturity model; SAFe; scaled agile framework},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/SEAA.2015.29},
  ISBN                     = {9781467375856},
  Journal                  = {Proceedings - 41st Euromicro Conference on Software Engineering and Advanced Applications, SEAA 2015},
  Keywords                 = {Application programs; Software design, Agile software development; DELPHI study; Maturity model; SAFe; scaled agile framework, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958244782&doi=10.1109%2fSEAA.2015.29&partnerID=40&md5=90e6a6754260fc2d94272e6505705327}
}

@Conference{Streiffert2014,
  Title                    = {Using modern methodologies with maintenance software},
  Author                   = {Streiffert, B.A. and Francis, L.K. and Smith, B.D.},
  Year                     = {2014},
  Note                     = {cited By 0},
  Publisher                = {American Institute of Aeronautics and Astronautics Inc.},

  Abstract                 = {Jet Propulsion Laboratory uses multi-mission software produced by the Mission Planning and Sequencing (MPS) team to process, simulate, translate, and package the commands that are sent to a spacecraft. MPS works under the auspices of the Multi-Mission Ground Systems and Services (MGSS). This software consists of nineteen applications that are in maintenance. The MPS software is classified as either class B (mission critical) or class C (mission important). The scheduling of tasks is difficult because mission needs must be addressed prior to performing any other tasks and those needs often spring up unexpectedly. Keeping track of the tasks that everyone is working on is also difficult because each person is working on a different software component. Recently the group adopted the Scrum methodology for planning and scheduling tasks. Scrum is one of the newer methodologies typically used in agile development. In the Scrum development environment, teams pick their tasks that are to be completed within a sprint based on priority. The team specifies the sprint length usually a month or less. Scrum is typically used for new development of one application. In the Scrum methodology there is a scrum master who is a facilitator who tries to make sure that everything moves smoothly, a product owner who represents the user(s) of the software and the team. MPS is not the traditional environment for the Scrum methodology. MPS has many software applications in maintenance, team members who are working on disparate applications, many users, and is interruptible based on mission needs, issues and requirements. In order to use scrum, the methodology needed adaptation to MPS. Scrum was chosen because it is adaptable. This paper is about the development of the process for using scrum, a new development methodology, with a team that works on disparate interruptible tasks on multiple software applications.},
  Document_type            = {Conference Paper},
  Journal                  = {13th International Conference on Space Operations, SpaceOps 2014},
  Keywords                 = {Computer software maintenance; Scheduling; Spacecraft propulsion, Development environment; Development methodology; Jet Propulsion Laboratory; Maintenance software; Planning and scheduling; Scrum methodologies; Software applications; Software component, Application programs},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84901254335&partnerID=40&md5=212cc6a971734ab11473d063db5f2794}
}

@Conference{Sultania2015,
  Title                    = {Developing software product and test automation software using Agile methodology},
  Author                   = {Sultania, A.K.},
  Year                     = {2015},
  Note                     = {cited By 0},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {The use of testing framework has become a growing requirement in software development. This framework is a kind of software which can automate the pre-generated test cases. So, for developing test automation software an incremental and timeframe iterative approach known as Agile Software Development Methodology can be used. It provides software developers a working test framework early with respect to traditional software development methods e.g. waterfall model. In this paper, an approach of developing test automation software with closed collaboration with product development team is discussed. The proposed method modifies the Agile Development method with scrum by introducing few meetings for combined teams working for development of software product and test automation software. An industrial case study is also presented in the paper. © 2015 IEEE.},
  Art_number               = {7060120},
  Author_keywords          = {agile methodology; Scrum; software development model; test Automation; test tool},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/C3IT.2015.7060120},
  ISBN                     = {9781479944460},
  Journal                  = {Proceedings of the 2015 3rd International Conference on Computer, Communication, Control and Information Technology, C3IT 2015},
  Keywords                 = {Automation; Iterative methods; Product development; Software engineering; Software testing; Testing, Agile Methodologies; Scrum; Software development models; Test Automation; Test tools, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84936108265&doi=10.1109%2fC3IT.2015.7060120&partnerID=40&md5=f2b69ccaf9fcf3e59a8a9fceaa53d2f2}
}

@Conference{Sun20131228,
  Title                    = {Do software professionals' job perceptions differ in organizations adopting different software process models? A survey from the industry},
  Author                   = {Sun, W. and Schmidt, C.},
  Year                     = {2013},
  Note                     = {cited By 0},
  Pages                    = {1228-1235},
  Volume                   = {2},

  Abstract                 = {This study assesses software professionals' job perceptions in organizations adopting different software process models. We developed hypotheses grounded in the formal control and the informal control theories. We plan to conduct a survey of software professionals in organizations utilizing different process models. Theoretical and practical implications of this research are discussed. © (2013) by the AIS/ICIS Administrative Office All rights reserved.},
  Author_keywords          = {Agile; Job perceptions; Plan-driven; Software process models},
  Document_type            = {Conference Paper},
  ISBN                     = {9781629933948},
  Journal                  = {19th Americas Conference on Information Systems, AMCIS 2013 - Hyperconnected World: Anything, Anywhere, Anytime},
  Keywords                 = {Agile; Formal controls; Informal controls; Plan-driven; Process model; Software process models, Information systems; Societies and institutions; Surveys, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893225840&partnerID=40&md5=9792d5d27f092363ec80ba8629b7bf26}
}

@Article{Sung2016,
  Title                    = {FS-OpenSecurity: A taxonomic modeling of security threats in SDN for future sustainable computing},
  Author                   = {Sung, Y. and Sharma, P.K. and Lopez, E.M. and Park, J.H.},
  Journal                  = {Sustainability (Switzerland)},
  Year                     = {2016},
  Note                     = {cited By 3},
  Number                   = {9},
  Volume                   = {8},

  Abstract                 = {Software Defined Networking (SDN) has brought many changes in terms of the interaction processes between systems and humans. It has become the key enabler of software defined architecture, which allows enterprises to build a highly agile Information Technology (IT) infrastructure. For Future Sustainability Computing (FSC), SDN needs to deliver on many information technology commitments-more automation, simplified design, increased agility, policy-based management, and network management bond to more liberal IT workflow systems. To address the sustainability problems, SDN needs to provide greater collaboration and tighter integration with networks, servers, and security teams that will have an impact on how enterprises design, plan, deploy and manage networks. In this paper, we propose FS-OpenSecurity, which is a new and pragmatic security architecture model. It consists of two novel methodologies, Software Defined Orchestrator (SDO) and SQUEAK, which offer a robust and secure architecture. The secure architecture is required for protection from diverse threats. Usually, security administrators need to handle each threat individually. However, handling threats automatically by adapting to the threat landscape is a critical demand. Therefore, the architecture must handle defensive processes automatically that are collaboratively based on intelligent external and internal information. © 2016 by the authors.},
  Art_number               = {919},
  Author_keywords          = {FS-OpenSecurity; SDN architecture; Security model},
  Document_type            = {Article},
  Doi                      = {10.3390/su8090919},
  ISSN                     = {20711050},
  Publisher                = {MDPI AG},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84990987622&doi=10.3390%2fsu8090919&partnerID=40&md5=03acd351a447de3ed9691da54ef735ca}
}

@Article{Sungkur2014394,
  Title                    = {Knowledge4Scrum, a novel knowledge management tool for agile distributed teams},
  Author                   = {Sungkur, R.K. and Ramasawmy, M.},
  Journal                  = {VINE},
  Year                     = {2014},
  Note                     = {cited By 0},
  Number                   = {3},
  Pages                    = {394-419},
  Volume                   = {44},

  Abstract                 = {Purpose - The purpose of this paper is to propose Knowledge4Scrum, a novel knowledge management tool for agile distributed teams. Agile software development (ASD) refers to a group of software development methodologies based on iterative development, where requirements and solutions evolve through collaboration between self-organizing cross-functional teams. The two most widely used methodologies based on the agile philosophy are scrum and extreme programming. Whichever methodology is considered, agile teams usually consist of few members and are collocated under the same roof. However, nowadays, agile practices for distributed development are gaining much momentum. The main reasons behind such practice are cheaper skilled labour, minimizing production cost, reducing time to market and increasing the quality and performance of projects. Along with the benefits obtained through globally distributed development, there are, however, many difficulties faced by various organisations. These problems are caused mostly due to distance, time and cultural differences. To meet up with the level of complexity of projects, ASD also has to keep up with many challenges, especially in cases of distributed teams. Four major challenges have been identified. First, the introduction of global software development entails a number of difficulties, especially related to knowledge sharing. For instance, lack of transparency is frequently observed within such teams, whereby a team member is totally unaware of the activities of his/her colleagues. Second, the unavailability of team members due to time zone differences adds up to the list of problems confronted by distributed teams. Third, there can be misunderstanding amongst the team member due to communication problems, especially in cases where the mother language of the team members is different. Fourth, a common issue faced by distributed teams is the loss of knowledge when an employee resigns from his/her post. Design/methodology/approach - Based on the main problems outlined above, what has been proposed is Knowledge4Scrum, a novel knowledge management tool for agile distributed teams. Knowledge4Scrum will act as a global repository for knowledge sharing in Scrum distributed teams with the possibility of creating new knowledge through data mining techniques. Valid past projects data have been collected to train and test the data mining models. The research also investigates the suitability of knowledge management in Scrum distributed teams to address the various challenges addressed above. Findings - Knowledge4Scrum supports the four knowledge management processes, namely, knowledge creation/acquisition, knowledge storage, knowledge dissemination and knowledge application. It has been found that the aforementioned tool satisfactorily addressed issues of distance, time and cultural differences that crop-up in distributed development teams. Data mining has been the main aspect for the knowledge creation and application processes, whereby new knowledge has been determined by examining and extracting patterns from existing data found in the repository. Originality/value - A major feature of the Knowledge4Scrum tool lies in the knowledge creation and application section, where a number of data mining techniques have been utilised to identify trends and patterns in past data collected. When compared to the COnstructive COst MOdel to estimate project duration, Knowledge4Scrum gives more than satisfactory results. Such functionalities will actually help managers for future project planning and in decision-making. © 2014, Emerald Group Publishing Limited.},
  Author_keywords          = {Agile software development; Classification tree; Clustering; Data mining; Knowledge management; Knowledge management tools; Mean absolute error; Project duration; Scrum; Task complexity},
  Document_type            = {Article},
  Doi                      = {10.1108/VINE-12-2013-0068},
  ISSN                     = {03055728},
  Keywords                 = {Decision making; Digital storage; Human resource management; Information management; Iterative methods; Knowledge management; Software design; Software engineering; Trees (mathematics), Agile software development; Classification trees; Clustering; Knowledge management tool; Mean absolute error; Project duration; Scrum; Task complexity, Data mining},
  Publisher                = {Emerald Group Publishing Ltd.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84927524119&doi=10.1108%2fVINE-12-2013-0068&partnerID=40&md5=c9820d33e4cf8e986a1292632e681b95}
}

@Article{Suomalainen2015132,
  Title                    = {Continuous planning: An important aspect of agile and lean development},
  Author                   = {Suomalainen, T. and Kuusela, R. and Tihinen, M.},
  Journal                  = {International Journal of Agile Systems and Management},
  Year                     = {2015},
  Note                     = {cited By 11},
  Number                   = {2},
  Pages                    = {132-162},
  Volume                   = {8},

  Abstract                 = {Continuous planning is a relatively new and not yet fully studied field of research, especially from the perspective of agile and lean development organisations. To augment the knowledge in this field, this article presents both a literature review and empirical findings from three case studies that reveal how companies conduct continuous planning. The results indicate that continuous planning is not commonly adopted and applied throughout these organisations and that it currently involves only a certain kind of planning (e.g., release planning). The results of this study bring to light that the main elements of continuous planning (i.e., organisational, strategic and business planning) are tightly related to each other and thus should be considered when companies seek to improve their planning processes and practices. The importance of continuous planning will only increase dramatically in turbulent business environments that include ever shorter planning cycles and the need to improve transparency and knowledge-sharing in organisations. Copyright © 2015 Inderscience Enterprises Ltd.},
  Author_keywords          = {Agile; Business planning; Continuous planning; Leagile; Lean; Roadmapping; Software development; Strategic planning},
  Document_type            = {Article},
  Doi                      = {10.1504/IJASM.2015.070607},
  ISSN                     = {17419174},
  Publisher                = {Inderscience Enterprises Ltd.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84938382860&doi=10.1504%2fIJASM.2015.070607&partnerID=40&md5=5f2715982afc7c64680b066a6aa575ca}
}

@Article{Sutling2015859,
  Title                    = {Understanding of project manager competency in agile software development project: The taxonomy},
  Author                   = {Sutling, K. and Mansor, Z. and Widyarto, S. and Lecthmunan, S. and Arshad, N.H.},
  Journal                  = {Lecture Notes in Electrical Engineering},
  Year                     = {2015},
  Note                     = {cited By 2},
  Pages                    = {859-868},
  Volume                   = {339},

  Abstract                 = {The current growth of agile software development project (ASDP) continues to be more significant in the software industry. Project managers have important role to play in ensuring success of project. The success of a project depends on the competency of the project manager. Realizing on the lack of research on the project manager competency in ASDP such skill, knowledge, personal attribute and behavior. This research had taken initiatives in introducing; skill, knowledge, personal attribute and behavior that is needed by a project manager in ASDP. This paper contributes the relevant theory by developing taxonomy of the agile project manager’s competency. Practitioners can use this taxonomy as a sensitizing device that will help project manager. © Springer-Verlag Berlin Heidelberg 2015.},
  Author_keywords          = {Agile project Manager; Behaviour; Knowledge; Personal Attribute; Skill},
  Document_type            = {Article},
  Doi                      = {10.1007/978-3-662-46578-3_102},
  ISSN                     = {18761100},
  Keywords                 = {Behavioral research; Managers; Software design; Taxonomies, Behaviour; Knowledge; Personal attributes; Project managers; Skill, Software engineering},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84923120702&doi=10.1007%2f978-3-662-46578-3_102&partnerID=40&md5=8131d659a517718b12500fdb0dfa7fb6}
}

@Conference{Sutling2014234,
  Title                    = {Agile project manager behavior: The taxonomy},
  Author                   = {Sutling, K. and Mansor, Z. and Widyarto, S. and Letchmunan, S. and Arshad, N.H.},
  Year                     = {2014},
  Editor                   = {Jawawi D.N.A., Sulaiman S., Mohamad R., Sa'Adon N.A.},
  Note                     = {cited By 0},
  Pages                    = {234-239},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {The past few years have witnessed dynamic changes in the field of software project management. These provided evidence of the strength of agile methodologies as a strategy that can speed up the development of rhythms and growth of innovation. Managing a project involves a complexity of requirements and developmental processes. This provides challenges to the project manager as he is accountable for the failure of a completed project. As such he is required to tackle any problems by adopting agile methodology during the development process. In Malaysia there is little research done to examine the behavior of the agile project manager. This study aims to analyze the behavior when project managers adopt agile in managing the development projects. Moreover, a review of the relevant literature has helped in developing an understanding of the agile project manager's behavior as this is necessary for them to become more agile inside development projects. For that reason, this paper has identified seven behaviors that the manager needs to adopt during software development process. These include Leadership, Openness, Results Orientation, Ethics, Communication, Strategic and Creative and Innovative. This paper contributes to the relevant theory by developing taxonomy of the agile project manager's behavior. Practitioners can use this taxonomy as a sensitizing device that helps the manager to consider behavior that promotes success of their projects. This is important to ensure an increase productivity and profitability, which are the business strategies of software development projects. © 2014 IEEE.},
  Art_number               = {6986020},
  Author_keywords          = {agile behavior; agile methodologies; agile project manager; communication; creative; ethics; innovative; leadership; openness; result orientation; strategic},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/MySec.2014.6986020},
  ISBN                     = {9781479954391},
  Journal                  = {2014 8th Malaysian Software Engineering Conference, MySEC 2014},
  Keywords                 = {Communication; Managers; Philosophical aspects; Planning; Software design; Software engineering; Taxonomies, agile behavior; Agile Methodologies; creative; ethics; innovative; leadership; openness; Project managers; strategic, Project management},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84929310598&doi=10.1109%2fMySec.2014.6986020&partnerID=40&md5=1ed158d16f557e9896702dc25913800a}
}

@Conference{Syu2013170,
  Title                    = {A survey to service composition methods using aspects classification},
  Author                   = {Syu, Y. and Fanjiang, Y.-Y.},
  Year                     = {2013},
  Note                     = {cited By 3},
  Pages                    = {170-181},

  Abstract                 = {As a promising, few-risk, low-cost, and agile way to rapidly produce and construct executable intended software, in recent years automatic service composition related techniques and methods have been a prevailing and deeply-studied research field, receiving a lot of attentions. For this research field, upon our long-term studies and efforts as well as papers reviewed we present, in this article, a technical profound survey along with the future challenges and directions observed. Before the main body of the survey appears, there are introductions to some vital background knowledge and adopted survey framework, respectively. The framework used in organizing the structure of the survey has been aided and inspired by aspect-oriented paradigm. © 2012 IEEE.},
  Art_number               = {6525520},
  Author_keywords          = {Automatic service composition; Semantic web service; Service-oriented architecture},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/SOSE.2013.55},
  ISBN                     = {9780769549446},
  Journal                  = {Proceedings - 2013 IEEE 7th International Symposium on Service-Oriented System Engineering, SOSE 2013},
  Keywords                 = {Aspect-oriented paradigms; Automatic service composition; Back-ground knowledge; Future challenges; Main bodies; Research fields; Service composition method, Information services; Quality of service; Semantic Web; Service oriented architecture (SOA); Systems engineering; Web services, Surveys},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84880901351&doi=10.1109%2fSOSE.2013.55&partnerID=40&md5=a2d66250e39d9a55ccfb0ddd74ba3eec}
}

@Conference{Taheri2015171,
  Title                    = {A comparative study on cloud-based agile tools},
  Author                   = {Taheri, M. and Sadjadi, S.M.},
  Year                     = {2015},
  Editor                   = {Shi Y., Feng W.},
  Note                     = {cited By 0},
  Pages                    = {171-176},
  Publisher                = {International Society for Computers and Their Applications (ISCA)},

  Abstract                 = {In the context of software development, companies, organizations and developer teams want to develop pure software products more efficiently and quickly. To deal with the new issues which accompany growing projects and software product complexities, agile tools boost simplicity and accelerate team's collaboration in a single framework. Adoption of agile tools can be a difficult process, due to agile tools must match company requirements to enhance the success of software development projects. The purpose of this paper is to introduce key criteria in details to consider in cloud services and cloud-based agile tool selection; also it presents top agile tools comparative classification based on a practical research to satisfy software development requirements under a cloud perspective.},
  Author_keywords          = {Agile tools; Cloud-based tools; Comparative classification; Software development},
  Document_type            = {Conference Paper},
  ISBN                     = {9781510812277},
  Journal                  = {24th International Conference on Software Engineering and Data Engineering, SEDE 2015},
  Keywords                 = {Software design, Cloud services; Cloud-based; Comparative studies; Software development projects; Software products; Tool selection, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84964019047&partnerID=40&md5=810f647eea4217f76c6746204fc58672}
}

@Conference{Taheri2015700,
  Title                    = {A feature-based tool-selection classification for agile software development},
  Author                   = {Taheri, M. and Sadjadi, S.M.},
  Year                     = {2015},
  Note                     = {cited By 2},
  Pages                    = {700-704},
  Publisher                = {Knowledge Systems Institute Graduate School},
  Volume                   = {2015-January},

  Abstract                 = {With the advancement in technology, software development complexities are rising across the globe. This trend is forcing companies and organizations to adopt management methods and tools to accelerate time to market, more easily manage changing priorities, increase the customer satisfaction and reduce product expenses. Agile software development methods offer a solution to these issues, but problems remain over evaluation along with the offering of the correct agile software as well as a collection of agile tools. The purpose of this paper is to introduce best tools and features, criteria used for evaluating currently existing tools and propose a classification model to right agile tool selection. To prepare a list of the best tools and their features in the market, a practical research on existing tools and their features were performed. Finally, a classification model was prepared and the results show which tools best fit into different level of maturity in projects and companies. Copyright © 2015 by KSI Research Inc. and Knowledge Systems Institute Graduate School.},
  Author_keywords          = {Agile Tool Selection; Agile Tools; Feature-Based Classification; Software Development},
  Document_type            = {Conference Paper},
  ISBN                     = {1891706373},
  ISSN                     = {23259000},
  Journal                  = {Proceedings of the International Conference on Software Engineering and Knowledge Engineering, SEKE},
  Keywords                 = {Classification (of information); Commerce; Customer satisfaction; Feature extraction; Knowledge engineering; Software design, Agile software development; Agile softwares; Classification models; Feature-based; Feature-based classification; Management method; Time to market; Tool selection, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84969752508&partnerID=40&md5=c1fad5cd6d741271648791d97952a4ea}
}

@Book{Takaki20131014,
  Title                    = {User-centered business process modeling and pattern-based development for large systems},
  Author                   = {Takaki, O. and Izumi, N. and Seino, T. and Hasida, K.},
  Publisher                = {IGI Global},
  Year                     = {2013},
  Note                     = {cited By 1},
  Volume                   = {2-4},

  Abstract                 = {In agile software development, it is imperative for stakeholders such as the users and developers of an information system to collaborate in designing and developing the information system, by sharing their knowledge. Especially in development of a large-scale information system, such collaboration among stakeholders is important, but difficult to achieve. This chapter introduces a modeling method of business processes for requirements analysis and a development framework based on Web-process architectures. The modeling method makes it easier for stakeholders to agree upon requirements. It also employs a formal method to allow business process models to satisfy both understandability and accuracy. On the other hand, the development framework above enables rapid spiral development of short-term cycles through the collaboration of developers and users. This chapter also introduces an example that compares the workloads of two requirement analyses of large-scale system developments for a government service and a financial accounting service, in order to evaluate the advantages of the proposed modeling method. © 2014, IGI Global.},
  Document_type            = {Book Chapter},
  Doi                      = {10.4018/978-1-4666-4301-7.ch049},
  ISBN                     = {9781466643024; 1466643013; 9781466643017},
  Journal                  = {Software Design and Development: Concepts, Methodologies, Tools, and Applications},
  Pages                    = {1014-1035},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84944679883&doi=10.4018%2f978-1-4666-4301-7.ch049&partnerID=40&md5=a08ecf660cd5be3446a8ba7a283bfbd3}
}

@Article{Taleb2016,
  Title                    = {"Anything as a Service" for 5G Mobile Systems},
  Author                   = {Taleb, T. and Ksentini, A. and Jantti, R.},
  Journal                  = {IEEE Network},
  Year                     = {2016},
  Note                     = {cited By 1; Article in Press},

  Abstract                 = {5G network architecture and its functions are yet to be defined. However, it is generally agreed that cloud computing, network function virtualization (NFV), and software defined networking (SDN) will be key enabling technologies for 5G. Indeed, putting all these technologies together ensures several advantages in terms of network configuration flexibility, scalability, and elasticity, which are highly needed to fulfill the numerous requirements of 5G. Furthermore, 5G network management procedures should be as simple as possible, allowing network operators to orchestrate and manage the lifecycle of their virtual network infrastructures (VNIs) and the corresponding virtual network functions (VNFs), in a cognitive and programmable fashion. To this end, we introduce the concept of "Anything as a Service" (ANYaaS), which allows a network operator to create and orchestrate 5G services on demand and in a dynamic way. ANYaaS relies on the reference ETSI NFV architecture to orchestrate and manage important services such as mobile Content Delivery Network as a Service (CDNaaS), Traffic Offload as a Service (TOFaaS), and Machine Type Communications as a Service (MTCaaS). Ultimately, ANYaaS aims for enabling dynamic creation and management of mobile services through agile approaches that handle 5G network resources and services.},
  Coden                    = {IENEE},
  Document_type            = {Article in Press},
  Doi                      = {10.1109/MNET.2016.1500244RP},
  ISSN                     = {08908044},
  Keywords                 = {Memory architecture; Network architecture; Queueing networks; Transfer functions, Enabling technologies; Machine type communications; Mobile content delivery; Network configuration; Network functions; Services on demand; Software defined networking (SDN); Virtual networks, Distributed computer systems},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84992027973&doi=10.1109%2fMNET.2016.1500244RP&partnerID=40&md5=fe17563f022a1039cee2eee0654fd088}
}

@Book{Tambo2015193,
  Title                    = {Motives for feral systems in Denmark},
  Author                   = {Tambo, T. and Olsen, M. and Bækgaard, L.},
  Publisher                = {IGI Global},
  Year                     = {2015},
  Note                     = {cited By 0},
  Volume                   = {1-3},

  Abstract                 = {Feral systems have largely been regarded as the users' response to discrepancies between official IT software systems and actual business processes. Inadequacies, discrepancies, and absence of systems support to work processes might lead to users initiating systems development themselves: systems involving any combination of software and manual processes. Feral systems are unofficial and exhibit a conflict between formal and actual operational implementation. In this chapter, the use and implementation of feral systems in Denmark are analysed and discussed. It is found interesting to aim for an understanding of feral systems in a small, relatively agile economy with traditionally positive to rapid adoption of information technology in enterprises. The method being used is qualitative case studies in selected companies representing various complexities of their respective business models and industries. The case studies address both issues of organisational and technological nature of the feral systems typically with an offset in the companies' overall information systems architecture. Among findings are (1) feral systems as a known choice when reflecting business processes with open and non-routinised character, (2) a general acceptance not related to the size or industry, (3) feral systems have received attention as implementations of innovation, (4) feral systems start as opposed to formal and official systems, but during their lifetime they can drift towards a more official status, and (5) feral systems are accepted as low-cost solutions to fill gaps in business process support where ERP systems come short. © 2016, IGI Global. All rights reserved.},
  Document_type            = {Book Chapter},
  Doi                      = {10.4018/978-1-4666-8619-9.ch010},
  ISBN                     = {9781466686205; 1466686197; 9781466686199},
  Journal                  = {Web Design and Development: Concepts, Methodologies, Tools, and Applications},
  Pages                    = {193-222},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958886198&doi=10.4018%2f978-1-4666-8619-9.ch010&partnerID=40&md5=3aaf8e5a6ce33c1b9377baf19dbf4a49}
}

@Book{Tambo2014129,
  Title                    = {Motives for feral systems in Denmark},
  Author                   = {Tambo, T. and Olsen, M. and Bækgaard, L.},
  Publisher                = {IGI Global},
  Year                     = {2014},
  Note                     = {cited By 0},

  Abstract                 = {Feral systems have largely been regarded as the users' response to discrepancies between official IT software systems and actual business processes. Inadequacies, discrepancies, and absence of systems support to work processes might lead to users initiating systems development themselves: systems involving any combination of software and manual processes. Feral systems are unofficial and exhibit a conflict between formal and actual operational implementation. In this chapter, the use and implementation of feral systems in Denmark are analysed and discussed. It is found interesting to aim for an understanding of feral systems in a small, relatively agile economy with traditionally positive to rapid adoption of information technology in enterprises. The method being used is qualitative case studies in selected companies representing various complexities of their respective business models and industries. The case studies address both issues of organisational and technological nature of the feral systems typically with an offset in the companies' overall information systems architecture. Among findings are (1) feral systems as a known choice when reflecting business processes with open and non-routinised character, (2) a general acceptance not related to the size or industry, (3) feral systems have received attention as implementations of innovation, (4) feral systems start as opposed to formal and official systems, but during their lifetime they can drift towards a more official status, and (5) feral systems are accepted as low-cost solutions to fill gaps in business process support where ERP systems come short. © 2014, IGI Global. All rights reserved.},
  Document_type            = {Book Chapter},
  Doi                      = {10.4018/978-1-4666-5027-5.ch007},
  ISBN                     = {9781466650282; 1466650273; 9781466650275},
  Journal                  = {Feral Information Systems Development: Managerial Implications},
  Pages                    = {129-160},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84956787962&doi=10.4018%2f978-1-4666-5027-5.ch007&partnerID=40&md5=d1f4adf30ad51979fe3ab2b62ccf9c9a}
}

@Article{Tamburri201670,
  Title                    = {The Architect's Role in Community Shepherding},
  Author                   = {Tamburri, D.A. and Kazman, R. and Fahimi, H.},
  Journal                  = {IEEE Software},
  Year                     = {2016},
  Note                     = {cited By 1},
  Number                   = {6},
  Pages                    = {70-79},
  Volume                   = {33},

  Abstract                 = {Software architects don't just design architecture components or champion architecture qualities; they often must guide and harmonize the entire community of project stakeholders. The community-shepherding aspects of the architect's role have been gaining attention, given the increasing importance of complex 'organizational rewiring' scenarios such as DevOps, open source strategies, transitions to agile development, and corporate acquisitions. In these scenarios, architects would benefit by having effective models to align communities with architectures. This article discusses the 'smells' indicating that a community isn't functioning efficiently, offers a set of mitigations for those smells, and provides an overview of community types. © 2016 IEEE.},
  Art_number               = {7725222},
  Author_keywords          = {architectural social debt; social debt management; software architecture shepherds; software communities; software community smells; software development; software engineering; software organizational structure; software social debt},
  Coden                    = {IESOE},
  Document_type            = {Article},
  Doi                      = {10.1109/MS.2016.144},
  ISSN                     = {07407459},
  Keywords                 = {Mergers and acquisitions; Odors; Open source software; Software architecture; Software engineering, Agile development; architectural social debt; Design architecture; Open sources; Organizational structures; Project stakeholders; Software architects; Software community, Software design},
  Publisher                = {IEEE Computer Society},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84994403514&doi=10.1109%2fMS.2016.144&partnerID=40&md5=903721c96045a6521a1d30f38a44c46e}
}

@Conference{Tanveer201614,
  Title                    = {Agile for large scale projects - A hybrid approach},
  Author                   = {Tanveer, M.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {14-18},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Agile Process is an established methodology mostly adopted by small organizations as a software process model because of its fast and effective response to client requirements during the software development cycle. For that matter, most of the agile practices are focused on team needs and are very effective in implementing client requirements. However, multi-portfolio and team based corporations employ Rational Unified Professing (RUP) model which is good in handling very complex processes but slower in terms of abrupt client interventions. A hybrid approach could be adopted to bring more accountability along with overcoming RUP's undesired delays. This paper analyses the strength and weakness of both Agile and RUP. Finally, an eclectic approach is suggested combining the best practices of both Agile and RUP in management, communication and predictability. © 2015 IEEE.},
  Art_number               = {7396338},
  Author_keywords          = {Agile; Hybrid; Large scale projects; RUP; Scrum and RUP},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/NSEC.2015.7396338},
  ISBN                     = {9781467381635},
  Journal                  = {2015 National Software Engineering Conference, NSEC 2015},
  Keywords                 = {Software design, Agile; Client requirement; Hybrid; Large-scale projects; Scrum and RUP; Small organizations; Software development cycles; Software process modeling, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84966272946&doi=10.1109%2fNSEC.2015.7396338&partnerID=40&md5=a8d5467afbbfe56b3fedf9a4b764033a}
}

@Article{Tarhan2014477,
  Title                    = {Systematic analyses and comparison of development performance and product quality of Incremental Process and Agile Process},
  Author                   = {Tarhan, A. and Yilmaz, S.G.},
  Journal                  = {Information and Software Technology},
  Year                     = {2014},
  Note                     = {cited By 6},
  Number                   = {5},
  Pages                    = {477-494},
  Volume                   = {56},

  Abstract                 = {Context Although Agile software development models have been widely used as a base for the software project life-cycle since 1990s, the number of studies that follow a sound empirical method and quantitatively reveal the effect of using these models over Traditional models is scarce. Objective This article explains the empirical method of and the results from systematic analyses and comparison of development performance and product quality of Incremental Process and Agile Process adapted in two projects of a middle-size, telecommunication software development company. The Incremental Process is an adaption of the Waterfall Model whereas the newly introduced Agile Process is a combination of the Unified Software Development Process, Extreme Programming, and Scrum. Method The method followed to perform the analyses and comparison is benefited from the combined use of qualitative and quantitative methods. It utilizes; GQM Approach to set measurement objectives, CMMI as the reference model to map the activities of the software development processes, and a pre-defined assessment approach to verify consistency of process executions and evaluate measure characteristics prior to quantitative analysis. Results The results of the comparison showed that the Agile Process had performed better than the Incremental Process in terms of productivity (79%), defect density (57%), defect resolution effort ratio (26%), Test Execution V&V Effectiveness (21%), and effort prediction capability (4%). These results indicate that development performance and product quality achieved by following the Agile Process was superior to those achieved by following the Incremental Process in the projects compared. Conclusion The acts of measurement, analysis, and comparison enabled comprehensive review of the two development processes, and resulted in understanding their strengths and weaknesses. The comparison results constituted objective evidence for organization-wide deployment of the Agile Process in the company. © 2014 Elsevier B.V. All rights reserved.},
  Author_keywords          = {Agile development; Empirical method; Process performance; Qualitative analysis; Quantitative analysis; Software measurement},
  Coden                    = {ISOTE},
  Document_type            = {Article},
  Doi                      = {10.1016/j.infsof.2013.12.002},
  ISSN                     = {09505849},
  Keywords                 = {Chemical analysis; Software design, Agile development; Empirical method; Process performance; Qualitative analysis; Software Measurement, Quality control},
  Publisher                = {Elsevier},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84895919491&doi=10.1016%2fj.infsof.2013.12.002&partnerID=40&md5=b73cca27ccf795ef4ab80bc605bc85bf}
}

@Article{Tarwani2016415,
  Title                    = {Agile methodologies in software maintenance: A systematic review},
  Author                   = {Tarwani, S. and Chug, A.},
  Journal                  = {Informatica (Slovenia)},
  Year                     = {2016},
  Note                     = {cited By 0},
  Number                   = {4},
  Pages                    = {415-426},
  Volume                   = {40},

  Abstract                 = {Agile Methodologies has been gaining popularity since 2000. The Software Maintenance phase of software lifecycle is the most expensive and tedious in nature and use of Agile methodologies helps in maintaining software over time in flexible and iterative manner. This study reviews several papers with different case studies to evaluate the performance and quality of software using agile methodologies. In this study, more than 30 research studies are investigated which are conducted between 2001 and 2015 and have been categorized according to the publication year, datasets, tools, type of techniques etc. This will be the first review paper on the use of the Agile in software maintenance which will help the researchers and encourages companies and beginners to adopt these methodologies to gain software quality. It can be concluded that by adopting agile methodologies it is guaranteed that there will be continuous improvement, greater productivity and enhanced quality of the software. It will also help software development team to finish their work within real time constraints. This study would be helpful to professional academicians also so that they can identify the current trends and future gaps in the field of agile methodologies.},
  Author_keywords          = {Agile methodology; Extreme programming; Quality; Scrum; Software Maintenance},
  Coden                    = {INFOF},
  Document_type            = {Conference Paper},
  ISSN                     = {03505596},
  Keywords                 = {Computer software selection and evaluation; Image quality; Iterative methods; Maintenance; Software design; Software engineering, Agile Methodologies; Continuous improvements; EXtreme Programming; Quality of softwares; Real time constraints; Scrum; Software development teams; Software life cycles, Computer software maintenance},
  Publisher                = {Slovene Society Informatika},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85009452552&partnerID=40&md5=666433c000c63af593555ac3fffa4180}
}

@Conference{Tavares2016611,
  Title                    = {Risk management analysis in software projects which use the scrum framework},
  Author                   = {Tavares, B.G. and Da Silva, C.E.S. and De Souza, A.D.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {611-616},
  Publisher                = {Knowledge Systems Institute Graduate School},
  Volume                   = {2016-January},

  Abstract                 = {Studies show one of the reasons for the failure of the software projects is the absence of Risk Management or its improper application. The adoption of Scrum Framework on software projects is increasing. However, the Scrum does not have specific Risk Management activities. In this scenario, this paper presents the results of a survey applied using qualitative approach, in order to analyze how Risk Management is carried out in software projects, which use Scrum. The research method adopted was the case study and the research instrument for data collection was developed based on scientific articles and the application of structured interviews. As a result, this paper presents Risk Management practices which achieved greater and lower agreement among respondents and literature. It was found that Risk Management must be applied continuously in a feedback loop. Furthermore, Scrum projects must not have a high formal planning level, even for the high risk ones. This result does not converge to the literature. The research verified that the Risk Management in Scrum projects is performed differently from its application on traditional methodologies. The framework has native resources, but the use of the classic Risk Management processes must be incorporated and adapted to Scrum.},
  Author_keywords          = {Case study; Risk management; Scrum; Software},
  Document_type            = {Conference Paper},
  ISBN                     = {189170639X; 9781891706394},
  ISSN                     = {23259000},
  Journal                  = {Proceedings of the International Conference on Software Engineering and Knowledge Engineering, SEKE},
  Keywords                 = {Application programs; Computer software; Knowledge engineering; Risk analysis; Risk assessment; Risk perception; Risks; Software engineering, Management activities; Management analysis; Qualitative approach; Research instruments; Risk management practices; Risk management process; Scientific articles; Scrum, Risk management},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84988447797&partnerID=40&md5=af3a81122662304fa527af2d1056c27e}
}

@Article{Tavares2017,
  Title                    = {Risk management analysis in Scrum software projects},
  Author                   = {Tavares, B.G. and da Silva, C.E.S. and de Souza, A.D.},
  Journal                  = {International Transactions in Operational Research},
  Year                     = {2017},
  Note                     = {cited By 0; Article in Press},

  Abstract                 = {One of the reasons for the failure of software projects is the absence of risk management procedures or its improper application. The adoption of Scrum in software projects is increasing. However, such approach does not specify risk management activities. This paper presents the results of a survey conducted using a qualitative approach to analyze how risk management is carried out in Scrum software projects. Consequently, we present risk management practices that achieved greater and lesser agreement among respondents and the literature, respectively. We found that risk management must be applied continuously in a feedback loop. Furthermore, Scrum projects must not have a high formal planning level, even for high-risk ones. The research verified that risk management in Scrum is performed differently from its application in traditional approaches. The framework has native resources, but classic processes of risk management would be incorporated and adapted. © 2017 The Authors.},
  Author_keywords          = {Risk management; Scrum; Software engineering},
  Document_type            = {Article in Press},
  Doi                      = {10.1111/itor.12401},
  ISSN                     = {09696016},
  Keywords                 = {Application programs; Risk analysis; Risk assessment; Risks; Software engineering, Management activities; Management analysis; Management procedures; Qualitative approach; Risk management practices; Scrum; Software project; Traditional approaches, Risk management},
  Publisher                = {Blackwell Publishing Ltd},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85014662590&doi=10.1111%2fitor.12401&partnerID=40&md5=1ee2c1d0b712806319d013ebf92c7367}
}

@Article{Taylor2016670,
  Title                    = {Adopting Agile software development: the project manager experience},
  Author                   = {Taylor, K.J.},
  Journal                  = {Information Technology and People},
  Year                     = {2016},
  Note                     = {cited By 0},
  Number                   = {4},
  Pages                    = {670-687},
  Volume                   = {29},

  Abstract                 = {Purpose: Early research into Agile approaches explored particular practices or quantified improvements in code production. Less well researched is how Agile teams are managed. The project manager (PM) role is traditionally one of “command and control” but Agile methods require a more facilitative approach. How this changing role plays out in practice is not yet clearly understood. The purpose of this paper is to provide insight into how adopting Agile techniques shape the working practices of PMs and critically reflect on some of the tensions that arise. Design/methodology/approach: An ethnographic approach was used to surface a richer understanding of the issues and tensions faced by PMs as Agile methods are introduced. Ethnographic fiction conveys the story to a wider audience. Findings: Agile approaches shift responsibility and spread expert knowledge seeming to undermine the traditional PM function. However, the findings here show various scenarios that allow PMs to wrest control and become more of a “gate-keeper”. Ethnographic fiction communicates a sense of the PMs frustration with the conflict between the need to control and the desire for teams to take more responsibility. Originality/value: Stories provide insight and communicate the experiential feel behind issues faced by PMs adopting Agile to surface useful knowledge. The objective is not how to measure knowledge, but how to recognize it. These reflections are valuable to fellow researchers as well as practitioners and contribute to the growing literature on Agile project management. © 2016, © Emerald Group Publishing Limited.},
  Author_keywords          = {Agile; Agile teams; Control; Ethnography; Project management; Project manager},
  Document_type            = {Article},
  Doi                      = {10.1108/ITP-02-2014-0031},
  ISSN                     = {09593845},
  Publisher                = {Emerald Group Publishing Ltd.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85006415446&doi=10.1108%2fITP-02-2014-0031&partnerID=40&md5=be9adba96fca123a0d4dc11b42a3f4d3}
}

@Conference{Thakur20151593,
  Title                    = {FDRD: Feature driven reuse development process model},
  Author                   = {Thakur, S. and Singh, H.},
  Year                     = {2015},
  Note                     = {cited By 2},
  Pages                    = {1593-1598},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {As fast the business requirements changes, the need of rapid of development and economical feasible software also increases. The new software development techniques and models are coming to picture to solve the problems of rapid changing requirements. Agile methodology is one of the approaches to fulfill the current business requirements, which is flexible to adapt the change at any phase of development. Feature driven development (FDD) is an agile based process model based on feature development, adapted by many organizations. The limitation of agile process is its incapability to reuse components those are developed through agile processes. Adopting reuse is a challenging task but it can be used at an initial level by integrating with various development processes. Reuse oriented development of software is considered to be one of the most efficient techniques to improve software quality as it increases the productivity and reduces the development effort and cost. This paper purposes a reengineered Feature driven reuse development (FDRD) process model which integrate reuse concept with feature driven development process model. The model improves the productivity of organization and quality of the produced product. © 2014 IEEE.},
  Art_number               = {7019376},
  Author_keywords          = {Feature Driven Development (FDD); Software Reuse},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICACCCT.2014.7019376},
  ISBN                     = {9781479939145},
  Journal                  = {Proceedings of 2014 IEEE International Conference on Advanced Communication, Control and Computing Technologies, ICACCCT 2014},
  Keywords                 = {Computer software reusability; Computer software selection and evaluation; Productivity, Agile Methodologies; Business requirement; Development process; Development process models; Feature driven development; Process Modeling; Software development techniques; Software Quality, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84923278845&doi=10.1109%2fICACCCT.2014.7019376&partnerID=40&md5=cf5f03499befa6873f6542091e2af7be}
}

@Article{Theocharis2015149,
  Title                    = {Is water-scrum-fall reality? On the use of agile and traditional development practices},
  Author                   = {Theocharis, G. and Kuhrmann, M. and Münch, J. and Diebold, P.},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2015},
  Note                     = {cited By 6},
  Pages                    = {149-166},
  Volume                   = {9459},

  Abstract                 = {For years, agile methods are considered the most promising route toward successful software development, and a considerable number of published studies the (successful) use of agile methods and reports on the benefits companies have from adopting agile methods. Yet, since the world is not black or white, the question for what happened to the traditional models arises. Are traditional models replaced by agile methods? How is the transformation toward Agile managed, and, moreover, where did it start? With this paper we close a gap in literature by studying the general process use over time to investigate how traditional and agile methods are used. Is there coexistence or do agile methods accelerate the traditional processes’ extinction? The findings of our literature study comprise two major results: First, studies and reliable numbers on the general process model use are rare, i.e., we lack quantitative data on the actual process use and, thus, we often lack the ability to ground process-related research in practically relevant issues. Second, despite the assumed dominance of agile methods, our results clearly show that companies enact context-specific hybrid solutions in which traditional and agile development approaches are used in combination. © Springer International Publishing Switzerland 2015.},
  Author_keywords          = {Agile methods; Comparative study; Development practices; Scrum; Software process; Systematic literature review},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-26844-6_11},
  Editor                   = {Oivo M., Abrahamsson P., Corral L., Russo B.},
  ISBN                     = {9783319268439},
  ISSN                     = {03029743},
  Keywords                 = {Process engineering; Software engineering, Agile methods; Comparative studies; Development practices; Scrum; Software process; Systematic literature review, Software design},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84952307103&doi=10.1007%2f978-3-319-26844-6_11&partnerID=40&md5=b1f34fc8ea49df4c23db9d59c81ad2e1}
}

@Conference{Thevathayan2017103,
  Title                    = {Combining agile practices with incremental visual tasks},
  Author                   = {Thevathayan, C. and Spichkova, M. and Hamilton, M.},
  Year                     = {2017},
  Note                     = {cited By 0},
  Pages                    = {103-112},
  Publisher                = {Association for Computing Machinery},

  Abstract                 = {Many employers are demanding graduates acquire project experience especially in an agile environment. Final year projects alone cannot equip students adequately unless they have already gained a solid foundation in the underlying principles, technologies and processes. Students should ideally be exposed to Software Engineering (SE) principles from their first programming course. However, the core principles such as agility, extensibility, reusability and maintainability are often too abstract for novice programmers. This paper presents an active learning approach using our visual framework Iteron. Iteron extends our prior work using a visual constructivist approach by allowing SE principles and agile practices to be interspersed with programming constructs such as arrays and methods. Students' feedback on learning outcomes was very positive as they found this approach both engaging and challenging. Performance in the follow-on assignment and the final exam showed a substantial improvement after introducing Iteron. Moreover, a much stronger correlation was noted between individual student performance in the initial assignment and the final exam. © 2017 ACM.},
  Author_keywords          = {Active learning; Computer science education; Constructivism; Incremental learning; Software engineering education; Test-driven approach; Visualisation},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/3013499.3013510},
  ISBN                     = {9781450348232},
  Journal                  = {ACM International Conference Proceeding Series},
  Keywords                 = {Artificial intelligence; Education; Education computing; Reusability; Software engineering; Software testing; Students; Vision; Visualization, Active Learning; Computer Science Education; Constructivism; Constructivist approaches; Incremental learning; Project experiences; Student performance; Underlying principles, Engineering education},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85014885439&doi=10.1145%2f3013499.3013510&partnerID=40&md5=6359172ec62ba8ae107ef62fc8a64be6}
}

@Article{ToddMcdonald2016127,
  Title                    = {Security in agile development: Pedagogic lessons from an undergraduate software engineering case study},
  Author                   = {Todd Mcdonald, J. and Trigg, T.H. and Roberts, C.E. and Darden, B.J.},
  Journal                  = {Communications in Computer and Information Science},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {127-141},
  Volume                   = {589},

  Abstract                 = {Integrating agile software methodologies can be fraught with risk for many software development organizations, but the potential rewards in terms of productivity, delivered functionality, and overall success rate are promising. Agile integration may be hard in certain organizational structures, but integrating security into such an approach can pose an even greater challenge. Ultimately, academia must do its part to introduce future computing professionals to these large areas of knowledge. In this paper, we consider the issues and problems of introducing secure agile software principles into undergraduate curriculum. We report observations, results, and pedagogic lessons learned from an empirical study as part of an undergraduate software engineering course. The conclusions and suggestions provide valuable insight for educators and practitioners alike since both communities deal often with how to best introduce agile and security to new initiates. © Springer International Publishing Switzerland 2016.},
  Author_keywords          = {Academic case studies; Agile; SCRUM; Secure software engineering},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-28313-5_9},
  Editor                   = {Haltinner K., Sarathchandra D., Alves-Foss J., Chang K., de Leon D.C., Song J.},
  ISBN                     = {9783319283128},
  ISSN                     = {18650929},
  Keywords                 = {Curricula; Education; Software design; Teaching, Agile; Case-studies; Organizational structures; SCRUM; Secure software engineering; Software development organizations; Undergraduate curricula; Undergraduate software engineering, Software engineering},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84955306718&doi=10.1007%2f978-3-319-28313-5_9&partnerID=40&md5=e92bda1751a3631d0ef771e21e6c08f0}
}

@Article{Top2015145,
  Title                    = {A reference model for software agility assessment: Agilitymod},
  Author                   = {Top, O.O. and Demirors, O.},
  Journal                  = {Communications in Computer and Information Science},
  Year                     = {2015},
  Note                     = {cited By 1},
  Pages                    = {145-158},
  Volume                   = {526},

  Abstract                 = {In this paper, we present AgilityMod that we developed with the purpose of identifying agility levels of software development projects, indicating agility gaps and providing roadmaps to organizations in adopting agile principles/practices. AgilityMod shares the meta-model structure of ISO/IEC 15504, software process assessment model, however, it differentiates from ISO/IEC 15504 in terms of its process architecture, process descriptions and description of other model elements. In this paper, we focus on the structure of the Model and describe the development stages of the Model. In addition, we briefly present a multiple case study that included eight cases, which was conducted to identify applicability and suitability of the Model. © Springer International Publishing Switzerland 2015.},
  Author_keywords          = {Agile; Agile software development; Agility assessment; AgilityMod; ISO/IEC 15504},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-19860-6_12},
  Editor                   = {Dorling A., Rout T., Dorling A., O'Connor R.V., Rout T., O'Connor R.V.},
  ISBN                     = {9783319198590},
  ISSN                     = {18650929},
  Keywords                 = {Process engineering; Software engineering; Standards, Agile; Agile software development; Agility assessment; AgilityMod; ISO/IEC 15504, Software design},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84937468889&doi=10.1007%2f978-3-319-19860-6_12&partnerID=40&md5=9da13da3126c38c6dcec60b2dde46e3f}
}

@Conference{Towey2017218,
  Title                    = {Metamorphic testing: A new student engagement approach for a new software testing paradigm},
  Author                   = {Towey, D. and Chen, T.Y. and Kuo, F.-C. and Liu, H. and Zhou, Z.Q.},
  Year                     = {2017},
  Note                     = {cited By 0},
  Pages                    = {218-225},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Software testing, as part of the software quality assurance processes in software engineering (SE), is seldom cited as the most engaging part of a software engineer's training. In spite of its importance, it was often a neglected area, and only recently, with the adoption of more agile methodologies, has testing come to the fore. Testers face challenges, including the need to be able to identify when software is not behaving as expected. Metamorphic Testing (MT) first appeared twenty years ago in an effort to help testers facing the oracle problem (not having a mechanism to determine correct software behavior). Although MT is simple in concept, it has demonstrated very impressive fault-finding ability, and has recently been attracting a great deal of interest. Training students and practitioners to effectively apply MT has become an important goal, but to date, no textbook or guidelines have been made readily available. This paper, written by some of the leading voices in the MT community, is a sharing of some of the experiences, reflections and insights gained through teaching MT (and other related subjects). These experiences indicate that not only is MT effective in industry and at fault-finding, it has the potential to really engage students in creative SE classroom activities. © 2016 IEEE.},
  Art_number               = {7851797},
  Author_keywords          = {Autoethnography; Metamorphic Testing; Reflection; Teaching Computer Science; Teaching Software Engineering},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/TALE.2016.7851797},
  ISBN                     = {9781509055982},
  Journal                  = {Proceedings of 2016 IEEE International Conference on Teaching, Assessment and Learning for Engineering, TALE 2016},
  Keywords                 = {Computer software selection and evaluation; Engineering education; Personnel training; Quality assurance; Reflection; Software engineering; Students; Teaching, Agile Methodologies; Autoethnography; Classroom activity; Metamorphic testing; Software quality assurance; Student engagement; Teaching software; Training students, Software testing},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85015152761&doi=10.1109%2fTALE.2016.7851797&partnerID=40&md5=fa373a775fff944db387337c6bd0c75f}
}

@Conference{Towhidnejad2016,
  Title                    = {Software industry experience for high school students},
  Author                   = {Towhidnejad, M. and Spradlin, A. and Bassa, T.R.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Publisher                = {American Society for Engineering Education},
  Volume                   = {2016-June},

  Abstract                 = {High school students typically do not have an understanding of what it takes to successfully transition between the high school and professional world. This paper describes how a group of ten high school students participated in a nine-week software development internship program. The interns worked on developing a semi-autonomous vehicle to be controlled remotely by a ground station. They went through the full development life-cycle using formal agile process. The participants gained experience in project management, and how to negotiate with the customer to reduce the complexity of the project to an achievable scope, given available resources (time, personnel, and cost). © American Society for Engineering Education, 2016.},
  Document_type            = {Conference Paper},
  Journal                  = {ASEE Annual Conference and Exposition, Conference Proceedings},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84983266685&partnerID=40&md5=604c54cd2b2a7c3e59b0bbb8fedd2ccc}
}

@Conference{Trimble20134826,
  Title                    = {From traditional, to lean, to agile development: Finding the optimal software engineering cycle},
  Author                   = {Trimble, J. and Webster, C.},
  Year                     = {2013},
  Note                     = {cited By 6},
  Pages                    = {4826-4833},

  Abstract                 = {In 2008, our team at NASA Ames Research Center launched a five-year project to deliver a usercentric software platform for mission control. We began with a six-month delivery cycle. Within two years we were delivering functional software every three weeks. Our evolution from traditional, to lean, then agile, did not happen because of a focused goal to become lean or agile. Rather, we responded iteratively to problems; we were disconnected from our customer, the long delivery cycles created issues with testing and verification, and we were unable to effectively measure our progress. We changed our delivery cycle first to six weeks, then three, with the team focused on the highestpriority features and bug fixes. Our one measure of progress became working code. We delivered a nightly build to our customer. Our QA team tested features as they rolled out. In our journey from traditional to agile, we tailored our processes to our team culture and our context of work. We found that agile methods increased customer and team satisfaction, and enabled us to use limited team resources where they were most effective - the design and development of the software. © 2012 IEEE.},
  Art_number               = {6480425},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/HICSS.2013.237},
  ISBN                     = {9780769548920},
  ISSN                     = {15301605},
  Journal                  = {Proceedings of the Annual Hawaii International Conference on System Sciences},
  Keywords                 = {Agile development; Agile methods; Ames research centers; Design and Development; Mission control; Software platforms; Team culture; User-centric, Iterative methods; NASA; Sales; Software engineering; Systems science, Customer satisfaction},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84875535793&doi=10.1109%2fHICSS.2013.237&partnerID=40&md5=31e64086c76e406e7f3741891116b50a}
}

@Conference{Tripp20155073,
  Title                    = {Introduction to agile and lean software engineering minitrack},
  Author                   = {Tripp, J. and Aitken, A.},
  Year                     = {2015},
  Editor                   = {Sprague R.H., Bui T.X.},
  Note                     = {cited By 0},
  Pages                    = {5073},
  Publisher                = {IEEE Computer Society},
  Volume                   = {2015-March},

  Art_number               = {7070422},
  Document_type            = {Editorial},
  Doi                      = {10.1109/HICSS.2015.662},
  ISBN                     = {9781479973675},
  ISSN                     = {15301605},
  Journal                  = {Proceedings of the Annual Hawaii International Conference on System Sciences},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84944235460&doi=10.1109%2fHICSS.2015.662&partnerID=40&md5=c670d27c8d41bb5ac994ea599c0afa65}
}

@Conference{Tripp20144799,
  Title                    = {Exploring the relationship between organizational adoption motives and the tailoring of agile methods},
  Author                   = {Tripp, J.F. and Armstrong, D.J.},
  Year                     = {2014},
  Note                     = {cited By 3},
  Pages                    = {4799-4806},
  Publisher                = {IEEE Computer Society},

  Abstract                 = {Advocates of agile information systems development methods originally called for implementation of the method in full - either perform all of the method's practices, or don't call it "agile". Over time this quest for orthodoxy was replaced by the pragmatic tailoring of agile methods to the organization's environment. However, little empirical research has investigated the forces that impact the manner in which agile methods are tailored. This article describes an exploratory study that investigates the relationships between the motives for adopting agile methods, and the agile practices adopted. Using the source data from the VersionOne State of Agile 2011 survey, we identified a sample of 2304 agile practitioners. Our study finds that three motives for agile adoption - a desire for increased software quality, increased efficiency, or increased effectiveness are each associated with different configurations of project management focused agile practices and agile practices related to the software development approach. © 2014 IEEE.},
  Art_number               = {6759191},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/HICSS.2014.589},
  ISBN                     = {9781479925049},
  ISSN                     = {15301605},
  Journal                  = {Proceedings of the Annual Hawaii International Conference on System Sciences},
  Keywords                 = {Computer software selection and evaluation; Project management; Systems science, Agile adoptions; Agile information system; Agile practices; Empirical research; Exploratory studies; Organizational adoptions; Software development approach; Software Quality, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84902263946&doi=10.1109%2fHICSS.2014.589&partnerID=40&md5=8fc0be7ceb3260a8f3c949c3c7452a8f}
}

@Conference{Tripp20143993,
  Title                    = {Toward an understanding of job satisfaction on agile teams: Agile development as work redesign},
  Author                   = {Tripp, J.F. and Riemenschneider, C.K.},
  Year                     = {2014},
  Note                     = {cited By 1},
  Pages                    = {3993-4002},
  Publisher                = {IEEE Computer Society},

  Abstract                 = {Agile methodologists have claimed that a key value proposition for the adoption of agile methods is that the methods' practices, processes, and philosophy make people more motivated and satisfied with their jobs. However, while several studies have found evidence for this impact, there has not been extensive theoretical support to explain why. In this study, we use the lens of Hackman & Oldham's job characteristics model to motivate a theory of motivation and satisfaction amongst agile development teams. We propose that agile teams are, in fact, redesigning work in the very way that Hackman & Oldham propose will increase job perceptions, and lead to greater job satisfaction. We report the initial results of a research-in-progress study. Using a quantitative survey of 104 software professionals, we test the theory and find preliminary support for our model and hypotheses. © 2014 IEEE.},
  Art_number               = {6759096},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/HICSS.2014.494},
  ISBN                     = {9781479925049},
  ISSN                     = {15301605},
  Journal                  = {Proceedings of the Annual Hawaii International Conference on System Sciences},
  Keywords                 = {Software testing; Systems science, Agile development; Agile methods; Agile teams; Job characteristics; Key values, Job satisfaction},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84902270267&doi=10.1109%2fHICSS.2014.494&partnerID=40&md5=b83bea4d07b441149f83dabdd13bae0a}
}

@Conference{Trivedi2013188,
  Title                    = {A comparative study between iterative waterfall and incremental software development life cycle model for optimizing the resources using computer simulation},
  Author                   = {Trivedi, P. and Sharma, A.},
  Year                     = {2013},
  Note                     = {cited By 0},
  Pages                    = {188-194},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {To achieve the maximum productivity using minimum resource is the aim of any software industry. Software engineering provides an abstraction process to develop software product. It has introduced various methodologies, principles and concepts. Most of them are the software process models which are also known as software life cycle models. In the software industry different-different types of projects (small, medium, large, complex) arrive in random inter arrival time for development of software products. Before implementing the products, project managers decide an appropriated software process model in documentation that is used in production of products. An empirical study conducted in 2012 that presents various effecting factors for selecting any software life cycle model. One of the important factors is team size. Software industry has a development team which works in co-ordination and depends on each other. Sometimes project managers are not intelligently assigned resources to particular phases of software life cycle model. Therefore to overcome these issues we are simulating iterative waterfall and incremental model to determine optimal resources for every phase of software life cycle model. This study shall enable the project manager to determine optimal resource without implementing software product. As future work, we shall be simulating spiral and iterative incremental model to determine which SDLC model is more appropriate for software industry. © 2013 IEEE.},
  Art_number               = {6915096},
  Author_keywords          = {Increment model; Iterative waterfall model; Science; Simphony model; Simphony.NET; Software engineering; Software process model},
  Document_type            = {Conference Paper},
  ISBN                     = {9788192024974},
  Journal                  = {Proceedings of the 2013 2nd International Conference on Information Management in the Knowledge Economy, IMKE 2013},
  Keywords                 = {Computer software; Information management; Iterative methods; Life cycle; Managers; Software engineering, Incremental modeling; Incremental software development; Science; Simphony.NET; Software life cycle model; Software process modeling; Software process models; Waterfall model, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84949085333&partnerID=40&md5=766cd68879aa1bca8975887cba016c34}
}

@Article{Trkman201658,
  Title                    = {Using business process models to better understand the dependencies among user stories},
  Author                   = {Trkman, M. and Mendling, J. and Krisper, M.},
  Journal                  = {Information and Software Technology},
  Year                     = {2016},
  Note                     = {cited By 4},
  Pages                    = {58-76},
  Volume                   = {71},

  Abstract                 = {Context Agile software development projects often manage user requirements with models that are called user stories. Every good user story has to be independent, negotiable, valuable, estimable, small, and testable. A proper understanding of a user story also requires an understanding of its dependencies. The lack of explicit representation of such dependencies presumably leads to missing information regarding the context of a user story. Objective We propose a method that facilitates better understanding of execution order and integration dependencies of user stories by making use of business process models. The method associates user stories with the corresponding business process model activity element. Method We adopted a situational method engineering approach to define our proposed method. In order to provide understanding of proposed method's constructs we used ontological concepts. Our method associates a user story to an activity element. In this way, the business process model can be used to infer information about the execution order and integration dependencies of the user story. We defined three levels of association granularity: a user story can be more abstract, approximately equal to, or more detailed than its associated business process model activity element. In our experiment we evaluate each of these three levels. Results Our experiment uses a between-subject design. We applied comprehension, problem-solving and recall tasks to evaluate the hypotheses. The statistical results provide support for all of the hypotheses. Accordingly, there appears to be significantly greater understanding of the execution order and integration dependencies of user stories when associated business process models are available. Conclusions We addressed a problem which arises from managing user stories in software development projects and focuses on the missing context of a user story. Our method contributes to the discipline of conceptual modeling in agile development. Our experiment provides empirical insight into requirement dependencies. © 2015 Elsevier B.V. All rights reserved.},
  Author_keywords          = {Context; Execution order dependency; Experiment; Integration dependency; User story},
  Coden                    = {ISOTE},
  Document_type            = {Article},
  Doi                      = {10.1016/j.infsof.2015.10.006},
  ISSN                     = {09505849},
  Keywords                 = {Experiments; Integration; Problem solving; Software engineering, Agile software development projects; Context; Execution order dependency; Explicit representation; Requirement dependencies; Situational Method Engineering; Software development projects; User stories, Software design},
  Publisher                = {Elsevier},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84952802629&doi=10.1016%2fj.infsof.2015.10.006&partnerID=40&md5=88f6f1c9655f3b00119867c6003998fb}
}

@Conference{Tuan2013267,
  Title                    = {Combining maturity with agility - Lessons learnt from a case study},
  Author                   = {Tuan, N.N. and Thang, H.Q.},
  Year                     = {2013},
  Note                     = {cited By 6},
  Pages                    = {267-274},

  Abstract                 = {Although both high maturity and agility appeared as different ways to address and overcome issues related to software development (including maximizing resources and minimizing risks), there has been a mixed understanding about the possibility for their co-existence within an organization. Outside of the dogmatic debate regarding their co-existence, however, voices have been raised recently that recognize that both approaches have their merits. This paper presents the results of a case study on the practices that a purely agile organization has put in place in order to profit from the opportunities that higher maturity can offer in respect to value creation for clients. Our conclusion is that both high maturity and agility contribute to customer satisfaction, high quality and waste reduction; and that complying with standards does not necessarily impose restriction on 'being agile'. Implication for practice is that companies and their clients can benefit from a development approach that embraces both maturity and agility. To achieve this goal, guidelines are needed that direct organizations towards adopting practices that are linked to higher maturity, as well as to agility. Copyright © 2013 ACM.},
  Author_keywords          = {Agile project management; Resource management; Risk management; Software process improvement standards},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2542050.2542072},
  ISBN                     = {9781450324540},
  Journal                  = {ACM International Conference Proceeding Series},
  Keywords                 = {Agile organizations; Agile project management; Development approach; High quality; Resource management; Software Process Improvement; Value creation; Waste reduction, Communication systems; Customer satisfaction; Information technology; Project management; Risk management, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84892966848&doi=10.1145%2f2542050.2542072&partnerID=40&md5=2acba965225f6976a74c31cab9316ec5}
}

@Article{Turani2015120,
  Title                    = {Applying case based reasoning in agile software development},
  Author                   = {Turani, A.},
  Journal                  = {Journal of Theoretical and Applied Information Technology},
  Year                     = {2015},
  Note                     = {cited By 0},
  Number                   = {1},
  Pages                    = {120-124},
  Volume                   = {78},

  Abstract                 = {There is a common misconception among developers who follow Agile development methods, that following formal processes and modeling are unnecessarily and perceived as a waste of effort [1]. The initial intension of Agile was not an anti-methodology movement but rather a balance between processes and production. Nevertheless, the main challenges facing software that are developed using Agile development methods are the risk of higher architectural design mistakes, and the slower transfer rate of knowledge especially when valuable developers and expertise tend to leave their organizations. Agile advocates itself as a framework based on engaging knowledge workers in affective way. It focuses primary on transferring the tacit type of knowledge within production teams. Yet transferring the explicit type of knowledge is important as well. Reusing past projects' artifacts will have a positive impact on the reduction of costly architectural mistakes and the increasing of the overall learnability, productivity and efficiency of the organization as a whole. Both tacit and explicit knowledge are needed. A hybrid approach that combines both kinds of knowledge is vital and essential especially for teams with diversity skills and knowledge working closely throughout project’s development life cycle. This paper focuses on two main Knowledge Based Management processes that should be applied within Agile development methodologies. The first process focuses on the transformation of tacit knowledge into explicit knowledge using the traditional design models techniques. The second process focuses on usage of Case Based Reasoning systems for facilitating the retrieval and reuse of past projects' solution artifacts. We have selected CBR over other Knowledge Base systems due to its effectiveness in representing solutions for software development domain, which is considered a complex domain, without the need of having a large set of training cases. In this paper we have proposed an ICBR (Product Backlog Item Case Based Reasoning) that could be easily integrated within many Agile development methodologies to effectively disseminate valuable knowledge among organizations’ teams and personals. In this paper we have applied ICBR on the Scrum methodology as a proof o concept for facilitating the dissemination of various software artifacts among team’s developers to maximize the use of cooperative wisdom and experience found within organizational entity. © 2005-2015 JATIT & LLS. All rights reserved.},
  Author_keywords          = {Agile development; And case based reasoning; Knowledge based management; Scrum},
  Document_type            = {Article},
  ISSN                     = {19928645},
  Publisher                = {Asian Research Publishing Network},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84938942311&partnerID=40&md5=6b5522c7c08088b80734eb294cb313f8}
}

@Article{Turek2017117,
  Title                    = {The scrum pricing model for developing a common software framework in a multi-project environment},
  Author                   = {Turek, M. and Werewka, J. and Pałka, D.},
  Journal                  = {Advances in Intelligent Systems and Computing},
  Year                     = {2017},
  Note                     = {cited By 0},
  Pages                    = {117-132},
  Volume                   = {521},

  Abstract                 = {The article presents a new pricing model applied in Scrum contracting. The model will introduce an innovative approach to the promotion of software products with reference to their pricing—bounding non-profit features with the classical cost estimation. It will assume a principle of single charge for all components reused in products created for different customers. The model will be applicable mainly in multi-project Scrum environments, but will also support scaled multi-team Scrum development environments (where software development work is allocated to different Scrum teams). It will introduce a complete mechanism for cost estimation, with component pricing procedures (compatible with Scrum estimation methodologies), component reuse tracking and so on. The price offered for software to be developed will depend on its popularity among customers. So, the introduction of a new feature triggered by one customer can be beneficial for all parties taking part in the framework development, with justified share of the price. In such situations a common base for software development pricing techniques must be established. It will depend on different factors, such as: team effort, team velocities, resources and technologies used. To express these values a reference currency will be defined. The model, along with pricing mechanisms presented in the article, can be effectively used in many software products in which software evolution is a core. The pricing efficiency, commonly recognized as a feature of the model, will encourage potential customers to choose a software company that uses it. © Springer International Publishing AG 2017.},
  Author_keywords          = {Agile software development; Outsourcing; Scrum; Scrum contracting; Software development},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-46583-8_10},
  Editor                   = {Borzemski L., Grzech A., Swiatek J., Wilimowska Z.},
  ISBN                     = {9783319465821},
  ISSN                     = {21945357},
  Keywords                 = {Computer programming; Cost estimating; Costs; Economics; Information systems; Outsourcing; Sales; Software engineering, Agile software development; Development environment; Estimation methodologies; Framework development; Innovative approaches; Multi-project environment; Scrum; Scrum contracting, Software design},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84990050129&doi=10.1007%2f978-3-319-46583-8_10&partnerID=40&md5=6b8f36cf2777ab23578b71b35a299aed}
}

@Article{Turetken2016,
  Title                    = {Assessing the adoption level of scaled agile development: a maturity model for Scaled Agile Framework},
  Author                   = {Turetken, O. and Stojanov, I. and Trienekens, J.J.M.},
  Journal                  = {Journal of Software: Evolution and Process},
  Year                     = {2016},
  Note                     = {cited By 0; Article in Press},

  Abstract                 = {Although the agile software development approaches have gained wide acceptance in practice, the concerns regarding the scalability and integration of agile practices in traditional large-scale system development projects are prevailing. Scaled Agile Framework (SAFe) has emerged as a solution to address some of these concerns. Despite few encouraging results, case studies indicate several challenges of SAFe adoption. Currently, there is a lack of a well-structured gradual approach for establishing SAFe. Before and during SAFe adoption, organizations can benefit greatly from a uniform model for assessing the current progress, and establishing a roadmap for the initiative. To address this need, we developed a maturity model that provides guidance for software developing organizations in defining a roadmap for adopting SAFe. The model can also be used to assess the level of SAFe adoption. We took an existing agile maturity model as a basis for agile practices and extended it with practices that are key to SAFe. The model was developed and refined with industry experts using the Delphi technique. A case study was conducted in a large organization where we evaluated the model by applying it to assess the level of SAFe adoption. © 2016 The Authors. Journal of Software: Evolution and Process Published by John Wiley & Sons Ltd.},
  Author_keywords          = {Agile development in large-scale; Agile software development; Delphi study; Maturity model; Scaled Agile Framework},
  Document_type            = {Article in Press},
  Doi                      = {10.1002/smr.1796},
  ISSN                     = {20477481},
  Keywords                 = {Large scale systems; Software design, Agile development; Agile software development; DELPHI study; Maturity model; Scaled Agile Framework, Software engineering},
  Publisher                = {John Wiley and Sons Ltd},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84978959115&doi=10.1002%2fsmr.1796&partnerID=40&md5=397ea8d69eab389842b09d8c0f006ad5}
}

@Article{Tweya2016,
  Title                    = {Developing a point-of-care electronic medical record system for TB/HIV co-infected patients: Experiences from Lighthouse Trust, Lilongwe, Malawi},
  Author                   = {Tweya, H. and Feldacker, C. and Gadabu, O.J. and Ng'ambi, W. and Mumba, S.L. and Phiri, D. and Kamvazina, L. and Mwakilama, S. and Kanyerere, H. and Keiser, O. and Mwafilaso, J. and Kamba, C. and Egger, M. and Jahn, A. and Simwaka, B. and Phiri, S.},
  Journal                  = {BMC Research Notes},
  Year                     = {2016},
  Note                     = {cited By 1},
  Number                   = {1},
  Volume                   = {9},

  Abstract                 = {Background: Implementation of user-friendly, real-time, electronic medical records for patient management may lead to improved adherence to clinical guidelines and improved quality of patient care. We detail the systematic, iterative process that implementation partners, Lighthouse clinic and Baobab Health Trust, employed to develop and implement a point-of-care electronic medical records system in an integrated, public clinic in Malawi that serves HIV-infected and tuberculosis (TB) patients. Methods: Baobab Health Trust, the system developers, conducted a series of technical and clinical meetings with Lighthouse and Ministry of Health to determine specifications. Multiple pre-testing sessions assessed patient flow, question clarity, information sequencing, and verified compliance to national guidelines. Final components of the TB/HIV electronic medical records system include: patient demographics; anthropometric measurements; laboratory samples and results; HIV testing; WHO clinical staging; TB diagnosis; family planning; clinical review; and drug dispensing. Results: Our experience suggests that an electronic medical records system can improve patient management, enhance integration of TB/HIV services, and improve provider decision-making. However, despite sufficient funding and motivation, several challenges delayed system launch including: expansion of system components to include of HIV testing and counseling services; changes in the national antiretroviral treatment guidelines that required system revision; and low confidence to use the system among new healthcare workers. To ensure a more robust and agile system that met all stakeholder and user needs, our electronic medical records launch was delayed more than a year. Open communication with stakeholders, careful consideration of ongoing provider input, and a well-functioning, backup, paper-based TB registry helped ensure successful implementation and sustainability of the system. Additional, on-site, technical support provided reassurance and swift problem-solving during the extended launch period. Conclusion: Even when system users are closely involved in the design and development of an electronic medical record system, it is critical to allow sufficient time for software development, solicitation of detailed feedback from both users and stakeholders, and iterative system revisions to successfully transition from paper to point-of-care electronic medical records. For those in low-resource settings, electronic medical records for integrated care is a possible and positive innovation. © 2016 Tweya et al.},
  Art_number               = {1943},
  Author_keywords          = {Electronic medical records; Informatics; Malawi; Monitoring and evaluation; TB/HIV integration},
  Document_type            = {Article},
  Doi                      = {10.1186/s13104-016-1943-4},
  ISSN                     = {17560500},
  Publisher                = {BioMed Central Ltd.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84960155865&doi=10.1186%2fs13104-016-1943-4&partnerID=40&md5=68f794f4da8ae79d0416aede555a67ae}
}

@Article{UlAmin2015328,
  Title                    = {Application of agile methods in industrial electronics education; Lessons learned from a case study},
  Author                   = {Ul Amin, R. and Aijun, L. and Inayat, I.},
  Journal                  = {International Journal of Continuing Engineering Education and Life-Long Learning},
  Year                     = {2015},
  Note                     = {cited By 0},
  Number                   = {3},
  Pages                    = {328-346},
  Volume                   = {25},

  Abstract                 = {This paper presents the introduction of agile methods to the study of industrial electronics education as performed at a public sector university in Pakistan. The application of agile methods i.e. scrum to the projects of industrial electronics course; industrial automation and process control proved to be an innovative and favourable alternative to the previously used traditional phase driven approaches. The emphasis of agile methods on iterative development, team collaboration, and quick feedback are the reasons which triggered the ease and favourability. The quick feedback and incremental development helped the students to improve and revisit their shortcomings and deliver within time. The cross functional teams enabled the students to deal with process management throughout the product development. The findings of the study state that the flexible yet time critical agile methods pledge benefits in meeting ever changing and evolving industry requirements. © 2015 Inderscience Enterprises Ltd.},
  Author_keywords          = {agile software development; collaboration; industrial automation and control; industrial electronics; scrum},
  Coden                    = {ICEEE},
  Document_type            = {Article},
  Doi                      = {10.1504/IJCEELL.2015.072674},
  ISSN                     = {15604624},
  Keywords                 = {E-learning; Education; Human resource management; Iterative methods; Process control; Product development; Software design; Software engineering; Students, Agile software development; collaboration; Cross-functional teams; Incremental development; Industrial automation; Industry requirements; Iterative development; scrum, Industrial electronics},
  Publisher                = {Inderscience Enterprises Ltd.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84946712697&doi=10.1504%2fIJCEELL.2015.072674&partnerID=40&md5=10834a75021fe0bf135c5516dbbc9090}
}

@Conference{Underhill2013729,
  Title                    = {Investigation into spectrum shape fluctuations of oscillators and signal sources},
  Author                   = {Underhill, M.},
  Year                     = {2013},
  Note                     = {cited By 3},
  Pages                    = {729-732},

  Abstract                 = {A standard SDR receiver with digital FFT type spectrum analysis software and a time waterfall display is used to investigate spectrum shape and 'spur' fluctuations in LC and crystal oscillators. Oscillator start-up spectra are found to narrow exponentially in time towards the expected Leeson model 'bell' shape, with a time constant inversely proportional to the resonator bandwidth. Spurs can be seen most prominent around the 3dB bandwidth frequencies of the oscillator resonator. The spur frequencies in general are a constant fixed offset from the carrier frequency and do not drift. Spur amplitude fluctuations appear to be random but with an average periodicity inversely proportional to spacing from the carrier. Some theory for the fluctuations is under development. © 2013 IEEE.},
  Art_number               = {6702241},
  Author_keywords          = {digital FFT spectrum analyser; oscillator fluctuation theory; oscillator time spectra; spectrum time waterfall},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/EFTF-IFC.2013.6702241},
  ISBN                     = {9781479903429},
  Journal                  = {2013 Joint European Frequency and Time Forum and International Frequency Control Symposium, EFTF/IFC 2013},
  Keywords                 = {3 dB bandwidth; Amplitude fluctuations; Carrier frequency; FFT spectrum; Fluctuation theory; Spectrum analysis software; spectrum time waterfall; Waterfall display, Crystal oscillators; Resonators; Spectrum analysis; Spectrum analyzers, Fast Fourier transforms},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893251555&doi=10.1109%2fEFTF-IFC.2013.6702241&partnerID=40&md5=b8af313afff009cfd6b1e537542b5b25}
}

@Conference{Vacari2015709,
  Title                    = {Adopting agile methods in the public sector: A systematic literature review},
  Author                   = {Vacari, I. and Prikladnicki, R.},
  Year                     = {2015},
  Note                     = {cited By 1},
  Pages                    = {709-714},
  Publisher                = {Knowledge Systems Institute Graduate School},
  Volume                   = {2015-January},

  Abstract                 = {Agile software development (ASD) has become an important research topic. However, despite the increase in the number of studies in this area in the last few years, there is a lack of structured information about its adoption in the public sector. Since the public sector is the part of the economy concerned with providing various government services, the goal of this study is to report from a systematic literature review and provide information that may enhance the understanding of the implications of adopting ASD within public companies. As the main results, we found that ASD could indeed be adopted in the public sector. The analysis suggests that a good alternative is to start the adoption of ASD with people willing to change-strongly supported by senior management-working on important pilotprojects. Second, we found that job satisfaction is greater when adopting agile methods within public companies. Finally, we also found some barriers that are difficult to overcome, including the ingrained use of plan-drive methods, as well as big bang deliveries and lack of experience in ASD. Copyright © 2015 by KSI Research Inc. and Knowledge Systems Institute Graduate School.},
  Author_keywords          = {Agile Methodologies; Government; Public Organizations; Software Development; Software Engineering},
  Document_type            = {Conference Paper},
  ISBN                     = {1891706373},
  ISSN                     = {23259000},
  Journal                  = {Proceedings of the International Conference on Software Engineering and Knowledge Engineering, SEKE},
  Keywords                 = {Job satisfaction; Knowledge engineering; Software design, Agile Methodologies; Agile software development; Government; Government services; Public organizations; Senior management; Structured information; Systematic literature review, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84969767055&partnerID=40&md5=f471e7a5c394bcc36952e401a9346796}
}

@Conference{Vale2015696,
  Title                    = {RiSE-DA: A lightweight domain analysis process and its industrial evaluation},
  Author                   = {Vale, T. and Souza, I.S. and De Almeida, E.S. and Da Silva, I.F.},
  Year                     = {2015},
  Note                     = {cited By 0},
  Pages                    = {696-699},
  Publisher                = {Knowledge Systems Institute Graduate School},
  Volume                   = {2015-January},

  Abstract                 = {In the Brazilian software development scenario, most software development companies focus on building products in the same business domain. However, they tend to perform adhoc reuse practices and show interest on the adoption of agile methods. However, the combination of systematic reuse activities and agile practices is not trivial. In this paper, we present a lightweight domain analysis process called RiSE-DA by describing its activities, tasks, roles, and artifacts of the process. This process is evaluated through two case studies performed in companies with different sizes, constraints, and business knowledge. As results, we can conclude the proposed process provides a set of comprehensive domain assets and addresses management problems such as poor feedback, adaptability, and iterativeness. Copyright © 2015 by KSI Research Inc. and Knowledge Systems Institute Graduate School.},
  Document_type            = {Conference Paper},
  ISBN                     = {1891706373},
  ISSN                     = {23259000},
  Journal                  = {Proceedings of the International Conference on Software Engineering and Knowledge Engineering, SEKE},
  Keywords                 = {Knowledge engineering; Software engineering, Agile practices; Building products; Business domain; Business knowledge; Different sizes; Industrial evaluations; Management problems; Reuse practices, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84969883926&partnerID=40&md5=10d790acc395324a4609ba6dcf7e5d8e}
}

@Conference{VanKelle201577,
  Title                    = {An empirical study into social success factors for agile software development},
  Author                   = {Van Kelle, E. and Visser, J. and Plaat, A. and Van Der Wijst, P.},
  Year                     = {2015},
  Note                     = {cited By 3},
  Pages                    = {77-80},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Though many warn that Agile at larger scale is problematic or at least more challenging than in smaller projects, Agile software development seems to become the norm, also for large and complex projects. Based on literature and qualitative interviews, we constructed a conceptual model of social factors that may be of influence on the success of software development projects in general, and of Agile projects in particular. We also included project size as a candidate success factor. We tested the model on a set of 40 projects from 19 Dutch organizations, comprising a total of 141 project members, Scrum Masters and product owners. We found that project size does not determine Agile project success. Rather, value congruence, degree of adoption of Agile practices, and transformational leadership proved to be the most important predictors for Agile project success. © 2015 IEEE.},
  Art_number               = {7166092},
  Author_keywords          = {Agile Software Development; predictive model; social success factors; transformational leadership; value congruence},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/CHASE.2015.24},
  ISBN                     = {9781479919345},
  Journal                  = {Proceedings - 8th International Workshop on Cooperative and Human Aspects of Software Engineering, CHASE 2015},
  Keywords                 = {Project management; Software design, Agile software development; Predictive modeling; Success factors; Transformational leadership; value congruence, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84946044984&doi=10.1109%2fCHASE.2015.24&partnerID=40&md5=6df2aaa3446acf8d7d5886dc45b690b1}
}

@Article{VanMierlo2014,
  Title                    = {I'll txt u if i have a problem: How the société canadienne du cancer in quebec applied behavior-change theory, data mining and agile software development to help young adults quit smoking},
  Author                   = {Van Mierlo, T. and Fournier, R. and Jean-Charles, A. and Hovington, J. and Ethier, I. and Selby, P.},
  Journal                  = {PLoS ONE},
  Year                     = {2014},
  Note                     = {cited By 7},
  Number                   = {3},
  Volume                   = {9},

  Abstract                 = {Introduction: For many organizations, limited budgets and phased funding restrict the development of digital health tools. This problem is often exacerbated by the ever-increasing sophistication of technology and costs related to programming and maintenance. Traditional development methods tend to be costly and inflexible and not client centered. The purpose of this study is to analyze the use of Agile software development and outcomes of a three-phase mHealth program designed to help young adult Quebecers quit smoking. Methods: In Phase I, literature reviews, focus groups, interviews, and behavior change theory were used in the adaption and re-launch of an existing evidence-based mHealth platform. Based on analysis of user comments and utilization data from Phase I, the second phase expanded the service to allow participants to live text-chat with counselors. Phase II evaluation led to the third and current phase, in which algorithms were introduced to target pregnant smokers, substance users, students, full-time workers, those affected by mood disorders and chronic disease. Results: Data collected throughout the three phases indicate that the incremental evolution of the intervention has led to increasing numbers of smokers being enrolled while making functional enhancements. In Phase I (240 days) 182 smokers registered with the service. 51% (n = 94) were male and 61.5% (n = 112) were between the ages of 18-24. In Phase II (300 days), 994 smokers registered with the service. 51% (n = 508) were male and 41% (n = 403) were between the ages of 18-24. At 174 days to date 873 smokers have registered in the third phase. 44% (n = 388) were male and 24% (n = 212) were between the ages of 18-24. Conclusions: Emerging technologies in behavioral science show potential, but do not have defined best practices for application development. In phased-based projects with limited funding, Agile appears to be a viable approach to building and expanding digital tools. © 2014 van Mierlo et al.},
  Art_number               = {e91832},
  Coden                    = {POLNC},
  Document_type            = {Article},
  Doi                      = {10.1371/journal.pone.0091832},
  ISSN                     = {19326203},
  Keywords                 = {adult; algorithm; article; Canada; change theory; chronic disease; computer program; data mining; follow up; health program; human; interview; mood disorder; pregnancy; smoking cessation; student; substance use; text messaging; worker; young adult; adolescent; behavior; clinical trial; computer interface; demography; female; health care survey; male; medical society; Neoplasms; procedures; program development; smoking cessation; statistics and numerical data, Adolescent; Behavior; Data Mining; Demography; Female; Follow-Up Studies; Health Care Surveys; Humans; Male; Neoplasms; Program Development; Quebec; Smoking Cessation; Societies, Medical; Software; Text Messaging; User-Computer Interface; Young Adult},
  Publisher                = {Public Library of Science},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84898634208&doi=10.1371%2fjournal.pone.0091832&partnerID=40&md5=e1498e31ec8ccdffbbb3179435a59d1d}
}

@Conference{Vassallo2017519,
  Title                    = {Continuous delivery practices in a large financial organization},
  Author                   = {Vassallo, C. and Zampetti, F. and Romano, D. and Beller, M. and Panichella, A. and Di Penta, M. and Zaidman, A.},
  Year                     = {2017},
  Note                     = {cited By 0},
  Pages                    = {519-528},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Continuous Delivery is an agile software development practice in which developers frequently integrate changes into the main development line and produce releases of their software. An automated Continuous Integration infrastructure builds and tests these changes. Claimed advantages of CD include early discovery of (integration) errors, reduced cycle time, and better adoption of coding standards and guidelines. This paper reports on a study in which we surveyed 152 developers of a large financial organization (ING Nederland), and investigated how they adopt a Continuous Integration and delivery pipeline during their development activities. In our study, we focus on topics related to managing technical debt, as well as test automation practices. The survey results shed light on the adoption of some agile methods in practice, and sometimes confirm, while in other cases, confute common wisdom and results obtained in other studies. For example, we found that refactoring tends to be performed together with other development activities, technical debt is almost always "self-admitted", developers timely document source code, and assure the quality of their product through extensive automated testing, with a third of respondents dedicating more than 50% of their time to do testing activities. © 2016 IEEE.},
  Art_number               = {7816504},
  Author_keywords          = {Agile development; Continuous delivery; Continuous integration; DevOps; Refactoring; Technical debt; Test-driven development; Testing},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICSME.2016.72},
  ISBN                     = {9781509038060},
  Journal                  = {Proceedings - 2016 IEEE International Conference on Software Maintenance and Evolution, ICSME 2016},
  Keywords                 = {Automation; Coding errors; Computer software maintenance; Integration; Software design; Software engineering; Surveys; Testing, Agile development; Continuous delivery; Continuous integrations; DevOps; Refactorings; Technical debts; Test driven development, Integration testing},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85013124232&doi=10.1109%2fICSME.2016.72&partnerID=40&md5=2f62d8c8a59e1aeb9feae8fdce1b4b28}
}

@Book{Veronese2016160,
  Title                    = {An integrated approach to collaborative learning in projects},
  Author                   = {Veronese, G.T. and Chaves, M.},
  Publisher                = {IGI Global},
  Year                     = {2016},
  Note                     = {cited By 1},

  Abstract                 = {Information Technologies 2.0 (IT 2.0) is transforming the project management by improving communication and collaboration. It provides better experience than the traditional software package allowing document sharing, integrated task tracking, enforcing team processes and agile planning. Despite the benefits brought by IT 2.0, their use to promote lessons learned (LL) remains unexplored. For many project managers to obtain and integrate information from different tools of previous similar projects remains a challenge. This chapter emphasizes the need of combining traditional LL processes and methods with IT 2.0. It describes the IT 2.0 uses and how these technologies can support LL processes and methods in project settings. It delivers a proposal focusing on both IT 2.0-centered LL processes and an updating of traditional LL methods with IT 2.0. This proposal aims to help project managers to improve the management of LL and, as a result, the project learning. © 2016 by IGI Global. All rights reserved.},
  Document_type            = {Book Chapter},
  Doi                      = {10.4018/978-1-4666-9867-3.ch010},
  ISBN                     = {9781466698680; 1466698675; 9781466698673},
  Journal                  = {Strategic Integration of Social Media into Project Management Practice},
  Pages                    = {160-178},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84968710095&doi=10.4018%2f978-1-4666-9867-3.ch010&partnerID=40&md5=f6db1f5745fe52c87bff081bc274e692}
}

@Article{VijayAnand2015,
  Title                    = {Issues in scrum agile development principles and practices in software development},
  Author                   = {Vijay Anand, R. and Dinakaran, M.},
  Journal                  = {Indian Journal of Science and Technology},
  Year                     = {2015},
  Note                     = {cited By 0},
  Number                   = {35},
  Volume                   = {8},

  Abstract                 = {Background/Objectives: Software Development assumes an exceptionally significant part in this modern world. In the late couple of years more and more software development organizations are endeavouring to adopt agile software development methods and techniques. Fruitful agile adoption leads to producing higher quality software, enhance developers moral and at a lower cost than the conventional waterfall model approach. This study seeks to evaluate, synthesize and present aspects of research on agile methods, approaches adopted and the criteria utilized for agile practice selection. Methods/Statistical Analysis: The method adopted was a Systematic Literature Review on studies published from 2010 to 2015. Findings: The agile scrum method has several technical and generic issues. Technical issues include assigning, prioritizing and integrating product backlog items. Generic issues include distributed environment issues, issues with idle team members and Developer-Tester problem. Application/Improvements: We identified the impacts of agile methodology on software development processes with respect to quality within the organizational, methodical, and cultural framework.},
  Author_keywords          = {Agile software development; Agile software testing; Product backlog item; Scrum},
  Document_type            = {Article},
  Doi                      = {10.17485/ijst/2015/v8i35/79037},
  ISSN                     = {09746846},
  Page_count               = {5},
  Publisher                = {Indian Society for Education and Environment},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84962318640&doi=10.17485%2fijst%2f2015%2fv8i35%2f79037&partnerID=40&md5=3330769fea7a95fcbcf41ab03bd3f96d}
}

@Article{Vijayakumaran2014,
  Title                    = {Integrated framework for enhancing software development methodologies with comparative analysis},
  Author                   = {Vijayakumaran, V. and Radhamani, G. and Thangaiah, P.R.J.},
  Journal                  = {Journal of Computing and Information Science in Engineering},
  Year                     = {2014},
  Note                     = {cited By 0},
  Number                   = {3},
  Volume                   = {14},

  Abstract                 = {The delivery process of any IT organization depends on the effective software development methodologies. Along with conventional software development methodologies, corporates are also found to adopt various quality standards in order to enhance their development methodologies. Although there were substantial researches work carried out in past, majority of the study discusses about the theoretical implementation of quality standards. Due to various intermittent impediments, e.g., requirement volatility, skill gap, schedule slippage, etc., the standard quality models are very often violated in real time environment leading to degradation in development methodologies. Hence, this manuscript discusses an integrated framework using Scrum, Lean Six Sigma, and Agile which has been formulated on the basis on existing flaws in software development methodologies and propose some of the potential features to enhance it. Copyright © 2014 by ASME.},
  Art_number               = {031010},
  Author_keywords          = {Agile; Lean six sigma; Scrum; Software methodologies},
  Document_type            = {Article},
  Doi                      = {10.1115/1.4027889},
  ISSN                     = {15309827},
  Keywords                 = {Lean production; Process engineering; Process monitoring; Quality control; Software engineering; Standardization; Work simplification, Agile; Development methodology; Integrated frameworks; Lean Six Sigma; Real-time environment; Scrum; Software development methodologies; Software methodologies, Software design},
  Publisher                = {American Society of Mechanical Engineers (ASME)},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84993964705&doi=10.1115%2f1.4027889&partnerID=40&md5=ad97346467c006d488a0f638157406f0}
}

@Conference{Virmani201578,
  Title                    = {Understanding DevOps \& bridging the gap from continuous integration to continuous delivery},
  Author                   = {Virmani, M.},
  Year                     = {2015},
  Note                     = {cited By 8},
  Pages                    = {78-82},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {As part of Agile transformation in past few years we have seen IT organizations adopting continuous integration principles in their software delivery lifecycle, which has improved the efficiency of development teams. With the time it has been realized that this optimization as part of continuous integration - alone - is just not helping to make the entire delivery lifecycle efficient or is not driving the organization efficiency. Unless all the pieces of a software delivery lifecycle work like a well oiled machine - efficiency of organization to optimize the delivery lifecycle can not be met. This is the problem which DevOps tries to address. This paper tries to cover all aspects of Devops applicable to various phases of SDLC and specifically talks about business need, ways to move from continuous integration to continuous delivery and its benefits. Continuous delivery transformation in this paper is explained with a real life case study that how infrastructure can be maintained just in form of code (IAAC). Finally this paper touches upon various considerations one must evaluate before adopting DevOps and what kind of benefits one can expect. © 2015 IEEE.},
  Art_number               = {7173368},
  Author_keywords          = {Continuous Delivery; Continuous Integration; DevOps; Infrastructure as a Code (IAAC)},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/INTECH.2015.7173368},
  ISBN                     = {9781467375504},
  Journal                  = {5th International Conference on Innovative Computing Technology, INTECH 2015},
  Keywords                 = {Efficiency; Gears; Life cycle, Agile transformations; Continuous Delivery; Continuous integrations; Development teams; DevOps; Infrastructure as a Code (IAAC); IT organizations; Machine efficiency, Integration},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84946553533&doi=10.1109%2fINTECH.2015.7173368&partnerID=40&md5=023445cc6389c6682a5dacc98b1abc77}
}

@Article{Vithana2017515,
  Title                    = {Investigating the Issues of Using Agile Methods in Offshore Software Development in Sri Lanka},
  Author                   = {Vithana, V.N. and Asirvatham, D. and Johar, M.G.M.},
  Journal                  = {Studies in Computational Intelligence},
  Year                     = {2017},
  Note                     = {cited By 0},
  Pages                    = {515-523},
  Volume                   = {710},

  Abstract                 = {Offshore software development (OSD) is the process of developing software by globally distributed teams and it has become increasingly popular due to the many benefits it offers. Reduced costs, access to wide range of skilled people and reduction in application development time are the major attractions to OSD. Agile methods are popular software development methodologies that help companies deliver high quality products rapidly. In order to stay competitive in today’s dynamic business environment many software companies are embracing Agile methods. Agile methods require frequent informal communication between all stakeholders of the project. OSD introduces time, cultural and geographical barriers to this requirement. Previous studies in other countries have identified some of the challenges to implement Agile methods in an offshore environment. However, the impact of the challenges on the project success has not been studied by many. This study uses empirical and theoretical evidences in order to develop a model of challenges and their impact on project success. OSD as the fifth largest export earner of Sri Lanka, plays an important role in the Sri Lankan economy. Results of this study will help researchers as well as the ICT industry to obtain an awareness and to alleviate the challenges of OSD. © 2017, Springer International Publishing AG.},
  Author_keywords          = {Agile software development methods; Challenges; Global software development; Issues; Offshore software development; Project success},
  Document_type            = {Book Chapter},
  Doi                      = {10.1007/978-3-319-56660-3_44},
  ISSN                     = {1860949X},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85016980894&doi=10.1007%2f978-3-319-56660-3_44&partnerID=40&md5=8eaf058baa0fbd3715f18af704adcc3f}
}

@Conference{Vivian2013105,
  Title                    = {Analysing computer science students' teamwork role adoption in an online self-organised teamwork activity},
  Author                   = {Vivian, R. and Falkner, K. and Falkner, N.},
  Year                     = {2013},
  Note                     = {cited By 5},
  Pages                    = {105-114},

  Abstract                 = {Computer Science (CS) professionals are regularly required to work in teams to solve complex problems. Agile software development processes are increasingly popular in organisations as a method for teamwork but the self-organising nature of the method and lack of strictly allocated roles means that graduates need to know how to adopt and transition between roles effectively. While online teamwork makes team processes and behaviours transparent, educators are often confronted by the amount of data and difficulty in how to judge roles and behaviours to provide meaningful feedback to students. Furthermore, assessment of teamwork does not necessarily ignite a need to identify roles and behaviours as feedback is usually based on the product, rather than processes and behaviours. Using Dickinson and McIntyre's teamwork roles, we extend the framework to include explicit behaviours to analyse one class of students' self-organised team interactions in an online discussion space as solved open-ended problems. The collaborative activity did encourage role adoption, however not all students moved fluidly through the roles. Despite the lack of defined roles, one or two students adopted leadership roles, but attempts at leadership were not always successful. We discovered other less-obvious roles were equally important for maintaining and progressing team discussions. In this paper, we discuss the roles that emerged and suggest strategies for encouraging and assessing online teamwork. Our framework may prove to be a guide for others seeking to analyse students' teamwork and provides a guide for what behaviours a teacher might look for in online environments. Our findings support the need to develop tools that provide real-time visual feedback to students and teachers about student behaviour and roles when undertaking teamwork in online spaces. © 2013 ACM.},
  Author_keywords          = {collaboration; human-to-human; students; team roles; teamwork},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2526968.2526980},
  ISBN                     = {9781450324823},
  Journal                  = {ACM International Conference Proceeding Series},
  Keywords                 = {Agile software development process; collaboration; Collaborative activities; Computer science students; Feedback to students; human-to-human; Team roles; teamwork, Software engineering; Visual communication, Students},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84889594960&doi=10.1145%2f2526968.2526980&partnerID=40&md5=3ed754872fa535ad3d5b194dd96e437a}
}

@Article{Vlietland2016418,
  Title                    = {Aligning codependent Scrum teams to enable fast business value delivery: A governance framework and set of intervention actions},
  Author                   = {Vlietland, J. and Van Solingen, R. and Van Vliet, H.},
  Journal                  = {Journal of Systems and Software},
  Year                     = {2016},
  Note                     = {cited By 1},
  Pages                    = {418-429},
  Volume                   = {113},

  Abstract                 = {Many enterprises that adopt Agile/Scrum suffer from collaboration issues between Scrum teams that depend on one another to deliver end-to-end functionality. These dependencies delay delivery and as a result deteriorate the business value delivered in such value chains. The objective of our study is to support enterprises that suffer from such dependencies with a governance framework that helps them mitigate collaboration issues between sets of codependent Scrum teams. We first identify a set of intervention actions that aim to mitigate the collaboration issues between codependent Scrum teams. Second, we validate the effectiveness of these intervention actions in a large confirmatory industrial case study. This study was held in a large multi-national financial institute that worked with a large number of codependent Scrum teams. Third, we triangulate the findings in three focus groups. We finally package the intervention actions in a governance framework. The intervention actions led to a delivery time reduction from 29 days to 10 days. The participants in the focus groups confirmed the causality between the intervention actions and the observed delivery improvement. The empirical results show that the intervention actions, packaged in the governance framework, enable codependent sets of Scrum teams to deliver faster. © 2015 Elsevier Inc. All rights reserved.},
  Author_keywords          = {Agile; Alignment; Chain codependencies; Collaboration; Coordination},
  Coden                    = {JSSOD},
  Document_type            = {Article},
  Doi                      = {10.1016/j.jss.2015.11.010},
  ISSN                     = {01641212},
  Keywords                 = {Alignment; Hardware; Software engineering, Agile; Business value; Collaboration; Coordination; Delay delivery; Financial institutes; Industrial case study; Multi-nationals, Chains},
  Publisher                = {Elsevier Inc.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84949668902&doi=10.1016%2fj.jss.2015.11.010&partnerID=40&md5=57217b6008380e7bf093c8c5574976ca}
}

@Article{Vlietland201552,
  Title                    = {Towards a governance framework for chains of Scrum teams},
  Author                   = {Vlietland, J. and Van Vliet, H.},
  Journal                  = {Information and Software Technology},
  Year                     = {2015},
  Note                     = {cited By 5},
  Number                   = {1},
  Pages                    = {52-65},
  Volume                   = {57},

  Abstract                 = {Context: Large companies operating in the information intensive industries increasingly adopt Agile/Scrum to swiftly change IT functionality because of rapid changing business demands. IT functionality in large enterprises however is typically delivered by a portfolio of interdependent software applications involving a chain of Scrum teams. Usually, each application from the portfolio is allocated to a single Scrum team, which necessitates collaboration between the Scrum teams to jointly deliver functionality. Objective: Identify the collaboration related issues in chains of Scrum teams. Method: We used a qualitative approach with transcripted interviews from three case studies that were coded and analyzed to identify the issues. Results: We identified six issues in chains of codependent Scrum teams; coordination, prioritization, alignment, automation, predictability and visibility. The synthesis of these issues with existing theory resulted in nine propositions. These nine propositions have been combined into a conceptual model. Conclusion: We propose this conceptual model as a starting point for a governance framework to manage chains of Scrum teams that addresses the identified issues. © 2014 Elsevier B.V. All rights reserved.},
  Author_keywords          = {Agile; Alignment; Chain of Scrum teams; Coordination; Predictability; Priority},
  Coden                    = {ISOTE},
  Document_type            = {Conference Paper},
  Doi                      = {10.1016/j.infsof.2014.08.008},
  ISSN                     = {09505849},
  Keywords                 = {Alignment; Application programs; Chains, Agile; Coordination; Information-intensive industries; IT functionalities; Predictability; Priority; Qualitative approach; Software applications, Human resource management},
  Publisher                = {Elsevier},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84922536970&doi=10.1016%2fj.infsof.2014.08.008&partnerID=40&md5=46116cd88a2fc8c0a33b40b99a8c8a26}
}

@Conference{Vogel2015,
  Title                    = {Teaching distributed agile development to software professionals: A flexible approach},
  Author                   = {Vogel, B. and Kilamo, T. and Kurti, A.},
  Year                     = {2015},
  Note                     = {cited By 0},
  Publisher                = {Association for Computing Machinery},
  Volume                   = {07-11-September-2015},

  Abstract                 = {Software development today is based on a set of Agile ap-proaches in the mindset of Lean. These emphasize the need for team collaboration and communication, rapid feedback and continuous learning. This creates the need for software intensive companies to educate their developers to these ways of working in a manner that allows fast adoption of the acquired skills also in professional capacity. As Agile emphasizes learning, teaching agile development can rely on modern, learner-centric approaches such as situated learning and the idea of a ipped classroom. In this paper we present and reect upon a case study of two courses of teaching dis-tributed agile development for software professionals based on modern learning theories engaging the learners directly in practice. © 2015 ACM.},
  Art_number               = {a31},
  Author_keywords          = {Distributed Agile; Exible Approach; Situated learning; Software Professionals},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2797433.2797465},
  ISBN                     = {9781450333931},
  Journal                  = {ACM International Conference Proceeding Series},
  Keywords                 = {Curricula; Learning systems; Software architecture; Software engineering; Teaching, Agile development; Continuous learning; Distributed Agile; Exible Approach; Learning Theory; Professional capacity; Situated learning; Team collaboration, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958522368&doi=10.1145%2f2797433.2797465&partnerID=40&md5=914dd3a6bad64302a66df70817a631c3}
}

@Article{Vörös2016277,
  Title                    = {Security middleware programming using P4},
  Author                   = {Vörös, P. and Kiss, A.},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {277-287},
  Volume                   = {9750},

  Abstract                 = {Today’s Internet requires easily manageable, and simply extensible network control systems, which we can’t say about the current networks. Software-Defined Networking (SDN) [1] is an emerging architecture what aims to create a system for the upcoming needs, by offering a directly programmable, agile, centrally managed, and programatically configured way for the operators to control their network [2]. SDN decouples the network control and forwarding functions, which makes it easier to create new abstractions in networking, simplifying management and making network advancement easier. SDN devices are programmable through a dedicated interface, with a specific protocol, from which the most known is actually OpenFlow [3]. The biggest problem with OpenFlow is that it does not support new header definitions, which is necessary for network operators to apply new packet encapsulations. To overcome these issues with OpenFlow, a new high-level language has been created: Programming Protocolindependent Packet Processors (P4) [4]. This language supports a fully programmable parser, which makes us able to define new headers without problem. However there are a lot of opportunities to do with P4, we focused on the network security field. In this paper we introduce the first security middleware programmed and configured in P4. Our software works as a layer 3 firewall, with protocol, and port filtering, flood attack detection, and the ability to make decisions about Ethernet, IPv4, IPv6, TCP, UDP header fields. © Springer International Publishing Switzerland 2016.},
  Author_keywords          = {Network virtualization; OpenFlow; P4; Packet processors; Programmable networks; Security; Software-defined networking},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-39381-0_25},
  Editor                   = {Tryfonas T.},
  ISBN                     = {9783319393803},
  ISSN                     = {03029743},
  Keywords                 = {Computational linguistics; Computer privacy; Computer programming languages; Computer system firewalls; High level languages; Human computer interaction; Internet protocols; Middleware; Security of data; Software defined networking; Transmission control protocol, Network virtualization; Openflow; Packet processors; Programmable network; Security, Network security},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84978924733&doi=10.1007%2f978-3-319-39381-0_25&partnerID=40&md5=22daa9eb1101715ee6b44f14d9a4a8a5}
}

@Conference{Wagger2015,
  Title                    = {From agile software development to the sharing economy and the collaborative commons: Social apps for enterprises},
  Author                   = {Wagger, H.},
  Year                     = {2015},
  Note                     = {cited By 0},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {In this article we motivate the ongoing changes in our economy due to digitalization of enterprises and the changes in workforce. The evolution and growth of digital and mobile technologies has radically changed the way we work. The success of agile software development can be seen as a forerunner of an economic transformation that results in purpose-driven organisations, the sharing economy and the collaborative commons. In such a setting, it is of uttermost importance to listen to the needs of employees and to create a working environment that helps them to thrive. The app effect - well known from the consumer market - has finally reached the enterprise. © 2015 IEEE.},
  Art_number               = {7107420},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICSTW.2015.7107420},
  ISBN                     = {9781479918850},
  Journal                  = {2015 IEEE 8th International Conference on Software Testing, Verification and Validation Workshops, ICSTW 2015 - Proceedings},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84934324424&doi=10.1109%2fICSTW.2015.7107420&partnerID=40&md5=0ba7112da95b014dcdda2ea296c5f5fe}
}

@Conference{Wainer2014175,
  Title                    = {Repurposing user oriented artifacts as outside-in refactoring tools},
  Author                   = {Wainer, M.},
  Year                     = {2014},
  Note                     = {cited By 0},
  Pages                    = {175-180},
  Publisher                = {International Society for Computers and Their Applications},

  Abstract                 = {Refactoring, now regarded as an essential practice in agile software development, provides a disciplined methodology to prevent evolving code from degrading in quality. Refactoring strives to improve the structure and readability of code often through standard code transformations. Increasingly IDEs have added refactoring tools to assist developers by automating increasingly complex refactorings. Unfortunately, perhaps because of usability issues, studies have shown that automated refactoring tools are used much less than what might be hoped for. We propose to take an agile approach to refactoring tools and make use of existing user oriented artifacts to promote refactorings that improve the code's ability to convey its intent. Artifacts related to the application UI (user interface), domain models, user demos etc. are re-purposed as refactoring tools to bring the outside world into the code. Intuitive, agile and already available, this provides a different type of refactoring tool which focuses more on expressing the intent of the code rather than on automatic code transformations. We expect the resulting code will have a better alignment of objects, methods and identifiers with user concepts and vocabulary. Incorporating this method into how agile software development is taught can also provide students with a more outside-in perspective, spurring better customer communication and resulting in code which more clearly captures and expresses user concerns.},
  Author_keywords          = {Agile modeling; Refactoring; Software development; User interaction design},
  Document_type            = {Conference Paper},
  ISBN                     = {9781632665133},
  Journal                  = {29th International Conference on Computers and Their Applications, CATA 2014},
  Keywords                 = {Cosine transforms; Software design; Software engineering; User interfaces, Agile approaches; Agile modeling; Agile software development; Automatic codes; Customer communications; Refactoring tools; Refactorings; User interaction design, Codes (symbols)},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84906539355&partnerID=40&md5=78242cf4e5d83bfc46f2bd8c89cba37a}
}

@Book{Waldo2013671,
  Title                    = {Managing Embedded Software Development},
  Author                   = {Waldo, W.G.},
  Publisher                = {Elsevier Inc.},
  Year                     = {2013},
  Note                     = {cited By 0},

  Abstract                 = {This chapter provides information to successfully organize and manage any embedded software project or program. It introduces quality systems, the OSI model of architecting software into stacks, several software development models and ways in which teams may be organized, and overviews communications. Managing the constraints of scope, schedule, costs including resources, quality, and customer satisfaction fully addresses all the work and activities of any project or program. The natural progression of software development from its concept through its life-cycle until release is discussed. Tools are presented for successful planning and execution of resource management, risk management, problem solving, and the traceability of work extending from requirements to respective engineering responses to testing against those software specifications. © 2013 Copyright © 2013 Elsevier Inc. All rights reserved.},
  Author_keywords          = {Agile; Architecture; Budget; Code review; Communications; Configuration management; Core team; Design; Documentation; Lessons learned; Life-cycle; Milestone; Release; Requirement; Review; Risk; Schedule; Test; Traceability matrix; Use case; V-model; Waterfall model},
  Document_type            = {Book Chapter},
  Doi                      = {10.1016/B978-0-12-415917-4.00020-7},
  ISBN                     = {9780124159174},
  Journal                  = {Software Engineering for Embedded Systems},
  Pages                    = {671-730},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84882926557&doi=10.1016%2fB978-0-12-415917-4.00020-7&partnerID=40&md5=2d999ec0466c4aed4a43302964230cf9}
}

@Article{Wanderley2014200,
  Title                    = {Experimental evaluation of conceptual modelling through mind maps and model driven engineering},
  Author                   = {Wanderley, F. and Silveira, D. and Araujo, J. and Moreira, A. and Guerra, E.},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2014},
  Note                     = {cited By 1},
  Number                   = {PART 5},
  Pages                    = {200-214},
  Volume                   = {8583 LNCS},

  Abstract                 = {Recent research studies report evidence that many systems' requirements are not fully understood, being difficult to elicit and produce accurate conceptual models more efficiently. We have been investigating how creative models and model-driven development can contribute to overcome this difficulty. Creative models such as mind maps offer effective cognitive support to rapidly produce conceptual models that are closer to stakeholders' expectations. This paper reports on the results of a controlled experiment carried out in academia and industry using a creative and agile modeling approach. This approach uses mind maps to generate conceptual models through transformations, using model-driven engineering techniques. The empirical evidence discussed in this paper shows a significant gain in time spent to build conceptual models. © 2014 Springer International Publishing.},
  Author_keywords          = {Conceptual Modelling; Experimental Software Engineering; Mind Map Modelling; Requirements Engineering},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-09156-3_15},
  ISBN                     = {9783319091556},
  ISSN                     = {03029743},
  Keywords                 = {Requirements engineering; Software engineering, Conceptual modelling; Controlled experiment; Experimental evaluation; Experimental software engineering; Mind maps; Model driven development; Model-driven Engineering; Recent researches, Schematic diagrams},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904876766&doi=10.1007%2f978-3-319-09156-3_15&partnerID=40&md5=420ce7ae9ef486b34cb3184df1bbddf1}
}

@Conference{Wang2016899,
  Title                    = {The methodological approach to software key modules for 20GHz agile microwave signal generator},
  Author                   = {Wang, P. and Sheng, L.},
  Year                     = {2016},
  Editor                   = {Juan W., Jianping C.},
  Note                     = {cited By 0},
  Pages                    = {899-902},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},
  Volume                   = {2},

  Abstract                 = {Based on the agile signal generator, the paper places emphasis on two key modules of software, the user interface module and the baseband & data control module. Firstly, with the concept of object-oriented analysis in mind, we presents the realization of efficient and intuitionistic graph user interface, then introduces the basic concept, design requirements for baseband and data control. Then we focus on the data structure and algorithm of the control module. This software is now being used in agile signal generator and gain well replies. © 2015 IEEE.},
  Art_number               = {7494352},
  Author_keywords          = {control software; frequency agile; signal generator; UI},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICEMI.2015.7494352},
  ISBN                     = {9781479976195},
  Journal                  = {2015 IEEE 12th International Conference on Electronic Measurement and Instruments, ICEMI 2015},
  Keywords                 = {Object oriented programming; Signal generators, Basic concepts; Control module; Control software; Data control; Frequency agile; Methodological approach; Microwave signals; Object-oriented analysis, User interfaces},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84978240473&doi=10.1109%2fICEMI.2015.7494352&partnerID=40&md5=40786e9a6673e3c27ddfa488b80838ec}
}

@Article{Watson2014434,
  Title                    = {Robust Diagnostic Genetic Testing Using Solution Capture Enrichment and a Novel Variant-Filtering Interface},
  Author                   = {Watson, C.M. and Crinnion, L.A. and Morgan, J.E. and Harrison, S.M. and Diggle, C.P. and Adlard, J. and Lindsay, H.A. and Camm, N. and Charlton, R. and Sheridan, E. and Bonthron, D.T. and Taylor, G.R. and Carr, I.M.},
  Journal                  = {Human Mutation},
  Year                     = {2014},
  Note                     = {cited By 15},
  Number                   = {4},
  Pages                    = {434-441},
  Volume                   = {35},

  Abstract                 = {Targeted hybridization enrichment prior to next-generation sequencing is a widespread method for characterizing sequence variation in a research setting, and is being adopted by diagnostic laboratories. However, the number of variants identified can overwhelm clinical laboratories with strict time constraints, the final interpretation of likely pathogenicity being a particular bottleneck. To address this, we have developed an approach in which, after automatic variant calling on a standard unix pipeline, subsequent variant filtering is performed interactively, using AgileExomeFilter and AgilePindelFilter (http://dna.leeds.ac.uk/agile), tools designed for clinical scientists with standard desktop computers. To demonstrate the method's diagnostic efficacy, we tested 128 patients using (1) a targeted capture of 36 cancer-predisposing genes or (2) whole-exome capture for diagnosis of the genetically heterogeneous disorder primary ciliary dyskinesia (PCD). In the cancer cohort, complete concordance with previous diagnostic data was achieved across 793 variant genotypes. A high yield (42%) was also achieved for exome-based PCD diagnosis, underscoring the scalability of our method. Simple adjustments to the variant filtering parameters further allowed the identification of a homozygous truncating mutation in a presumptive new PCD gene, DNAH8. These tools should allow diagnostic laboratories to expand their testing portfolios flexibly, using a standard set of reagents and techniques. © 2013 The Authors.},
  Author_keywords          = {Exome sequencing; Mutation detection; Sequence analysis; Software},
  Coden                    = {HUMUE},
  Document_type            = {Article},
  Doi                      = {10.1002/humu.22490},
  ISSN                     = {10597794},
  Keywords                 = {article; clinical article; computer interface; computer program; dnah8 gene; dyskinesia; familial cancer; gene; gene mutation; gene sequence; genetic screening; genetic variability; genotype; human; priority journal; computer interface; genetic predisposition; genetic screening; genetic variation; genetics; high throughput sequencing; Kartagener syndrome; Neoplasms; procedures; reproducibility; single nucleotide polymorphism; software; stop codon; tumor gene, axonemal dynein; dynein adenosine triphosphatase; stop codon, Axonemal Dyneins; Codon, Nonsense; Dyneins; Genes, Neoplasm; Genetic Predisposition to Disease; Genetic Testing; Genetic Variation; High-Throughput Nucleotide Sequencing; Humans; Kartagener Syndrome; Neoplasms; Polymorphism, Single Nucleotide; Reproducibility of Results; Software; User-Computer Interface},
  Publisher                = {Wiley-Liss Inc.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84896137851&doi=10.1002%2fhumu.22490&partnerID=40&md5=934dddea9ba6cad2b3f87ead7442ad31}
}

@Conference{Wautelet2017,
  Title                    = {Perspectives on user story based visual transformations},
  Author                   = {Wautelet, Y. and Heng, S. and Kolp, M.},
  Year                     = {2017},
  Editor                   = {Ameller D., Dieste O., Knauss E., Susi A., Dalpiaz F., Kifetew F.M., Tenbergen B., Palomares C., Seffah A., Forbrig P., Berry D.M., Daneva M., Knauss A., Siena A., Daun M., Herrmann A., Kirikova M., Groen E.C., Horkoff J., Maeder P., Massacci F., Ralyte J.},
  Note                     = {cited By 0},
  Publisher                = {CEUR-WS},
  Volume                   = {1796},

  Abstract                 = {This paper summarizes previous works done by the authors on User Story (US) template unification and visual requirements models generation out of a US set. Indeed, transformation of a US set tagged using templates from a unified model to a Goal-Oriented model called the Rationale Tree and to a UML Use-Case Diagram are previous contributions summarized here. It also introduces the genuine contribution of generating a UML class diagram from a US set. Future research - notably on the use of the transformations in real life-case studies - is also discussed. Finally, the CASE tool supporting the approaches is overviewed. Copyright 2017 for this paper by its authors.},
  Author_keywords          = {Agile Development; Rationale Tree; Use-Case Diagram; User Story},
  Document_type            = {Conference Paper},
  ISSN                     = {16130073},
  Journal                  = {CEUR Workshop Proceedings},
  Keywords                 = {Forestry; Requirements engineering, Agile development; Goal oriented modeling; Rationale Tree; Requirements Models; UML class diagrams; Uml use case diagrams; Use case diagram; User stories, Computer software selection and evaluation},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85016181818&partnerID=40&md5=d1728af051fb57b9af3aab065e3fe51d}
}

@Conference{Wautelet2016337,
  Title                    = {Towards an agent-driven software architecture aligned with user stories},
  Author                   = {Wautelet, Y. and Heng, S. and Kolp, M. and Scharff, C.},
  Year                     = {2016},
  Editor                   = {Filipe J., Filipe J., van den Herik J.},
  Note                     = {cited By 1},
  Pages                    = {337-345},
  Publisher                = {SciTePress},
  Volume                   = {2},

  Abstract                 = {Agile principles have taken an increasing importance in the last decades. Software Architecture (SA) definition is perceived as a non-agile practice as it is executed in a top-down manner, reminding waterfall development, and sometimes imposes heavy documentation. This paper proposes to systematically build an agent-oriented SA from a set of User Stories (US), the core artifact to document requirements in agile methodologies. Previous research has allowed to define a unified US meta-model for the generation of templates relating WHO, WHAT and WHY elements. This meta-model's elements define a syntax issued from practitioners templates associated with semantics from Goal Oriented Requirements Engineering frameworks, more precisely i∗. With a set of US following the templates of this previous model, the link between the US and SA concepts is systematically studied and a transformation process is proposed. The SA can decline agent behaviors aligned with requirements and organizational behaviors. Moreover, requirements (thus US) are subject to evolution through agile iterations; the SA can evolve with these changes in a semi-automatic manner. We thus argue that the Agent-SA produced with our transformation process contributes to the overall project agility. Copyright © 2016 by SCITEPRESS - Science and Technology Publications, Lda. All rights reserved.},
  Author_keywords          = {Agent architecture; Agile architecture; Agile development; Multi-agent system; User story},
  Document_type            = {Conference Paper},
  ISBN                     = {9789897581724},
  Journal                  = {ICAART 2016 - Proceedings of the 8th International Conference on Agents and Artificial Intelligence},
  Keywords                 = {Artificial intelligence; Multi agent systems; Requirements engineering; Semantics; Software agents; Software architecture, Agent architectures; Agile architectures; Agile development; Agile Methodologies; Goal-oriented requirements engineering; Organizational behavior; Transformation process; User stories, Intelligent agents},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84969268482&partnerID=40&md5=140a1a1a0c9968eba5435c22c1489f02}
}

@Conference{Wautelet201361,
  Title                    = {On the integration of i* into RUP},
  Author                   = {Wautelet, Y. and Kolp, M.},
  Year                     = {2013},
  Note                     = {cited By 0},
  Pages                    = {61-66},
  Publisher                = {CEUR-WS},
  Volume                   = {978},

  Abstract                 = {Altought widely used and recognized in the scientific com- munity, the i* framework has, until now, failed to impose itself into enterprise practices. There are many ways that can be followed to favor industry-adoption. Among them, we believe that an integration into the (Rational) Unied Process, which already includes business modeling as a preliminary step in software development and furnishes custom syn- tax and semantic to do so could be an interesting approach. This paper summarizes the ideas of a research aimed at mapping i* model elements and RUP/UML business modeling ones with the best possible semantic match. The willingness is to provide RUP practitioners a powerful tool for capturing and analyzing social and organizational contexts of soft- ware systems based on the syntax they already know with as closely as possible related semantics.},
  Author_keywords          = {Business Modeling; I; RUP Business Use-Case Model},
  Document_type            = {Conference Paper},
  ISSN                     = {16130073},
  Journal                  = {CEUR Workshop Proceedings},
  Keywords                 = {Iodine; Software design; Systems engineering, Business modeling; Model elements; Organizational context; Use case model, Semantics},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84907417991&partnerID=40&md5=6d2f167af217265d6aa5ea0149457e2a}
}

@Conference{Weitzel201453,
  Title                    = {Sustaining agility through architecture: Experiences from a joint research and development laboratory},
  Author                   = {Weitzel, B. and Rost, D. and Scheffe, M.},
  Year                     = {2014},
  Note                     = {cited By 0},
  Pages                    = {53-56},
  Publisher                = {IEEE Computer Society},

  Abstract                 = {This paper is an experience report of a long running Scrum project, conducted in a collaboration between industry and research, in a so called 'Joint Research and Development Laboratory'. Over time in the collaboration, we experienced a constant decrease in the pace of our development progress. Planning forward only within the limits of single sprints was the main reason for this. It resulted in a degenerating design and therefore a lack of flexibility that affected the agility of our project. Therefore, we introduced the concept of 'epic-architectures', an architecture design for a coherent group of user stories. Shifting the planning horizon further, across single sprints, helped us to create more stable and reusable concepts and to construct simpler, more elegant, and more maintainable solutions. We were able to significantly reduce the refactoring effort and increase the development speed, without significant overhead. With reporting on our experiences we hope to provide practically applicable guidance on how to integrate lightweight architecting in agile development processes, to sustain agility while creating high quality products. © 2014 IEEE.},
  Art_number               = {6827100},
  Author_keywords          = {agile; agility; Architecture; development; experience report; industry; Scrum; sustainable},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/WICSA.2014.38},
  ISBN                     = {9781479934126},
  Journal                  = {Proceedings - Working IEEE/IFIP Conference on Software Architecture 2014, WICSA 2014},
  Keywords                 = {Industry; Research; Software architecture, agile; agility; development; Experience report; Scrum; sustainable, Architecture},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84903727159&doi=10.1109%2fWICSA.2014.38&partnerID=40&md5=539f665d386cbecb810f097173c77f36}
}

@Conference{Werder2016,
  Title                    = {Team agility and team performance - The moderating effect of user involvement},
  Author                   = {Werder, K.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Publisher                = {Association for Information Systems},

  Abstract                 = {Software development organizations increasingly adopt agile software development (ASD) in order to react to manifold challenges and respond to increasing user expectations. User involvement is mentioned as the most important success factor in software development projects. However, little is known about the right intensity of user involvement for development teams. The paper investigates the moderating effect of different dimensions of user involvement intensity are investigated, i.e. types, practices and continuity. While prior research in ASD focuses on the project or method, this paper adopts a team-theoretical view towards agility. In addition, the effect of user involvement on the relationship between team agility on team performance is investigated. A model for team agility and its empirical survey-based investigation is proposed. The expected results extend the nomological net of team research in IS and help scholars to extend ASD theory. Practitioners benefit by identifying the right intensity of user involvement for their development team.},
  Author_keywords          = {Agility; Development; Team; User involvement},
  Document_type            = {Conference Paper},
  Journal                  = {24th European Conference on Information Systems, ECIS 2016},
  Keywords                 = {Information systems; Software engineering, Agile software development; Agility; Development; Software development organizations; Software development projects; Team; User expectations; User involvement, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84995790728&partnerID=40&md5=b8647a4c0a6b46f6dcde7d9c5658e03e}
}

@Conference{Wielsch2013567,
  Title                    = {Dynamic integration of ALM tools for agile software development},
  Author                   = {Wielsch, M. and Bieniek, R. and Grams, B. and Lässig, J.},
  Year                     = {2013},
  Note                     = {cited By 1},
  Pages                    = {567-573},
  Publisher                = {IEEE Computer Society},

  Abstract                 = {The paper describes the need for and goals of toolintegration within software development processes. In particular we focus on agile software development but are not limited to. The integration of tools and data between the different domains of the process is essential for an efficient, effective and customized software development. We describe what the next steps in the pursuit of integration are and how major goals can be achieved. Beyond theoretical and architectural considerations we describe the prototypical implementation of an open platform approach. The paper introduces platform apps and a functionality store as general concepts to make apps and their functionalities available to the community. We describe the implementation of the approach and how it can be practically utilized. The description is based on one major use case and further steps are motivated by various other examples. © 2013 IEEE.},
  Art_number               = {6776665},
  Document_type            = {Conference Paper},
  ISBN                     = {9781479926268},
  Journal                  = {2013 IEEE/SICE International Symposium on System Integration, SII 2013},
  Keywords                 = {Agile software development; Different domains; Open platforms; Prototypical implementation; Software development process, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84902492761&partnerID=40&md5=c42315c19f8905f7931ca6b8b37fc34b}
}

@Article{Wiklund201335,
  Title                    = {Impediments in agile software development: An empirical investigation},
  Author                   = {Wiklund, K. and Sundmark, D. and Eldh, S. and Lundqvist, K.},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2013},
  Note                     = {cited By 1},
  Pages                    = {35-49},
  Volume                   = {7983 LNCS},

  Abstract                 = {In this paper, we report on a case study on development impediments encountered in the early phase of a transformation to agile methods in a software development organization. Drawing from literature and anecdotal evidence, it was assumed that the majority of the impediments were related to software testing. To investigate this, we performed a case study seeking qualitative and quantitative evidence from task boards, interviews, and observations. Our analysis indicates that the major challenge in the transformation undertaken by the studied organization was coordination and communication in the large, and that testing was the major challenge only when the unit of analysis was restricted to the teams in the department. © 2013 Springer-Verlag.},
  Author_keywords          = {Agile Development; Impediments; Industrial Case Study},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-642-39259-7_6},
  ISBN                     = {9783642392580},
  ISSN                     = {03029743},
  Keywords                 = {Agile development; Agile software development; Anecdotal evidences; Empirical investigation; Impediments; Industrial case study; Software development organizations; Unit of analysis, Human resource management; Industrial applications; Software testing, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84884929541&doi=10.1007%2f978-3-642-39259-7_6&partnerID=40&md5=90be3c36ea126e23a90494c08f8c8ab6}
}

@Article{Williams201529,
  Title                    = {Agile development for the creation of proper human-computer interfaces for the elderly},
  Author                   = {Williams, D. and Wang, M.-T. and Chang, C.-H. and Ahamed, S.I. and Chu, W.},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2015},
  Note                     = {cited By 0},
  Pages                    = {29-38},
  Volume                   = {8456},

  Abstract                 = {While computers may greatly enhance the lives of the elderly, many software developers fail to create human-computer interfaces that properly appeal to elderly users. Developers often fail to take into consideration the elderly user from the beginning, and the elderly now face a variety of challenges when using most applications. We believe that the adoption of a modified agile development workflow when developing human-computer interfaces for the elderly will assist in better integrating an inclusive design into applications as early as possible. Agile development relies heavily on user feedback, which is imperative in the development of elderly-friendly human-computer interfaces where the target audience has a diverse set of abilities. © Springer International Publishing Switzerland 2015.},
  Author_keywords          = {Agile development; Elderly people; Human computer interfaces; Software development; Software engineering practices},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-14424-5_4},
  Editor                   = {Helal S., Gu T., Mokhtari M., Bodine C., Mokhtari M., Mokhtari M.},
  ISBN                     = {9783319144238},
  ISSN                     = {03029743},
  Keywords                 = {Automation; Computer software; Intelligent buildings; Software design; Software engineering; Wireless telecommunication systems, Agile development; Elderly people; Human computer interfaces; Inclusive design; Software developer; Software engineering practices; Target audience; User feedback, Human computer interaction},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84927754226&doi=10.1007%2f978-3-319-14424-5_4&partnerID=40&md5=7195892fb50ef19b86af420792b92acb}
}

@Article{Williams2017,
  Title                    = {Virtualizing Lifemapper software infrastructure for biodiversity expedition},
  Author                   = {Williams, N. and Stewart, A. and Papadopoulos, P.},
  Journal                  = {Concurrency Computation},
  Year                     = {2017},
  Note                     = {cited By 0; Article in Press},

  Abstract                 = {One of the activities of the Pacific Rim Applications and Grid Middleware Assembly (PRAGMA) is fostering Virtual Biodiversity Expeditions by bringing domain scientists and cyber infrastructure specialists together as a team. Over the past few years, PRAGMA members have been collaborating on virtualizing the Lifemapper software. Virtualization and cloud computing have introduced great flexibility and efficiency into IT projects. Virtualization refers to the technologies that provide a layer of abstraction between server hardware system and software that runs on it. This abstraction enables a logical view of computing resources and allows multiple servers to run on the same hardware. With this project, we are virtualizing Lifemapper by enabling its installation and configuration on a virtual cluster. Virtualization provides application scalability, maximizes resources utilization, and creates a more efficient, agile, and automated infrastructure. However, there are downsides to the complexity inherent in these environments, including the need for special techniques to deploy cluster hosts, dependence on virtual environments, and challenging application installation, management, and configuration. In this study, we report on progress of the Lifemapper virtualization framework focused on a reproducible and highly configurable infrastructure capable of fast deployment. Lifemapper is a distributed software application developed by the Biodiversity Institute at The University of Kansas. Lifemapper creates and maintains a publicly accessible archive of species distribution maps calculated from public specimen data. Lifemapper software also provides a suite of tools for biodiversity researchers that calculate single and multispecies distribution predictions and macroecological analyses through application programming interfaces. Our goal is to create a viable solution that can be easily adopted and reused by scientists from multiple institutions or projects. This solution (1) allows fast deployment of ready-made cluster images, (2) reproduces the complete Lifemapper processing pipeline on demand at multiple sites and in different hosting environments, and (3) enables scientists to perform Lifemapper-facilitated data processing on restricted-use data, very large datasets, or other unique data. A key contribution of this work is describing the practical experience in taking a complex, clustered, domain-specific, data analysis, and simulation system and enabling its operation on a variety of system configurations. Uses of this portability range from whole cluster replication to teaching and experimentation on a single laptop. System virtualization is used to practically define and make portable the full application stack, including all of its complex set of supporting software and allows Lifemapper deployment in a variety of environments. Published 2017. This article is a U.S. Government work and is in the public domain in the USA.},
  Author_keywords          = {Biodiversity computing; Client/server; Cloud deployment; Lifemapper; PRAGMA; Rocks clusters},
  Coden                    = {CCPEB},
  Document_type            = {Article in Press},
  Doi                      = {10.1002/cpe.4137},
  ISSN                     = {15320626},
  Keywords                 = {Abstracting; Application programming interfaces (API); Biodiversity; Computer hardware; Data handling; Facsimile; Hardware; Middleware; Pipeline processing systems; Virtual reality; Virtualization, Application installations; Application scalability; Client /server; Cloud deployments; Distributed software applications; Lifemapper; PRAGMA; Software infrastructure, Application programs},
  Publisher                = {John Wiley and Sons Ltd},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85018364731&doi=10.1002%2fcpe.4137&partnerID=40&md5=c6c7e79f8d7be760336a9e0fbf25612b}
}

@Article{Winkler201348,
  Title                    = {Research Prototypes versus Products: Lessons Learned from Software Development Processes in Research Projects},
  Author                   = {Winkler, D. and Mordinyi, R. and Biffl, S.},
  Journal                  = {Communications in Computer and Information Science},
  Year                     = {2013},
  Note                     = {cited By 3},
  Pages                    = {48-59},
  Volume                   = {364 CCIS},

  Abstract                 = {Software and systems development in industry typically focus on constructing high-quality products by using traditional or agile software processes and applying established tools and methods. Most projects have to handle more or less stable requirements but usually build on a proven architecture. On the other hand, research projects typically aim at investigating new ideas, facing promising research directions, showing feasibility of novel approaches or building prototypes for demonstration purposes. Obviously there seems to be a big gap between industrial projects and research projects. Anyway - after a period of research - there is the need to enable the transition from prototype to real products, comparable to industrial developed software products. The main challenge is bridging the gap between research prototypes and industry products, typically out of scope of a research project. As we have to handle these challenges in a long-running research project, this paper aims at identifying risks, challenges and candidate solutions to identify how to bridge the gap from research to industry. Main result of this paper is an adapted software engineering process that has been initially evaluated in context of our research project. © Springer-Verlag Berlin Heidelberg 2013.},
  Author_keywords          = {Industry Product; Prototyping; Research Projects; Software Development Processes},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-642-39179-8_5},
  ISBN                     = {9783642391781},
  ISSN                     = {18650929},
  Keywords                 = {Industrial research; Industry, Agile software process; Building prototypes; High-quality products; Industrial projects; Industry products; Software development process; Software engineering process; Systems development, Software prototyping},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904620471&doi=10.1007%2f978-3-642-39179-8_5&partnerID=40&md5=2ab4d61cb2a4255fb10c6b06c65f4f5d}
}

@Book{Wipfler2015191,
  Title                    = {Agile management for organizational change and development},
  Author                   = {Wipfler, H. and Vorbach, S.},
  Publisher                = {Springer International Publishing},
  Year                     = {2015},
  Note                     = {cited By 0},

  Abstract                 = {Organizational change projects are becoming frequent tasks for many organizations and require the deployment of proven management concepts to realize the planned transition. While organizational change is embedded in the fields of organizational development, change management, and project management, there are few attempts to synthesize these different disciplines into an integrated description. In addition, there is a growing demand for agility as change projects tend to become more complex and have to be performed within drifting environments. This paper discusses the relationship of organizational development, change management and project management and describes the idea of agile approaches. Coming originally from the field of software development agile methodologies are beginning to gain ground in project management, support change management, and allow for more flexibility. We suggest that agile techniques and a more integrated approach can contribute to the organization’s challenge to cope with change. © Springer International Publishing Switzerland 2015.},
  Document_type            = {Book Chapter},
  Doi                      = {10.1007/978-3-319-07434-4_13},
  ISBN                     = {9783319074344; 9783319074337},
  Journal                  = {Change Management and the Human Factor: Advances, Challenges and Contradictions in Organizational Development},
  Pages                    = {191-207},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84944610128&doi=10.1007%2f978-3-319-07434-4_13&partnerID=40&md5=087ab9cdfb088a2081f363308a0b14e4}
}

@Conference{Wisitpongphan2016,
  Title                    = {Agile in public sector: Case study of dairy farm management projects},
  Author                   = {Wisitpongphan, N. and Khampachua, T.},
  Year                     = {2016},
  Note                     = {cited By 0},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Agile software development approach seems to work well in an organization where processes change on a regular basis. Conversely, adopting Agile practice in public sector, where work procedures have to follow a well-defined processes, faces several challenges. In this paper, we investigated how Agile methods could be adopted for practice in a public sector context using two projects of different sizes and complexity as our case studies. Our results show that certain Agile methods were able to work well in a public sector with some additional procedures required, while the main challenges of applying Agile methods in public sector are the change request management and the procurement process. © 2016 IEEE.},
  Art_number               = {7748916},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/JCSSE.2016.7748916},
  ISBN                     = {9781509020331},
  Journal                  = {2016 13th International Joint Conference on Computer Science and Software Engineering, JCSSE 2016},
  Keywords                 = {Computer software; Farms; Software design, Agile methods; Agile practices; Agile software development; Case-studies; Different sizes; Procurement process; Public sector; Work procedure, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85006844162&doi=10.1109%2fJCSSE.2016.7748916&partnerID=40&md5=07f998b3fc6f757b859c4528cb10bbce}
}

@Conference{Wolfert2014266,
  Title                    = {A future internet collaboration platform for safe and healthy food from farm to fork},
  Author                   = {Wolfert, S. and Goense, D. and Sorensen, C.A.G.},
  Year                     = {2014},
  Note                     = {cited By 3},
  Pages                    = {266-273},
  Publisher                = {IEEE Computer Society},

  Abstract                 = {It is expected that the world population will further expand from the current 6 billion to 9-11 billion people in 2050. This faces us with an enormous challenge to feed this population and still keep production within the limits of planet Earth's carrying capacity. Smart Farming - i.e. the use of smart, data-rich ICT-services and applications, in combination with advanced hardware (in tractors, greenhouses, etc.) - can provide the much needed breakthroughs to producing enough good quality food in a safe and environmental-sound way. This paper introduces a Future Internet platform - called FIspace - for business to business collaboration that is currently being developed within Europe's Future Internet Public-Private Partnership programme (FI-PPP). On top of that a specific implementation will be made for the area of Smart Farming that will enable a global approach for Apps and Services development. It is expected that this will overcome many of the current bottlenecks in ICT development for Smart Farming such as interoperability and handling large amounts of data, and that it will lead to more agile and affordable software solutions. In this way, this development can contribute to the global challenge of producing enough safe and healthy food for the future within planet Earth's carrying capacity. New projects are planned and collaboration in Europe and beyond should further leverage the platform. The ambition is to become world-leading in this area. © 2014 IEEE.},
  Art_number               = {6879694},
  Author_keywords          = {B2B collaboration; Future Internet; Smart farming},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/SRII.2014.47},
  ISSN                     = {21660778},
  Journal                  = {Annual SRII Global Conference, SRII},
  Keywords                 = {Nutrition, B2B collaboration; Business to business; Future internet; Large amounts of data; Public private partnerships; Services development; Smart farming; Software solution, Internet},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84906764729&doi=10.1109%2fSRII.2014.47&partnerID=40&md5=debf979ce46eb0c2f844b2001bb9b27e}
}

@Article{Woods201524,
  Title                    = {Aligning Architecture Work with Agile Teams},
  Author                   = {Woods, E.},
  Journal                  = {IEEE Software},
  Year                     = {2015},
  Note                     = {cited By 2},
  Number                   = {5},
  Pages                    = {24-26},
  Volume                   = {32},

  Abstract                 = {Difficulties frequently arise when agile development teams and software architects work together. By adopting practices aligned with the 'agile manifesto,' software architects can work constructively with agile teams and significantly contribute to a project's success. © 1984-2012 IEEE.},
  Art_number               = {7217769},
  Author_keywords          = {agile teams; software architecture; software design; software development; software engineering},
  Coden                    = {IESOE},
  Document_type            = {Article},
  Doi                      = {10.1109/MS.2015.119},
  ISSN                     = {07407459},
  Keywords                 = {Software architecture; Software engineering, Agile development; Agile teams; Software architects, Software design},
  Publisher                = {IEEE Computer Society},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84940383008&doi=10.1109%2fMS.2015.119&partnerID=40&md5=27055dbfe7441927fe9294a26847fcd3}
}

@Conference{Woodward2013104,
  Title                    = {Helping students track learning progress using burn down charts},
  Author                   = {Woodward, C.J. and Cain, A. and Pace, S. and Jones, A. and Kupper, J.F.},
  Year                     = {2013},
  Note                     = {cited By 8},
  Pages                    = {104-109},

  Abstract                 = {Agile software development methods, such as Scrum, have adopted the use of burn down charts to help track progress by development teams. We considered if this same technique could be applied to help students track their progress in programming units. Tools that help students visually track their progress may help address issues with time management, particularly in units that make use of frequent formative feedback. In this work we describe such a tool, named Doubtfire, and explain its use in helping students keep track of their progress across a number of undergraduate programming units. © 2013 IEEE.},
  Art_number               = {6654409},
  Author_keywords          = {agile software development; constructive alignment; introductory programming; portfolio assessment; project management},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/TALE.2013.6654409},
  ISBN                     = {9781467363556},
  Journal                  = {Proceedings of 2013 IEEE International Conference on Teaching, Assessment and Learning for Engineering, TALE 2013},
  Keywords                 = {Agile software development; Constructive alignments; Development teams; Formative feedbacks; Introductory programming; Learning progress; Portfolio assessment; Time management, Engineering education; Project management; Software design; Tools, Students},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84892665655&doi=10.1109%2fTALE.2013.6654409&partnerID=40&md5=342fd77e5e2416753fd54e2ca81020c4}
}

@Article{Wrona2016138,
  Title                    = {Content-based security and protected core networking with software-defined networks},
  Author                   = {Wrona, K. and Oudkerk, S. and Szwaczyk, S. and Amanowicz, M.},
  Journal                  = {IEEE Communications Magazine},
  Year                     = {2016},
  Note                     = {cited By 1},
  Number                   = {10},
  Pages                    = {138-144},
  Volume                   = {54},

  Abstract                 = {Successful execution of future network-centric military operations relies on effective enforcement of both need-to-know and responsibility- to-share principles. In modern military missions and coalitions, which have an increasingly agile character, a promising solution is to enforce security policies based on the properties of individual information objects - we call this approach content-based security. This article discusses the enforcement of content-based security policies at the different layers of the TCP/ IP model, and introduces a proof-of-concept implementation of a content-based protection and release mechanism in a software-defined networking environment. Our aim is to provide consistent enforcement of security policies across multiple system layers and multiple security dimensions (confidentiality, integrity, and availability). The results of an analysis of a concrete example of a software-defined network emulated in Mininet are encouraging and confirm the effectiveness of our approach with respect to improving protection of data in transit. The work presented in this article offers a basis for further research in this area. © 1979-2012 IEEE.},
  Art_number               = {7588283},
  Coden                    = {ICOMD},
  Document_type            = {Article},
  Doi                      = {10.1109/MCOM.2016.7588283},
  ISSN                     = {01636804},
  Keywords                 = {Military operations; Security systems; Software defined networking, Different layers; Information object; Military missions; Multiple securities; Multiple systems; Proof of concept; Release mechanism; Security policy, Network security},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84994850781&doi=10.1109%2fMCOM.2016.7588283&partnerID=40&md5=f05848d30f5c330124dbd2cc82e211d6}
}

@Conference{Wrycza2014,
  Title                    = {Systems requirements specification with SysML},
  Author                   = {Wrycza, S. and Marcinkowski, B.},
  Year                     = {2014},
  Editor                   = {Carlsson S., Jan A., Cronquist B.},
  Note                     = {cited By 1},
  Publisher                = {Kristianstad Academic Press},

  Abstract                 = {Information systems modeling has gone through a meaningful evolution in which a significant place is occupied by information systems development methodologies, these are, in succession: structured, soft, object-oriented, and agile (Wrycza, 1999). At present, a particular position in this field has been achieved by UML (Unified Modeling Language), representing the object-oriented paradigm. It has become a specific standard, a form of lingua franca in software engineering (Wrycza, Marcinkowski and Wyrzykowski, 2005). Its popularity, precision and flexibility determined its influence on different professional groups developing systems, not only in computing but also in the other fields of technology, business and administration. These groups of professionals are involved in modeling and implementing a broad spectrum of systems in different domains, which might be loosely termed systems engineering. In fact, it is a multidisciplinary approach to the stakeholders' requirements transforming them into harmonized, consistent solutions to meet their requirements. This transformation is performed by systems engineers who constitute a natural link, joining different, often distant disciplines in the project of producing a holistic entity, independently of hardware personal and other determinants. The professionals interested and involved in systems engineering act within the INCOSE organization and have decided to adapt the Unified Modeling Language to their specific requirements. In this way the work for establishing a new language - SysML, has been initiated. This joint project has been coordinated by three organizations:• OMG (Object Management Group), • INCOSE (International Council on System Engineering), • ISO (International Organization for Standardization). As a result of the working groups efforts, the System Modeling Language SysML - appropriate for system engineering needs, was developed and established. SysML is a modeling language for general use, serving specification, analysis, design and verification of complex systems. Formally, its architecture was released in 2006 and then upgraded to version 1.1 in 2008. The aim of this paper is to present the authors' experiences in systems specification relating to the SysML requirement diagrams. Part 1 of this paper includes the general characteristics of the system engineering field. In the next part the structure and content of SysML is outlined. Parts 3 and 4 are dedicated to the system requirements and requirement diagrams of SysML. The last part presents a practical application of the SysML requirement diagrams in respect of the system requirements for an Internet bank.},
  Author_keywords          = {Rquirement diagrams; Sysml; System requirements; Systems engineering; UML},
  Document_type            = {Conference Paper},
  Journal                  = {BIR 2009 - 8th International Conference on Perspectives in Business Informatics Research},
  Keywords                 = {Graphic methods; Information systems; Object oriented programming; Requirements engineering; Software engineering; Specifications; Systems engineering, Information systems development methodologies; International organization for standardizations; Multi-disciplinary approach; Rquirement diagrams; Sysml; System requirements; UML; UML(unified modeling language), Unified Modeling Language},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84918769013&partnerID=40&md5=88e010d30f3382c9b5dac70eb0a2e650}
}

@Article{Wysocki2017777,
  Title                    = {Agents of RUP processes model for IT organizations readiness to agile transformation assessment},
  Author                   = {Wysocki, W. and Orłowski, C. and Ziółkowski, A. and Bocewicz, G.},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2017},
  Note                     = {cited By 0},
  Pages                    = {777-786},
  Volume                   = {10192 LNAI},

  Abstract                 = {A significant problem in modern software engineering is maturity assessment of organizations developing software. We propose the use of process model of RUP development methodology as a pattern for comparing it with the tested project. Percent values of accordance coefficient determine the task accordance of the tested project with the pattern of activities flow. This RUP model concept is based on a multi-agent based simulation (MABS). It presents agents and their behaviours as well as objects placed in the agent system environment. The behaviour of agents is presented as a set of Finite State Automatons. The usefulness of the method for assessment of organization’s maturity was examined in a two-part experiment. The result of the first part of the experiment was used in the second part as the process pattern to determine the accordance of a sample project to the result of simulated model. The results confirmed the usefulness of the model in maturity assessment. © Springer International Publishing AG 2017.},
  Author_keywords          = {Finite State Automaton; FSA; IT organization maturity; JADE; MABS; Maturity assessment; Multi-agent based simulation; Rational unified process; RUP; Software development processes; Software process simulation},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-54430-4_74},
  Editor                   = {Tojo S., Nguyen L.M., Nguyen N.T., Trawinski B.},
  ISBN                     = {9783319544298},
  ISSN                     = {03029743},
  Keywords                 = {Computer software; Database systems; Finite automata; Multi agent systems; Silicate minerals; Software design; Software engineering, IT organizations; JADE; MABS; Maturity assessments; Multi agent based simulations; Rational Unified Process; Software development process; Software process simulation, Software agents},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85017690947&doi=10.1007%2f978-3-319-54430-4_74&partnerID=40&md5=dc8bbd6d0e0f6385d2e56d40fb825117}
}

@Conference{Xu2015894,
  Title                    = {Using software theater for the demonstration of innovative ubiquitous applications},
  Author                   = {Xu, H. and Krusche, S. and Bruegge, B.},
  Year                     = {2015},
  Note                     = {cited By 0},
  Pages                    = {894-897},
  Publisher                = {Association for Computing Machinery, Inc},

  Abstract                 = {Software development has to cope with uncertainties and changing requirements that constantly arise in the development process. Agile methods address this challenge by adopting an incremental development process and delivering working software frequently. However, current validation techniques used in sprint reviews are not sufficient for emerging applications based on ubiquitous technologies. To fill this gap, we propose a new way of demonstration called Software Theater. Based on ideas from theater plays, it aims at presenting scenario-based demonstration in a theatrical way to highlight new features, new user experience and new technical architecture in an integrated performance. We have used Software Theater in more than twenty projects and the result is overall positive. © 2015 ACM.},
  Author_keywords          = {Demonstration; Design evaluation; Informal models; Prototypes; Rapid iteration; Scenarios},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2786805.2803207},
  ISBN                     = {9781450336758},
  Journal                  = {2015 10th Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering, ESEC/FSE 2015 - Proceedings},
  Keywords                 = {Application programs; Demonstrations; Iterative methods; Software engineering; Theaters, Design evaluation; Incremental development; Prototypes; Rapid iteration; Scenarios; Technical architecture; Ubiquitous application; Ubiquitous technology, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84960342913&doi=10.1145%2f2786805.2803207&partnerID=40&md5=f6ee126a33b3841be03fd674c85d97de}
}

@Conference{Xu2015,
  Title                    = {Geometric simulation analysis of multi-band mosaic imaging from the same orbit by agile satellites},
  Author                   = {Xu, Y. and Chen, J. and Chen, Y. and Xu, Z. and Feng, H. and Li, Q.},
  Year                     = {2015},
  Editor                   = {Zhu B., Tong Q.},
  Note                     = {cited By 0},
  Publisher                = {SPIE},
  Volume                   = {9669},

  Abstract                 = {This paper establishes a geometric model of multi-band mosaic imaging from the same orbit by agile satellites, and introduces a self-write simulation software. Geometric parameters of each band are calculated based on the attitude control ability of the satellite and the mission requirements. Considering the different ground resolution and the imaging angle of each band, two new concepts, Gradient Entropy and Structure Similarity Parameter are presented. These two values are used to evaluate the change of image quality caused by agility, and help to estimate the effect of the mission. By building the geometric model and calculating the agile information with the program, we propose a new approach of forward analysis of agile imaging, which helps users evaluate the image degradation. © 2015 SPIE.},
  Art_number               = {966905},
  Author_keywords          = {agile imaging; attitude control; geometric model; gradient entropy; structure similarity parameter},
  Coden                    = {PSISD},
  Document_type            = {Conference Paper},
  Doi                      = {10.1117/12.2204808},
  ISBN                     = {9781628418910},
  ISSN                     = {0277786X},
  Journal                  = {Proceedings of SPIE - The International Society for Optical Engineering},
  Keywords                 = {Attitude control; Computer software; Entropy; Geometry; Orbits; Remote sensing; Satellites, Agile satellites; Geometric modeling; Geometric simulation; Ground resolution; Image degradation; Mission requirements; Simulation software; Structure similarity, Quality control},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84940193576&doi=10.1117%2f12.2204808&partnerID=40&md5=f60631f3f962fcf764fe841c2794fb84}
}

@Article{Xue20163,
  Title                    = {Genericity in PAR platform},
  Author                   = {Xue, J.},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {3-14},
  Volume                   = {9559},

  Abstract                 = {The main purpose of genericity in high lever programming language is to increase efficiency of software development and the safety and reusability of software. Genericity is the useful tool to implement generative software development and MDA. However, few modelling language has genericity mechanism and the mechanisms in typical programming language, say C++, Java, etc., is not sufficiently and is not ease to use. The situation in PAR platform is quite different. PAR platform supports Model Driven Software Engineering (MDE) and consists of algorithm modelling language Radl, abstract program modelling language Apla, a set of rules for the model transformation and a set of automatic transformation tools of algorithm model and program model. One of the distinct features of the PAR platform is the agile genericity mechanisms. In PAR not only a value, a data type and a computing-action (including operator, method, function and procedure, etc.) can be generic parameter, an ADT can be generic parameter also. We present new concepts, say type region, action region and ADT region, which can increase the safety of generic software obviously. The paper will pay special attention to describe the syntax and semantics of the ADT parameter. The case study describes the method to develop generic program with ADT as parameter. © Springer International Publishing Switzerland 2016.},
  Author_keywords          = {Generic parameter; Generic programming; Genericity; PAR method; Platform},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-31220-0_1},
  Editor                   = {Duan Z., Liu S.},
  ISBN                     = {9783319312194},
  ISSN                     = {03029743},
  Keywords                 = {Computational linguistics; Computer programming; Computer programming languages; Computer simulation languages; Computer software reusability; Formal languages; Java programming language; Modeling languages; Object oriented programming; Reusability; Safety engineering; Semantics; Software architecture; Software design; Software engineering, Generic parameters; Generic programming; Genericity; Par methods; Platform, C++ (programming language)},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84962548242&doi=10.1007%2f978-3-319-31220-0_1&partnerID=40&md5=5d0100b267b27d72a239b7b025e0fc31}
}

@Article{Yagüe2016184,
  Title                    = {An exploratory study in communication in Agile Global Software Development},
  Author                   = {Yagüe, A. and Garbajosa, J. and Díaz, J. and González, E.},
  Journal                  = {Computer Standards and Interfaces},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {184-197},
  Volume                   = {48},

  Abstract                 = {Global software development (GSD) is gaining ever more relevance. Although communication is key in the exchange of information between team members, multi-site software development has introduced additional obstacles (different time-zones and cultures, IT infrastructure, etc.) and delays into the act of communication, which is already problematic. Communication is even more critical in the case of Agile Global Software Development (AGSD) in which communication plays a primary role. This paper reports an exploratory study of the effects of tools supporting communication in AGSD. More precisely, this paper analyses the perception of team members about communication infrastructures in AGSD. The research question to which this study responds concerns how development teams perceive the communication infrastructure while developing products using agile methodologies. Most previous studies have dealt with communication support from a highly technological media tool perspective. In this research work, instead, observations were obtained from three perspectives: communication among team members, communication of the status of the development process, and communication of the status of the progress of the product under development. It has been possible to show that team members perceive advantages to using media tools that make them feel in practice that teams are co-located, such as smartboards supported by efficient video-tools, and combining media tools with centralized repository tools, with information from the process development and product characteristics, that allow distributed teams to effectively share information about the status of the project/process/product during the development process in order to overcome some of the still existing problems in communication in AGSD. © 2016 Elsevier B.V.},
  Author_keywords          = {Agile; Exploratory research; Global Distributed Software Development; Infrastructure; Tools and technologies},
  Coden                    = {CSTIE},
  Document_type            = {Article},
  Doi                      = {10.1016/j.csi.2016.06.002},
  ISSN                     = {09205489},
  Keywords                 = {Software design, Agile; Distributed software development; Exploratory research; Infrastructure; Tools and technologies, Software engineering},
  Publisher                = {Elsevier B.V.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84981214832&doi=10.1016%2fj.csi.2016.06.002&partnerID=40&md5=661634df9b357f9b998292246bb27bbf}
}

@Conference{Yahya2014,
  Title                    = {Test driven development contribution in universities in producing quality software: A systematic review},
  Author                   = {Yahya, N. and Awang Abu Bakar, N.S.},
  Year                     = {2014},
  Note                     = {cited By 1},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Test driven development (TDD) is one of the Agile techniques adopted in education. TDD is an ideal approach to be taught in university due to its capability in producing quality software and at the same time teaching novice programmers to test and develop a product simultaneously. It helps novice programmers to think before they develop rather than using 'trial-and-error' approach in their project. However, based on the existing research, TDD contribution in producing a better quality and the perception among novice programmers towards it needs to be analyzed. This systematic review will identify the quality of a product produced by the students in university and also their perception towards TDD. © 2014 IEEE.},
  Art_number               = {7020666},
  Author_keywords          = {experiment; perception; quality; Test driven development; university},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICT4M.2014.7020666},
  ISBN                     = {9781479962426},
  Journal                  = {2014 the 5th International Conference on Information and Communication Technology for the Muslim World, ICT4M 2014},
  Keywords                 = {Computer programming; Experiments; Image quality; Sensory perception, Novice programmer; Quality software; Systematic Review; Test driven development; Trial and error; university, Software testing},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84946689405&doi=10.1109%2fICT4M.2014.7020666&partnerID=40&md5=02e863549f3bc0a835ea0f2f3ff5de56}
}

@Article{Yamamoto2015117,
  Title                    = {Quick-delivery, low-cost web development architecture born from field SE},
  Author                   = {Yamamoto, K. and Oike, T. and Tanaka, H. and Sato, D.},
  Journal                  = {NEC Technical Journal},
  Year                     = {2015},
  Note                     = {cited By 0},
  Number                   = {1},
  Pages                    = {117-120},
  Volume                   = {10},

  Abstract                 = {Web-based systems are required to track the extremely high speed of innovative web technologies and to handle a large variety of business systems The key to meeting these requirements does not lie in combining several pieces of software, but it is the "agility" of quick building and execution of solutions with a "light" configuration that can deal fexibly with change. This paper introduces the functions and expected effects of the web development framework "NeoSarf/F" and of the nfrastructure supporting it "NeoSarf/J," both of which are the fruits of our endeavors in the SE field.},
  Author_keywords          = {Agile development; Cost reduction; EC; Framework; NeoSarf/F; NeoSarf/J; Omni-channel; Productivity improvement; SI; SOA; Web development; Without owning it},
  Document_type            = {Article},
  ISSN                     = {18805884},
  Keywords                 = {Productivity; Silicon, Agile development; EC; Framework; NeoSarf/F; NeoSarf/J; Omni-channel; Productivity improvements; SOA; Web development; Without owning it, Cost reduction},
  Publisher                = {NEC Mediaproducts},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84951205200&partnerID=40&md5=5165935358c6e6964c9d48ecf8238e81}
}

@Article{Yaman2016344,
  Title                    = {Transitioning towards continuous experimentation in a large software product and service development organisation – A case study},
  Author                   = {Yaman, S.G. and Fagerholm, F. and Munezero, M. and Münch, J. and Aaltola, M. and Palmu, C. and Männistö, T.},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {344-359},
  Volume                   = {10027 LNCS},

  Abstract                 = {Context: Companies need capabilities to evaluate the customer value of software-intensive products and services. One way of systematically acquiring data on customer value is running continuous experiments as part of the overall development process. Objective: This paper investigates the first steps of transitioning towards continuous experimentation in a large company, including the challenges faced. Method: We conduct a single-case study using participant observation, interviews, and qualitative analysis of the collected data. Results: Results show that continuous experimentation was well received by the practitioners and practising experimentation helped them to enhance understanding of their product value and user needs. Although the complexities of a large multi-stakeholder business-to-business (B2B) environment presented several challenges such as inaccessible users, it was possible to address impediments and integrate an experiment in an ongoing development project. Conclusion: Developing the capability for continuous experimentation in large organisations is a learning process which can be supported by a systematic introduction approach with the guidance of experts. We gained experience by introducing the approach on a small scale in a large organisation, and one of the major steps for future work is to understand how this can be scaled up to the whole development organisation. © Springer International Publishing AG 2016.},
  Author_keywords          = {Agile software development; Case study; Continuous experimentation; Customer development; Customer involvement; Experiment-driven software development; Lean startup; Organisational transition; Product management},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-49094-6_22},
  Editor                   = {Amasaki S., Mikkonen T., Felderer M., Abrahamsson P., Duc A.N., Jedlitschka A.},
  ISBN                     = {9783319490939},
  ISSN                     = {03029743},
  Keywords                 = {Air navigation; Process engineering; Sales; Software engineering, Agile software development; Continuous experimentation; Customer development; Customer involvement; Organisational transitions; Product management, Software design},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84999048225&doi=10.1007%2f978-3-319-49094-6_22&partnerID=40&md5=3417eb5e881cd5099a01adc9e9451210}
}

@Article{Yamato20142959,
  Title                    = {Evaluation of agile software develeopment method for carrier cloud service platform development},
  Author                   = {Yamato, Y. and Shigematsu, N. and Miura, N.},
  Journal                  = {IEICE Transactions on Information and Systems},
  Year                     = {2014},
  Note                     = {cited By 8},
  Number                   = {11},
  Pages                    = {2959-2962},
  Volume                   = {E97D},

  Abstract                 = {In this paper, we evaluate a method of agile software development for carrier Cloud service platform development. It is generally said that agile software development is suitable for small-scale development, but we adopt it for the development which has more than 30 members. We attempted to enable automatic regression tests for each iteration when we adopted agile software development, so that we could start our Cloud service sufficiently fast. We compared and evaluated software reliability growth curves, regression test efforts and bug causes with waterfall development. © 2014 The Institute of Electronics, Information and Communication Engineers.},
  Author_keywords          = {Agile software development; Automatic test; Cloud computing; OpenStack},
  Coden                    = {ITISE},
  Document_type            = {Article},
  Doi                      = {10.1587/transinf.2014EDL8094},
  ISSN                     = {09168532},
  Keywords                 = {Cloud computing, Agile software development; Agile softwares; Cloud services; OpenStack, Automatic testing},
  Publisher                = {Maruzen Co., Ltd.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84909590743&doi=10.1587%2ftransinf.2014EDL8094&partnerID=40&md5=c8b763dd1529a95d2737c4abdac43d09}
}

@Article{Yannopoulos201322,
  Title                    = {Metadata, Domain Specific Languages and Visualisations as Internal Artifacts Driving an Agile Knowledge Engineering Methodology},
  Author                   = {Yannopoulos, A. and Christodoulou, Y. and Bountris, E. and Savrami, K. and Douza, M.},
  Journal                  = {Communications in Computer and Information Science},
  Year                     = {2013},
  Note                     = {cited By 1},
  Pages                    = {22-34},
  Volume                   = {390 CCIS},

  Abstract                 = {We introduce M(krDSL), an agile Knowledge Engineering methodology. It addresses the Knowledge Acquisition bottleneck. The point of differentiation of M(krDSL) from previous practice involves knowledge engineers and domain experts collaborating extremely closely: "The domain expert constructs the model. The model is independently useful as a communication tool." We introduce two additional layers of abstraction between human domain experts and operational software: a shared Knowledge Model of the domain, and Visualisation mockups/prototypes. Tools of the methodology include: DSLs and graphical representations; Qualitative analysis of the DSLs; Semantic Metadata for Test Driven Design; and analysis of concurrently evolving Visualisation output mockups/prototypes. In our experience, following this methodology helped us escape from situations where we had completely ceased to be able to make any modelling progress at all, while even at times when we were able to make easy progress in our KE tasks, M(krDSL) gave us a high degree of confidence in the correct prioritisation and correct results of our work. © Springer International Publishing Switzerland 2013.},
  Document_type            = {Conference Paper},
  Doi                      = {10.1007/978-3-319-03437-9_4},
  ISBN                     = {9783319034362},
  ISSN                     = {18650929},
  Keywords                 = {Computer programming languages; Knowledge engineering; Mockups; Research; Semantics; Visualization, Communication tools; Degree of confidence; Domain specific languages; Graphical representations; Knowledge acquisition bottlenecks; Knowledge engineering methodologies; Operational software; Qualitative analysis, Metadata},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904634769&doi=10.1007%2f978-3-319-03437-9_4&partnerID=40&md5=429646dc38eeab79fc1b83a19621ea8b}
}

@Article{Yazici201476,
  Title                    = {A new control plane for 5G network architecture with a case study on unified handoff, mobility, and routing management},
  Author                   = {Yazici, V. and Kozat, U.C. and Sunay, M.O.},
  Journal                  = {IEEE Communications Magazine},
  Year                     = {2014},
  Note                     = {cited By 40},
  Number                   = {11},
  Pages                    = {76-85},
  Volume                   = {52},

  Abstract                 = {The tremendous growth in wireless Internet use is showing no signs of slowing down. Existing cellular networks are starting to be insufficient in meeting this demand, in part due to their inflexible and expensive equipment as well as complex and non-agile control plane. Software-defined networking is emerging as a natural solution for next generation cellular networks as it enables further network function virtualization opportunities and network programmability. In this article, we advocate an all-SDN network architecture with hierarchical network control capabilities to allow for different grades of performance and complexity in offering core network services and provide service differentiation for 5G systems. As a showcase of this architecture, we introduce a unified approach to mobility, handoff, and routing management and offer connectivity management as a service (CMaaS). CMaaS is offered to application developers and over-the-top service providers to provide a range of options in protecting their flows against subscriber mobility at different price levels. © 2014 IEEE.},
  Art_number               = {6957146},
  Author_keywords          = {Computer architecture; Mobile computing; Mobile radio mobility management; Network architecture; Next generation networking; Radio access networks; Wireless communication},
  Coden                    = {ICOMD},
  Document_type            = {Article},
  Doi                      = {10.1109/MCOM.2014.6957146},
  ISSN                     = {01636804},
  Keywords                 = {Complex networks; Computer architecture; Hierarchical systems; Mobile computing; Mobile telecommunication systems; Next generation networks; Wireless networks; Wireless telecommunication systems, Connectivity management; Mobility management; Next generation cellular networks; Next generation networking; Radio access networks; Service differentiation; Software-defined networkings; Wireless communications, Network architecture},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84915751455&doi=10.1109%2fMCOM.2014.6957146&partnerID=40&md5=8491772cd7fd23e6178da3acf8118075}
}

@Article{Yilmaz2016237,
  Title                    = {A scrumban integrated gamification approach to guide software process improvement: A Turkish case study [Gamifikacijski pristup s integriranom Scrumban metodologijom u poboljšanju razvoja softvera: Turska analiza slučaja]},
  Author                   = {Yilmaz, M. and O’Connor, R.V.},
  Journal                  = {Tehnicki Vjesnik},
  Year                     = {2016},
  Note                     = {cited By 5},
  Number                   = {1},
  Pages                    = {237-245},
  Volume                   = {23},

  Abstract                 = {In recent years, there has been an increasing interest in tailoring agile development methodologies by combining different agile practices. The adoption of such a balancing approach requires a systematic customization of best practices among agile methodologies. This paper presents an empirical case study for adopting a hybrid Scrumban methodology with an integrated gamification approach, which was conducted in the context of a small-medium enterprise (SME). First, we conducted a focus group to better understand the potential inquiries that might have been useful to improve the development process. Secondly, we employed a cross-sectional survey approach to explore the company personnel’s opinions regarding the changes in the process. The survey data was collected from 30 practitioners who were working for the same project in a software development organization in a technology research centre. The descriptive statistics were calculated with paired sample t-tests being used to compare for integration process that contains three stages (i) initial stage, (ii) Scrumban stage, (iii) Scrumban with integrated Gamification stage. The preliminary results of this research support the idea that a set of game elements can be integrated with a hybrid software development methodology to enhance individual and organizational productivity. © 2016, Strojarski Facultet. All rights reserved.},
  Author_keywords          = {Game-based agile software development; Gamification; Scrumban; Software process improvement},
  Document_type            = {Article},
  Doi                      = {10.17559/TV-20140922220409},
  ISSN                     = {13303651},
  Keywords                 = {Process engineering; Software engineering; Surveys, Agile development methodologies; Agile software development; Cross-sectional surveys; Gamification; Scrumban; Software development methodologies; Software development organizations; Software Process Improvement, Software design},
  Publisher                = {Strojarski Facultet},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958976387&doi=10.17559%2fTV-20140922220409&partnerID=40&md5=7fd9717ca3870c0d8645d74780255740}
}

@Conference{Yim2014144,
  Title                    = {Norming to performing: Failure analysis and deployment automation of big data software developed by highly iterative models},
  Author                   = {Yim, K.S.},
  Year                     = {2014},
  Note                     = {cited By 3},
  Pages                    = {144-155},
  Publisher                = {IEEE Computer Society},

  Abstract                 = {We observe many interesting failure characteristics from Big Data software developed and released using some kinds of highly iterative development models (e.g., Agile). ~16% of failures occur due to faults in software deployments (e.g., Packaging and pushing to production). Our analysis shows that many such production outages are at least partially due to some human errors rooted in the high frequency and complexity of software deployments. ~51% of the observed human errors (e.g., Tran-Scription, education, and communication error types) are avoidable through automation. We thus develop a fault-tolerant automation framework to make it efficient to automate end-to-end software deployment procedures. We apply the framework to two Big Data products. Our case studies show the complexity of the deployment procedures of multi-homed Big Data applications and help us to study the effectiveness of the validation and verification techniques for user-provided automation programs. We analyze the production failures of the two products again after the automation. Our experimental data shows how the automation and the associated procedure improvements reduce the deployment faults and overall failure rate, and improve the feature launch velocity. Automation facilitates more formal, procedure-driven software engineering practices which not only reduce the manual work and human-oriented, avoidable production outages but also help engineers to better understand overall software engineering procedures, making them more auditable, predictable, reliable, and efficient. We discuss two novel metrics to evaluate progress in mitigating human errors and the conditions indicating points to start such transition from owner-driven deployment practice. © 2014 IEEE.},
  Art_number               = {6982622},
  Author_keywords          = {Automation; failure classification; human error; incremental validation; iterative development; software deployment},
  Coden                    = {PSSRF},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ISSRE.2014.31},
  ISSN                     = {10719458},
  Journal                  = {Proceedings - International Symposium on Software Reliability Engineering, ISSRE},
  Keywords                 = {Application programs; Automation; Errors; Failure analysis; Iterative methods; Safety engineering; Software engineering; Software reliability, Failure classification; Human errors; Incremental validation; Iterative development; Software deployment, Big data},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84928683403&doi=10.1109%2fISSRE.2014.31&partnerID=40&md5=770658a02bcf6ff6db543b4d689e94da}
}

@Conference{Yin2013145,
  Title                    = {The research of resources authorization system in the workflow system},
  Author                   = {Yin, X. and Zheng, H.},
  Year                     = {2013},
  Note                     = {cited By 0},
  Pages                    = {145-148},

  Abstract                 = {Security is a very important concern in workflow system. According to business processes involved in large Numbers of business resources and the dynamic changing access object, give an agile authorization model. Namely according to the characteristics of resources in the workflow system, divide resources into function resources and process resources, and make the participants of system to organization model abstraction. Decouple the user and the permission by introducing the role as the carrier of access. The model is based on role to realize resources authorization of process, which is a kind of extensible authorization model and ensure that the business resources are not accessed illegally. This is a good way to realize the integrity of business data. © 2013 IEEE.},
  Art_number               = {6615275},
  Author_keywords          = {authorization; role; workflow},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICSESS.2013.6615275},
  ISBN                     = {9781467349970},
  ISSN                     = {23270586},
  Journal                  = {Proceedings of the IEEE International Conference on Software Engineering and Service Sciences, ICSESS},
  Keywords                 = {authorization; Authorization model; Authorization systems; Business resources; Organization model; Process resources; role; workflow, Electrical engineering; Engineering; Industrial engineering, Software engineering},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84890033636&doi=10.1109%2fICSESS.2013.6615275&partnerID=40&md5=fba61b8ecdf1a3922977b0794f57b20d}
}

@Conference{Young2015936,
  Title                    = {Developing Sensoria: An audio frequency analyzer and visualizer built with open source software},
  Author                   = {Young, W. and Pei, T. and Kim, H.},
  Year                     = {2015},
  Note                     = {cited By 0},
  Pages                    = {936-940},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {We developed Sensoria, an audio analysis and visualization application through a re-use oriented software engineering approach in a combination of Extreme Programming. The application was developed by adopting Open Source Software (OSS) libraries from the Processing project. Sensoria allows an end-user to participate in the creation of dynamic visualizations that respond to input audio as interpreted in a variety of ways. The user can create and manipulate visual components corresponding to the input audio, and also save or load visualization sessions. Sensoria can be further extended to add more features as it is highly modularized and documented, and its source code is open and publicly available. © 2015 IEEE.},
  Art_number               = {7250384},
  Author_keywords          = {audio analysis; Open source software; Processing; visualization},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/ICCSE.2015.7250384},
  ISBN                     = {9781479965984},
  Journal                  = {10th International Conference on Computer Science and Education, ICCSE 2015},
  Keywords                 = {Application programs; Computer software; Computer software reusability; Education computing; Engineering education; Flow visualization; Open systems; Processing; Software engineering; Visualization, Audio analysis; Audio frequencies; Dynamic visualization; EXtreme Programming; Modularized; Source codes; Visual components; Visualization application, Open source software},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84957900132&doi=10.1109%2fICCSE.2015.7250384&partnerID=40&md5=d3bcd3d967273376c01d8e21326087ad}
}

@Book{Yu201353,
  Title                    = {Model-driven applications: Using model-driven mechanism to bridge the gap between business and IT},
  Author                   = {Yu, T.-Y.},
  Publisher                = {IGI Global},
  Year                     = {2013},
  Note                     = {cited By 0},

  Abstract                 = {How to bridge the gap between business and Information Technology (IT) has always been a critical issue for both the developers and IT managers. The individualized, differentiated demands by different customers and situations, the constantly changing in both business and IT are great challenges to the applications for enterprises. In this chapter, the authors respectively discuss the left side (computer) in software engineering, with Object-Orientation (OO), Model-Driven Engineering (MDE), Domain- Driven Development (DDD), Agile, etc., and the right side (the business) in Enterprise Engineering (EE) with Enterprise Modeling (EM), and Enterprise Architecture (EA) of the gap. It is shown there are some fundamental problems, such as the transforming barrier between analysis and design model, the entanglement of business change and development process, and the limitation to the enterprise engineering approaches such as EA by IT. Our solution is concentrated on the middle, the inevitable model as a mediator between human, computer, and the real world. The authors introduce Model-Driven Application (MDApp), which is based on Model-Driven Mechanism (MDM), operated on the evolutionary model of the target thing at runtime; it is able to largely avoid the transforming barrier and remove the entanglement. Thus, the architecture for Enterprise Model Driven Application (EMDA) is emerged, which is able to strongly support EE and adapts to the business changing at runtime. © 2014 by IGI Global. All rights reserved.},
  Document_type            = {Book Chapter},
  Doi                      = {10.4018/978-1-4666-4494-6.ch003},
  ISBN                     = {9781466644953; 146664494X; 9781466644946},
  Journal                  = {Advances and Applications in Model-Driven Engineering},
  Pages                    = {53-72},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84945127976&doi=10.4018%2f978-1-4666-4494-6.ch003&partnerID=40&md5=e3fce1e465ec41d8e42a73431a75a77d}
}

@Article{Yu2014282,
  Title                    = {Spectrum engineering in flexible grid data center optical networks},
  Author                   = {Yu, X. and Zhao, Y. and Zhang, J. and Wang, X. and Wang, J. and Zhang, J.},
  Journal                  = {Optical Switching and Networking},
  Year                     = {2014},
  Note                     = {cited By 5},
  Number                   = {PART 3},
  Pages                    = {282-288},
  Volume                   = {14},

  Abstract                 = {Data centers provide a volume of computation and storage resources for cloud-based services, and generate very huge traffic in data center networks. Usually, data centers are connected by ultra-long-haul WDM optical transport networks due to its advantages, such as high bandwidth, low latency, and low energy consumption. However, since the rigid bandwidth and coarse granularity, it shows inefficient spectrum utilization and inflexible accommodation of various types of traffic. Based on OFDM, a novel architecture named flexible grid optical network has been proposed, and becomes a promising technology in data center interconnections. In flexible grid optical networks, the assignment and management of spectrum resources are more flexible, and agile spectrum control and management strategies are needed. In this paper, we introduce the concept of Spectrum Engineering, which could be used to maximize spectral efficiency in flexible grid optical networks. Spectrum Defragmentation, as one of the most important aspect in Spectrum Engineering, is demonstrated by OpenFlow in flexible grid optical networks. Experimental results are reported and verify the feasibility of Spectrum Engineering. © 2014 Elsevier B.V.},
  Author_keywords          = {Data center networks; Defragmentation; Flexible grid; Software defined networking; Spectrum engineering},
  Document_type            = {Article},
  Doi                      = {10.1016/j.osn.2014.05.016},
  ISSN                     = {15734277},
  Keywords                 = {Bandwidth; Distributed computer systems; Energy utilization; Low power electronics; Orthogonal frequency division multiplexing; Signal systems, Data center networks; De-fragmentation; Flexible grids; Low energy consumption; Optical transport networks; Software-defined networkings; Spectral efficiencies; Spectrum defragmentation, Digital storage},
  Publisher                = {Elsevier},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84906781988&doi=10.1016%2fj.osn.2014.05.016&partnerID=40&md5=fc49cc23e10dd867053fe602a208c62a}
}

@Article{Yu2017,
  Title                    = {A source-controlled data center network model},
  Author                   = {Yu, Y. and Liang, M. and Wang, Z.},
  Journal                  = {PLoS ONE},
  Year                     = {2017},
  Note                     = {cited By 0},
  Number                   = {3},
  Volume                   = {12},

  Abstract                 = {The construction of data center network by applying SDN technology has become a hot research topic. The SDN architecture has innovatively separated the control plane from the data plane which makes the network more software-oriented and agile. Moreover, it provides virtual multi-tenancy, effective scheduling resources and centralized control strategies to meet the demand for cloud computing data center. However, the explosion of network information is facing severe challenges for SDN controller. The flow storage and lookup mechanisms based on TCAM device have led to the restriction of scalability, high cost and energy consumption. In view of this, a source-controlled data center network (SCDCN) model is proposed herein. The SCDCN model applies a new type of source routing address named the vector address (VA) as the packet-switching label. The VA completely defines the communication path and the data forwarding process can be finished solely relying on VA. There are four advantages in the SCDCN architecture. 1) The model adopts hierarchical multi-controllers and abstracts large-scale data center network into some small network domains that has solved the restriction for the processing ability of single controller and reduced the computational complexity. 2) Vector switches (VS) developed in the core network no longer apply TCAM for table storage and lookup that has significantly cut down the cost and complexity for switches. Meanwhile, the problem of scalability can be solved effectively. 3) The SCDCN model simplifies the establishment process for new flows and there is no need to download flow tables to VS. The amount of control signaling consumed when establishing new flows can be significantly decreased. 4) We design the VS on the NetFPGA platform. The statistical results show that the hardware resource consumption in a VS is about 27% of that in an OFS. © 2017 Yu et al. This is an open access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.},
  Art_number               = {e0173442},
  Coden                    = {POLNC},
  Document_type            = {Article},
  Doi                      = {10.1371/journal.pone.0173442},
  ISSN                     = {19326203},
  Keywords                 = {cloud computing; control strategy; energy consumption; explosion; model; software},
  Publisher                = {Public Library of Science},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85015968667&doi=10.1371%2fjournal.pone.0173442&partnerID=40&md5=2c7821221bbd56368ec17fb93d08479c}
}

@Conference{Yusuf20161,
  Title                    = {A review on integration of usability and agile methods in software development practice},
  Author                   = {Yusuf, N. and Marafa, K.A.},
  Year                     = {2016},
  Editor                   = {Osho O., Babalola G.A., Zubairu H., Salami H.O., Onumanyi A., Ikuesan R.A., Abdulhamid S.M., Ahmad S.M., Mikail O., Okwori M.},
  Note                     = {cited By 0},
  Pages                    = {1-4},
  Publisher                = {CEUR-WS},
  Volume                   = {1830},

  Abstract                 = {Agile and usability integration is a multi-disciplinary research area that comes across the interest of many researchers. Many approaches have been proposed in many research papers with a view to provide better integration. In this paper, we provide an insight into some of the integration approaches that were investigated. Based on the review of some related literature we found that scrum and Extreme programming are the major agile methods adopted. Also communication between teams still needs an improvement. We recommend further studies on on-going projects and the ways to improve communication between teams in different geographical areas.},
  Author_keywords          = {Agile; Software development; Software practices; Usability},
  Document_type            = {Conference Paper},
  ISSN                     = {16130073},
  Journal                  = {CEUR Workshop Proceedings},
  Keywords                 = {Integration; Software engineering, Agile; EXtreme Programming; Geographical area; Integration approach; Multi-disciplinary research; Software development practices; Software practices; Usability, Software design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85019446051&partnerID=40&md5=0d27f5f3811c4ce2651ccc30d11c2c8d}
}

@Article{Zaminkar2016566,
  Title                    = {Customization of rational unified process (RUP) methodology for safety-critical systems},
  Author                   = {Zaminkar, M. and Reshadinezhad, M.R.},
  Journal                  = {International Review on Computers and Software},
  Year                     = {2016},
  Note                     = {cited By 0},
  Number                   = {6},
  Pages                    = {566-572},
  Volume                   = {11},

  Abstract                 = {A model is presented here for the customization of RUP methodology in the critical safety systems. The RUP methodology is studied and applied as a reference for the customization. A comprehensive study for the research and the identification of the critical safety systems is conducted. The expansion of critical safety systems and their necessary involvement in different phases and stages regarding product development is essential. There exists much methodology to expand safe software for safety-critical systems based on objective orientation, which can be used in customization of RUP. The Eclipse Process framework is introduced for the customization studied in the presented paper. © 2016 Praise Worthy Prize S.r.l. - All rights reserved.},
  Author_keywords          = {Critical safety systems; Customization; IEC 61508 standard; Safety software; Sensitive-safety},
  Document_type            = {Article},
  Doi                      = {10.15866/irecos.v11i6.9184},
  ISSN                     = {18286003},
  Publisher                = {Praise Worthy Prize},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85003689229&doi=10.15866%2firecos.v11i6.9184&partnerID=40&md5=842cc08ad24df08de35f987ec14d35a6}
}

@Article{Zäschke201554,
  Title                    = {Improving conceptual data models through iterative development},
  Author                   = {Zäschke, T. and Leone, S. and Gmünder, T. and Norrie, M.C.},
  Journal                  = {Data and Knowledge Engineering},
  Year                     = {2015},
  Note                     = {cited By 0},
  Pages                    = {54-73},
  Volume                   = {98},

  Abstract                 = {Agile methods promote iterative development with short cycles, where user feedback from the previous iteration is used to refactor and improve the current version. To facilitate agile development of information systems, this paper offers three contributions. First, we introduce the concept of evolvability as a model quality characteristic. Evolvability refers to the expected implications of future model refactorings, both in terms of complexity of the required database evolution algorithm and in terms of the expected volume of data to evolve. Second, we propose extending the agile development cycle by using database profiling information to suggest adaptations to the conceptual model to improve performance. For every software release, the database profiler identifies and analyses navigational access patterns, and proposes model optimisations based on data characteristics, access patterns and a cost-benefit model. Based on an experimental evaluation of the profiler we discuss why the quality of conceptual models can generally benefit from profiling and how performance measurements convey semantic information. Third, we discuss the flow of semantic information when developing and using information systems. Beyond these contributions, we also make a case for using object databases in agile development environments. However, most of the presented concepts are also applicable to other database paradigms. © 2015 Elsevier B.V. All rights reserved.},
  Author_keywords          = {Agile development; Conceptual models; Database profiling; Evolvability; Model quality; Object database; Semantic verification},
  Coden                    = {DKENE},
  Document_type            = {Article},
  Doi                      = {10.1016/j.datak.2015.07.005},
  ISSN                     = {0169023X},
  Keywords                 = {Cost effectiveness; Database systems; Evolutionary algorithms; Information systems; Iterative methods; Object-oriented databases; Semantics, Agile development; Conceptual model; Evolvability; Model qualities; Object database; Semantic verification, Information use},
  Publisher                = {Elsevier},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84942825193&doi=10.1016%2fj.datak.2015.07.005&partnerID=40&md5=b3ad4b00b54134260b181cca68861787}
}

@Article{Zhao2016,
  Title                    = {A Comprehensive Bottom-Tracking Method for Sidescan Sonar Image Influenced by Complicated Measuring Environment},
  Author                   = {Zhao, J. and Wang, X. and Zhang, H. and Wang, A.},
  Journal                  = {IEEE Journal of Oceanic Engineering},
  Year                     = {2016},
  Note                     = {cited By 0; Article in Press},

  Abstract                 = {The estimations of water column depth and the towfish altitude and the measurements of the target's location and shape all depend on the accuracy and reliability of bottom tracking of a sidescan sonar (SSS) waterfall image. Traditionally, the threshold method has often been adopted, but it is difficult to achieve an ideal bottom-tracking result due to contamination of the water column image in complicated measuring environments such as suspended solids and strong absorption sediments. Besides, it is also time consuming and easy to be influenced by operators' experience because the threshold values used need to be set segmentally. To track the bottom accurately and efficiently, first, this paper studies the threshold method, the last peak method, the assumption of seabed continuous variation, and the symmetry assumption. Then, a comprehensive bottom-tracking method is proposed. To validate the proposed method, an SSS experiment was conducted in the Bohai Sea of China. The bottom tracking for the SSS images was carried out automatically by the developed software. Comparing the port and starboard towfish altitudes tracked for all SSS images, the proposed method achieves ±0.19 m of the standard deviation referenced to water depth at the points of measurement. Furthermore, taking the integration of the sounding data, the tidal level, and the towfish depth as reference, the proposed method obtains ±0.17 m of the standard deviation. These parameters show that the proposed method has high accuracy in bottom tracking. Finally, this method is further discussed in the applications, and the results show that it has better performance than the traditional threshold method where the SSS waterfall image is influenced under complicated measurement environment. A shortcoming induced by the SSS imaging mechanism is also found that this method may be invalid when high seabed targets lie at two sides of towfish nadir, which can be solved by increasing the towfish altitude.},
  Coden                    = {IJOED},
  Document_type            = {Article in Press},
  Doi                      = {10.1109/JOE.2016.2602642},
  ISSN                     = {03649059},
  Keywords                 = {Sonar; Statistics; Suspended sediments; Water absorption, Imaging mechanism; Measurements of; Side scan sonar; Sidescan sonar images; Standard deviation; Strong absorptions; Suspended solids; Threshold methods, Target tracking},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84994214631&doi=10.1109%2fJOE.2016.2602642&partnerID=40&md5=b2e89ad1fe67f338b2c19f1e7b9d57e3}
}

@Article{Zheng20131,
  Title                    = {Tunable multiband ferroelectric devices for reconfigurable RF-frontends},
  Author                   = {Zheng, Y.},
  Journal                  = {Lecture Notes in Electrical Engineering},
  Year                     = {2013},
  Note                     = {cited By 0},
  Pages                    = {1-161},
  Volume                   = {228},

  Abstract                 = {This book focuses on the enabling ferroelectric device technology in reconfigurable RF frontends for frequency-agile, software-defined and cognitive radios, which are expected to cope with the demands of multiband and multi-standard operation. The ferroelectric devices are an emerging technology based on the nonlinear solid state ferroelectric materials. Such materials e.g. Barium-Strontium-Titanate BaxSr1?xTiO3, or namely BST, exhibit a variable permittivity dependent on external electric field. The high permittivity, adequate tunability and dielectric loss as well as low leakage current allow the implementation in compact passive tunable devices. BST can also be realized in several technologies such as ceramic thick-film and crystal thin-film, which can be flexibly adapted to applications. The investigation ranges from micro processing technologies to the development of novel devices. Within interdisciplinary cooperations, the materials are synthesized, processed and characterized. Micro processing technologies for device realization are revised. Several novel devices are addressed. By introducing thin conductive layer in the middle of two stacked BST thin-films, the unavoidable generation of acoustic resonance due to the electrostriction is considerably suppressed. When a highly resistive alumina oxide film is used to engineer the band gap on the BST surface, the resulted controllable electron injection leads to the innovative programmable bi-stable high frequency capacitors. The kernel frontend parts, including multiband tunable antenna, tunable matching network and tunable substrate integrated waveguide filter are addressed at the end. The challenging trend of antennas towards compactness with wider spectrum coverage is coped with several tunable resonant modes of the antennas with integrated BST varactors. A prototype optimized for frequency division duplex services covers 1.47 GHz to 1.76GHz with a variable distance from 38 MHz to 181MHz between up- and down-link channels. The environmental impact and frequency dependence of antennas can be compensated by tunable matching networks. This work demonstrates an integrated ferroelectric thick-film tunable matching network covering 1.8 GHz to 2.1 GHz. It exhibits an insertion loss between 0.86 dB and 0.98 dB, in a 3mmx3mm multilayer package. At last a compact bandpass filter is enabled by an evanescent mode substrate integrated waveguide cavity in ferroelectric ceramics, integrated with tunable complementary split ring resonator scatterers and tunable matching networks. A compact demonstrator covers 2.95 GHz to 3.57GHz with a 3 dB fractional bandwidth of up to 5.4% and a comparatively low insertion loss between 3.3 dB and 2.6 dB. © 2013 Springer-Verlag Berlin Heidelberg.},
  Document_type            = {Article},
  Doi                      = {10.1007/978-3-642-35780-0_1},
  ISBN                     = {9783642357794},
  ISSN                     = {18761100},
  Keywords                 = {Compact bandpass filters; Complementary split ring resonators; Emerging technologies; External electric field; Frequency-division duplexes; Interdisciplinary cooperations; Thin conductive layers; Tunable matching networks, Alumina; Bandpass filters; Conductive films; Dielectric losses; Environmental impact; Ferroelectric ceramics; Ferroelectric devices; Ferroelectric materials; Microwave circuits; Oxide films; Permittivity; Substrate integrated waveguides; Technology, Antennas},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84884294380&doi=10.1007%2f978-3-642-35780-0_1&partnerID=40&md5=5ce5b1b4990c85750d50f33a46f632a2}
}

@Article{Zhou2016146,
  Title                    = {Network slicing as a service: Enabling enterprises' own software-defined cellular networks},
  Author                   = {Zhou, X. and Li, R. and Chen, T. and Zhang, H.},
  Journal                  = {IEEE Communications Magazine},
  Year                     = {2016},
  Note                     = {cited By 4},
  Number                   = {7},
  Pages                    = {146-153},
  Volume                   = {54},

  Abstract                 = {With the blossoming of network functions virtualization and software-defined networks, networks are becoming more and more agile with features like resilience, programmability, and open interfaces, which help operators to launch a network or service with more flexibility and shorter time to market. Recently, the concept of network slicing has been proposed to facilitate the building of a dedicated and customized logical network with virtualized resources. In this article, we introduce the concept of hierarchical NSaaS, helping operators to offer customized end-to-end cellular networks as a service. Moreover, the service orchestration and service level agreement mapping for quality assurance are introduced to illustrate the architecture of service management across different levels of service models. Finally, we illustrate the process of network slicing as a service within operators by typical examples. With network slicing as a service, we believe that the supporting system will transform itself to a production system by merging the operation and business domains, and enabling operators to build network slices for vertical industries more agilely. © 1979-2012 IEEE.},
  Art_number               = {7509393},
  Coden                    = {ICOMD},
  Document_type            = {Article},
  Doi                      = {10.1109/MCOM.2016.7509393},
  ISSN                     = {01636804},
  Keywords                 = {Mobile telecommunication systems; Quality assurance; Quality of service, Cellular network; Network functions; Production system; Service Level Agreements; Service management; Service orchestration; Supporting systems; Virtualized resources, Wireless networks},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84979255156&doi=10.1109%2fMCOM.2016.7509393&partnerID=40&md5=f558be3baac6bc75d507785c05709058}
}

@Conference{Zilora2015115,
  Title                    = {Industry-emulated projects in the classroom},
  Author                   = {Zilora, S.J.},
  Year                     = {2015},
  Note                     = {cited By 0},
  Pages                    = {115-119},
  Publisher                = {Association for Computing Machinery, Inc},

  Abstract                 = {Since the "2008 Curriculum Guidelines for Undergraduate Degree Programs in Information Technology" report was published, it has been acknowledged that capstone courses play an important role in the Information Technology curriculum. As we move into the future, we need to reconsider what should go into a capstone course. The Curriculum Guidelines report discussed multicultural in terms of disciplines, but among employers today, multicultural often means multinational. Further, beginning with the Standish Group's CHAOS report and continuing with the introduction of Agile project development, industry has wrestled with dynamic software development environments. Balancing the need to deliver projects on time, on budget, and on spec with changing requirements and resources can be an overwhelming task for project managers and IT professionals. This paper describes a new type of capstone course that attempts to expose students to the realities of project development in the 21st century and equip the students to deal with them.},
  Author_keywords          = {Capstone; Course; Curriculum; Industry; Information technology; International; Project; Team},
  Document_type            = {Conference Paper},
  Doi                      = {10.1145/2808006.2808029},
  ISBN                     = {9781450338356},
  Journal                  = {SIGITE 2015 - Proceedings of the 16th Annual ACM Conference on Information Technology Education},
  Keywords                 = {Budget control; Education; Engineering education; Industry; Information technology; Software design; Software engineering; Students; Teaching, Capstone; Course; International; Project; Team, Curricula},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84960977864&doi=10.1145%2f2808006.2808029&partnerID=40&md5=411a61ef16eff3ad42fa5cc670cb00ea}
}

@Article{Zimmermann20161,
  Title                    = {Microservices tenets: Agile approach to service development and deployment},
  Author                   = {Zimmermann, O.},
  Journal                  = {Computer Science - Research and Development},
  Year                     = {2016},
  Note                     = {cited By 1; Article in Press},
  Pages                    = {1-10},

  Abstract                 = {Some microservices proponents claim that microservices form a new architectural style; in contrast, advocates of service-oriented architecture (SOA) argue that microservices merely are an implementation approach to SOA. This overview and vision paper first reviews popular introductions to microservices to identify microservices tenets. It then compares two microservices definitions and contrasts them with SOA principles and patterns. This analysis confirms that microservices indeed can be seen as a development- and deployment-level variant of SOA; such microservices implementations have the potential to overcome the deficiencies of earlier approaches to SOA realizations by employing modern software engineering paradigms and Web technologies such as domain-driven design, RESTful HTTP, IDEAL cloud application architectures, polyglot persistence, lightweight containers, a continuous DevOps approach to service delivery, and comprehensive but lean fault management. However, these paradigms and technologies also cause a number of additional design choices to be made and create new options for many “distribution classics” type of architectural decisions. As a result, the cognitive load for (micro-)services architects increases, as well as the design, testing and maintenance efforts that are required to benefit from an adoption of microservices. To initiate and frame the buildup of architectural knowledge supporting microservices projects, this paper compiles related practitioner questions; it also derives research topics from these questions. The paper concludes with a summarizing position statement: microservices constitute one particular implementation approach to SOA (service development and deployment). © 2016 Springer-Verlag Berlin Heidelberg},
  Author_keywords          = {Architectural principles; Architectural styles; DevOps; Domain-driven design; IDEAL cloud application architectures; Loose coupling; Messaging; Patterns; REST; Service-oriented computing; SOA; Systems management},
  Document_type            = {Article in Press},
  Doi                      = {10.1007/s00450-016-0337-0},
  ISSN                     = {18652034},
  Keywords                 = {Application programs; Architectural design; Architecture; Computer architecture; Distributed computer systems; HTTP; Information services; Load testing; Software architecture; Software engineering, Architectural principles; Architectural style; Cloud applications; DevOps; Domain-driven designs; Loose couplings; Messaging; Patterns; REST; Service oriented computing; Systems management, Service oriented architecture (SOA)},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84995489225&doi=10.1007%2fs00450-016-0337-0&partnerID=40&md5=8cff530e6a4ce6138c436370f5418ceb}
}

@Conference{Zimmermann201585,
  Title                    = {Architectural Decision Guidance Across Projects-Problem Space Modeling, Decision Backlog Management and Cloud Computing Knowledge},
  Author                   = {Zimmermann, O. and Wegmann, L. and Koziolek, H. and Goldschmidt, T.},
  Year                     = {2015},
  Editor                   = {Bass L., Lago P., Kruchten P.},
  Note                     = {cited By 3},
  Pages                    = {85-94},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Architectural Knowledge Management (AKM) has been a major topic in software architecture research since 2004. Open AKM problems include an effective, seamless transition from reusable knowledge found in patterns books and technology blogs to project-specific decision guidance and an efficient, practical approach to knowledge application and maintenance. We extended our previous work with concepts for problem space modeling, focusing on reusable knowledge, as well as solution space management, focusing on project-level decisions. We implemented these concepts in AD Mentor, an extension of Sparx Enterprise Architect. AD Mentor features rapid problem space modeling, UML model linkage, question-option-criteria diagram support, meta-information for model tailoring, as well as decision backlog management. We validated AD Mentor by modeling and applying 85 cloud application design decisions and 75 workflow management decisions, creating one problem and three sample solution spaces covering control system architectures, and obtaining user feedback on tool and model content. © 2015 IEEE.},
  Art_number               = {7158507},
  Author_keywords          = {agile practices; architectural decisions; architectural synthesis; cloud computing; knowledge management; patterns; UML},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/WICSA.2015.29},
  ISBN                     = {9781479919222},
  Journal                  = {Proceedings - 12th Working IEEE/IFIP Conference on Software Architecture, WICSA 2015},
  Keywords                 = {Air navigation; Cloud computing; Computer software reusability; Decision support systems; Knowledge management; Software architecture; Unified Modeling Language; Work simplification, Agile practices; Architectural decision; Architectural synthesis; patterns; UML, Decision making},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84943245524&doi=10.1109%2fWICSA.2015.29&partnerID=40&md5=1c8e58bdabb5ec128fec4b15f2658227}
}

@Conference{Zorzo2013455,
  Title                    = {Using scrum to teach software engineering: A case study},
  Author                   = {Zorzo, S.D. and De Ponte, L. and Lucrédio, D.},
  Year                     = {2013},
  Note                     = {cited By 5},
  Pages                    = {455-461},

  Abstract                 = {The diffusion of agile methodologies in software development makes them more mature for corporative environment. However, teaching agile methodologies on the academic environment poses many difficulties and limitations. This paper describes a case study where an innovative approach for teaching software development technologies was adopted. In this approach, the entire course was designed to fit Scrum's principles, so that the students could apply them as they were learning it. Also, the course's main project was to be developed in sprints, as proposed in Scrum. After almost two years using this approach, in this paper we describe our experience and perform a critical analysis. We observed some positive points, such as the practical nature of learning by example, and a better preparation of the students regarding agile methodologies. As negative points, we highlight the impossibility of delivering complete products in earlier sprints, and some interaction and collaboration difficulties. The main conclusion of this study is that, for the approach to work in our academic scenario, a modified version of the Scrum methodology was necessary. © 2013 IEEE.},
  Art_number               = {6684866},
  Author_keywords          = {Academic teaching; Agile methodologies; SCRUM; Software engineering},
  Coden                    = {PFECD},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/FIE.2013.6684866},
  ISBN                     = {9781467352611},
  ISSN                     = {15394565},
  Journal                  = {Proceedings - Frontiers in Education Conference, FIE},
  Keywords                 = {Academic environment; Agile Methodologies; Development technology; Innovative approaches; Learning by examples; SCRUM; Scrum methodologies; Teaching software, Software design; Software engineering; Teaching, Students},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893216412&doi=10.1109%2fFIE.2013.6684866&partnerID=40&md5=70d608891ccef9b8af44a5ac2ab0176f}
}

@Article{Zughoul20132005,
  Title                    = {Factors effecting migration traditional projects to enterprise resource planning system (ERP)},
  Author                   = {Zughoul, B. and Hussin, B.},
  Journal                  = {International Review on Computers and Software},
  Year                     = {2013},
  Note                     = {cited By 2},
  Number                   = {8},
  Pages                    = {2005-2012},
  Volume                   = {8},

  Abstract                 = {Traditional software projects designed and developed in house to fit a specific or small set of functions. It's typically much smaller than enterprise system, however most of these developments also required more time, high cost to develop, not integrated, unclear customer requirements, and the most importantly working version is available during the implementation phase. On the other hand, many companies regard and rely on Enterprise Resource Planning (ERP) information systems to manage and process their business requirements; in spite of its expensive cost, high risk, large, and complex, due to its implementation that requires tight timetable, business process reengineering, and many changes. The aim of this model is to seek solution for software companies to develop traditional projects with ERP characteristics to be more adaptive with environment change based on business process concepts. The proposed model is developed based on integration among three structures for software development models such as Waterfall, Iterative, and XP model. The proposed model combines main features of these approaches and adaptive with unique features of ERP. This development of proposed model is characterized by looking to company as enterprise architecture surrounded by change management and business development components. By using the proposed model, it's expected that organization can reduce risk, failure, and improve the probability of project success. The proposed model was evaluated and validated within Jordanian software companies using questionnaire survey method. The results shown a practical guidance for the software companies and consultants to migrate or develop the traditional projects to ERP system. © 2013 Praise Worthy Prize S.r.l. - All rights reserved.},
  Author_keywords          = {Enterprise resource planning; Information system; Iterative implementation; System development methodology; Traditional software project},
  Document_type            = {Article},
  ISSN                     = {18286003},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84885895406&partnerID=40&md5=1b0e6087d69fa65cb3185945c82f2f4e}
}

@Conference{Zuñiga-Prieto201452,
  Title                    = {Towards a model-driven dynamic architecture reconfiguration process for cloud services integration},
  Author                   = {Zuñiga-Prieto, M. and Gonzalez-Huerta, J. and Abrahao, S. and Insfran, E.},
  Year                     = {2014},
  Editor                   = {Schaetz B., Pierantonio A., Tamzalit D.},
  Note                     = {cited By 3},
  Pages                    = {52-61},
  Publisher                = {CEUR-WS},
  Volume                   = {1331},

  Abstract                 = {Cloud computing is a paradigm that is transforming the computing industry and is receiving more attention from the research community. The incremental deployment of cloud services is particularly important in agile development of cloud services, where successive cloud service increments must be integrated into existing cloud service architectures. This requires dynamic reconfiguration of software architectures, especially in cloud environments where services cannot be stopped in order to apply reconfiguration changes. This paper presents a model-driven dynamic architecture reconfiguration process to support the integration of cloud services. Models are used to represent high-level architecture reconfiguration operations as well as adaptation patterns. Adaptation patterns allow us to describe reconfiguration operations independently of a specific cloud platform technology. On the other hand, model transformations are used: i) to support compatibility checking of increments; ii) to generate software adaptors that solve incompatibilities between architectures; and iii) to generate reconfiguration plans specific of cloud provider, that include reconfiguration actions to be applied on cloud service instances at runtime. The proposed process is illustrated with a dealer network system development example, where cloud services are deployed in an incremental way.},
  Author_keywords          = {Cloud computing; Dynamic reconfiguration; Model based evolution; Model driven development; Model transformations},
  Document_type            = {Conference Paper},
  ISSN                     = {16130073},
  Journal                  = {CEUR Workshop Proceedings},
  Keywords                 = {Cloud computing; Computational linguistics; Distributed database systems; Dynamic models; Network architecture; Web services, Dynamic re-configuration; High level architecture; Model driven development; Model transformation; Model-based OPC; Reconfiguration actions; Reconfiguration operations; Reconfiguration process, Model checking},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84923259718&partnerID=40&md5=03717dbb15e0174535fb0aef7773f8c2}
}

@Conference{Zúñiga-Prieto201616,
  Title                    = {Architecture Description Language for Incremental Integration of Cloud Services Architectures},
  Author                   = {Zúñiga-Prieto, M. and Insfran, E. and Abrahão, S.},
  Year                     = {2016},
  Note                     = {cited By 1},
  Pages                    = {16-23},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {Service-oriented architecture (SOA) together with agile development practices have shown a largely favorable strategy for organizations looking for improving time-to-market and business agility. SOA is an architectural style for building software applications using coarse-grained services which are bind together through orchestration or choreography mechanisms. Agile development methods promote early and continuous increments which means that successive cloud service increments need to be integrated into an existing cloud services architecture. This paper presents an Architecture Description Language (ADL), as an extension of the SoaML language, to specify how an increment architecture will be integrated into an existing cloud services architecture. In addition, we introduce a support tool that uses this specification to automatically generate: i) the new services choreography; and ii) the deployment and needed reconfiguration scripts that change service invocations according to the integration specification. The use of this ADL is shown in the Microsoft Azure © platform using an excerpt of a reservation system for a travel operator as an illustrative example. © 2016 IEEE.},
  Art_number               = {7780132},
  Author_keywords          = {architecture description language; architecture reconfiguration; cloud services architecture; incremental integration; service-oriented architecture; SoaML},
  Document_type            = {Conference Paper},
  Doi                      = {10.1109/MESOCA.2016.10},
  ISBN                     = {9781509038527},
  Journal                  = {Proceedings - 2016 IEEE 10th International Symposium on the Maintenance and Evolution of Service-Oriented and Cloud-Based Environments, MESOCA 2016},
  Keywords                 = {Application programs; Computer architecture; Distributed database systems; Information services; Integration; Reservation systems; Specifications; Web services; Windows operating system, Agile development methods; Architectural style; Architecture description languages; Building softwares; Cloud services; Integration specifications; Service invocation; SoaML, Service oriented architecture (SOA)},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85010452220&doi=10.1109%2fMESOCA.2016.10&partnerID=40&md5=f4618172c83057be6c94f0c5ba56322e}
}

@Article{Zykov201627,
  Title                    = {Software product lifecycles: What can be optimized and how?},
  Author                   = {Zykov, S.V.},
  Journal                  = {Smart Innovation, Systems and Technologies},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {27-50},
  Volume                   = {61},

  Abstract                 = {The chapter discusses lifecycle models for software development in more detail. These include build-and-fix, waterfall, incremental, object-oriented and spiral. We present a more detailed description of the lifecycle models application for software development. We compare benefits and shortcomings of the models discussed. We confirm that there is no “silver bullet”, i.e. a universal lifecycle model equally applicable to any software product. Consequently, lifecycle model choice is dependent upon product size and scope; each project requires a unique combination of features. In crisis, we recommend to combine prototyping with the other models that we discussed in order to achieve a common understanding of the key product features and to reduce project risks. The lifecycle model choice determines project economics, time to market, product quality and overall project success. However, the product success essentially depends on human factors, which include common vision of the critical product functions, transparent communication and feedback. We analyze applicability of the lifecycle models to large-scale, mission-critical software systems, which is essential in crisis. Finally, we introduce a methodology, which includes a spiral-like lifecycle and a set of formal models and visual tools for software product development. The methodology helps to optimize the software product lifecycle, which is mission-critical in crisis. The methodology is applicable to large-scale, complex software products for heterogeneous environments. © Springer International Publishing Switzerland 2016.},
  Author_keywords          = {Lifecycle model; Software development methodology; Software lifecycle},
  Document_type            = {Book Chapter},
  Doi                      = {10.1007/978-3-319-42966-3_2},
  ISSN                     = {21903018},
  Keywords                 = {Application programs; Formal methods; Object oriented programming; Software design; Software engineering, Heterogeneous environments; Life cycle model; Mission critical softwares; Product functions; Software development methodologies; Software life cycles; Software product development; Software products, Life cycle},
  Publisher                = {Springer Science and Business Media Deutschland GmbH},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85007196095&doi=10.1007%2f978-3-319-42966-3_2&partnerID=40&md5=6f0000d59083bd1f2191fa089e6f9c13}
}

@Conference{Øvad2014397,
  Title                    = {Agile user experience},
  Author                   = {Øvad, T.},
  Year                     = {2014},
  Editor                   = {Blashki K., Xiao Y.},
  Note                     = {cited By 1},
  Pages                    = {397-401},
  Publisher                = {IADIS},

  Abstract                 = {This paper describes a PhD project, exploring the opportunities of integrating the processes and methods of user experience design and agile software development, particular in the development of medical devices. First I briefly introduce the background for the study and the different attempts having been done in the past to make this integration. Secondly, one research hypothesis and five research questions are formulated and I propose different methodologies to investigate these questions. Thirdly, I describe the initial work done, consisting of interviews and a literature review. Finally, the future work of the thesis is introduced. Copyright © 2014 IADIS Press All rights reserved.},
  Author_keywords          = {Agile user experience; PhD thesis abstract},
  Document_type            = {Conference Paper},
  ISBN                     = {9789898533227},
  Journal                  = {Proceedings of the International Conferences on Interfaces and Human Computer Interaction 2014, Game and Entertainment Technologies 2014 and Computer Graphics, Visualization, Computer Vision and Image Processing 2014 - Part of the Multi Conference on Computer Science and Information Systems, MCCSIS 2014},
  Keywords                 = {Biomedical equipment; Computer games; Computer graphics; Computer vision; Image processing; Software design; Software engineering, Agile software development; Literature reviews; Medical Devices; PhD project; PhD thesis; Research questions; User experience; User experience design, Human computer interaction},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84929346630&partnerID=40&md5=d1c4ef8caf0acbf661feee75843f7ace}
}

@Article{NoAuthor20161,
  Title                    = {5th International Conference on Design, User Experience, and Usability, DUXU 2016 and held as Part of 18th International Conference on Human-Computer Interaction, HCI International 2016},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {1-532},
  Volume                   = {9746},

  Abstract                 = {The proceedings contain 49 papers. The special focus in this conference is on Design Thinking, Design Philosophy, User Experience Design Methods, Usability and User Experience Evaluation Methods. The topics include: Embed design thinking in co-design for rapid innovation of design solutions; towards a spiral UX design model; an integrated framework for design thinking and agile methods for digital transformation; an interactive model of creative design behavior with 3d optical technology; developing high-performing teams; using the power of empathy to deliver delightful enterprise experiences; applying matterology in internet product design; user experience design of user generated content products; enhancing user experience design with an integrated storytelling method; design thinking framework for project portfolio management; an integrated framework for formulating vision, strategy and implementation; user interface and interaction design in future auto-mobility; a diary study approach to understand the design process; usability engineering of agile software project management tools; exploring the role of adults in participatory design for children on the autism spectrum; usability pattern identification through heuristic walkthroughs; user methods and approaches to design cognitive systems; preliminary studies on exploring autistic sensory perception with sensory ethnography and biosensors; evaluating the expressiveness of MoLICC to model the HCI of collaborative systems; scaffolding a methodology for situating cognitive technology within everyday contexts and extracting insights from experience designers to enhance user experience design.},
  Document_type            = {Conference Review},
  Editor                   = {Marcus A.},
  ISBN                     = {9783319404080},
  ISSN                     = {03029743},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84977557473&partnerID=40&md5=325254154f929fbfd196e456b5da3e1e}
}

@Article{NoAuthor20161,
  Title                    = {17th International Conference on Product-Focused Software Process Improvement, PROFES 2016},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {1-776},
  Volume                   = {10027 LNCS},

  Abstract                 = {The proceedings contain 65 papers. The special focus in this conference is on Early Phases in Software Engineering, Organizational Models, Architecture, Methods, Tools, Verification, Validation, Process Improvement, Requirements, Repository Mining and Emerging Research Topics. The topics include: The relationship between software process, context and outcome; eight paths of innovations in a lean startup manner; on the distinction of functional and quality requirements in practice; a survey on software release planning models; a power perspective on software ecosystem partnerships; supporting management of hybrid OSS Communnities - a stakeholder analysis approach; evaluating a GUI Development tool for internet of things and android; problems and solutions in mobile application testing; on the need for a new generation of code review tools; on the role of software quality management in software process improvement; design of project management capabilities; a multiple case study on the architect’s role in scrum; exploring norms in agile software teams; forces that prevent agile adoption in the automotive domain; exploring IoT User dimensions; an industrial case study on measuring the quality of the requirements scoping process; quality assurance of requirements artifacts in practice; commodity eats innovation for breakfast; a process mining tool for embedded system development; log file analyzing in intelligent transportation systems development; workshop-based corporate foresight process; internationally distributed software development; assessing the behavior of software analysis tools and software development in the Post-PC Era.},
  Document_type            = {Conference Review},
  Editor                   = {Amasaki S., Mikkonen T., Felderer M., Abrahamsson P., Duc A.N., Jedlitschka A.},
  ISBN                     = {9783319490939},
  ISSN                     = {03029743},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84998865557&partnerID=40&md5=d16bb527a301ba7734e65ad21062aadc}
}

@Conference{NoAuthor2014316,
  Title                    = {BMSD 2014 - Proceedings of the 4th International Symposium on Business Modeling and Software Design},
  Year                     = {2014},
  Editor                   = {Shishkov B.},
  Note                     = {cited By 0},
  Pages                    = {316},
  Publisher                = {SciTePress},

  Abstract                 = {The proceedings contain 37 papers. The topics discussed include: power-modelling - toward a more versatile approach to creating and using conceptual models; improving computer-support for collaborative business model design and exploration; agile enterprise architecture management - an analysis on the application of agile principles; modelling capability and affordance as properties of human/machine resource systems; is the value concept a valuable concept for information systems?; modelling information systems using Nomis - a practical view of its application and its insights to business processes; actors based competences supporting enterprise modeling changes; towards simulation of business processes - transforming BPMN models to enterprise dynamics models; a component abstraction for localized, composable, machine manipulable enterprise specification; and applying business process modeling tools in enterprise resource planning system replacements - a case study.},
  Document_type            = {Conference Review},
  ISBN                     = {9789897580321},
  Journal                  = {BMSD 2014 - Proceedings of the 4th International Symposium on Business Modeling and Software Design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84926482942&partnerID=40&md5=61c64581c94e53e2bea7478c04a235be}
}

@Article{NoAuthor20161,
  Title                    = {6th International Workshop on Soft Computing Applications, SOFA 2014},
  Journal                  = {Advances in Intelligent Systems and Computing},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {1-1381},
  Volume                   = {357},

  Abstract                 = {The proceedings contain 58 papers. The special focus in this conference is on Soft Computing Techniques for Time Series Analysis, Soft Computing and Fuzy Logic in Biometrics. The topics include: DuPont financial ratio analysis using logical aggregation; testing biorthogonal wavelets on magnetocardiogram processing algorithms; modeling and simulation of hearing with cochlear implants; on the long-range dependence property of the electrical signals collected in cavitation field; establishing PNN-based iris code to identity fuzzy membership for consistent enrollment; best practices in reporting iris recognition results; data classification based on fuzzy-RBF networks; new method of iris recognition using dual tree complex wavelet transform; recognition of pedestrian active events by robust to noises boost algorithm; optic disc recognition method for retinal images; fast fingerprint orientation field estimation incorporating general purpose GPU; emotion recognition from images under varying illumination conditions; expert control for the coupled tanks greenhouse; cooperative task scheduler for entry level microcontrollers; aspects of forecasting for the European automotive industry; software platform modelling for utility, time and personal management; innovative computerized techniques for individual management optimization; implementing the agile marketing audit using the a-marketing balance scorecard system; optimizing processes among companies using decision support technologies; competency training in wind power projects; opportunity analysis of change requests in automotive projects; device for automatic control of the Petersen coil and voltage and current signals processing in functioning of nonlinear loads.},
  Document_type            = {Conference Review},
  Editor                   = {Balas V.E., Kovacevic B., Jain L.C.},
  ISBN                     = {9783319184159},
  ISSN                     = {21945357},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84951965226&partnerID=40&md5=3db20e25062235ba763c01c4008f0a34}
}

@Article{NoAuthor20151,
  Title                    = {13th International Conference on Software Engineering and Formal Methods, SEFM 2015 Collocated with ATSE, HOFM, MoKMaSD, and VERY SCART},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2015},
  Note                     = {cited By 0},
  Pages                    = {1-324},
  Volume                   = {9509},

  Abstract                 = {The proceedings contain 25 papers. The special focus in this conference is on ATSE 2015 and HOFM 2015. The topics include: Learning-based testing of distributed microservice architectures; the synergy between user experience design and software testing; combining time and concurrency in model-based statistical testing of embedded real-time systems; towards supporting agile combinatorial test design; behavioral types for component-based development of cyber-physical systems; refactoring proofs with tactician; exploring the role of logic and formal methods in information systems education; type-based enforcement of programming guidelines; clustering formulation using constraint optimization; towards a boosted route planner using individual mobility models; design of a business-to-government information sharing architecture using business rules; beyond the domain of business process management; on integrating social and sensor networks for emergency management; quantitative modelling of residential smart grids; attributed probabilistic p systems and their application to the modelling of social interactions in primates; probabilistic modelling and analysis of a fish population; a tool for the modelling and simulation of ecological systems based on grid systems; distributed coordinated adaptation of cloud-based applications; fuzzy description logics for component selection in software design; towards adapting choreography-based service compositions through enterprise integration patterns; an experimental evaluation on runtime verification of self-adaptive systems in the presence of uncertain transition probabilities; towards automatic decision support for bike-sharing system design and automated synthesis of protocol converters with BALM-II.},
  Document_type            = {Conference Review},
  Editor                   = {Bianculli D., Calinescu R., Rumpe B.},
  ISBN                     = {9783662492239},
  ISSN                     = {03029743},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84956639853&partnerID=40&md5=5eea1afa0d8f9dbce3ada7b80e0cb565}
}

@Article{NoAuthor20141,
  Title                    = {15th International Conference on Enterprise Information Systems, ICEIS 2013},
  Journal                  = {Lecture Notes in Business Information Processing},
  Year                     = {2014},
  Note                     = {cited By 0},
  Pages                    = {1-541},
  Volume                   = {190},

  Abstract                 = {The proceedings contain 40 papers. The special focus in this conference is on Databases, Information Systems Integration, Artificial Intelligence, Decision Support Systems, Information Systems Analysis and Specification. The topics include: An evaluation of multi-way joins for relational database systems; applying semantic web tools and techniques to the textile traceability; estimating sufficient sample sizes for approximate decision support queries; a data-driven prediction framework for analyzing and monitoring business process performances; an overview of experimental studies on software inspection process; optimizing power, heating, and cooling capacity on a decision-guided energy investment framework; business intelligence for improving supply chain risk management; Bayesian prediction of fault-proneness of agile-developed object-oriented system; foundation for fine-grained security and DRM control based on a service call graph context identification; capturing semiotic and social factors of organizational evolution; the change impact analysis in BPM based software applications; reengineering of object-oriented software into aspect-oriented ones supported by class models; re-learning of business process models from legacy system using incremental process mining; an analysis of the usage of a micro blogging system; cloud-based collaborative business services provision; an architecture for health information exchange in pervasive healthcare environment; dealing with usability in model-driven development method; self-service classroom capture generating interactive multivideo objects; from gaps to transformation paths in enterprise architecture planning; an automated architectural evaluation approach based on metadata and code analysis and blueprint of a semantic business process-aware enterprise information architecture.},
  Document_type            = {Conference Review},
  Editor                   = {Cordeiro J., Filipe J., Cordeiro J., Filipe J., Maciaszek L.A., Hammoudi S., Maciaszek L.A.},
  ISBN                     = {9783319094915},
  ISSN                     = {18651348},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84928949450&partnerID=40&md5=4d1d78bc36b9210b624478c7ab9256f0}
}

@Article{NoAuthor20151,
  Title                    = {9th International Conference on Evaluation of Novel Approaches to Software Engineering, ENASE 2014},
  Journal                  = {Communications in Computer and Information Science},
  Year                     = {2015},
  Note                     = {cited By 0},
  Pages                    = {1-168},
  Volume                   = {551},

  Abstract                 = {The proceedings contain 11 papers. The special focus in this conference is on Evaluation of Novel Approaches to Software Engineering. The topics include: Reducing the level of complexity of working with model transformations; learning from the current status of agile adoption; using a domain specific language for lightweight model-driven development; a passive approach for protocols; experiences of use of a multi-domain tool for collaborative software engineering tasks; taking seriously software projects inception through games; natural language generation approach for automated generation of test cases from logical specification of requirements; visualization, simulation and validation for cyber-virtual systems and mobile application estimate the design phase.},
  Document_type            = {Conference Review},
  Editor                   = {Filipe J., Maciaszek L.A.},
  ISBN                     = {9783319272177},
  ISSN                     = {18650929},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84951924586&partnerID=40&md5=ec41cf279ce9688ce249dd8d6324e7da}
}

@Conference{NoAuthor2016,
  Title                    = {ENASE 2016 - Proceedings of the 11th International Conference on Evaluation of Novel Software Approaches to Software Engineering},
  Year                     = {2016},
  Editor                   = {Filipe J., Maciaszek L., Maciaszek L.},
  Note                     = {cited By 0},
  Publisher                = {SciTePress},

  Abstract                 = {The proceedings contain 45 papers. The topics discussed include: are suggestions of coupled file changes interesting?; cloud computing adoption, cost-benefit relationship and strategies for selecting providers: a systematic review; semi-automatic generation of OrBAC security rules for cooperative organizations using model-driven engineering; preventing hospital acquired infections through a workflow-based cyber-physical system; breaking the boundaries of meta models and preventing information loss in model-driven software product lines; extending UML/MARTE-SAM for integrating adaptation mechanisms in scheduling view; a methodology for model-based development and safety analysis of transport systems; RA2DL-pool: new useful solution to handle security of reconfigurable embedded systems; towards semantical DSMLs for complex or cyber-physical systems; evolution taxonomy for software architecture evolution; a novel R-UML-B approach for modeling and code generation of reconfigurable control systems; evaluating a novel agile requirements engineering method: a case study; and source and test code size prediction - a comparison between use case metrics and objective class points.},
  Document_type            = {Conference Review},
  ISBN                     = {9789897581892},
  Journal                  = {ENASE 2016 - Proceedings of the 11th International Conference on Evaluation of Novel Software Approaches to Software Engineering},
  Page_count               = {417},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84979584033&partnerID=40&md5=acd152619f550e4e0810ab865905ee47}
}

@Conference{NoAuthor2016,
  Title                    = {CEUR Workshop Proceedings},
  Year                     = {2016},
  Editor                   = {Fogen K., Mens T., Tahir A., Sunetnanta T., Moonen L., Lichter H., Anwar T., Yamashita A., Sureka A.},
  Note                     = {cited By 0},
  Publisher                = {CEUR-WS},
  Volume                   = {1771},

  Abstract                 = {The proceedings contain 15 papers. The topics discussed include: local variables with compound names and comments as signs of fault-prone java methods; sustainability profiling of long-living software systems; towards improved adoption: effectiveness of research tools in the real world; predicting quality of service (QoS) parameters using extreme learning machines with various kernel methods; improving recall in code search by indexing similar codes under proper terms; code coverage analysis of combinatorial testing; trying to increase the mature use of agile practices by group development psychology training - an experiment; when, why and for whom do practitioners detect technical debt? an experience report; using analytics to quantify interest of self-admitted technical debt; rework effort estimation of self-admitted technical debt; minimizing refactoring effort through prioritization of classes based on historical, architectural and code smell information; co-existence of the 'technical debt' and 'software legacy' concepts; and perspectives on managing technical debt: a transition point and roadmap from Dagstuhl.},
  Document_type            = {Conference Review},
  ISSN                     = {16130073},
  Journal                  = {CEUR Workshop Proceedings},
  Page_count               = {87},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85009460737&partnerID=40&md5=9c0c24c1147959ecd73ea1c3a780588b}
}

@Conference{NoAuthor2016,
  Title                    = {Procedia Computer Science},
  Year                     = {2016},
  Editor                   = {Ginters E., Kohlhammer J.},
  Note                     = {cited By 0},
  Publisher                = {Elsevier B.V.},
  Volume                   = {104},

  Abstract                 = {The proceedings contain 79 papers. The topics discussed include: variable contents of enterprise models; the role of social media in sports communication management: an analysis of polish top league teams strategy; service-oriented architecture of intelligent environment for historical records studies; method for adaptation and implementation of agile project management methodology; ecosystem provisioning services automated valuation process model for sustainable land management; decision making for the software architecture structure based on the criteria importance theory; introducing lean canvas model adaptation in the scrum software testing; an approach for development of reusable function library for automation of continuous processes; towards NoSQL-based data warehouse solutions; remote evaluation of software engineering competences; information technology transfer model as a bridge between science and business sector; intelligent collaborative educational systems and knowledge representation; modelling of knowledge sharing for the provision of sustainable cooperation between adult educational institutions and enterprises; iterative method for solving a system of linear equations; personalized planning of study course structure using concept maps and their analysis; and machines that dream: a new challenge in behavioral-basic robotics.},
  Document_type            = {Conference Review},
  ISSN                     = {18770509},
  Journal                  = {Procedia Computer Science},
  Page_count               = {597},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85016051889&partnerID=40&md5=b1d5c7c1c1666693adf73033b131fbf8}
}

@Article{NoAuthor20151,
  Title                    = {12th International Conference on Smart Homes and Health Telematics, ICOST 2014},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2015},
  Note                     = {cited By 0},
  Pages                    = {1-184},
  Volume                   = {8456},

  Abstract                 = {The proceedings contain 39 papers. The special focus in this conference is on Design and usability, Assistive and sentient environments, Cognitive technology, Activity recognition, Context and situation awareness and Health IT. The topics include: Designing a multi-sided health and wellbeing platform; design and usability of a smart home sensor data user interface for a clinical and research audience; an innovative way of increasing adoption of social media in older people; agile development for the creation of proper human-computer interfaces for the elderly; testing real-time in-home fall alerts with embedded depth video hyperlink; using smart, interactive tutorials in elderly software development; actimetric tele-surveillance and tailored to the signal data compression; monitoring patient recovery using wireless physiotherapy devices; comparison of two prompting methods in guiding people with traumatic brain injury in cooking tasks; a collaborative patient-carer interface for generating home based rules for self-management; measuring the impact of ICTs on the quality of life of ageing people with mild dementia; implementation in community settings; regression analysis for gesture recognition using RFID technology; improving activity recognition in smart environments with ontological modeling; remote monitoring using smartphone based plantar pressure sensors: unimodal and multimodal activity detection; ontology based context fusion for behavior analysis and prediction; quantifying semantic proximity between contexts; emotion aware system for the elderly; partial sharing of health documents in cloud and biomedical ontology matching as a service.},
  Document_type            = {Conference Review},
  Editor                   = {Helal S., Gu T., Mokhtari M., Bodine C., Mokhtari M., Mokhtari M.},
  ISBN                     = {9783319144238},
  ISSN                     = {03029743},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84928580567&partnerID=40&md5=72007af7f753bc2457183900be1265c4}
}

@Article{NoAuthor20141,
  Title                    = {13th International Conference on Perspectives in Business Informatics Research, BIR 2014},
  Journal                  = {Lecture Notes in Business Information Processing},
  Year                     = {2014},
  Note                     = {cited By 0},
  Pages                    = {1-389},
  Volume                   = {194},

  Abstract                 = {The proceedings contain 27 papers. The special focus in this conference is on Business Informatics Research. The topics include: IT outsourcing relationships in Swedish public organizations; on the situated nature of designing knowledge work supports systems; performance modeling for collaborative enterprises; developing IT-enabled dynamic capabilities; proactive recommendation system for m-tourism application; analysis of agile software development from the knowledge transformation perspective; supporting introduction of social interaction in business processes; contract design and uncertainty in software development projects; assessing aspect oriented approaches in business process management; discovering metric temporal business constraints from event logs; identifying best practices in business process management using fuzzy analytical hierarchy process; customer oriented management of changes in ERP systems; evaluating the application of interactive classification system in university study course comparison; extending a metamodel for formalization of data warehouse requirements and combining work process models to identify training needs in the prehospital care process.},
  Document_type            = {Conference Review},
  Editor                   = {Johansson B., Andersson B., Holmberg N.},
  ISBN                     = {9783319113692},
  ISSN                     = {18651348},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84920540161&partnerID=40&md5=b9e75d02343fb295aef71858c02e81f6}
}

@Conference{NoAuthor2014,
  Title                    = {ICSOFT-PT 2014 - Proceedings of the 9th International Conference on Software Paradigm Trends},
  Year                     = {2014},
  Editor                   = {Mellor S., Cardoso J., Cardoso J., Holzinger A., Cordeiro J., Cordeiro J., van Sinderen M.},
  Note                     = {cited By 0},
  Publisher                = {SciTePress},

  Abstract                 = {The proceedings contain 21 papers. The topics discussed include: propagating model refactorings to graph transformation rules; an LTL semantics of business workflows with recovery; real-time reconfigurable scheduling of aperiodic OS tasks on multiprocessor systems; the impact of agile approaches on software quality attributes - an empirical study; developing user interfaces with EMF Parsley; modeling micro services in email-marketing - concepts, implementation and experiences; a meta-modeling approach for extending the instructional design semantics of learning management systems; model weaving and pedagogy - mapping abstraction levels in instructional design languages; automated quantitative attributes prediction from architectural description language; semantic resource adaptation based on generic ontology models; and traditional vs agile development - a comparison using chaos theory.},
  Document_type            = {Conference Review},
  ISBN                     = {9789897580376},
  Journal                  = {ICSOFT-PT 2014 - Proceedings of the 9th International Conference on Software Paradigm Trends},
  Page_count               = {200},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84920528472&partnerID=40&md5=90c0c687bbe23a2912b2d6223a3d27c1}
}

@Article{NoAuthor20151,
  Title                    = {9th IFIP WG 11.8 World Conference on Information Security Education across the Curriculum, WISE, 2015},
  Journal                  = {IFIP Advances in Information and Communication Technology},
  Year                     = {2015},
  Note                     = {cited By 0},
  Pages                    = {1-158},
  Volume                   = {453},

  Abstract                 = {The proceedings contain 14 papers. The special focus in this conference is on Innovative Methods, Software Security Education, Tools and Applications for Teaching and Syllabus Design. The topics include: Realism in teaching cybersecurity research; assurance cases as a didactic tool for information security; cognitive task analysis based training for cyber situation awareness; a cyber security multi agency collaboration for rapid response that uses agile methods on an education infrastructure; cybersecurity through secure software development; increasing engagement and faculty adoption using enhanced secure coding modules for lower-level programming courses; the use of software design patterns to teach secure software design; learn to spot phishing URLs with the android NoPhish app; an innovative approach in digital forensic education and training; on experience of using distance learning technologies for teaching cryptology; reflections on the ethical content of the it honours program project module; professional competencies level assessment for training of masters in information security and history of cryptography in syllabus on information security training.},
  Document_type            = {Conference Review},
  Editor                   = {Miloslavskaya N., Bishop M., Theocharidou M.},
  ISBN                     = {9783319184999},
  ISSN                     = {18684238},
  Publisher                = {Springer New York LLC},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84942636632&partnerID=40&md5=2e42c6e07e4017a9482314b40dcfc148}
}

@Conference{NoAuthor2014300,
  Title                    = {Proceedings - 14th International Conference on Computational Science and Its Applications, ICCSA 2014},
  Year                     = {2014},
  Editor                   = {Misra S., Rocha A.M.A.C., Murgante B., Gervasi O., Taniar D., Apduhan B.O., Misra S.},
  Note                     = {cited By 0},
  Pages                    = {300},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {The proceedings contain 49 papers. The topics discussed include: modularization of logical software architectures for implementation with multiple teams; certified transformation for static single assignment of SPMD programs; an evaluation of domain-specific language technologies for code generation; an empirical study on the estimation of size and complexity of software applications with function points analysis; using Jpcap API to monitor, analyze, and report network traffic for DDoS attacks; how the pharmaceutical industry and agile software development methods conflict: a systematic literature review; software process practices in small software companies in Botswana; a methodology for GUI layer redefinition through virtualization and computer vision; towards a resilient hybrid IaaS cloud with ontology and agents; and a cost modeling system for cloud computing.},
  Document_type            = {Conference Review},
  ISBN                     = {9781479942640},
  Journal                  = {Proceedings - 14th International Conference on Computational Science and Its Applications, ICCSA 2014},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84920000716&partnerID=40&md5=861480a596fc06b4be0b9933bb91670e}
}

@Article{NoAuthor20141,
  Title                    = {IFIP WG 8.6 International Conference on Transfer and Diffusion of IT, TDIT 2014},
  Journal                  = {IFIP Advances in Information and Communication Technology},
  Year                     = {2014},
  Note                     = {cited By 0},
  Pages                    = {1-362},
  Volume                   = {429},

  Abstract                 = {The proceedings contain 25 papers. The special focus in this conference is on Creating Value and Creating Value through Software Development. The topics include: The challenges of creativity in software organizations; a design science study using the theory of planned behavior; digital innovation and social dilemmas; generating sustainable value from open data in a sharing society; the interaction effect of complimentary assets on relationship between information and communication technology and public health outcomes; designing project management for global software development; creating business value through agile project management and information systems development; motivation and knowledge sharing through social media within Danish organizations; a literature review on cloud computing adoption issues in enterprises; rethinking the roles of actors in the mobility of healthcare services; a mechanism-based explanation of the institutionalization of semantic technologies in the financial industry; past, present, and future contributions to academia and practice; entrepreneurial value creation in the cloud; human interaction in the regulatory of telecommunications infrastructure deployment in South Africa; a theoretical framework for examining it governance in living laboratory ecosystems; examining contextual factors and individual value dimensions of healthcare providers intention to adopt electronic health technologies in developing countries and design experiences from a user-focused innovation.},
  Document_type            = {Conference Review},
  Editor                   = {Nielsen P.A., Bergvall-Kareborn B., Nielsen P.A., Bergvall-Kareborn B.},
  ISBN                     = {9783662434581; 9783662434581},
  ISSN                     = {18684238},
  Publisher                = {Springer New York LLC},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84954527554&partnerID=40&md5=580029394b17b69fac3e448121329723}
}

@Article{NoAuthor20151,
  Title                    = {16th International Conference on Product-Focused Software Process Improvement, PROFES 2015},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2015},
  Note                     = {cited By 0},
  Pages                    = {1-614},
  Volume                   = {9459},

  Abstract                 = {The proceedings contain 46 papers. The special focus in this conference is on Lessons Learned from Industry-Research Collaborations. The topics include: Strategic ecosystem management; an iterative approach to quantifying feature value; challenges of structured reuse adoption; a qualitative study based on software development maturity models implementations in brazil; model-driven development for multi-platform mobile applications; a method to select indicators for it services; requirement prioritization with quantitative data - a case study; a method for requirements capture and specification based on disciplined use cases and screen mockups; a case study on artefact-based re improvement in practice; artefacts in agile software development; artifact-based synchronization of globally distributed software development in practice; ontology-based identification of commonalities and variabilities among safety processes; early product design in startups; an empirical study on memory bias situations and correction strategies in ERP effort estimation; applying a verification protocol to evaluate the accuracy of functional size measurement procedures; investigating functional and code size measures for mobile applications; defining continuous planning through a multiple-case study; studying the effect of UML-based models on source-code comprehensibility; source code driven decomposition of object-oriented legacy systems; on the use of safety certification practices in autonomous field robot software development; a process for risk-based test strategy development and its industrial evaluation; focused inspections to support defect detection in automation systems engineering environments and a field study on the elicitation and classification of defects for defect models.},
  Document_type            = {Conference Review},
  Editor                   = {Oivo M., Abrahamsson P., Corral L., Russo B.},
  ISBN                     = {9783319268439},
  ISSN                     = {03029743},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84952313529&partnerID=40&md5=ff3bc3c2e028511346a817c8e9a1be65}
}

@Conference{NoAuthor2016,
  Title                    = {Proceedings CSERC 2016 - Computer Science Education Research Conference},
  Year                     = {2016},
  Editor                   = {Pieterse V., van Eekelen M., van Eekelen M.},
  Note                     = {cited By 0},
  Publisher                = {Association for Computing Machinery, Inc},

  Abstract                 = {The proceedings contain 5 papers. The topics discussed include: A workshop for integrating UML modeling and agile development in the classroom; listening to the affected: student views after starting a 4th year module in data warehousing; career goals of software development professionals and software development students; e-tutoring support for undergraduate students learning computer programming at the university of South Africa; and evaluating plagiarism detection software for introductory programming assignments.},
  Document_type            = {Conference Review},
  ISBN                     = {9781450344920},
  Journal                  = {Proceedings CSERC 2016 - Computer Science Education Research Conference},
  Page_count               = {50},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85002245185&partnerID=40&md5=6362585102bcab2fbb0879e8f507fedf}
}

@Conference{NoAuthor2015,
  Title                    = {Proceedings of the 8th IADIS International Conference Information Systems 2015, IS 2015},
  Year                     = {2015},
  Editor                   = {Powell P., Nunes M.B., Isaias P., Rodrigues L.},
  Note                     = {cited By 0},
  Publisher                = {IADIS},

  Abstract                 = {The proceedings contain 38 papers. The topics discussed include: agile research in information systems field: analysis from knowledge transformation perspective; challenges to effective collaboration in cross-cultural virtual teams; mobile payment adoption - findings from Chinese taxi company; the influence of generativity on value creation - a study of digitized products; challenges and opportunities with information system support for healthcare processes - a healthcare practitioner perspective; a theoretical approach and practice using information technology as a support in the management of stakeholders; a risk management model for service-oriented architecture: an application in the implementation of SOA services; technology enhanced learning of modeling skills in the field of information systems; employee turnover: an analysis of Brazilian software development professionals; and evaluating the use of mobile sensors in improving the user model in mobile recommender systems.},
  Document_type            = {Conference Review},
  ISBN                     = {9789898533333},
  Journal                  = {Proceedings of the 8th IADIS International Conference Information Systems 2015, IS 2015},
  Page_count               = {282},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84944089071&partnerID=40&md5=161046b46cbb0a1b57b84bca1a37daaf}
}

@Conference{NoAuthor2013,
  Title                    = {CEUR Workshop Proceedings},
  Year                     = {2013},
  Editor                   = {Regev G., Pigneur Y., Pelechano V.},
  Note                     = {cited By 0},
  Publisher                = {CEUR-WS},
  Volume                   = {1017},

  Abstract                 = {The proceedings contain 7 papers. The topics discussed include: agile in public administration: oxymoron or reality? an experience report; ontology-based data access: the experience at the Italian department of treasury; transformation of IT systems socially acceptable, efficient, successful; applying model-driven paradigm: CALIPSOneo experience; application of intelligent service bus in a rampup production context; the relationship between IS research and industry. what do they learn from one another?; and successful empirical research in software testing with industry.},
  Document_type            = {Conference Review},
  ISSN                     = {16130073},
  Journal                  = {CEUR Workshop Proceedings},
  Page_count               = {43},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84925259887&partnerID=40&md5=93a22026c71f5b13c450368b2cd7cb1a}
}

@Conference{NoAuthor2016,
  Title                    = {CEUR Workshop Proceedings},
  Year                     = {2016},
  Editor                   = {Rinderle-Ma S., Pastor O., Wieringa R.},
  Note                     = {cited By 0},
  Publisher                = {CEUR-WS},
  Volume                   = {1603},

  Abstract                 = {The proceedings contain 9 papers. The topics discussed include: risk-flows continuous risk-driven workflows and decision support in information security management systems; integrating shared cyber security information into information security risk management; enabling compositional deadlock checking of component compositions with partial bindings; a methodology for agile requirements engineering based on a pattern approach; eliciting information requirements for DW systems; data inaccuracy-aware design of business processes; a general framework for predictive business process monitoring; business process model and business rule integration - towards a decision framework; and towards a reference framework for open source software adoption.},
  Document_type            = {Conference Review},
  ISSN                     = {16130073},
  Journal                  = {CEUR Workshop Proceedings},
  Page_count               = {79},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84977486560&partnerID=40&md5=fd56ba4df4a74e1e1d1f5cbf56887193}
}

@Article{NoAuthor20171,
  Title                    = {International Conference on Software Process Improvement, CIMPS 2016},
  Journal                  = {Advances in Intelligent Systems and Computing},
  Year                     = {2017},
  Note                     = {cited By 0},
  Pages                    = {1-293},
  Volume                   = {537},

  Abstract                 = {The proceedings contain 27 papers. The special focus in this conference is on Organizational Models, Standards, Methodologies, Knowledge Management, Software Systems, Applications, Tools, Information and Communication Technologies. The topics include: Analysis about the implementation level of ITIL in SMEs; organizational maturity models architectures; a systematic literature review; process mining applications in software engineering; agile practices adoption in CMMI organizations; a systematic literature review; CAPE Role in engineering innovation; part 1-the evolution; CAPE Role in engineering innovation: part 2-the coming revolution; using design patterns to solve Newton-type methods; factors affecting the accuracy of use case points; improving competitiveness aligning knowledge and talent management with strategic goals; adoption of the user profiles technique in the open source software development process; mobile application for automatic counting of bacterial colonies; a new scheme to visualize clusters model in data mining; determinant factors in post-implementation phase of ERP systems; tourism recommendation system based in user functionality and points-of-interest accessibility levels and identification of visually impaired users for customizing web pages on the internet.},
  Document_type            = {Conference Review},
  Editor                   = {Rocha A., Pena A., Mejia J., San Feliu T., Munoz M.},
  ISBN                     = {9783319485225},
  ISSN                     = {21945357},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84992446133&partnerID=40&md5=4ccc2ed0ff7d854f8704e8fbde8bfabf}
}

@Article{NoAuthor20161,
  Title                    = {9th EuroSymposium on Information Systems: Development, Research, Applications, Education, SIGSAND/PLAIS 2016},
  Journal                  = {Lecture Notes in Business Information Processing},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {1-204},
  Volume                   = {264},

  Abstract                 = {The proceedings contain 14 papers. The special focus in this conference is on Information Systems Development, Information Systems Management and Information Systems Learning. The topics include: Contractual specification of communication tools in outsourced ISD projects; weighted evaluation framework for cross-platform app development approaches; exploring an ontological approach for user requirements elicitation in the design of online virtual agents; documenting agile architecture; practices and recommendations; architectural element points; estimating software development effort by analysis of logical architectures; business models of internet of things; mapping between artefacts and portfolio processes from the PMI standard for portfolio management; solving problems during an enterprise system adoption; students acceptance of m-learning for higher education - UTAUT model validation; computer science studies in English from the perspective of students and business and information society in Poland - similarities and differences in the perception of ICT between generations.},
  Document_type            = {Conference Review},
  Editor                   = {Wrycza S.},
  ISBN                     = {9783319466415},
  ISSN                     = {18651348},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84988836275&partnerID=40&md5=93700b824378387f12eb40fadda73704}
}

@Article{NoAuthor20161,
  Title                    = {3rd International Conference on Innovations in Computer Science and Engineering, ICICSE 2015},
  Journal                  = {Advances in Intelligent Systems and Computing},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {1-315},
  Volume                   = {413},

  Abstract                 = {The proceedings contain 36 papers. The special focus in this conference is on Innovations in Computer Science and Engineering. The topics include: Secure ATM door locking system using RFID; analysis of various parameters for link adaptation in wireless transmission; n-gram classifier system to filter spam messages from OSN user wall; a recent study of emerging tools and technologies boosting big data analytics; registration plate recognition using dynamic image processing and genetic algorithm; comparing the capacity, NCC, and fidelity of various quantization intervals on DWT; enhancing cloud computing server to use cloud safely and to produce infrastructure of high performance computing; 3-D array pattern distortion analysis; high-security pipelined elastic substitution box with embedded permutation facility; an integrated approach to high-dimensional data clustering; performance analysis of network virtualization in cloud computing infrastructures on openstack; a shoulder-surfing resistant graphical password authentication scheme; a proposal for searching desktop data; low-power analog bus for system-on-chip communication; text clustering and text summarization on the use of side information; assessment of reusability levels on domain-specific components using heuristic function; reliable propagation of real-time traffic conditions in VANETS to evade broadcast storm; hybrid multi-objective optimization approach for neural network classification using local search; effectiveness of email address obfuscation on internet; how massive online data breaches impacts personal data in web; a survey on challenges in software development during the adoption of agile environment and data fusion approach for enhanced anomaly detection.},
  Document_type            = {Conference Review},
  Editor                   = {Saini H.S., Sayal R., Rawat S.S., Rawat S.S.},
  ISBN                     = {9789811004179},
  ISSN                     = {21945357},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84961205104&partnerID=40&md5=491f007137b6e77df7456ee018561b7f}
}

@Article{NoAuthor20161,
  Title                    = {4th International Conference in Software Engineering for Defence Applications, SEDA 2015},
  Journal                  = {Communications in Computer and Information Science},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {1-330},
  Volume                   = {422},

  Abstract                 = {The proceedings contain 27 papers. The special focus in this conference is on Software Engineering for Defence Applications. The topics include: Managing increasing user needs complexity within the ITA army agile framework; ita army agile software implementation of the LC2EVO army infrastructure strategic management tool; consumer electronics augmented reality in defense applications; the human factors as the weakest link in the chain; rapid prototyping; pair programming and other agile techniques; experiences from the market; supplementing agile practices with decision support methods for military software development; benefits of open source software in defense environments; a modeling and simulation showcase in military logistics; software characteristics for program forza NEC main systems; agile plus new army diffused and shared leadership; role of the design authority in large scrum of scrum multi-team-based programs; make your enterprise agile transformation initiative an awesome success; DevOps movement of enterprise agile breakdown silos, create collaboration, increase quality, and application speed; MBDA extendible C2 weapon system in collaboration environment; a new device for high-accuracy measurements of the hardness depth profile in steels; AGILE methodology in progesi MDA model; self-validating bundles for flexible data access control; improving bug predictions in multicore cyber-physical systems; predicting the fate of requirements in embedded domains; capturing user needs for agile software development and a course on software architecture for defense applications.},
  Document_type            = {Conference Review},
  Editor                   = {Sillitti A., Ciancarini P., Succi G., Messina A.},
  ISBN                     = {9783319278940},
  ISSN                     = {18650929},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958234892&partnerID=40&md5=450ccf84727f82c78c44b33d536a9f92}
}

@Conference{NoAuthor2016,
  Title                    = {ACM International Conference Proceeding Series},
  Year                     = {2016},
  Editor                   = {Vahrenhold J., Barendsen E., Barendsen E.},
  Note                     = {cited By 0},
  Publisher                = {Association for Computing Machinery},
  Volume                   = {13-15-October-2016},

  Abstract                 = {The proceedings contain 23 papers. The topics discussed include: thanks for sharing: CS pedagogical content knowledge sharing in online environments; identification of the emergent teacher leaders within a CSE professional development program; towards supporting scientific inquiry in computer science; a case study of physical computing in computer science education; starting out with projects - experiences with agile software development in high schools; computer science experimenter's kit for use in preschool and primary school; drops and kinks: modeling the retention of flow for hour of code style tutorials; teaching abstract thinking in introduction to computer science for 7th graders; and measuring computer science pedagogical content knowledge: an exploratory analysis of teaching vignettes to measure teacher knowledge.},
  Document_type            = {Conference Review},
  ISBN                     = {9781450342230},
  Journal                  = {ACM International Conference Proceeding Series},
  Page_count               = {124},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84994316117&partnerID=40&md5=0202575e97c8de47c801ab8a7c9f822f}
}

@Article{NoAuthor20151,
  Title                    = {11th IFIP WG 2.13 International Conference on Open Source Systems, OSS 2015},
  Journal                  = {IFIP Advances in Information and Communication Technology},
  Year                     = {2015},
  Note                     = {cited By 0},
  Pages                    = {1-179},
  Volume                   = {451},

  Abstract                 = {The proceedings contain 24 papers. The special focus in this conference is on Open source software engineering, Communication and collaboration, Examples and case studies, Adoption, use, and impact and Intellectual property and Legal issues. The topics include: An empirical study of the relation between strong change coupling and defects using history and social metrics in the apache aries project; scaling and internationalizing an agile FOSS project; how developers acquire FLOSS skills; a case study of the rails OSS project; the diffusion of pastebin tools to enhance communication in FLOSS mailing lists; examining usability work and culture in OSS; on the availability and effectiveness of open source software for digital signing of PDF documents; a systematic approach for evaluating BPM systems: case studies on open source and proprietary tools; smart route planning using open data and participatory sensing; a qualitative study on the adoption of open source software in information technology outsourcing organizations; surveying the adoption of FLOSS by public administration local organizations; the RISCOSS platform for risk management in open source software adoption; first results about motivation and impact of license changes in open source projects; on the variability of the BSD and MIT licenses; the right to a contribution: an exploratory survey on how organizations address it and open source software ecosystems: towards a modelling framework.},
  Document_type            = {Conference Review},
  Editor                   = {Wasserman A.I., Damiani E., Frati F., Riehle D.},
  ISBN                     = {9783319178363},
  ISSN                     = {18684238},
  Publisher                = {Springer New York LLC},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84929630339&partnerID=40&md5=f6edfabf2a119b0b14ea898a91c15bca}
}

@Article{NoAuthor20161,
  Title                    = {IFIP WG 13.2/13.5 Joint 6th International Conference on Human-Centered Software Engineering, HCSE 2016 and 8th International Conference on Human Error, Safety, and System Development, HESSD 2016},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2016},
  Note                     = {cited By 0},
  Pages                    = {1-382},
  Volume                   = {9856 LNCS},

  Abstract                 = {The proceedings contain 25 papers. The special focus in this conference is on Agile, Human-Centered Software Engineering, Usability Evaluation, Testing, Socio-Technical, Ethical Considerations, Human Error, Safety-Critical Systems, User, Developer Experience, Models, Methods, Adopting Tools, Demos and Posters. The topics include: Supporting the HCI aspect of agile software development by tool support for UI-pattern transformations; usability problems experienced by different groups of skilled internet users; user-test results injection into task-based design process for the assessment and improvement of both usability and user experience; framework for relative web usability evaluation on usability features in MDD; testing prototypes and final user interfaces through an ontological perspective for behavior-driven development; complementary tools and techniques for supporting fitness-for-purpose of interactive critical systems; a conceptual ux-aware model of requirements; audio guidance for runner training; enterprise model-driven agile human-centered software engineering; collaborative task modelling on the web and declarative prototyping with data; a first prototype integrated in HAMSTERS.},
  Document_type            = {Conference Review},
  Editor                   = {Winckler M., Johnson C., Bogdan C., Gulliksen J., Kis F., Bernhaupt R., Sauer S., Palanque P., Forbrig P.},
  ISBN                     = {9783319449012},
  ISSN                     = {03029743},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84986214337&partnerID=40&md5=60c28fa586d6e15701b5d328bf73d822}
}

@Conference{NoAuthor2016,
  Title                    = {2015 National Software Engineering Conference, NSEC 2015},
  Year                     = {2016},
  Note                     = {cited By 0},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {The proceedings contain 11 papers. The topics discussed include: real time drowsiness detection using eye blink monitoring; parallel stabilized mixed Galerkin method for three-dimensional Darcy flow using OpenMP; agile for large scale projects - a hybrid approach; web application prototype : state-of-art survey evaluation; identification and improvement of design issues of a sales management system for VOIP wholesaler; load balancing algorithms in cloud computing: a survey of modern techniques; complex and adaptive networks: a survey on performance enhancements attributes; contributions to the study of bi-lingual Roman Urdu SMS spam filtering; a review on variant clustering designs in heterogeneous WSNs; automatic recognition of isolated airstrips in multiscale satellite images using radon transformation and support vector machine; and specifying electronic health system with Vienna development method specification language.},
  Document_type            = {Conference Review},
  ISBN                     = {9781467381635},
  Journal                  = {2015 National Software Engineering Conference, NSEC 2015},
  Page_count               = {71},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84966396789&partnerID=40&md5=4f42092944314f431850ae7de3363de1}
}

@Conference{NoAuthor2016,
  Title                    = {Conference Proceedings of 2015 2nd International Conference on Knowledge-Based Engineering and Innovation, KBEI 2015},
  Year                     = {2016},
  Note                     = {cited By 0},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {The proceedings contain 210 papers. The topics discussed include: Bad data detection and identification in power system State estimation with network parameters uncertainty; using risk management to balance agile methods; knowledge uncertainty supervision in automatic control and measurements; absorptive capacity: a hub of blue ocean and red ocean strategies and capability transformation in innovative business environments; impedance matching networks for current output integrated circuits; SDD: a skin detection dataset for training and assessment of human skin classifiers; using micro-blogging to dismantle knowledge hierarchies in product development teams; and developing a teaching framework to support software inspection.},
  Document_type            = {Conference Review},
  ISBN                     = {9781467365062},
  Journal                  = {Conference Proceedings of 2015 2nd International Conference on Knowledge-Based Engineering and Innovation, KBEI 2015},
  Page_count               = {1217},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84971468115&partnerID=40&md5=61305043c10c03d8d0dae8818deb01a2}
}

@Conference{NoAuthor2016,
  Title                    = {ACM International Conference Proceeding Series},
  Year                     = {2016},
  Note                     = {cited By 0},
  Publisher                = {Association for Computing Machinery},
  Volume                   = {01-03-June-2016},

  Abstract                 = {The proceedings contain 44 papers. The topics discussed include: the impact of agile methods on the development of an agile culture - research proposal: the agile evolution; remedying knowledge loss in FLOSS (free/ libre open source software); integrating evidence from systematic reviews with software engineering practice through evidence briefings; personalised technical support for text-based interactions: a validation study; results from an ethnographically-informed study in the context of test driven development; the jinx on the NASA software defect data sets; benefits and limitations of job rotation in software organizations: a systematic literature review; evidence-based software portfolio management: a tool description and evaluation; a review-based comparative study of bad smell detection tools; do more inspectors guarantee higher accuracy of the capture-recapture estimates? an empirical study; an integrated tool environment for experimentation in domain specific language engineering; beyond the spreadsheet: reflections on tool support for literature studies; improving vulnerability detection measurement: test suites and software security assurance; what we have learnt adopting evidence-based software engineering for industrial practice; and an exploratory study on the effects of perceived value and stakeholder satisfaction on software projects.},
  Document_type            = {Conference Review},
  ISBN                     = {9781450336918},
  Journal                  = {ACM International Conference Proceeding Series},
  Page_count               = {322},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84978473145&partnerID=40&md5=2ae2e134478431f5a98b85f6e2788643}
}

@Conference{NoAuthor2016,
  Title                    = {Proceedings - 10th International Symposium on Theoretical Aspects of Software Engineering, TASE 2016},
  Year                     = {2016},
  Note                     = {cited By 0},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {The proceedings contain 26 papers. The topics discussed include: on-the-fly determinization of bounded networks of timed automata; termination and boundedness for well-structured pushdown systems; the L-depth eventual linear ranking functions for single-path linear constraint loops; Bayesian statistical model-checking for complex stochastic systems; sound test-suites for cyber-physical systems; Seededfuzz: selecting and generating seeds for directed fuzzing; towards parallel model generation for random performance testing of model-oriented operations; formal refinement and partitioning of a fuel pump system for small aircraft in hybrid event-B; formal proof of dynamic memory isolation based on MMU; verifying OSEK/VDX OS design using its formal specification; automatic conversion and verification system based on AADL scheduling model; UTP semantics for shared-state, concurrent, context-sensitive process models; a term rewriting approach to analyze high level Petri nets; behaviour-aware matching of cloud applications; and agile validation of higher order transformations using F-alloy.},
  Document_type            = {Conference Review},
  ISBN                     = {9781509017638},
  Journal                  = {Proceedings - 10th International Symposium on Theoretical Aspects of Software Engineering, TASE 2016},
  Page_count               = {186},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84987941315&partnerID=40&md5=73a3f9e285e8c3cbae3d4f37a891f130}
}

@Conference{NoAuthor2016,
  Title                    = {7th International Conference on Advances in Computing, Control, and Telecommunication Technologies, ACT 2016},
  Year                     = {2016},
  Note                     = {cited By 0},
  Publisher                = {Narosa Publishing House},

  Abstract                 = {The proceedings contain 20 papers. The topics discussed include: PC-PC communication using LI-FI; an inventory model for decaying items with ramp type demand under learning effect; a combined approach of rock and genetic algorithm for clustering categorical data; multi level privacy preserving in medical data publishing; design and development of dual input CUK-Zeta converter; semantic web prefetching using semantic relatedness between web pages; cloud based mobi-context hybrid framework for venue recommendation; optimization of energy efficiency using cluster tree based data aggregation topology for wireless sensor networks; carrier aggregation in LTE; forecasting of stock market prices using neural network; mitigating iris based replay attack using cuckoo optimized reversible watermarking; agile software development: evolution of case tool in software engineering; path planning of mobile robot using PSO algorithm; opinion classification based information credibilty analysis system; performance comparison of dynamic clustering protocols for energy efficient routing in wireless sensor network; decremental algorithm with node combination for routing optimization in ATIS; data security in mobile cloud environment by adopting data classification model; green cloud framework for energy efficiency using round robin scheduling and priority scheduling; and evaluation of information retrieval systems using various measures.},
  Document_type            = {Conference Review},
  Journal                  = {7th International Conference on Advances in Computing, Control, and Telecommunication Technologies, ACT 2016},
  Page_count               = {386},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85013912137&partnerID=40&md5=9fd3001a1036c54d808d6da152b01b0c}
}

@Conference{NoAuthor2015,
  Title                    = {Proceedings of the 2015 3rd International Conference on Computer, Communication, Control and Information Technology, C3IT 2015},
  Year                     = {2015},
  Note                     = {cited By 0},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {The proceedings contain 126 papers. The topics discussed include: brain-computer interfacing for bio-perceptive and rehabilitative applications; registration of multi-focus images by combining global and local transformation models; frequency selective surfaces: development and prospect; spectrum sharing networks with imperfect channel state information; language-based security analysis of database applications; a two-stage style detection approach for printed roman script words; neural network based gene regulatory network reconstruction; page-level script identification from multi-script handwritten documents; efficient approach to detect logical equivalence in the paradigm of software plagiarism; an integrated approach to deploy data warehouse in business intelligence environment; and developing software product and test automation software using agile methodology.},
  Document_type            = {Conference Review},
  ISBN                     = {9781479944460},
  Journal                  = {Proceedings of the 2015 3rd International Conference on Computer, Communication, Control and Information Technology, C3IT 2015},
  Page_count               = {683},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84937020161&partnerID=40&md5=6121b7af418382af17e9c1d903401a1d}
}

@Conference{NoAuthor2015,
  Title                    = {Proceedings - 2nd International Workshop on Rapid Continuous Software Engineering, RCoSE 2015},
  Year                     = {2015},
  Note                     = {cited By 0},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {The proceedings contain 8 papers. The topics discussed include: build waiting time in continuous integration - an initial interdisciplinary literature review; introducing continuous delivery of mobile apps in a corporate environment: a case study; continuous experimentation in the B2B domain: a case study; supporting continuous integration by code-churn based test selection; mashing up software issue management, development, and usage data; continuous API design for software ecosystems; towards post-agile development practices through productized development infrastructure; and rolling out a mission critical system in an agilish way. reflections on building a large-scale dependable information system for public sector.},
  Document_type            = {Conference Review},
  ISBN                     = {9781479919345},
  Journal                  = {Proceedings - 2nd International Workshop on Rapid Continuous Software Engineering, RCoSE 2015},
  Page_count               = {54},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84945975261&partnerID=40&md5=0c2793ac7523306a8f15e02239bbb150}
}

@Conference{NoAuthor2015,
  Title                    = {Proceedings - 2015 IEEE 10th International Conference on Global Software Engineering Workshops, ICGSEW 2015},
  Year                     = {2015},
  Note                     = {cited By 0},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {The proceedings contain 10 papers. The topics discussed include: onshore to near-shore outsourcing transitions: unpacking tensions; practices to make agile test teams effective: challenges and solutions; value measurement on performance in global software development: an industry study on how R&D can influence 'value for money'; long-term power demand recording of running mobile applications; towards an ethical foundation of green software engineering; evaluating the performance and energy consumption of distributed data management systems; a first approach on legacy system energy consumption measurement; bottleneck identification in software development processes: a proposal based on the principles of the theory of constraints; analysis of dilemmas during switching of vendors in a near shore outsourcing context; and analogy-based software development effort estimation in global software development.},
  Document_type            = {Conference Review},
  ISBN                     = {9781479998746},
  Journal                  = {Proceedings - 2015 IEEE 10th International Conference on Global Software Engineering Workshops, ICGSEW 2015},
  Page_count               = {69},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84957922866&partnerID=40&md5=d658cf10eaa852d7ad13c8666df437f4}
}

@Article{NoAuthor2014,
  Title                    = {48th Annual Convention of Computer Society of India, CSI 2013},
  Journal                  = {Advances in Intelligent Systems and Computing},
  Year                     = {2014},
  Note                     = {cited By 0},
  Volume                   = {249 VOLUME II},

  Abstract                 = {The proceedings contain 85 papers. The special focus in this conference is on Data Mining, Data Engineering and Image Processing, Software Engineering and Bio-Informatics, Network Security, Digital Forensics and Cyber Crime and E-Governance Applications. The topics include: Content based retrieval of malaria positive images from a clinical database VIA recognition in RGB colour space; modified clustered approach for performance escalation of distributed real-time system; Indian stock market predictor system; text clustering using reference centered similarity measure; a comparative analysis of new approach with an existing algorithm to detect cycles in a directed graph; super resolution of quality images through sparse representation; analysis of stutter signals with subsequent filtering and smoothening; performance analysis of asynchronous periodic pattern mining algorithms; a comparative study of the classification algorithms based on feature selection; features selection method for automatic text categorization; outliers detection in regression analysis using partial least square approach; content based image retrieval using radon projections approach; a novel approach for facial feature extraction in face recognition; video shot boundary detection using finite ridgelet transform method; improved iris recognition using Eigen values for feature extraction for off gaze images; a proposal for color segmentation in PET/CT-guided liver images; audio segmentation for speech recognition using segment features; an efficient secret image sharing scheme using an effectual position exchange technique; image fusion technique for remote sensing image enhancement; variant nearest neighbor classification algorithm for text document; semantic framework to text clustering with neighbors; multi-agent system for spatio temporal data mining; satellite image fusion using window based PCA; rough set approach for novel decision making in medical data for rule generation and cost sensitiveness; an approach to predict software project success based on random forest classifier; performance evaluation of multiple image binarization algorithms using multiple metrics on standard image databases; a signal processing approach for eucaryotic gene identification; addressing analyzability in terms of object oriented design complexity; quality validation of software design before change implementation; testing approach for dynamic web applications based on automated test strategies; study on agile process methodology and emergence of unsupervised learning to identify patterns from object oriented system; classification on DNA sequences of hepatitis B virus; an effective automated method for the detection of grids in DNA microarray; mutual dependency of function points and scope creep towards the success of software projects; defect detection efficiency of the combined approach; a cryptographic privacy preserving approach over classification; an advanced authentication system using rotational cryptographic algorithm; enhanced trusted third party for cyber security in multi cloud storage; a stylometric investigation tool for authorship attribution in E-mail forensics; inline block level data de-duplication technique for EXT4 file system; DCT-PCA based method for copy-move forgery detection; a novel SVD and GEP based image watermarking; color image authentication through visible patterns (CAV); smart infrastructure at home using internet of things; secured internet voting system based on combined DSA and multiple DES algorithms; defending approach against forceful browsing in web applications; effect of indexing on high-dimensional databases using query workloads; a novel architecture for dynamic invocation of web services; a reactive e-service framework for dynamic adaptation and management of web services; new architecture for flip flops using quantum-dot cellular automata; ICT to renovate the present life line systems from fossil fuels to green energy; a secure and reliable mobile banking framework; e-health and ICT in insurance solutions; modified real-time advanced inexpensive networks for critical infrastructure security and resilience and regression model for edu-data in technical education system.},
  Document_type            = {Conference Review},
  ISBN                     = {9783319030944},
  ISSN                     = {21945357},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84947201261&partnerID=40&md5=e01234a3fdfd234f514794ab59067b7e}
}

@Conference{NoAuthor2014,
  Title                    = {20th Americas Conference on Information Systems, AMCIS 2014},
  Year                     = {2014},
  Note                     = {cited By 0},
  Publisher                = {Association for Information Systems},

  Abstract                 = {The proceedings contain 436 papers. The special focus in this conference is on Information Systems. The topics include: A classification of factors that impact the role of the CIO; a comparison of IT governance and control frameworks in cloud computing; a conceptual approach for optimizing distribution logistics using big data; a database-driven model for risk assessment; a framework for developing integrated supply chain information system; a maturity model and web application for environmental management benchmarking; a model of distributed agile team; a model of effective IT governance structures for developing economies; a multi-agent system for healthcare data privacy; a novel indexing method for improving timeliness of high-dimensional data; a systematic review of cloud computing, big data and databases on the cloud; a user satisfaction study of the London congestion charging e-service; achieving business goals with gamification; addressing levels issues in IS qualitative research; affect infusion in a computer based multitasking environment; alignment between business process governance and IT governance; an actor-network perspective on business process management; an agent-based system for medication adherence monitoring and patient care; an application of the knowledge management maturity model; an efficient stochastic update propagation method in data warehousing; an empirical study of consumer behavior in online pay-to-bid auctions; an empirical study of the gratifications of customer resonance on purchase intention; an explorative study of mobile apps in the enterprise; an information system framework and prototype for collaborative and standardized Chinese liquor production; an ontology-based record management systems approach for enhancing decision support; an organizational mining approach based on behavioral process patterns; applying emergent outcome controls to mitigate time pressure in agile software development; augmented reality and print communication; barriers to green IT service management; behavioural affect and cognitive effects of time-pressure and justification requirement in software acquisition; a holistic investigation into factors affecting social media utilisation in the workplace; beyond traditional IT-enabled innovation; a key capability for competitive advantage; BIS adoption determinants in SMEs; boundary spanning and the differentiated effects of IS project deviations; business continuity in network organizations - a literature review; business intelligence and analytics; start-ups in the text analytics software industry; categorising software contexts; causal model for predicting knowledge sharing via ICTs; changing boundaries in virtual (open) innovation work; an organizational learning approach; co-creation in branding through social commerce; communication privacy management in the digital age - effects of general and situational privacy concerns; communities of sentiment around man-made disasters; compensation of IT service management employees; conceptual review of formative assessment in virtual learning environment; conceptualizing business value of IT in healthcare to design sustainable e-health solutions; conditions for participation within synchronous online collaborative learning; consultant strategies and technological affordances; contextual preferences and network-based knowledge sharing in china; contingent role of knowledge self-efficacy distribution on diffusion of knowledge in peer-to-peer networks; data fusion-based decision support architecture for intensive care units; decreasing waiting times with human and equipment resources; design guidelines for a mobile app for wellbeing of emerging adults; designing a hybrid academic workshop; determinants of CIOs reporting relationship; determinants of it job occupations; developing a conceptual model for project knowledge management; developing an engaging IT degree; developing social capital in online communities; development of measurement instrument for sustainable agricultural management; drivers of information quality on blogs; communication preparedness using emergency description information technology; extent of use and overall performance mediated by routinization and infusion; educated people with disabilities in the ICT field; effectiveness and efficiency of blended learning - a literature review; effects of IT-culture conflict and user dissatisfaction on information security policy non-compliance; EHR adoption in healthcare practices; ensuring positive impact of data quality metadata; enterprise architecture as enabler of organizational agility - a municipality case study; enterprise SNS use and profile perceptions; enterprise system lifecycle-wide innovation; evaluating emotions in mobile application descriptions; evaluation of firm level technology usage in developing countries; examining intersubjectivity in social knowledge artifacts; examining the impact of emotions on trust in virtual teams; examining the role of legal climate on individual creativity in virtual worlds; experiential learning with an open-source enterprise system; exploring configurations of affordances; exploring the existence of network governance in the software as a service value network; exploring user satisfaction of the public e-services in the state of Qatar; factors related to social media adoption and use for emergency services operations; features for social CRM technology - an organizational perspective; financial incentives for medication adherence; from strategic to operational collaborations; a qualitative and quantitative analysis of scientific literature; icon design and game app adoption; ICT development and corruption; impact of electronic diabetes registry use on care and outcomes in primary care; impact of online customer reviews and incentives on the product sales at the online retail store; impacts of organizational behavior on it project teams; improving healthcare outreach to a vulnerable community group; improving knowledge-intensive business processes through social media; information security and insider threats in small medical practices; information security in value chains; information systems security training in organizations; recognizing ritualistic behavior by abstracting technical indicators from past cases; inspiring and cultivating female innovators through mobile app development; IT enabled agility in organizational ambidexterity; IT enablers for task organization and innovation support to drive team performance; IT-enabled intangibles and IT capabilities; joint effect of organizational identity and trust on ERP implementation success; critical factors for achieving smart grid value; market reaction to information technology investment announcements in Russian firms; method-based versus software-based design innovation; differences in environment-based voluntariness; news media sentiment of data breaches; online electronic thesis support system at maritime university; a pedagogical approach of promoting information security education; patterns of designer-user interactions in the design innovation process; personality type effects on online credit card payment utilization; personalized design of online communities; predicting fraud from quarterly conference calls; pricing quality attributes of internet domain names; protection motivation driven security learning; prudential risk management of IT sourcing strategies; real-time task attributes and temporal constraints; analyzing requirements cognition in multiple development paradigms; rethinking the concept of organizational readiness; role of justice in information system service recovery process; impression management as motivation to use social networks; seeking efficiency and productivity in health care; sentiment analysis method review in information systems research; smart sustainability through system satisfaction; bridging the gap between online social networks; social determinants of Facebook commerce acceptance; social media communication in European airlines; exploring content guidelines and policy using a grounded theory approach; the use of online social networks to support shopping-oriented decision making; software ecosystem orchestration; visibility feature designs increase tablet use; technology in practice in Brazilian judiciary; testing the group task demands-resources model among IT professionals; the antecedents and impacts of mobile technostress in the workplace; the combined effects of IT and HRM capabilities on competitive performance; the effects of salience, deterrence, and social influence on software piracy; towards a business model framework for E-learning companies; towards understanding and overcoming hurdles in PDMS projects in Germany; trends in the E-learning ecosystem; understanding usages and affordances of enterprise social networks; user interface design and the halo effect; using crowdsourcing tools for implementing open strategy; value proposition of agility in software development - an empirical investigation; virtual team performances in crowdsourcing contests; will insurance brokers use mobile insurance service platform and the antecedents and consequences.},
  Document_type            = {Conference Review},
  Journal                  = {20th Americas Conference on Information Systems, AMCIS 2014},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84905994643&partnerID=40&md5=77f2851f6be7920fec94c025d7ba88e4}
}

@Conference{NoAuthor2014,
  Title                    = {2014 IEEE International Technology Management Conference, ITMC 2014},
  Year                     = {2014},
  Note                     = {cited By 0},
  Publisher                = {Institute of Electrical and Electronics Engineers Inc.},

  Abstract                 = {The proceedings contain 31 papers. The topics discussed include: workload estimation in the absence of historical data; technology investment determinants for usage patterns in different sized healthcare institutions; challenges and best practices for enterprise adoption of big data technologies; the impact of knowledge management system on the quality of test result in quality control and calibration laboratory; a model and system for applying lean six sigma to agile software development using hybrid simulation; effective asset management for hospitals with RFID; maintenance is a technology management issue; project team selection based on social networks; production technology screening for innovative products; the iterative involvement of internal experts into the technology scouting process; and technology management: a comprehensive bibliometric analysis.},
  Document_type            = {Conference Review},
  ISBN                     = {9781479933129},
  Journal                  = {2014 IEEE International Technology Management Conference, ITMC 2014},
  Page_count               = {147},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84910640319&partnerID=40&md5=2f5fe601ef0729bb28cf536ba29bd290}
}

@Conference{NoAuthor2014,
  Title                    = {2014 Software Evolution Week - IEEE Conference on Software Maintenance, Reengineering, and Reverse Engineering, CSMR-WCRE 2014 - Proceedings},
  Year                     = {2014},
  Note                     = {cited By 0},
  Publisher                = {IEEE Computer Society},

  Abstract                 = {The proceedings contain 71 papers. The topics discussed include: NL-based query refinement and contextualized code search results: a user study; automated construction of a software-specific word similarity database; a case study of paired interleaving for evaluating code search techniques; broken promises: an empirical study into evolution problems in Java programs caused by library upgrades; detecting infeasible branches based on code patterns; an empirical study on the fault-proneness of clone migration in clone genealogies; automatic ranking of clones for refactoring through mining association rules; towards more accurate multi-label software behavior learning; identifying risky areas of software code in agile/lean software development: an industrial experience report; an empirical study of bug report field reassignment; and towards a context-aware IDE-based meta search engine for recommendation about programming errors and exceptions.},
  Document_type            = {Conference Review},
  Journal                  = {2014 Software Evolution Week - IEEE Conference on Software Maintenance, Reengineering, and Reverse Engineering, CSMR-WCRE 2014 - Proceedings},
  Page_count               = {492},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84898437914&partnerID=40&md5=a3ced623e5fa277d6101aea375266fdc}
}

@Conference{NoAuthor2014,
  Title                    = {ASE 2014 - Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering},
  Year                     = {2014},
  Note                     = {cited By 0},
  Publisher                = {Association for Computing Machinery, Inc},

  Abstract                 = {The proceedings contain 104 papers. The topics discussed include: derailer: interactive security analysis for web applications; tracking down root causes of defects in simulink models; the confidence in our k-tails; localization of concurrency bugs using shared memory access pairs; minimal strongly unsatisfiable subsets of reactive system specifications; from out-place transformation evolution to in-place model patching; NeedFeed: taming change notifications by modeling code relevance; resilient user interface level tests; studying task allocation decisions of novice agile teams with data from agile project management tools; search-based inference of polynomial metamorphic relations; a dynamic analysis to support object-sharing code refactorings; and tracing software build processes to uncover license compliance inconsistencies.},
  Document_type            = {Conference Review},
  ISBN                     = {9781450330138},
  Journal                  = {ASE 2014 - Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering},
  Page_count               = {924},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84924544093&partnerID=40&md5=f1136780677e18f7433a64644c1da4d4}
}

@Article{NoAuthor2014,
  Title                    = {2013 International Forum on Computer and Information Technology, IFCIT 2013},
  Journal                  = {Applied Mechanics and Materials},
  Year                     = {2014},
  Note                     = {cited By 0},
  Volume                   = {519-520},

  Abstract                 = {The proceedings contain 335 papers. The special focus in this conference is on Computer and Information Technology. The topics include: A framework for processing water resources big data and application; accurate location in batch dynamic provable data possession; construction of data warehouse platform in continual quality improvement; research on technology of CRM stored procedure; research on SQL performance optimization of CRM stored procedure; design of E-archives portfolio system based on signature technology; the research of distributed bitmap index; analysis of distributed computing architecture search principle based on hadoop; study on object-storage system metadata load balancing; time synchronization method for parallel traffic simulation framework; research on parallel yen algorithms on GPUs using CUDA; GPU accelerated reconstruction in Compton scattering tomography using matrix compression; parallel scheduling algorithms investigation of support strict resource reservation from grid; a dynamic back-off algorithm in ad hoc networks; research on network security issues and security model; the web foreign language teaching research based on P2P technology; a novel response time-driven replica selection approach for cloud computing; a novel response time-driven replica selection approach for cloud computing; a security routing protocol based on convergence degree and trust; a trust system design for future SCADA network security; the micro-blogging network leading group recognition algorithm; the design of PMP-AODV routing protocol in wireless mesh network; the application of data mining in the honeypot system; cloud security system construction and its concrete realization; simple encryption research based on heterogeneous system; robustness of autocatalytic set in a model of evolving network; research on MANET-based reliable zone routing protocol; research on improved Floyd routing algorithm in opportunistic networks; research and realization of custom form realization method based on HTML and XML technology; research of improved network access authorization mechanism based on elliptic curve; friend-based prediction routing protocol in socially-aware opportunistic networks; on general number field sieve and its polynomial selection; measuring the use of real-name policy in micro-blogging of China; a framework for service composition based on template; secure access platform improved system based on regional division; task scheduling research based on dynamic backup in cloud environment; research of parasitic communication model based on network behavior features; a dynamic malware detection approach by mining the frequency of API calls; a general framework of professional image processing system based on UML; using context to discern user tasks on desktop; a research into the UML legend in the waterfall model development; the research and design of library OA system; software engineering based on object management Petri net; research on the chessboard representations of checkers; quick task queue management software design; a hardware sandbox using processor virtualization for untrusted native code; realization of a 3D model render on mobile terminal based on X3D; study on the personnel training mode of E-commerce major; EDI in E-commerce application and safety measures; effect of E-commerce on development of enterprises; factors and models analysis of consumer trust on E-commerce; research and application of mobile agent in E-commerce system; cryptanalysis of a certificateless partially blind signature; 3D video transmission system for China mobile multimedia broadcasting; the study of client design in the background of personalized and customized E-textbook; the architecture and implementation of interactive broadcasting based on CMMB; comparison and analysis of MAC protocol in multimedia communications; research on time-domain correlation technique based on ZC sequences in OFDM system; realization of automatic keystone correction for smart mini projector projection screen; music recommendation with collaborative filtering for mobile services; digital watermarking based on wavelet and chaotic mapping; research of television boot-strap information delivery based on user profiles; a new image segmentation model; an affine SIFT matching algorithm based on local patch shape estimation; super-resolution by POCS-SIFT approach; classification-based character segmentation of image; study of fingerprint image feature extraction algorithm; study of fingerprint image preprocessing technology; overview of pixel level image fusion algorithm; a fast extraction method of water boundary based on the landsat tm image; non-western script based off-line handwritten signature technology; a new local self-similarity descriptor based on structural similarity index; leaf boundary extraction with a wind noise method; the design and implementation of track region segmentation algorithm; real-time video stabilization based on smoothing feature trajectories; git recognition with incomplete GEI based on random forests; a new image irradiance equation for perspective shape from shading of hybrid surfaces; a ship detection model in optical satellite image; covariance tracking algorithm on bilateral filtering under lie group structure; head pose estimation via direction-sensitive feature and random regression forests; a clustering algorithm based on gravitation; trend analysis of product function using sequential pattern mining; a novel distributed jointly sparse optimization algorithm; a novel quantum genetic algorithm in TSP; research on intelligent decision method based on grey system theory in the prediction of grain yield in Jilin province; fast and effective algorithm of iris localization based on Hough transform; improved self-adaptive glowworm swarm optimization algorithm; text classification using SVM with exponential kernel; fractal analysis of the optimal objective function; approaches of ontological concept mapping based on multi-strategy; collision detection based on SIMD model; an improved method of short text feature extraction based on words co-occurrence; an enhanced fuzzy information retrieval model based on linguistics; the properties related to the moment generating function of the fuzzy variable; strong consistency of maximum likelihood estimators n exponential sequential model; generalized nonlinear volterra-fredholm type sum-difference inequality; research on computer aided index system establishment of SWOT; an effective cell spreading method for force-directed global placement; the application of computer-aided design in architectural decoration design; MGF-based effective capacity for generalized fading channels; a pilot design method based on cyclic shift PTS; generating idempotents of quartic residue codes over the field; negotiation protocol for location privacy; irregular sampling of GPS signal for real-time implementation of pipelined PFFT; the optimized scheme of CDR collecting and abnormity monitoring; peak-to-average power ratio distribution of OFDM visible light communication systems; FPGA-based improved decoding algorithm of LDPC codes; an improved parameter estimation algorithm based on FFT for LFM signal; efficient LLR optimization based on GMI for LDPC coded BICM systems; a novel approach for PAPR reduction of NC-OFDM system; covariance-based wavefield separation and its application in crosswell seismic data; a novel decoupled LOS rate estimator for terminal guidance; coarse-to-fine 3D randomized Hough transform for dim target detection; blind complex source separation based on cyclostationary statistics; a new no op amp full CMOS voltage reference circuit; a threshold speed computation algorithm in adaptive DVS scheduling; the application of UKF algorithm for 18650-type lithium battery SOH estimation; a large signal model to improve linearity of Rf power amplifier; design of a low-phase-noise LC voltage controlled oscillator; DSP based novel high voltage high frequency electric source with self-tuning ability; design of DC-DC module for 300W photovoltaic inverter; handheld lighting circuit detector based on alternating electric field; the test system of PXI-based aeronautic equipment; research on Manchester coded mud pulse signal extraction; multi-temperature parameter display system design; implementation of electric data sheet based on virtual instrument; a fault diagnosis model for power transformer using association rule mining-based on rough set; influencing of spatial information distribution and transformation model on quality of coordinate transformation; the research of auto-composing test paper technology based on genetic algorithm; network agent based on VISA framework for instruments; an improved routing algorithm based on LEACH for WSN; RSSI ranging algorithm based on polynomial piecewise fitting; using rank-defect free net adjustment to optimize GPS; distributed malicious nodes detection in wireless sensor networks; a high-throughput imaging spectrometer based on over-scanning; compressed sensing-based data gathering in WSN; a wireless sensor network node coverage discriminant model based on the average distance of neighbor node; design and realization of the kalman filter based on LabVIEW; preliminary analysis on the wind retrieval method in nowcasting; a class of difference inequality and an application to discrete-time control systems; the pest management model with impulsive control; an improvement of IED configuration tool and modeling for transformer condition monitoring IED; study of electric power grid based on improved data envelopment analysis model; study on a pneumatic inspection micro robot; study on energy-saving control system of smart home.},
  Document_type            = {Conference Review},
  ISBN                     = {9783038350194},
  ISSN                     = {16609336},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84895106687&partnerID=40&md5=878c2b0c23f59c277030e9be3d41f908}
}

@Article{NoAuthor2014,
  Title                    = {21st European Conference on Systems, Software and Services Process Improvement and Innovation, EuroSPI 2014},
  Journal                  = {Communications in Computer and Information Science},
  Year                     = {2014},
  Note                     = {cited By 0},
  Volume                   = {425},

  Abstract                 = {The proceedings contain 29 papers. The special focus in this conference is on SPI and Very Small Entities, Process Improvement Frameworks, Testing and Improvement Issues, SPI and People Issues, SPI and Quality Issues and Software processes in various contexts. The topics include: Towards measuring the impact of the ISO/IEC 29110 standard; a systems process lifecycle standard for very small entities; an integrated environment to support project management in VSEs; a critical evaluation of a methodology for the generation of software process improvement roadmaps; a framework for systematic change management; information sources and their importance to prioritize test cases in the heterogeneous systems context; software process assessment validation and improvement prioritization; an exploration of individual personality types in software development; covering the human perspective in software process improvement; assessing the value of an agile coach in agile method adoption; software development methods and quality assurance; software development processes for games; a path for improving software quality; a traceability process assessment model for the medical device domain; project valorisation through agility and catering for stakeholder expectations; game changing beliefs for the product developing organization; empowering entrepreneurship in Europe; linguistic analogy for software process innovation; finding threats with hazards in the concept phase of product development; compliance and rigour in process assessment for safety-critical domain and a multi-case study on which change strategies were chosen.},
  Document_type            = {Conference Review},
  ISBN                     = {9783662438954},
  ISSN                     = {18650929},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84906568782&partnerID=40&md5=c5737715a6369b9c01ced8f593d57bce}
}

@Conference{NoAuthor2014,
  Title                    = {1st International Workshop on Rapid Continuous Software Engineering, RCoSE 2014 - Proceedings},
  Year                     = {2014},
  Note                     = {cited By 0},
  Publisher                = {Association for Computing Machinery, Inc},

  Abstract                 = {The proceedings contain 8 papers. The topics discussed include: continuous software engineering and beyond: trends and challenges; rapid requirements checks with requirements smells: two case studies; rapidly locating and understanding errors using runtime monitoring of architecture-carrying code; building blocks for continuous experimentation; supported approach for agile methods adaptation: an adoption study; rugby: an agile process model based on continuous delivery; scrum for cyber-physical systems: a process proposal; and personalized continuous software engineering.},
  Document_type            = {Conference Review},
  ISBN                     = {9781450328562},
  Journal                  = {1st International Workshop on Rapid Continuous Software Engineering, RCoSE 2014 - Proceedings},
  Page_count               = {65},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84942540505&partnerID=40&md5=fa6836dc9b53d1867983b4e29d4cf5cf}
}

@Article{NoAuthor2013,
  Title                    = {20th European Conference on System and Software Process Improvement, EuroSPI 2013},
  Journal                  = {Communications in Computer and Information Science},
  Year                     = {2013},
  Note                     = {cited By 0},
  Volume                   = {364 CCIS},

  Abstract                 = {The proceedings contain 31 papers. The special focus in this conference is on System and Software Process Improvement. The topics include: Making software safety assessable and transparent; simulating global software development processes for use in education; research prototypes versus products; an analysis of the software development processes of open source E-learning systems; an automated approach for fault injection testing of BPEL orchestrations; a framework to support software quality trade-offs from a process-based perspective; discovering and studying collaboration networks in software repositories; the many facets of high-performing software teams; tailoring the software product management framework for use in a healthcare organization; review of critical success factors related to people in software process improvement; a proposal for the improvement predictability of cost using earned value management and quality data; involvement of stakeholders in software processes improvement to reduce change resistance; evidence of agile adoption in software organizations; definitions of agile software development and agility; a meta-framework for sustaining the value of innovation in multi-cultural settings; fostering innovation and entrepreneurship in European VET; customer-driven software product development software products for the social media world - a case study; framework to assist healthcare delivery organisations and medical device manufacturers establish security assurance for networked medical devices and experience with an integrated risk management process in the medical regulatory environment.},
  Document_type            = {Conference Review},
  ISBN                     = {9783642391781},
  ISSN                     = {18650929},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904700702&partnerID=40&md5=dc5da966918841804cab4fa96acbf6ce}
}

@Article{NoAuthor2013,
  Title                    = {Software Quality: Increasing Value in Software and Systems Development - 5th International Conference, SWQD 2013, Proceedings},
  Journal                  = {Lecture Notes in Business Information Processing},
  Year                     = {2013},
  Note                     = {cited By 0},
  Volume                   = {133 LNBIP},

  Abstract                 = {The proceedings contain 15 papers. The topics discussed include: Software quality: from requirements to architecture; the consortium for IT software quality (CISQ); experiences and challenges of introducing risk-based testing in an industrial project; project progress and risk monitoring in automation systems engineering; testing web services in the cloud; model-based strategies for reducing the complexity of statistically generated test suites; hazard analysis for technical systems; using defect taxonomies to improve the maturity of the system test process: results from an industrial case study; a transformation of business process models into software-executable models using MDA; aligning domain-related models for creating context for software product design; mapping CMMI and RUP process frameworks for the context of elaborating software project proposals; and development and evaluation of systems engineering strategies: an assessment-based approach.},
  Document_type            = {Conference Review},
  ISBN                     = {9783642357015},
  ISSN                     = {18651348},
  Page_count               = {260},
  Publisher                = {Springer Verlag},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84911358245&partnerID=40&md5=116c6d850cf2c9ee1dfcf290f8d3cb93}
}

@Conference{NoAuthor2013,
  Title                    = {Proceedings - 39th Euromicro Conference Series on Software Engineering and Advanced Applications, SEAA 2013},
  Year                     = {2013},
  Note                     = {cited By 0},

  Abstract                 = {The proceedings contain 61 papers. The topics discussed include: synthesizing a comprehensive framework for lean software development; kanban in software development: a systematic literature review; state-of-practice in GUI-based system and acceptance testing: an industrial multiple-case study; transformations between composite and visitor implementations in java; risk-aware migration of legacy data structures; feature-to-code traceability in legacy software variants; supporting software decision meetings: heatmaps for visualizing test and code measurements; experiences and insights from applying GQM+strategies in a systems product development organization; industrial challenges with quality requirements in safety critical software systems; customer-specific teams for agile evolution of large-scale embedded systems; improving reusability in software process lines; and a framework for innovation system customization for product line-based software businesses.},
  Document_type            = {Conference Review},
  ISBN                     = {9780769550916},
  Journal                  = {Proceedings - 39th Euromicro Conference Series on Software Engineering and Advanced Applications, SEAA 2013},
  Page_count               = {440},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84889011567&partnerID=40&md5=6ce737a1caa0ea296677064812ff6028}
}

@Article{NoAuthor2013,
  Title                    = {8th IFIP WG 11.8 World Conference on Information Security Education, WISE 8},
  Journal                  = {IFIP Advances in Information and Communication Technology},
  Year                     = {2013},
  Note                     = {cited By 0},
  Volume                   = {406},

  Abstract                 = {The proceedings contain 34 papers. The special focus in this conference is on Information Security Education. The topics include: Information security education for the youth via gameplay; a joint education exercise across geographic borders; developing cyber competition infrastructure using the SCRUM framework; the challenge beyond the classroom; information assurance and security in the ACM/IEEE CS2013; fostering content relevant information security awareness through browser extensions; the power of hands-on exercises in SCADA cyber security education; "business continuity and information security maintenance" masters' training program; a case study in the Nelson Mandela metropolis; a review of IFIP TC 11 WG 11.8 publications through the ages; preparing our undergraduates to enter a cyber world; robust programming by example; an approach to visualising information security knowledge; creating shareable security modules; towards a pervasive information assurance security educational model for information technology curricula; two approaches to information security doctoral research; a call for information security educational ontologies; an enterprise anti-phishing framework; teaching computer security with a hands-on component; the strengths and challenges of analogical approaches to computer security education; reaching today's information security students; some "secure programming" exercises for an introductory programming class; A SWOT analysis of virtual laboratories for security education; determinants of password security; improving awareness of social engineering attacks; a risk-based approach to formalise information security requirements for software development; two case studies in using chatbots for security training; information security specialist training on the basis of ISO/IEC 27002; using bloom's taxonomy for information security education and advancing digital forensics.},
  Document_type            = {Conference Review},
  ISBN                     = {9783642393761},
  ISSN                     = {18684238},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84890634181&partnerID=40&md5=67e887dc0f89fab8de230cf933ae6a32}
}

@Article{NoAuthor2013,
  Title                    = {Mobile Web Information Systems - 10th International Conference, MobiWIS 2013, Proceedings},
  Journal                  = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  Year                     = {2013},
  Note                     = {cited By 0},
  Volume                   = {8093 LNCS},

  Abstract                 = {The proceedings contain 25 papers. The topics discussed include: an effective approach to parse SOAP messages on mobile clients; an efficient interaction framework for mobile web services; a two-leveled semantic web service description of the pervasive information system; enabling location-based services on stationary devices using smartphone capabilities; rule based preferential context sharing in location aware mobile advertising; agile software development processes for mobile systems: accomplishment, evidence and evolution; design and development guidelines for real-time, geospatial mobile applications: lessons from 'marine traffic'; mobile cloud gaming: issues and challenges; feel the world: a mobile framework for participatory sensing; the influential factors of M-government's adoption in the developing countries; and smarter mobile apps through integrated natural language processing services.},
  Document_type            = {Conference Review},
  ISBN                     = {9783642402753},
  ISSN                     = {03029743},
  Page_count               = {305},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84883184211&partnerID=40&md5=c1d55da508826aa00b528a9dbc60b422}
}

@Conference{NoAuthor2013,
  Title                    = {2013 5th International Workshop on Software Engineering in Health Care, SEHC 2013 - Proceedings},
  Year                     = {2013},
  Note                     = {cited By 0},

  Abstract                 = {The proceedings contain 15 papers. The topics discussed include: software engineering in health care: is it really different? and how to gain impact; introducing usability testing in the risk management process in software development; an agile v-model for medical device software development to overcome the challenges with plan-driven software development lifecycles; PolicyForge: a collaborative environment for formalizing privacy policies in health care; modal abstraction view of requirements for medical devices used in healthcare processes; open source patient-controlled analgesic pump requirements documentation; taming complex healthcare data models with dictionary tooling; transformation operators for easier engineering of medical process models; proposing regulatory-driven automated test suites for electronic health record systems; and considerations for online deviation detection in medical processes.},
  Document_type            = {Conference Review},
  ISBN                     = {9781467362825},
  Journal                  = {2013 5th International Workshop on Software Engineering in Health Care, SEHC 2013 - Proceedings},
  Page_count               = {89},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84885228071&partnerID=40&md5=6a50728ca51df779ae9dcedeecd0f5af}
}

@Conference{NoAuthor2013,
  Title                    = {International Conference on Information Systems, ICIS 2013, Volume 1},
  Year                     = {2013},
  Note                     = {cited By 0},
  Volume                   = {1},

  Abstract                 = {The proceedings contain 320 papers. The special focus in this conference is on Information Systems. The topics include: Computing requirements in open source software projects; a comparison of nonlinear pricing preference models for digital services; a computational approach to detecting and assessing sustainability-related communities in social media; a conceptualisation of management situations relevant for collaborative is research projects; a conceptualization of complexity in IS-driven organizational transformations; information security collective efficacy and vulnerability; a cross-sectional and temporal analysis of information consumption on twitter; a measurement model for investigating digital natives and their organisational behaviour; a model of product design and information disclosure investments; a problem-solving perspective on governance and product design in open source software projects; a qualitative approach to examine technology acceptance; a sensemaking approach to tablet users accommodating practices; a systems approach to countermeasures in credibility assessment interviews; aligning business and it strategies in multi-business organizations; an empirical examination of users information hiding in a crowdfunding context; an empirical investigation of a user-centric typology of innovation for evolving information systems products; an exploration of group information security compliance; an information quality evaluation framework of object tracking systems; an ontology artifact for information systems sentiment analysis; visualising perspectives of business and information systems; attention trade-off between two types of user contributions; the effects of user- and marketer-generated content on purchase decision processes; boundary spanning through enterprise social software; investment management systems and new institutional logics for regulatory compliance; bundling of software products and services to fight against piracy; capturing multi-stakeholder needs in customer-centric cloud service design; an empirical analysis of the impact of formal controls in strategic outsourcing contracts; cloud computing providers unrealistic optimism regarding it security risks; cognitive biases in new technology appropriation; collective intelligence in market-based social decision making; comparing peer influences in large social networks an empirical study on caller ringback tone; computer mediated social ties as predictors of SNS usage continuance; conceptualizing unexpected events in IT projects; coordinating one-to-many concurrent negotiation for service provision; counteracting the negative effect of form auto-completion on the privacy calculus; creating engaging student to student engagement in an online class; unpacking the building blocks of crowdsourcing collaboration processes; defining boundaries of web ads perceptual fluency effect; designing business models for platform as a service; designing e-services for an ageing society; designing the modern ICT curriculum; developing a procedure model for business process standardization; developing and measuring IS scales using item response theory; digital traces of information systems; discursive meaning creation in crowdfunding; driving innovation and knowledge management using crowdsourcing; interplay of EA design factors, strategy types, and environments; effective sentiment analysis of corporate financial reports; eliminating failure by learning from it systematic review of is project failure; navigating the ambiguity of materiality through collective design; enhancing shared understanding in collaborative online shopping; evaluating a new pattern development process for interface design; evaluating the quality of technology-mediated learning services; evolving the modular layered architecture in digital innovation; executive doctorate programs and the role of the information systems discipline; exploring foundations for using simulations in is research; exploring the customer perspective of agile development; exploring the effect of arousal and valence on mouse interaction; fit between knowledge transfer complexity and media capability; the impact of information pricing strategy on the pattern and effectiveness of word-of-mouth via social media; from open source to commercial software development - the community based software development model; some thoughts on technology implementation practice; a point of concern to IS use models' validity; how channel choice and service failure influence customer satisfaction; how customers trust mobile marketing applications; how E-consumers integrate diverse recommendations from multiple sources; how team cohesion leads to attitude change in the context of ERP learning; understanding reconfigurations of information systems and organizations in the Norwegian health sector; identifying patterns of idea diffusion in innovator networks; the missing link between it affordances and institutions for better health care in developing countries; impacts of creolization on trust and knowledge sharing in it-enabled global services sourcing; impacts of IT acceptance and resistance behaviors; implications of monitoring mechanisms on bring your own device (BYOD) adoption; improved medication compliance through health IT; improving medical decision-making using electronic health record systems; improving the semantics of conceptual-modeling grammars; inciting networks effects through platform authority; individual values for protecting identity in social networks; individualization of information systems - analyzing antecedents of IT consumerization behavior; information architecture for healthcare organizations; its antecedents and mediating effects on security compliant behavior; information system strategy for opportunity discovery and exploitation; information systems development outsourcing; institutionalization and the effectiveness of enterprise architecture management; internet use and well-being of young adults; investigating mobile messaging in healthcare organizations; different firm types, different alignment configurations; developing valid measures through CFA-based MTMM analysis; IT-enabled performative spaces in gender segregated work; knowledge contribution motivators an expectation-confirmation approach; legitimating user participation in mature organisations- exploring social media adoption in a financial services organization; an analysis of the impact of mobile micro-blogging on communication and decision-making; mobile app portfolio management and developers performance; mobile applications and access to personal information; mobile commerce in the new tablet economy; multi-agent based information systems for patient coordination in hospitals; network analysis for predicting academic impact; network diversity and social cohesion in creative performance; on the importance of organisational culture and structure in business process maturity; one-way mirrors and weak-signaling in online dating; online and offline sales channels for enterprise software; online health information use by disabled people; optimal information technology service pricing and capacity decision under service-level agreement; optimal location of charging stations in smart cities; organizational learning and the error of fixed strategies in IT innovation investment evaluation; pathways to value from business analytics; patients adherence to health advice on virtual communities; peer-based quality assurance in information systems development; their effect on extracurricular work behaviors among IT professionals; success and reciprocity on crowdfunding platforms; predictive validity and formative measurement in structural equation modeling; preventive adoption of information security behaviors; understanding factors contributing to the escalation of software maintenance costs; privacy controls and content sharing patterns of online social network users; psychological empowerment of patients with chronic diseases; purposive selection and the quality of qualitative IS research; quality-adjusted consumer surplus for online labor markets with asymmetric information; quantifying the dynamic sales impact of location-based mobile promotion technologies; is-enabled political decision support with scenario analyses for the substitution of fossil fuels; information technologies and the possibility for imagination; roles of trust in privacy assurance and perceived disease severity on personal health information disclosure; selecting project management methodologies for business intelligence projects a value based approach; service failure complaints identification in social media; role of social distance and social norms in online referral incentive systems; social media and citizen social movement process for political change; software developers' online chat as an intra-firm mechanism for sharing ephemeral knowledge.},
  Document_type            = {Conference Review},
  ISBN                     = {9781629934266},
  Journal                  = {International Conference on Information Systems (ICIS 2013): Reshaping Society Through Information Systems Design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84897747613&partnerID=40&md5=8d88644bdea4f731828172c19e8aca78}
}

@Conference{NoAuthor2013,
  Title                    = {International Conference on Information Systems, ICIS 2013, Volume 2},
  Year                     = {2013},
  Note                     = {cited By 0},
  Volume                   = {2},

  Abstract                 = {The proceedings contain 320 papers. The special focus in this conference is on Information Systems. The topics include: Computing requirements in open source software projects; a comparison of nonlinear pricing preference models for digital services; a computational approach to detecting and assessing sustainability-related communities in social media; a conceptualisation of management situations relevant for collaborative is research projects; a conceptualization of complexity in IS-driven organizational transformations; information security collective efficacy and vulnerability; a cross-sectional and temporal analysis of information consumption on twitter; a measurement model for investigating digital natives and their organisational behaviour; a model of product design and information disclosure investments; a problem-solving perspective on governance and product design in open source software projects; a qualitative approach to examine technology acceptance; a sensemaking approach to tablet users accommodating practices; a systems approach to countermeasures in credibility assessment interviews; aligning business and it strategies in multi-business organizations; an empirical examination of users information hiding in a crowdfunding context; an empirical investigation of a user-centric typology of innovation for evolving information systems products; an exploration of group information security compliance; an information quality evaluation framework of object tracking systems; an ontology artifact for information systems sentiment analysis; visualising perspectives of business and information systems; attention trade-off between two types of user contributions; the effects of user- and marketer-generated content on purchase decision processes; boundary spanning through enterprise social software; investment management systems and new institutional logics for regulatory compliance; bundling of software products and services to fight against piracy; capturing multi-stakeholder needs in customer-centric cloud service design; an empirical analysis of the impact of formal controls in strategic outsourcing contracts; cloud computing providers unrealistic optimism regarding it security risks; cognitive biases in new technology appropriation; collective intelligence in market-based social decision making; comparing peer influences in large social networks an empirical study on caller ringback tone; computer mediated social ties as predictors of SNS usage continuance; conceptualizing unexpected events in IT projects; coordinating one-to-many concurrent negotiation for service provision; counteracting the negative effect of form auto-completion on the privacy calculus; creating engaging student to student engagement in an online class; unpacking the building blocks of crowdsourcing collaboration processes; defining boundaries of web ads perceptual fluency effect; designing business models for platform as a service; designing e-services for an ageing society; designing the modern ICT curriculum; developing a procedure model for business process standardization; developing and measuring IS scales using item response theory; digital traces of information systems; discursive meaning creation in crowdfunding; driving innovation and knowledge management using crowdsourcing; interplay of EA design factors, strategy types, and environments; effective sentiment analysis of corporate financial reports; eliminating failure by learning from it systematic review of is project failure; navigating the ambiguity of materiality through collective design; enhancing shared understanding in collaborative online shopping; evaluating a new pattern development process for interface design; evaluating the quality of technology-mediated learning services; evolving the modular layered architecture in digital innovation; executive doctorate programs and the role of the information systems discipline; exploring foundations for using simulations in is research; exploring the customer perspective of agile development; exploring the effect of arousal and valence on mouse interaction; fit between knowledge transfer complexity and media capability; the impact of information pricing strategy on the pattern and effectiveness of word-of-mouth via social media; from open source to commercial software development - the community based software development model; some thoughts on technology implementation practice; a point of concern to IS use models' validity; how channel choice and service failure influence customer satisfaction; how customers trust mobile marketing applications; how E-consumers integrate diverse recommendations from multiple sources; how team cohesion leads to attitude change in the context of ERP learning; understanding reconfigurations of information systems and organizations in the Norwegian health sector; identifying patterns of idea diffusion in innovator networks; the missing link between it affordances and institutions for better health care in developing countries; impacts of creolization on trust and knowledge sharing in it-enabled global services sourcing; impacts of IT acceptance and resistance behaviors; implications of monitoring mechanisms on bring your own device (BYOD) adoption; improved medication compliance through health IT; improving medical decision-making using electronic health record systems; improving the semantics of conceptual-modeling grammars; inciting networks effects through platform authority; individual values for protecting identity in social networks; individualization of information systems - analyzing antecedents of IT consumerization behavior; information architecture for healthcare organizations; its antecedents and mediating effects on security compliant behavior; information system strategy for opportunity discovery and exploitation; information systems development outsourcing; institutionalization and the effectiveness of enterprise architecture management; internet use and well-being of young adults; investigating mobile messaging in healthcare organizations; different firm types, different alignment configurations; developing valid measures through CFA-based MTMM analysis; IT-enabled performative spaces in gender segregated work; knowledge contribution motivators an expectation-confirmation approach; legitimating user participation in mature organisations- exploring social media adoption in a financial services organization; an analysis of the impact of mobile micro-blogging on communication and decision-making; mobile app portfolio management and developers performance; mobile applications and access to personal information; mobile commerce in the new tablet economy; multi-agent based information systems for patient coordination in hospitals; network analysis for predicting academic impact; network diversity and social cohesion in creative performance; on the importance of organisational culture and structure in business process maturity; one-way mirrors and weak-signaling in online dating; online and offline sales channels for enterprise software; online health information use by disabled people; optimal information technology service pricing and capacity decision under service-level agreement; optimal location of charging stations in smart cities; organizational learning and the error of fixed strategies in IT innovation investment evaluation; pathways to value from business analytics; patients adherence to health advice on virtual communities; peer-based quality assurance in information systems development; their effect on extracurricular work behaviors among IT professionals; success and reciprocity on crowdfunding platforms; predictive validity and formative measurement in structural equation modeling; preventive adoption of information security behaviors; understanding factors contributing to the escalation of software maintenance costs; privacy controls and content sharing patterns of online social network users; psychological empowerment of patients with chronic diseases; purposive selection and the quality of qualitative IS research; quality-adjusted consumer surplus for online labor markets with asymmetric information; quantifying the dynamic sales impact of location-based mobile promotion technologies; is-enabled political decision support with scenario analyses for the substitution of fossil fuels; information technologies and the possibility for imagination; roles of trust in privacy assurance and perceived disease severity on personal health information disclosure; selecting project management methodologies for business intelligence projects a value based approach; service failure complaints identification in social media; role of social distance and social norms in online referral incentive systems; social media and citizen social movement process for political change; software developers' online chat as an intra-firm mechanism for sharing ephemeral knowledge; sources of power and CIO influence and their impact; statistical modeling of nanotechnology knowledge diffusion networks; systems of transfiguration and the adoption of IT under surveillance; taking a new-generation manager perspective to develop interface designs; task-technology fit for low-literate consumers; team adaptability in agile information systems development; technology, interoperability, and provision of public safety networks; the architecture of generativity in a digital ecosystem; the design of a network-based model for business performance prediction; the design of a tangible user interface for a real-time strategy game.},
  Document_type            = {Conference Review},
  ISBN                     = {9781629934266},
  Journal                  = {International Conference on Information Systems (ICIS 2013): Reshaping Society Through Information Systems Design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84897786630&partnerID=40&md5=16fc6efd7f72e4684f4945e3dfbe9315}
}

@Conference{NoAuthor2013,
  Title                    = {International Conference on Information Systems, ICIS 2013, Volume 5},
  Year                     = {2013},
  Note                     = {cited By 0},
  Volume                   = {5},

  Abstract                 = {The proceedings contain 320 papers. The special focus in this conference is on Information Systems. The topics include: Computing requirements in open source software projects; a comparison of nonlinear pricing preference models for digital services; a computational approach to detecting and assessing sustainability-related communities in social media; a conceptualisation of management situations relevant for collaborative is research projects; a conceptualization of complexity in IS-driven organizational transformations; information security collective efficacy and vulnerability; a cross-sectional and temporal analysis of information consumption on twitter; a measurement model for investigating digital natives and their organisational behaviour; a model of product design and information disclosure investments; a problem-solving perspective on governance and product design in open source software projects; a qualitative approach to examine technology acceptance; a sensemaking approach to tablet users' accommodating practices; a systems approach to countermeasures in credibility assessment interviews; aligning business and it strategies in multi-business organizations; an empirical examination of users' information hiding in a crowdfunding context; an empirical investigation of a user-centric typology of innovation for evolving information systems products; an exploration of group information security compliance; an information quality evaluation framework of object tracking systems; an ontology artifact for information systems sentiment analysis; visualising perspectives of business and information systems; attention trade-off between two types of user contributions; the effects of user- and marketer-generated content on purchase decision processes; boundary spanning through enterprise social software; investment management systems and new institutional logics for regulatory compliance; bundling of software products and services to fight against piracy; capturing multi-stakeholder needs in customer-centric cloud service design; an empirical analysis of the impact of formal controls in strategic outsourcing contracts; cloud computing providers' unrealistic optimism regarding it security risks; cognitive biases in new technology appropriation; collective intelligence in market-based social decision making; comparing peer influences in large social networks - an empirical study on caller ringback tone; computer mediated social ties as predictors of SNS usage continuance; conceptualizing unexpected events in IT projects; coordinating one-to-many concurrent negotiation for service provision; counteracting the negative effect of form auto-completion on the privacy calculus; creating engaging student to student engagement in an online class; unpacking the building blocks of crowdsourcing collaboration processes; defining boundaries of web ads' perceptual fluency effect; designing business models for platform as a service; designing e-services for an ageing society; designing the modern ICT curriculum; developing a procedure model for business process standardization; developing and measuring IS scales using item response theory; digital traces of information systems; discursive meaning creation in crowdfunding; driving innovation and knowledge management using crowdsourcing; interplay of EA design factors, strategy types, and environments; effective sentiment analysis of corporate financial reports; eliminating failure by learning from it -systematic review of is project failure; navigating the ambiguity of materiality through collective design; enhancing shared understanding in collaborative online shopping; evaluating a new pattern development process for interface design; evaluating the quality of technology-mediated learning services; evolving the modular layered architecture in digital innovation; executive doctorate programs and the role of the information systems discipline; exploring foundations for using simulations in is research; exploring the customer perspective of agile development; exploring the effect of arousal and valence on mouse interaction; fit between knowledge transfer complexity and media capability; the impact of information pricing strategy on the pattern and effectiveness of word-of-mouth via social media; from open source to commercial software development - the community based software development model; some thoughts on technology implementation practice; a point of concern to IS use models' validity; how channel choice and service failure influence customer satisfaction; how customers trust mobile marketing applications; how E-consumers integrate diverse recommendations from multiple sources; how team cohesion leads to attitude change in the context of ERP learning; understanding reconfigurations of information systems and organizations in the Norwegian health sector; identifying patterns of idea diffusion in innovator networks; the missing link between it affordances and institutions for better health care in developing countries; impacts of creolization on trust and knowledge sharing in it-enabled global services sourcing; impacts of IT acceptance and resistance behaviors; implications of monitoring mechanisms on bring your own device (BYOD) adoption; improved medication compliance through health IT; improving medical decision-making using electronic health record systems; improving the semantics of conceptual-modeling grammars; inciting networks effects through platform authority; individual values for protecting identity in social networks; individualization of information systems - analyzing antecedents of IT consumerization behavior; information architecture for healthcare organizations; its antecedents and mediating effects on security compliant behavior; information system strategy for opportunity discovery and exploitation; information systems development outsourcing; institutionalization and the effectiveness of enterprise architecture management; internet use and well-being of young adults; investigating mobile messaging in healthcare organizations; different firm types, different alignment configurations; developing valid measures through CFA-based MTMM analysis; IT-enabled performative spaces in gender segregated work; knowledge contribution motivators - an expectation-confirmation approach; legitimating user participation in mature organisations- exploring social media adoption in a financial services organization; an analysis of the impact of mobile micro-blogging on communication and decision-making; mobile app portfolio management and developers' performance; mobile applications and access to personal information; mobile commerce in the new tablet economy; multi-agent based information systems for patient coordination in hospitals; network analysis for predicting academic impact; network diversity and social cohesion in creative performance; on the importance of organisational culture and structure in business process maturity; one-way mirrors and weak-signaling in online dating; online and offline sales channels for enterprise software; online health information use by disabled people; optimal information technology service pricing and capacity decision under service-level agreement; optimal location of charging stations in smart cities; organizational learning and the error of fixed strategies in IT innovation investment evaluation; pathways to value from business analytics; patients' adherence to health advice on virtual communities; peer-based quality assurance in information systems development; their effect on extracurricular work behaviors among IT professionals; success and reciprocity on crowdfunding platforms; predictive validity and formative measurement in structural equation modeling; preventive adoption of information security behaviors; understanding factors contributing to the escalation of software maintenance costs; privacy controls and content sharing patterns of online social network users; psychological empowerment of patients with chronic diseases; purposive selection and the quality of qualitative IS research; quality-adjusted consumer surplus for online labor markets with asymmetric information; quantifying the dynamic sales impact of location-based mobile promotion technologies; is-enabled political decision support with scenario analyses for the substitution of fossil fuels; information technologies and the possibility for imagination; roles of trust in privacy assurance and perceived disease severity on personal health information disclosure; selecting project management methodologies for business intelligence projects - a value based approach; service failure complaints identification in social media; role of social distance and social norms in online referral incentive systems; social media and citizen social movement process for political change; software developers' online chat as an intra-firm mechanism for sharing ephemeral knowledge; sources of power and CIO influence and their impact; statistical modeling of nanotechnology knowledge diffusion networks; systems of transfiguration and the adoption of IT under surveillance; taking a new-generation manager perspective to develop interface designs; task-technology fit for low-literate consumers; team adaptability in agile information systems development; technology, interoperability, and provision of public safety networks; the architecture of generativity in a digital ecosystem; the design of a network-based model for business performance prediction; the design of a tangible user interface for a real-time strategy game; the differences between recommender technologies in their impact on sales diversity; the dynamics of IS adaptation in multinational corporations; the emergence of social media as boundary objects in crisis response; the establishment of social IT sourcing organizations.},
  Document_type            = {Conference Review},
  ISBN                     = {9781629934266},
  Journal                  = {International Conference on Information Systems (ICIS 2013): Reshaping Society Through Information Systems Design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84897786607&partnerID=40&md5=93e379e3bb4381f90824727388460a83}
}

@Conference{NoAuthor2013,
  Title                    = {International Conference on Information Systems, ICIS 2013, Volume 4},
  Year                     = {2013},
  Note                     = {cited By 0},
  Volume                   = {4},

  Abstract                 = {The proceedings contain 320 papers. The special focus in this conference is on Information Systems. The topics include: Computing requirements in open source software projects; a comparison of nonlinear pricing preference models for digital services; a computational approach to detecting and assessing sustainability-related communities in social media; a conceptualisation of management situations relevant for collaborative is research projects; a conceptualization of complexity in IS-driven organizational transformations; information security collective efficacy and vulnerability; a cross-sectional and temporal analysis of information consumption on twitter; a measurement model for investigating digital natives and their organisational behaviour; a model of product design and information disclosure investments; a problem-solving perspective on governance and product design in open source software projects; a qualitative approach to examine technology acceptance; a sensemaking approach to tablet users' accommodating practices; a systems approach to countermeasures in credibility assessment interviews; aligning business and it strategies in multi-business organizations; an empirical examination of users' information hiding in a crowdfunding context; an empirical investigation of a user-centric typology of innovation for evolving information systems products; an exploration of group information security compliance; an information quality evaluation framework of object tracking systems; an ontology artifact for information systems sentiment analysis; visualising perspectives of business and information systems; attention trade-off between two types of user contributions; the effects of user- and marketer-generated content on purchase decision processes; boundary spanning through enterprise social software; investment management systems and new institutional logics for regulatory compliance; bundling of software products and services to fight against piracy; capturing multi-stakeholder needs in customer-centric cloud service design; an empirical analysis of the impact of formal controls in strategic outsourcing contracts; cloud computing providers' unrealistic optimism regarding it security risks; cognitive biases in new technology appropriation; collective intelligence in market-based social decision making; comparing peer influences in large social networks - an empirical study on caller ringback tone; computer mediated social ties as predictors of SNS usage continuance; conceptualizing unexpected events in IT projects; coordinating one-to-many concurrent negotiation for service provision; counteracting the negative effect of form auto-completion on the privacy calculus; creating engaging student to student engagement in an online class; unpacking the building blocks of crowdsourcing collaboration processes; defining boundaries of web ads' perceptual fluency effect; designing business models for platform as a service; designing e-services for an ageing society; designing the modern ICT curriculum; developing a procedure model for business process standardization; developing and measuring IS scales using item response theory; digital traces of information systems; discursive meaning creation in crowdfunding; driving innovation and knowledge management using crowdsourcing; interplay of EA design factors, strategy types, and environments; effective sentiment analysis of corporate financial reports; eliminating failure by learning from it -systematic review of is project failure; navigating the ambiguity of materiality through collective design; enhancing shared understanding in collaborative online shopping; evaluating a new pattern development process for interface design; evaluating the quality of technology-mediated learning services; evolving the modular layered architecture in digital innovation; executive doctorate programs and the role of the information systems discipline; exploring foundations for using simulations in is research; exploring the customer perspective of agile development; exploring the effect of arousal and valence on mouse interaction; fit between knowledge transfer complexity and media capability; the impact of information pricing strategy on the pattern and effectiveness of word-of-mouth via social media; from open source to commercial software development - the community based software development model; some thoughts on technology implementation practice; a point of concern to IS use models' validity; how channel choice and service failure influence customer satisfaction; how customers trust mobile marketing applications; how E-consumers integrate diverse recommendations from multiple sources; how team cohesion leads to attitude change in the context of ERP learning; understanding reconfigurations of information systems and organizations in the Norwegian health sector; identifying patterns of idea diffusion in innovator networks; the missing link between it affordances and institutions for better health care in developing countries; impacts of creolization on trust and knowledge sharing in it-enabled global services sourcing; impacts of IT acceptance and resistance behaviors; implications of monitoring mechanisms on bring your own device (BYOD) adoption; improved medication compliance through health IT; improving medical decision-making using electronic health record systems; improving the semantics of conceptual-modeling grammars; inciting networks effects through platform authority; individual values for protecting identity in social networks; individualization of information systems - analyzing antecedents of IT consumerization behavior; information architecture for healthcare organizations; its antecedents and mediating effects on security compliant behavior; information system strategy for opportunity discovery and exploitation; information systems development outsourcing; institutionalization and the effectiveness of enterprise architecture management; internet use and well-being of young adults; investigating mobile messaging in healthcare organizations; different firm types, different alignment configurations; developing valid measures through CFA-based MTMM analysis; IT-enabled performative spaces in gender segregated work; knowledge contribution motivators - an expectation-confirmation approach; legitimating user participation in mature organisations- exploring social media adoption in a financial services organization; an analysis of the impact of mobile micro-blogging on communication and decision-making; mobile app portfolio management and developers' performance; mobile applications and access to personal information; mobile commerce in the new tablet economy; multi-agent based information systems for patient coordination in hospitals; network analysis for predicting academic impact; network diversity and social cohesion in creative performance; on the importance of organisational culture and structure in business process maturity; one-way mirrors and weak-signaling in online dating; online and offline sales channels for enterprise software; online health information use by disabled people; optimal information technology service pricing and capacity decision under service-level agreement; optimal location of charging stations in smart cities; organizational learning and the error of fixed strategies in IT innovation investment evaluation; pathways to value from business analytics; patients' adherence to health advice on virtual communities; peer-based quality assurance in information systems development; their effect on extracurricular work behaviors among IT professionals; success and reciprocity on crowdfunding platforms; predictive validity and formative measurement in structural equation modeling; preventive adoption of information security behaviors; understanding factors contributing to the escalation of software maintenance costs; privacy controls and content sharing patterns of online social network users; psychological empowerment of patients with chronic diseases; purposive selection and the quality of qualitative IS research; quality-adjusted consumer surplus for online labor markets with asymmetric information; quantifying the dynamic sales impact of location-based mobile promotion technologies; is-enabled political decision support with scenario analyses for the substitution of fossil fuels; information technologies and the possibility for imagination; roles of trust in privacy assurance and perceived disease severity on personal health information disclosure; selecting project management methodologies for business intelligence projects - a value based approach; service failure complaints identification in social media; role of social distance and social norms in online referral incentive systems; social media and citizen social movement process for political change; software developers' online chat as an intra-firm mechanism for sharing ephemeral knowledge; sources of power and CIO influence and their impact; statistical modeling of nanotechnology knowledge diffusion networks; systems of transfiguration and the adoption of IT under surveillance; taking a new-generation manager perspective to develop interface designs; task-technology fit for low-literate consumers; team adaptability in agile information systems development; technology, interoperability, and provision of public safety networks; the architecture of generativity in a digital ecosystem; the design of a network-based model for business performance prediction; the design of a tangible user interface for a real-time strategy game; the differences between recommender technologies in their impact on sales diversity; the dynamics of IS adaptation in multinational corporations; the emergence of social media as boundary objects in crisis response; the establishment of social IT sourcing organizations.},
  Document_type            = {Conference Review},
  ISBN                     = {9781629934266},
  Journal                  = {International Conference on Information Systems (ICIS 2013): Reshaping Society Through Information Systems Design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84897752723&partnerID=40&md5=b02a07f067103cf3a81c71614459ade6}
}

@Conference{NoAuthor2013,
  Title                    = {International Conference on Information Systems, ICIS 2013, Volume 3},
  Year                     = {2013},
  Note                     = {cited By 0},
  Volume                   = {3},

  Abstract                 = {The proceedings contain 320 papers. The special focus in this conference is on Information Systems. The topics include: Computing requirements in open source software projects; a comparison of nonlinear pricing preference models for digital services; a computational approach to detecting and assessing sustainability-related communities in social media; a conceptualisation of management situations relevant for collaborative is research projects; a conceptualization of complexity in IS-driven organizational transformations; information security collective efficacy and vulnerability; a cross-sectional and temporal analysis of information consumption on twitter; a measurement model for investigating digital natives and their organisational behaviour; a model of product design and information disclosure investments; a problem-solving perspective on governance and product design in open source software projects; a qualitative approach to examine technology acceptance; a sensemaking approach to tablet users' accommodating practices; a systems approach to countermeasures in credibility assessment interviews; aligning business and it strategies in multi-business organizations; an empirical examination of users' information hiding in a crowdfunding context; an empirical investigation of a user-centric typology of innovation for evolving information systems products; an exploration of group information security compliance; an information quality evaluation framework of object tracking systems; an ontology artifact for information systems sentiment analysis; visualising perspectives of business and information systems; attention trade-off between two types of user contributions; the effects of user- and marketer-generated content on purchase decision processes; boundary spanning through enterprise social software; investment management systems and new institutional logics for regulatory compliance; bundling of software products and services to fight against piracy; capturing multi-stakeholder needs in customer-centric cloud service design; an empirical analysis of the impact of formal controls in strategic outsourcing contracts; cloud computing providers' unrealistic optimism regarding it security risks; cognitive biases in new technology appropriation; collective intelligence in market-based social decision making; comparing peer influences in large social networks - an empirical study on caller ringback tone; computer mediated social ties as predictors of SNS usage continuance; conceptualizing unexpected events in IT projects; coordinating one-to-many concurrent negotiation for service provision; counteracting the negative effect of form auto-completion on the privacy calculus; creating engaging student to student engagement in an online class; unpacking the building blocks of crowdsourcing collaboration processes; defining boundaries of web ads' perceptual fluency effect; designing business models for platform as a service; designing e-services for an ageing society; designing the modern ICT curriculum; developing a procedure model for business process standardization; developing and measuring IS scales using item response theory; digital traces of information systems; discursive meaning creation in crowdfunding; driving innovation and knowledge management using crowdsourcing; interplay of EA design factors, strategy types, and environments; effective sentiment analysis of corporate financial reports; eliminating failure by learning from it -systematic review of is project failure; navigating the ambiguity of materiality through collective design; enhancing shared understanding in collaborative online shopping; evaluating a new pattern development process for interface design; evaluating the quality of technology-mediated learning services; evolving the modular layered architecture in digital innovation; executive doctorate programs and the role of the information systems discipline; exploring foundations for using simulations in is research; exploring the customer perspective of agile development; exploring the effect of arousal and valence on mouse interaction; fit between knowledge transfer complexity and media capability; the impact of information pricing strategy on the pattern and effectiveness of word-of-mouth via social media; from open source to commercial software development - the community based software development model; some thoughts on technology implementation practice; a point of concern to IS use models' validity; how channel choice and service failure influence customer satisfaction; how customers trust mobile marketing applications; how E-consumers integrate diverse recommendations from multiple sources; how team cohesion leads to attitude change in the context of ERP learning; understanding reconfigurations of information systems and organizations in the Norwegian health sector; identifying patterns of idea diffusion in innovator networks; the missing link between it affordances and institutions for better health care in developing countries; impacts of creolization on trust and knowledge sharing in it-enabled global services sourcing; impacts of IT acceptance and resistance behaviors; implications of monitoring mechanisms on bring your own device (BYOD) adoption; improved medication compliance through health IT; improving medical decision-making using electronic health record systems; improving the semantics of conceptual-modeling grammars; inciting networks effects through platform authority; individual values for protecting identity in social networks; individualization of information systems - analyzing antecedents of IT consumerization behavior; information architecture for healthcare organizations; its antecedents and mediating effects on security compliant behavior; information system strategy for opportunity discovery and exploitation; information systems development outsourcing; institutionalization and the effectiveness of enterprise architecture management; internet use and well-being of young adults; investigating mobile messaging in healthcare organizations; different firm types, different alignment configurations; developing valid measures through CFA-based MTMM analysis; IT-enabled performative spaces in gender segregated work; knowledge contribution motivators - an expectation-confirmation approach; legitimating user participation in mature organisations- exploring social media adoption in a financial services organization; an analysis of the impact of mobile micro-blogging on communication and decision-making; mobile app portfolio management and developers' performance; mobile applications and access to personal information; mobile commerce in the new tablet economy; multi-agent based information systems for patient coordination in hospitals; network analysis for predicting academic impact; network diversity and social cohesion in creative performance; on the importance of organisational culture and structure in business process maturity; one-way mirrors and weak-signaling in online dating; online and offline sales channels for enterprise software; online health information use by disabled people; optimal information technology service pricing and capacity decision under service-level agreement; optimal location of charging stations in smart cities; organizational learning and the error of fixed strategies in IT innovation investment evaluation; pathways to value from business analytics; patients' adherence to health advice on virtual communities; peer-based quality assurance in information systems development; their effect on extracurricular work behaviors among IT professionals; success and reciprocity on crowdfunding platforms; predictive validity and formative measurement in structural equation modeling; preventive adoption of information security behaviors; understanding factors contributing to the escalation of software maintenance costs; privacy controls and content sharing patterns of online social network users; psychological empowerment of patients with chronic diseases; purposive selection and the quality of qualitative IS research; quality-adjusted consumer surplus for online labor markets with asymmetric information; quantifying the dynamic sales impact of location-based mobile promotion technologies; is-enabled political decision support with scenario analyses for the substitution of fossil fuels; information technologies and the possibility for imagination; roles of trust in privacy assurance and perceived disease severity on personal health information disclosure; selecting project management methodologies for business intelligence projects - a value based approach; service failure complaints identification in social media; role of social distance and social norms in online referral incentive systems; social media and citizen social movement process for political change; software developers' online chat as an intra-firm mechanism for sharing ephemeral knowledge; sources of power and CIO influence and their impact; statistical modeling of nanotechnology knowledge diffusion networks; systems of transfiguration and the adoption of IT under surveillance; taking a new-generation manager perspective to develop interface designs; task-technology fit for low-literate consumers; team adaptability in agile information systems development; technology, interoperability, and provision of public safety networks; the architecture of generativity in a digital ecosystem; the design of a network-based model for business performance prediction; the design of a tangible user interface for a real-time strategy game; the differences between recommender technologies in their impact on sales diversity; the dynamics of IS adaptation in multinational corporations; the emergence of social media as boundary objects in crisis response; the establishment of social IT sourcing organizations.},
  Document_type            = {Conference Review},
  ISBN                     = {9781629934266},
  Journal                  = {International Conference on Information Systems (ICIS 2013): Reshaping Society Through Information Systems Design},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84897808389&partnerID=40&md5=35c52cea9fb0df7e6c709f0bbb41664e}
}

@Conference{NoAuthor20131,
  Title                    = {24th Australasian Conference on Information Systems 2013},
  Year                     = {2013},
  Note                     = {cited By 0},
  Pages                    = {1-570},
  Publisher                = {RMIT University},

  Abstract                 = {The proceedings contain 175 papers. The special focus in this conference is on technical, organisational, business, and social issues in the application of Information Technology (IT). The topics include: ‘I just saw this on facebook, I need it now’; insights from an investigation of the design of a consumer health 2.0 application to address the relationship between on-line social networks and health-related behaviours; social-psycho issues of enterprise information system usage among government outsource vendors comprising Malaysian small-medium enterprises; aligning capabilities and social media affordances for open innovation in governments; self-organising roles in agile globally distributed teams; employment seeking under consideration of social capital on social network sites; method for business process management system selection; DM model transformations framework; crossing the communication barrier in global software development projects via global software development brokers; exploring the use and benefits of web 2.0 for supply chain management; the effects of learners’ personality traits on M-learning; discount focus subgroup method; enabling and encouraging greater diversity in ICT; institutionalisation of enterprise resource planning systems; a conceptual framework for assessing strategic information systems planning (SISP) success in the current dynamic environments; from participatory design to co-creation; adaptive music score trainer for visually impaired in Sri Lanka; towards a heuristic model for usable and secure online banking; the role of users’ emotions and associated quality goals on appropriation of systems; The use of social media in public e-procurement; consumer engagement perspectives at the business social network site and institutionalisation of enterprise systems through organisational isomorphism},
  Document_type            = {Conference Review},
  ISBN                     = {9780992449506},
  Journal                  = {Proceedings of the 24th Australasian Conference on Information Systems},
  Source                   = {Scopus},
  Url                      = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84924146900&partnerID=40&md5=25682fa5c2166b65580a5e0d97fb0d6e}
}

